(type AnyReg (primitive `@riscv.AnyReg`))
(type XReg (primitive `@riscv.Reg`))
(type FReg (primitive `@riscv.FReg`))
(type Label (primitive `@riscv.Label`))
(type MemAccess (primitive `@riscv.MemAccess[@riscv.Reg,@riscv.Imm12]`))
(type String (primitive String))
(type Imm20 (primitive `@riscv.Imm20`))
(type Imm12 (primitive `@riscv.Imm12`))

(type RvAsm extern
  (enum as `@riscv.RvAsm`
    (Add (rd XReg) (rs1 XReg) (rs2 XReg))
    (Sub (rd XReg) (rs1 XReg) (rs2 XReg))
    (Xor (rd XReg) (rs1 XReg) (rs2 XReg))
    (Or (rd XReg) (rs1 XReg) (rs2 XReg))
    (And (rd XReg) (rs1 XReg) (rs2 XReg))
    (Sll (rd XReg) (rs1 XReg) (rs2 XReg))
    (Srl (rd XReg) (rs1 XReg) (rs2 XReg))
    (Sra (rd XReg) (rs1 XReg) (rs2 XReg))
    (Slt (rd XReg) (rs1 XReg) (rs2 XReg))
    (Sltu (rd XReg) (rs1 XReg) (rs2 XReg))
    (Addi (rd XReg) (rs1 XReg) (imm Int32))
    (Xori (rd XReg) (rs1 XReg) (imm Int32))
    (Ori (rd XReg) (rs1 XReg) (imm Int32))
    (Andi (rd XReg) (rs1 XReg) (imm Int32))
    (Slli (rd XReg) (rs1 XReg) (imm Int32))
    (Srli (rd XReg) (rs1 XReg) (imm Int32))
    (Srai (rd XReg) (rs1 XReg) (imm Int32))
    (Slti (rd XReg) (rs1 XReg) (imm Int32))
    (Sltiu (rd XReg) (rs1 XReg) (imm Int32))
    (Lb (rd XReg) (mem MemAccess))
    (Lh (rd XReg) (mem MemAccess))
    (Lw (rd XReg) (mem MemAccess))
    (Ld (rd XReg) (mem MemAccess))
    (Lbu (rd XReg) (mem MemAccess))
    (Lhu (rd XReg) (mem MemAccess))
    (Lwu (rd XReg) (mem MemAccess))
    (Sb (rs XReg) (mem MemAccess))
    (Sh (rs XReg) (mem MemAccess))
    (Sw (rs XReg) (mem MemAccess))
    (Sd (rs XReg) (mem MemAccess))
    (Beq (rs1 XReg) (rs2 XReg) (target Label))
    (Bne (rs1 XReg) (rs2 XReg) (target Label))
    (Blt (rs1 XReg) (rs2 XReg) (target Label))
    (Bge (rs1 XReg) (rs2 XReg) (target Label))
    (Ble (rs1 XReg) (rs2 XReg) (target Label))
    (Bgt (rs1 XReg) (rs2 XReg) (target Label))
    (Bltu (rs1 XReg) (rs2 XReg) (target Label))
    (Bgeu (rs1 XReg) (rs2 XReg) (target Label))
    (Ecall)
    (Mul (rd XReg) (rs1 XReg) (rs2 XReg))
    (Mulw (rd XReg) (rs1 XReg) (rs2 XReg))
    (Mulh (rd XReg) (rs1 XReg) (rs2 XReg))
    (Mulhsu (rd XReg) (rs1 XReg) (rs2 XReg))
    (Mulhu (rd XReg) (rs1 XReg) (rs2 XReg))
    (Div (rd XReg) (rs1 XReg) (rs2 XReg))
    (Divw (rd XReg) (rs1 XReg) (rs2 XReg))
    (Divu (rd XReg) (rs1 XReg) (rs2 XReg))
    (Rem (rd XReg) (rs1 XReg) (rs2 XReg))
    (Remw (rd XReg) (rs1 XReg) (rs2 XReg))
    (Remu (rd XReg) (rs1 XReg) (rs2 XReg))
    (FaddD (rd FReg) (rs1 FReg) (rs2 FReg))
    (FsubD (rd FReg) (rs1 FReg) (rs2 FReg))
    (FmulD (rd FReg) (rs1 FReg) (rs2 FReg))
    (FdivD (rd FReg) (rs1 FReg) (rs2 FReg))
    (Fld (rd FReg) (mem MemAccess))
    (Fsd (rs FReg) (mem MemAccess))
    (FeqD (rd XReg) (rs1 FReg) (rs2 FReg))
    (FleD (rd XReg) (rs1 FReg) (rs2 FReg))
    (FmvDX (rd FReg) (rs XReg))
    (FcvtWD (rd XReg) (rs FReg) (rm RoundMode))
    (FcvtDW (rd FReg) (rs XReg))
    (FabsD (rd FReg) (rs FReg))
    (FsqrtD (rd FReg) (rs FReg))
    (Nop)
    (La (rd XReg) (l Label))
    (Li (rd XReg) (i String))
    (Neg (rd XReg) (rs XReg))
    (FnegD (rd FReg) (rs FReg))
    (Mv (rd XReg) (rs XReg))
    (FmvD (rd FReg) (rs FReg))
    (J (target Label))
    (Jalr (target XReg))
    (Jr (target XReg))
    (Call (target Label))
    (Tail (target Label))
    Ret))

(decl next_virtual_xreg () XReg)
(extern constructor next_virtual_xreg next_virtual_xreg)

(decl next_virtual_freg () FReg)
(extern constructor next_virtual_freg next_virtual_freg)

(decl emit_risc_v (RvAsm) Unit)
(extern constructor emit_risc_v emit_risc_v)

(decl xreg_new (AnyReg) XReg)
(extern constructor xreg_new xreg_new)
(convert AnyReg XReg xreg_new)

(decl freg_new (AnyReg) FReg)
(extern constructor freg_new freg_new)
(convert AnyReg FReg freg_new)

(decl pure xreg_to_reg (XReg) AnyReg)
(extern constructor xreg_to_reg xreg_to_reg)
(convert XReg AnyReg xreg_to_reg)

(decl pure freg_to_reg (FReg) AnyReg)
(extern constructor freg_to_reg freg_to_reg)
(convert FReg AnyReg freg_to_reg)

(decl rv_add (XReg XReg) XReg)
(rule (rv_add x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Add dst x y))))
    dst))

(decl rv_sub (XReg XReg) XReg)
(rule (rv_sub x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Sub dst x y))))
    dst))

(decl rv_xor (XReg XReg) XReg)
(rule (rv_xor x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Xor dst x y))))
    dst))

(decl rv_or (XReg XReg) XReg)
(rule (rv_or x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Or dst x y))))
    dst))

(decl rv_and (XReg XReg) XReg)
(rule (rv_and x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.And dst x y))))
    dst))

(decl rv_sll (XReg XReg) XReg)
(rule (rv_sll x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Sll dst x y))))
    dst))

(decl rv_srl (XReg XReg) XReg)
(rule (rv_srl x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Srl dst x y))))
    dst))

(decl rv_sra (XReg XReg) XReg)
(rule (rv_sra x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Sra dst x y))))
    dst))

(decl rv_slt (XReg XReg) XReg)
(rule (rv_slt x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Slt dst x y))))
    dst))

(decl rv_sltu (XReg XReg) XReg)
(rule (rv_sltu x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Sltu dst x y))))
    dst))

(decl rv_addi (XReg Int32) XReg)
(rule (rv_addi x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Addi dst x y))))
    dst))

(decl rv_xori (XReg Int32) XReg)
(rule (rv_xori x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Xori dst x y))))
    dst))

(decl rv_ori (XReg Int32) XReg)
(rule (rv_ori x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Ori dst x y))))
    dst))

(decl rv_andi (XReg Int32) XReg)
(rule (rv_andi x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Andi dst x y))))
    dst))

(decl rv_slli (XReg Int32) XReg)
(rule (rv_slli x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Slli dst x y))))
    dst))

(decl rv_srli (XReg Int32) XReg)
(rule (rv_srli x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Srli dst x y))))
    dst))

(decl rv_srai (XReg Int32) XReg)
(rule (rv_srai x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Srai dst x y))))
    dst))

(decl rv_slti (XReg Int32) XReg)
(rule (rv_slti x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Slti dst x y))))
    dst))

(decl rv_sltiu (XReg Int32) XReg)
(rule (rv_sltiu x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Sltiu dst x y))))
    dst))

(decl rv_lb (MemAccess) XReg)
(rule (rv_lb x)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Lb dst x))))
    dst))

(decl rv_lh (MemAccess) XReg)
(rule (rv_lh x)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Lh dst x))))
    dst))

(decl rv_lw (MemAccess) XReg)
(rule (rv_lw x)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Lw dst x))))
    dst))

(decl rv_ld (MemAccess) XReg)
(rule (rv_ld x)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Ld dst x))))
    dst))

(decl rv_lbu (MemAccess) XReg)
(rule (rv_lbu x)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Lbu dst x))))
    dst))

(decl rv_lhu (MemAccess) XReg)
(rule (rv_lhu x)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Lhu dst x))))
    dst))

(decl rv_lwu (MemAccess) XReg)
(rule (rv_lwu x)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Lwu dst x))))
    dst))

(decl rv_sb (XReg MemAccess) Unit)
(rule (rv_sb x y) (emit_risc_v (RvAsm.Sb x y)))

(decl rv_sh (XReg MemAccess) Unit)
(rule (rv_sh x y) (emit_risc_v (RvAsm.Sh x y)))

(decl rv_sw (XReg MemAccess) Unit)
(rule (rv_sw x y) (emit_risc_v (RvAsm.Sw x y)))

(decl rv_sd (XReg MemAccess) Unit)
(rule (rv_sd x y) (emit_risc_v (RvAsm.Sd x y)))

(decl rv_beq (XReg XReg Label) Unit)
(rule (rv_beq x y z) (emit_risc_v (RvAsm.Beq x y z)))

(decl rv_bne (XReg XReg Label) Unit)
(rule (rv_bne x y z) (emit_risc_v (RvAsm.Bne x y z)))

(decl rv_blt (XReg XReg Label) Unit)
(rule (rv_blt x y z) (emit_risc_v (RvAsm.Blt x y z)))

(decl rv_bge (XReg XReg Label) Unit)
(rule (rv_bge x y z) (emit_risc_v (RvAsm.Bge x y z)))

(decl rv_ble (XReg XReg Label) Unit)
(rule (rv_ble x y z) (emit_risc_v (RvAsm.Ble x y z)))

(decl rv_bgt (XReg XReg Label) Unit)
(rule (rv_bgt x y z) (emit_risc_v (RvAsm.Bgt x y z)))

(decl rv_bltu (XReg XReg Label) Unit)
(rule (rv_bltu x y z) (emit_risc_v (RvAsm.Bltu x y z)))

(decl rv_bgeu (XReg XReg Label) Unit)
(rule (rv_bgeu x y z) (emit_risc_v (RvAsm.Bgeu x y z)))

(decl rv_bnez (XReg Label) Unit)
(rule (rv_bnez x y) (emit_risc_v (RvAsm.Bne x (zero_reg) y)))

(decl rv_beqz (XReg Label) Unit)
(rule (rv_beqz x y) (emit_risc_v (RvAsm.Beq x (zero_reg) y)))

(decl rv_mul (XReg XReg) XReg)
(rule (rv_mul x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Mul dst x y))))
    dst))

(decl rv_mulw (XReg XReg) XReg)
(rule (rv_mulw x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Mulw dst x y))))
    dst))

(decl rv_mulh (XReg XReg) XReg)
(rule (rv_mulh x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Mulh dst x y))))
    dst))

(decl rv_mulhsu (XReg XReg) XReg)
(rule (rv_mulhsu x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Mulhsu dst x y))))
    dst))

(decl rv_mulhu (XReg XReg) XReg)
(rule (rv_mulhu x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Mulhu dst x y))))
    dst))

(decl rv_div (XReg XReg) XReg)
(rule (rv_div x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Div dst x y))))
    dst))

(decl rv_divw (XReg XReg) XReg)
(rule (rv_divw x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Divw dst x y))))
    dst))

(decl rv_divu (XReg XReg) XReg)
(rule (rv_divu x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Divu dst x y))))
    dst))

(decl rv_rem (XReg XReg) XReg)
(rule (rv_rem x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Rem dst x y))))
    dst))

(decl rv_remw (XReg XReg) XReg)
(rule (rv_remw x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Remw dst x y))))
    dst))

(decl rv_remu (XReg XReg) XReg)
(rule (rv_remu x y)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Remu dst x y))))
    dst))

(decl rv_fadd_d (FReg FReg) FReg)
(rule (rv_fadd_d x y)
  (let ((dst FReg (next_virtual_freg))
        (_ Unit (emit_risc_v (RvAsm.FaddD dst x y))))
    dst))

(decl rv_fsub_d (FReg FReg) FReg)
(rule (rv_fsub_d x y)
  (let ((dst FReg (next_virtual_freg))
        (_ Unit (emit_risc_v (RvAsm.FsubD dst x y))))
    dst))

(decl rv_fmul_d (FReg FReg) FReg)
(rule (rv_fmul_d x y)
  (let ((dst FReg (next_virtual_freg))
        (_ Unit (emit_risc_v (RvAsm.FmulD dst x y))))
    dst))

(decl rv_fdiv_d (FReg FReg) FReg)
(rule (rv_fdiv_d x y)
  (let ((dst FReg (next_virtual_freg))
        (_ Unit (emit_risc_v (RvAsm.FdivD dst x y))))
    dst))

(decl rv_fld (MemAccess) FReg)
(rule (rv_fld x)
  (let ((dst FReg (next_virtual_freg))
        (_ Unit (emit_risc_v (RvAsm.Fld dst x))))
    dst))

(decl rv_fsd (FReg MemAccess) Unit)
(rule (rv_fsd x y) (emit_risc_v (RvAsm.Fsd x y)))

(decl rv_fmv_dx (XReg) FReg)
(rule (rv_fmv_dx x)
  (let ((dst FReg (next_virtual_freg))
        (_ Unit (emit_risc_v (RvAsm.FmvDX dst x))))
    dst))

(decl rv_fcvt_w_d (FReg RoundMode) XReg)
(rule (rv_fcvt_w_d x rm)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.FcvtWD dst x rm))))
    dst))

(decl rv_fcvt_d_w (XReg) FReg)
(rule (rv_fcvt_d_w x)
  (let ((dst FReg (next_virtual_freg))
        (_ Unit (emit_risc_v (RvAsm.FcvtDW dst x))))
    dst))

(decl rv_fabs_d (FReg) FReg)
(rule (rv_fabs_d x)
  (let ((dst FReg (next_virtual_freg))
        (_ Unit (emit_risc_v (RvAsm.FabsD dst x))))
    dst))

(decl rv_fsqrt_d (FReg) FReg)
(rule (rv_fsqrt_d x)
  (let ((dst FReg (next_virtual_freg))
        (_ Unit (emit_risc_v (RvAsm.FsqrtD dst x))))
    dst))

(decl rv_la (Label) XReg)
(rule (rv_la x)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.La dst x))))
    dst))

(decl rv_li (String) XReg)
(rule (rv_li x)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Li dst x))))
    dst))

(decl rv_neg (XReg) XReg)
(rule (rv_neg x)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Neg dst x))))
    dst))

(decl rv_fneg_d (FReg) FReg)
(rule (rv_fneg_d x)
  (let ((dst FReg (next_virtual_freg))
        (_ Unit (emit_risc_v (RvAsm.FnegD dst x))))
    dst))

(decl rv_mv (XReg) XReg)
(rule (rv_mv x)
  (let ((dst XReg (next_virtual_xreg))
        (_ Unit (emit_risc_v (RvAsm.Mv dst x))))
    dst))

(decl rv_f_mv_d (FReg) FReg)
(rule (rv_f_mv_d x)
  (let ((dst FReg (next_virtual_freg))
        (_ Unit (emit_risc_v (RvAsm.FmvD dst x))))
    dst))

(decl rv_mv_to (XReg XReg) Unit)
(rule (rv_mv_to x y) (emit_risc_v (RvAsm.Mv x y)))

(decl rv_fmv_to (FReg FReg) Unit)
(rule (rv_fmv_to x y) (emit_risc_v (RvAsm.FmvD x y)))

(decl rv_j (Label) Unit)
(rule (rv_j x) (emit_risc_v (RvAsm.J x)))

(decl rv_jalr (XReg) Unit)
(rule (rv_jalr x) (emit_risc_v (RvAsm.Jalr x)))

(decl rv_jr (XReg) Unit)
(rule (rv_jr x) (emit_risc_v (RvAsm.Jr x)))

(decl rv_call (Label) Unit)
(rule (rv_call x) (emit_risc_v (RvAsm.Call x)))

(decl rv_ret () Unit)
(rule (rv_ret) (emit_risc_v (RvAsm.Ret)))

(decl zero_reg () XReg)
(extern constructor zero_reg zero_reg)
(extern extractor zero_reg is_zero_reg)

(decl closure_reg () XReg)
(extern constructor closure_reg closure_reg)
(extern extractor closure_reg is_closure_reg)

(decl return_reg () XReg)
(extern constructor return_reg return_reg)
(extern extractor return_reg is_return_reg)

(decl float_return_reg () FReg)
(extern constructor float_return_reg float_return_reg)
(extern extractor float_return_reg is_float_return_reg)

(decl i64_generate_imm (Imm20 Imm12) Int64)
(extern extractor i64_generate_imm i64_generate_imm)

(decl i32_generate_imm (Imm20 Imm12) Int32)
(extern extractor i32_generate_imm i32_generate_imm)

(decl pure imm20_is_zero () Imm20)
(extern extractor imm20_is_zero imm20_is_zero)

(decl pure imm12_is_zero () Imm12)
(extern extractor imm12_is_zero imm12_is_zero)

(decl pure imm12_from_i32 (Imm12) Int32)
(extractor (imm12_from_i32 imm12) (i32_generate_imm (imm20_is_zero) imm12))

(decl pure imm12_from_i64 (Imm12) Int64)
(extractor (imm12_from_i64 imm12) (i64_generate_imm (imm20_is_zero) imm12))

(decl pure imm20_to_i32 (Imm20) Int32)
(extern constructor imm20_to_i32 imm20_to_i32)
(convert Imm20 Int32 imm20_to_i32)

(decl pure imm12_to_i32 (Imm12) Int32)
(extern constructor imm12_to_i32 imm12_to_i32)
(convert Imm12 Int32 imm12_to_i32)

(decl pure imm32_to_string (Int32) String)
(extern constructor imm32_to_string imm32_to_string)
(convert Int32 String imm32_to_string)

(decl pure imm64_to_string (Int64) String)
(extern constructor imm64_to_string imm64_to_string)
(convert Int64 String imm64_to_string)
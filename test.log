Testing test/test_src/ack.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl ack1_0
  .type ack1_0, @function
# leaf false
ack1_0:
.ack1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  bge zero, a0, .ack1_0_1

.ack1_0_2:
  bge zero, a1, .ack1_0_3

.ack1_0_4:
  addi s0, a0, -1
  addi a1, a1, -1
  call ack1_0
  mv a1, a0
  mv a0, s0
  call ack1_0

.ack1_0_5:

.ack1_0_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.ack1_0_1:
  addi a0, a1, 1
  j .ack1_0_6

.ack1_0_3:
  addi a0, a0, -1
  li a1, 1
  call ack1_0
  j .ack1_0_5

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main17_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main17_1
  .type main17_1, @function
# leaf false
main17_1:
.main17_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 3
  li a1, 8
  call ack1_0
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/adder.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl make_adder1_0
  .type make_adder1_0, @function
# leaf true
make_adder1_0:
.make_adder1_0_0:
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, adder4_3
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  ret

  .p2align 2
  .text
  .globl adder4_3
  .type adder4_3, @function
# leaf true
adder4_3:
.adder4_3_0:
  mv a1, s10
  lw a1, 8(a1)
  add a0, a1, a0
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main7_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main7_1
  .type main7_1, @function
# leaf false
main7_1:
.main7_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 3
  call make_adder1_0
  mv s10, a0
  ld a1, 0(a0)
  li a0, 7
  jalr a1
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/adder2.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl make_adder1_0
  .type make_adder1_0, @function
# leaf true
make_adder1_0:
.make_adder1_0_0:
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, adder4_3
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  ret

  .p2align 2
  .text
  .globl adder4_3
  .type adder4_3, @function
# leaf true
adder4_3:
.adder4_3_0:
  mv a1, s10
  lw a1, 8(a1)
  add a0, a1, a0
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main7_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main7_1
  .type main7_1, @function
# leaf false
main7_1:
.main7_1_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  li a0, 2
  call make_adder1_0
  mv s0, a0
  li a0, 3
  call make_adder1_0
  mv s1, a0
  mv s10, s0
  ld a1, 0(s0)
  li a0, 10
  jalr a1
  mv s0, a0
  mv s10, s1
  ld a1, 0(s1)
  li a0, 20
  jalr a1
  add a0, s0, a0
  call minimbt_print_int
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/bf.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl skip21_5
  .type skip21_5, @function
# leaf false
skip21_5:
.skip21_5_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a2, s10
  lw a3, 8(a2)
  ld a4, 16(a2)
  bge a0, a3, .skip21_5_1

.skip21_5_2:
  slliw a3, a0, 2
  add a3, a4, a3
  lw a4, 0(a3)
  li a3, 91
  beq a4, a3, .skip21_5_3

.skip21_5_4:
  li a3, 93
  bne a4, a3, .skip21_5_6

.skip21_5_5:
  beq a1, zero, .skip21_5_7

.skip21_5_8:
  addi a0, a0, 1
  addi a1, a1, -1
  mv s10, a2
  ld a2, 0(a2)
  jalr a2

.skip21_5_9:

.skip21_5_10:

.skip21_5_11:

.skip21_5_12:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.skip21_5_1:
  j .skip21_5_12

.skip21_5_3:
  addi a0, a0, 1
  addi a1, a1, 1
  mv s10, a2
  ld a2, 0(a2)
  jalr a2
  j .skip21_5_11

.skip21_5_6:
  addi a0, a0, 1
  mv s10, a2
  ld a2, 0(a2)
  jalr a2
  j .skip21_5_10

.skip21_5_7:
  j .skip21_5_9

  .p2align 2
  .text
  .globl main136_2
  .type main136_2, @function
# leaf false
main136_2:
.main136_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  li a0, 4096
  sub a0, s11, a0
  andi s0, a0, -8
  mv s11, s0
  li a0, 1024
  mv a1, a0
  mv a0, s0
  mv a2, zero
  call memseti32
  addi a0, s11, -16
  andi a0, a0, -8
  mv s11, a0
  la a1, read_prog140_12
  sd a1, 0(a0)
  sd s0, 8(a0)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_14
  .type T$start_14, @function
# leaf false
T$start_14:
.T$start_14_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main136_2
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl lp108_9
  .type lp108_9, @function
# leaf false
lp108_9:
.lp108_9_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s1, s10
  ld a0, 8(s1)
  ld a2, 16(s1)
  lw a3, 24(s1)
  ld a1, 32(s1)
  ld s0, 40(s1)
  ld a4, 48(s1)
  lw a0, 0(a0)
  slliw a0, a0, 2
  add a0, a2, a0
  lw a0, 0(a0)
  beq a0, zero, .lp108_9_1

.lp108_9_2:
  addi a0, a3, 1
  mv s10, a4
  ld a1, 0(a4)
  jalr a1
  sw a0, 0(s0)
  mv s10, s1
  ld a0, 0(s1)
  jalr a0

.lp108_9_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.lp108_9_1:
  addi a0, a3, 1
  mv s10, a1
  ld a2, 0(a1)
  mv a1, zero
  jalr a2
  sw a0, 0(s0)
  mv a0, zero
  j .lp108_9_3

  .p2align 2
  .text
  .globl read_ch_until_newline_or_eof1_0
  .type read_ch_until_newline_or_eof1_0, @function
# leaf false
read_ch_until_newline_or_eof1_0:
.read_ch_until_newline_or_eof1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call minimbt_read_char
  li a1, 10
  beq a0, a1, .read_ch_until_newline_or_eof1_0_1

.read_ch_until_newline_or_eof1_0_2:
  li a1, 13
  bne a0, a1, .read_ch_until_newline_or_eof1_0_4

.read_ch_until_newline_or_eof1_0_3:
  li a0, -1

.read_ch_until_newline_or_eof1_0_5:

.read_ch_until_newline_or_eof1_0_6:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.read_ch_until_newline_or_eof1_0_1:
  li a0, -1
  j .read_ch_until_newline_or_eof1_0_6

.read_ch_until_newline_or_eof1_0_4:
  j .read_ch_until_newline_or_eof1_0_5

  .p2align 2
  .text
  .globl bf5_1
  .type bf5_1, @function
# leaf false
bf5_1:
.bf5_1_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv s0, a0
  mv s1, a1
  addi a0, s11, -4
  andi s2, a0, -8
  mv s11, s2
  sw zero, 0(s2)
  li a0, 1024
  li a1, 1024
  mul a0, a0, a1
  slliw a1, a0, 2
  sub a1, s11, a1
  andi s3, a1, -8
  mv s11, s3
  mv a1, a0
  mv a0, s3
  mv a2, zero
  call memseti32
  addi a0, s11, -4
  andi a0, a0, -8
  mv s11, a0
  sw zero, 0(a0)
  addi a1, s11, -24
  andi a1, a1, -8
  mv s11, a1
  la a2, skip21_5
  sd a2, 0(a1)
  sd s0, 8(a1)
  sd s1, 16(a1)
  addi a2, s11, -56
  andi a2, a2, -8
  mv s11, a2
  la a3, aux40_7
  sd a3, 0(a2)
  sd s0, 8(a2)
  sd s1, 16(a2)
  sd s2, 24(a2)
  sd s3, 32(a2)
  sd a0, 40(a2)
  sd a1, 48(a2)
  mv s10, a2
  ld a1, 0(a2)
  mv a0, zero
  jalr a1
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl read_prog140_12
  .type read_prog140_12, @function
# leaf false
read_prog140_12:
.read_prog140_12_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, s10
  mv s1, a0
  ld s2, 8(s0)
  call read_ch_until_newline_or_eof1_0
  li a1, -1
  beq a0, a1, .read_prog140_12_1

.read_prog140_12_2:
  slliw a1, s1, 2
  add a1, s2, a1
  sw a0, 0(a1)
  addi a0, s1, 1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1

.read_prog140_12_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.read_prog140_12_1:
  mv a0, s1
  mv a1, s2
  call bf5_1
  j .read_prog140_12_3

  .p2align 2
  .text
  .globl aux40_7
  .type aux40_7, @function
# leaf false
aux40_7:
.aux40_7_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv s1, s10
  mv s3, a0
  lw a0, 8(s1)
  ld a1, 16(s1)
  ld a2, 24(s1)
  ld s2, 32(s1)
  ld s0, 40(s1)
  ld a3, 48(s1)
  bge s3, a0, .aux40_7_1

.aux40_7_2:
  slliw a0, s3, 2
  add a0, a1, a0
  lw a1, 0(a0)
  li a0, 62
  beq a1, a0, .aux40_7_3

.aux40_7_4:
  li a0, 60
  beq a1, a0, .aux40_7_5

.aux40_7_6:
  li a0, 43
  beq a1, a0, .aux40_7_7

.aux40_7_8:
  li a0, 45
  beq a1, a0, .aux40_7_9

.aux40_7_10:
  li a0, 46
  beq a1, a0, .aux40_7_11

.aux40_7_12:
  li a0, 44
  beq a1, a0, .aux40_7_13

.aux40_7_14:
  li a0, 91
  beq a1, a0, .aux40_7_15

.aux40_7_16:
  li a0, 93
  bne a1, a0, .aux40_7_18

.aux40_7_17:
  mv a0, s3

.aux40_7_19:

.aux40_7_20:

.aux40_7_21:

.aux40_7_22:

.aux40_7_23:

.aux40_7_24:

.aux40_7_25:

.aux40_7_26:

.aux40_7_27:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

.aux40_7_1:
  mv a0, s3
  j .aux40_7_27

.aux40_7_3:
  lw a0, 0(a2)
  addi a0, a0, 1
  sw a0, 0(a2)
  addi a0, s3, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux40_7_26

.aux40_7_5:
  lw a0, 0(a2)
  addi a0, a0, -1
  sw a0, 0(a2)
  addi a0, s3, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux40_7_25

.aux40_7_7:
  lw a0, 0(a2)
  lw a1, 0(a2)
  slliw a1, a1, 2
  add a1, s2, a1
  lw a1, 0(a1)
  addi a1, a1, 1
  slliw a0, a0, 2
  add a0, s2, a0
  sw a1, 0(a0)
  addi a0, s3, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux40_7_24

.aux40_7_9:
  lw a0, 0(a2)
  lw a1, 0(a2)
  slliw a1, a1, 2
  add a1, s2, a1
  lw a1, 0(a1)
  addi a1, a1, -1
  slliw a0, a0, 2
  add a0, s2, a0
  sw a1, 0(a0)
  addi a0, s3, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux40_7_23

.aux40_7_11:
  lw a0, 0(a2)
  slliw a0, a0, 2
  add a0, s2, a0
  lw a0, 0(a0)
  call minimbt_print_char
  addi a0, s3, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux40_7_22

.aux40_7_13:
  lw s0, 0(a2)
  call read_ch_until_newline_or_eof1_0
  slliw a1, s0, 2
  add a1, s2, a1
  sw a0, 0(a1)
  addi a0, s3, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux40_7_21

.aux40_7_15:
  sw s3, 0(s0)
  addi a0, s11, -56
  andi a0, a0, -8
  mv s11, a0
  la a1, lp108_9
  sd a1, 0(a0)
  sd a2, 8(a0)
  sd s2, 16(a0)
  sd s3, 24(a0)
  sd a3, 32(a0)
  sd s0, 40(a0)
  sd s1, 48(a0)
  mv s10, a0
  ld a0, 0(a0)
  jalr a0
  lw a0, 0(s0)
  addi a0, a0, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux40_7_20

.aux40_7_18:
  mv a0, s3
  j .aux40_7_19

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_14
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-bug.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  addi a0, a0, 123
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main8_2
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main8_2
  .type main8_2, @function
# leaf false
main8_2:
.main8_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 456
  call g5_1
  mv s10, a0
  ld a1, 0(a0)
  li a0, 789
  jalr a1
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl g5_1
  .type g5_1, @function
# leaf true
g5_1:
.g5_1_0:
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a1, f1_0
  sd a1, 0(a0)
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-bug2.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf false
f1_0:
.f1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv s0, a0
  blt s0, zero, .f1_0_2

.f1_0_1:
  mv a0, s0
  call minimbt_print_int
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a1, f1_0
  sd a1, 0(a0)
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  sd a0, 0(a1)
  ld a0, 0(a1)
  addi a1, s0, -1
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  jalr a2

.f1_0_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.f1_0_2:
  mv a0, zero
  j .f1_0_3

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main12_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main12_1
  .type main12_1, @function
# leaf false
main12_1:
.main12_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 9
  call f1_0
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-rec.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl T$x.10
  .type T$x.10, @function
# leaf true
T$x.10:
.T$x.10_0:
  li a0, 10
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main9_3
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main9_3
  .type main9_3, @function
# leaf false
main9_3:
.main9_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 12
  call f2_2
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f2_2
  .type f2_2, @function
# leaf false
f2_2:
.f2_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  beq a0, zero, .f2_2_1

.f2_2_2:
  addi a0, a0, -1
  call f2_2
  lw a1, x.1
  add a0, a1, a0

.f2_2_3:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.f2_2_1:
  mv a0, zero
  j .f2_2_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$x.10
  la t5, x.1
  sw a0, 0(t5)
  call T$start_6
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl x.1
  .type x.1, @object
x.1:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-reg-bug.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main39_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main39_1
  .type main39_1, @function
# leaf false
main39_1:
.main39_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a0, s11, -40
  andi a0, a0, -8
  mv s11, a0
  li a1, 1
  sw a1, 0(a0)
  li a1, 2
  sw a1, 4(a0)
  li a1, 3
  sw a1, 8(a0)
  li a1, 4
  sw a1, 12(a0)
  li a1, 5
  sw a1, 16(a0)
  li a1, 6
  sw a1, 20(a0)
  li a1, 7
  sw a1, 24(a0)
  li a1, 8
  sw a1, 28(a0)
  li a1, 9
  sw a1, 32(a0)
  li a1, 10
  sw a1, 36(a0)
  call h1_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl h1_0
  .type h1_0, @function
# leaf false
h1_0:
.h1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  lw a1, 0(a0)
  lw a2, 4(a0)
  lw a3, 8(a0)
  lw a4, 12(a0)
  lw a5, 16(a0)
  lw a6, 20(a0)
  lw a7, 24(a0)
  lw t0, 28(a0)
  lw t1, 32(a0)
  lw a0, 36(a0)
  addi t2, s11, -88
  andi t2, t2, -8
  mv s11, t2
  la t3, g24_3
  sd t3, 0(t2)
  sd a1, 8(t2)
  sd a2, 16(t2)
  sd a3, 24(t2)
  sd a4, 32(t2)
  sd a5, 40(t2)
  sd a6, 48(t2)
  sd a7, 56(t2)
  sd t0, 64(t2)
  sd t1, 72(t2)
  sd a0, 80(t2)
  mv s10, t2
  ld a1, 0(t2)
  li a0, 1
  jalr a1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl g24_3
  .type g24_3, @function
# leaf false
g24_3:
.g24_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a1, s10
  lw a2, 8(a1)
  lw a3, 16(a1)
  lw a4, 24(a1)
  lw a5, 32(a1)
  lw a6, 40(a1)
  lw a7, 48(a1)
  lw t0, 56(a1)
  lw t1, 64(a1)
  lw t2, 72(a1)
  lw t3, 80(a1)
  add a2, a2, a3
  add a2, a2, a4
  add a2, a2, a5
  add a2, a2, a6
  add a2, a2, a7
  add a2, a2, t0
  add a2, a2, t1
  add a2, a2, t2
  add a2, a2, t3
  blt zero, a0, .g24_3_2

.g24_3_1:
  neg a0, a0
  mv s10, a1
  ld a1, 0(a1)
  jalr a1

.g24_3_3:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.g24_3_2:
  mv a0, a2
  j .g24_3_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/debug.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl g12_7
  .type g12_7, @function
# leaf true
g12_7:
.g12_7_0:
  mv a1, s10
  lw a0, 8(a1)
  ret

  .p2align 2
  .text
  .globl useless1_0
  .type useless1_0, @function
# leaf true
useless1_0:
.useless1_0_0:
  li a0, 10
  addi a0, a0, -1
  ret

  .p2align 2
  .text
  .globl main19_3
  .type main19_3, @function
# leaf true
main19_3:
.main19_3_0:
  mv a0, zero
  ret

  .p2align 2
  .text
  .globl T$start_10
  .type T$start_10, @function
# leaf false
T$start_10:
.T$start_10_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main19_3
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f9_2
  .type f9_2, @function
# leaf false
f9_2:
.f9_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, g12_7
  sd a2, 0(a1)
  sd a0, 8(a1)
  li a0, 1
  li a2, 1
  bne a0, a2, .f9_2_2

.f9_2_1:
  li a0, 1
  call f9_2

.f9_2_3:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.f9_2_2:
  mv s10, a1
  ld a1, 0(a1)
  li a0, 2
  jalr a1
  j .f9_2_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_10
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl dummy6_1
  .type dummy6_1, @function
# leaf true
dummy6_1:
.dummy6_1_0:
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/even-odd.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl T$t.10
  .type T$t.10, @function
# leaf true
T$t.10:
.T$t.10_0:
  li a0, 123
  ret

  .p2align 2
  .text
  .globl odd6_7
  .type odd6_7, @function
# leaf false
odd6_7:
.odd6_7_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a1, s10
  blt a0, zero, .odd6_7_2

.odd6_7_1:
  beq a0, zero, .odd6_7_3

.odd6_7_4:
  addi a0, a0, -1
  call even3_4

.odd6_7_5:

.odd6_7_6:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.odd6_7_2:
  addi a0, a0, 1
  call even3_4
  j .odd6_7_6

.odd6_7_3:
  lw a0, f.2
  j .odd6_7_5

  .p2align 2
  .text
  .globl even3_4
  .type even3_4, @function
# leaf false
even3_4:
.even3_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  la a2, odd6_7
  sd a2, 0(a1)
  blt a0, zero, .even3_4_2

.even3_4_1:
  beq a0, zero, .even3_4_3

.even3_4_4:
  addi a0, a0, -1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1

.even3_4_5:

.even3_4_6:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.even3_4_2:
  addi a0, a0, 1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  j .even3_4_6

.even3_4_3:
  lw a0, t.1
  j .even3_4_5

  .p2align 2
  .text
  .globl T$start_10
  .type T$start_10, @function
# leaf false
T$start_10:
.T$start_10_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main21_5
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$t.10
  la t5, t.1
  sw a0, 0(t5)
  call T$f.22
  la t5, f.2
  sw a0, 0(t5)
  call T$start_10
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$f.22
  .type T$f.22, @function
# leaf true
T$f.22:
.T$f.22_0:
  li a0, 456
  ret

  .p2align 2
  .text
  .globl main21_5
  .type main21_5, @function
# leaf false
main21_5:
.main21_5_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 789
  call even3_4
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

__end_text:
  .p2align 2
  .bss
  .globl t.1
  .type t.1, @object
t.1:
  .zero 4
  .p2align 2
  .bss
  .globl f.2
  .type f.2, @object
f.2:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/fannkuch-redux.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl gen_perm14_3
  .type gen_perm14_3, @function
# leaf false
gen_perm14_3:
.gen_perm14_3_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv a1, s10
  mv s0, a0
  slliw a0, s0, 2
  sub a0, s11, a0
  andi s1, a0, -8
  mv s11, s1
  mv a1, s0
  mv a0, s1
  mv a2, zero
  call memseti32
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  la a1, init_arr9_5
  sd a1, 0(a0)
  sd s0, 8(a0)
  sd s1, 16(a0)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  mv a0, s1
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl go_loop179_17
  .type go_loop179_17, @function
# leaf false
go_loop179_17:
.go_loop179_17_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  mv s0, s10
  ld s2, 8(s0)
  ld s1, 16(s0)
  lw a0, 24(s0)
  ld s3, 32(s0)
  ld s5, 40(s0)
  ld s4, 48(s0)
  lw a1, 0(s2)
  li a2, 1
  bne a1, a2, .go_loop179_17_2

.go_loop179_17_1:
  lw a1, 0(s1)
  beq a1, a0, .go_loop179_17_3

.go_loop179_17_4:
  lw a0, 0(s3)
  sw a0, 0(s5)
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  la a1, move_perm1_forward197_19
  sd a1, 0(a0)
  sd s1, 8(a0)
  sd s3, 16(a0)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  lw a0, 0(s1)
  lw a1, 0(s5)
  slliw a0, a0, 2
  add a0, s3, a0
  sw a1, 0(a0)
  lw a0, 0(s1)
  lw a1, 0(s1)
  slliw a1, a1, 2
  add a1, s4, a1
  lw a1, 0(a1)
  addi a1, a1, -1
  slliw a0, a0, 2
  add a0, s4, a0
  sw a1, 0(a0)
  lw a0, 0(s1)
  slliw a0, a0, 2
  add a0, s4, a0
  lw a0, 0(a0)
  li a1, 1
  bge a0, a1, .go_loop179_17_5

.go_loop179_17_6:
  lw a0, 0(s1)
  addi a0, a0, 1
  sw a0, 0(s1)
  mv a0, zero

.go_loop179_17_7:
  mv a0, zero

.go_loop179_17_8:
  mv s10, s0
  ld a0, 0(s0)
  jalr a0

.go_loop179_17_9:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  addi sp, sp, 64
  ret

.go_loop179_17_2:
  mv a0, zero
  j .go_loop179_17_9

.go_loop179_17_3:
  sw zero, 0(s2)
  sw zero, 0(s1)
  mv a0, zero
  j .go_loop179_17_8

.go_loop179_17_5:
  sw zero, 0(s2)
  mv a0, zero
  j .go_loop179_17_7

  .p2align 2
  .text
  .globl flip_loop99_15
  .type flip_loop99_15, @function
# leaf false
flip_loop99_15:
.flip_loop99_15_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a3, s10
  mv a1, a0
  ld a5, 8(a3)
  ld a4, 16(a3)
  ld a2, 24(a3)
  lw a0, 0(a5)
  li a6, 2
  div a0, a0, a6
  blt a0, a1, .flip_loop99_15_2

.flip_loop99_15_1:
  slliw a0, a1, 2
  add a0, a4, a0
  lw a0, 0(a0)
  sw a0, 0(a2)
  lw a0, 0(a5)
  sub a0, a0, a1
  slliw a0, a0, 2
  add a0, a4, a0
  lw a0, 0(a0)
  slliw a6, a1, 2
  add a6, a4, a6
  sw a0, 0(a6)
  lw a0, 0(a5)
  sub a0, a0, a1
  lw a2, 0(a2)
  slliw a0, a0, 2
  add a0, a4, a0
  sw a2, 0(a0)
  addi a0, a1, 1
  mv s10, a3
  ld a1, 0(a3)
  jalr a1

.flip_loop99_15_3:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.flip_loop99_15_2:
  mv a0, zero
  j .flip_loop99_15_3

  .p2align 2
  .text
  .globl init_arr9_5
  .type init_arr9_5, @function
# leaf false
init_arr9_5:
.init_arr9_5_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a1, s10
  lw a2, 8(a1)
  ld a3, 16(a1)
  addi a2, a2, -1
  blt a2, a0, .init_arr9_5_2

.init_arr9_5_1:
  slliw a2, a0, 2
  add a2, a3, a2
  sw a0, 0(a2)
  addi a0, a0, 1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1

.init_arr9_5_3:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.init_arr9_5_2:
  mv a0, zero
  j .init_arr9_5_3

  .p2align 2
  .text
  .globl main262_1
  .type main262_1, @function
# leaf false
main262_1:
.main262_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  li a0, 9
  call fannkuch1_0
  lw s0, 0(a0)
  lw a0, 4(a0)
  call minimbt_print_int
  mv a0, s0
  call minimbt_print_int
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl compute40_7
  .type compute40_7, @function
# leaf false
compute40_7:
.compute40_7_0:
  addi sp, sp, -96
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  mv s4, s10
  mv s0, a0
  lw s8, 8(s4)
  ld s5, 16(s4)
  ld s9, 24(s4)
  ld s6, 32(s4)
  ld s2, 40(s4)
  ld s3, 48(s4)
  ld s7, 56(s4)
  ld s1, 64(s4)
  lw a0, 0(s0)
  li a1, 1
  blt a0, a1, .compute40_7_2

.compute40_7_1:
  addi a0, s11, -32
  andi a1, a0, -8
  mv s11, a1
  la a0, copy_perm46_9
  sd a0, 0(a1)
  sd s8, 8(a1)
  sd s5, 16(a1)
  sd s9, 24(a1)
  mv s10, a1
  ld a1, 0(a1)
  mv a0, zero
  jalr a1
  addi a0, s11, -24
  andi a1, a0, -8
  mv s11, a1
  la a0, init_count59_11
  sd a0, 0(a1)
  sd s0, 8(a1)
  sd s6, 16(a1)
  mv s10, a1
  ld a0, 0(a1)
  jalr a0
  sw zero, 0(s2)
  lw a1, 0(s9)
  addi a0, s11, -4
  andi a0, a0, -8
  mv s11, a0
  sw a1, 0(a0)
  addi a1, s11, -24
  andi a2, a1, -8
  mv s11, a2
  la a1, do_flip90_13
  sd a1, 0(a2)
  sd s9, 8(a2)
  sd s2, 16(a2)
  mv s10, a2
  ld a1, 0(a2)
  jalr a1
  lw a0, 0(s3)
  lw a1, 0(s2)
  blt a1, a0, .compute40_7_4

.compute40_7_3:
  lw a0, 0(s2)
  sw a0, 0(s3)
  mv a0, zero

.compute40_7_5:
  lw a0, 0(s7)
  lw a1, 0(s2)
  lw a2, 0(s1)
  lw a3, 0(s1)
  li a4, 2
  div a3, a3, a4
  li a4, 2
  mul a3, a3, a4
  sub a2, a2, a3
  li a3, 2
  mul a2, a2, a3
  li a3, 1
  sub a2, a3, a2
  mul a1, a1, a2
  add a0, a0, a1
  sw a0, 0(s7)
  addi a0, s11, -4
  andi a0, a0, -8
  mv s11, a0
  li a1, 1
  sw a1, 0(a0)
  addi a1, s11, -4
  andi a1, a1, -8
  mv s11, a1
  sw zero, 0(a1)
  addi a2, s11, -56
  andi a2, a2, -8
  mv s11, a2
  la a3, go_loop179_17
  sd a3, 0(a2)
  sd a0, 8(a2)
  sd s0, 16(a2)
  sd s8, 24(a2)
  sd s5, 32(a2)
  sd a1, 40(a2)
  sd s6, 48(a2)
  mv s10, a2
  ld a0, 0(a2)
  jalr a0
  lw a0, 0(s1)
  addi a0, a0, 1
  sw a0, 0(s1)
  mv s10, s4
  ld a1, 0(s4)
  mv a0, s0
  jalr a1

.compute40_7_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  addi sp, sp, 96
  ret

.compute40_7_2:
  mv a0, zero
  j .compute40_7_6

.compute40_7_4:
  mv a0, zero
  j .compute40_7_5

  .p2align 2
  .text
  .globl move_perm1_forward197_19
  .type move_perm1_forward197_19, @function
# leaf false
move_perm1_forward197_19:
.move_perm1_forward197_19_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a1, s10
  ld a2, 8(a1)
  ld a3, 16(a1)
  lw a2, 0(a2)
  addi a2, a2, -1
  blt a2, a0, .move_perm1_forward197_19_2

.move_perm1_forward197_19_1:
  addi a2, a0, 1
  slliw a2, a2, 2
  add a2, a3, a2
  lw a2, 0(a2)
  slliw a4, a0, 2
  add a3, a3, a4
  sw a2, 0(a3)
  addi a0, a0, 1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mv a0, zero

.move_perm1_forward197_19_3:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.move_perm1_forward197_19_2:
  mv a0, zero
  j .move_perm1_forward197_19_3

  .p2align 2
  .text
  .globl fannkuch1_0
  .type fannkuch1_0, @function
# leaf false
fannkuch1_0:
.fannkuch1_0_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  mv s0, a0
  addi a0, s11, -8
  andi a1, a0, -8
  mv s11, a1
  la a0, gen_perm14_3
  sd a0, 0(a1)
  mv s10, a1
  ld a1, 0(a1)
  mv a0, s0
  jalr a1
  mv s3, a0
  slliw a0, s0, 2
  sub a0, s11, a0
  andi s4, a0, -8
  mv s11, s4
  mv a1, s0
  mv a0, s4
  mv a2, zero
  call memseti32
  slliw a0, s0, 2
  sub a0, s11, a0
  andi s5, a0, -8
  mv s11, s5
  mv a1, s0
  mv a0, s5
  mv a2, zero
  call memseti32
  addi a0, s11, -4
  andi a0, a0, -8
  mv s11, a0
  sw zero, 0(a0)
  addi a1, s11, -4
  andi s1, a1, -8
  mv s11, s1
  sw zero, 0(s1)
  addi a1, s11, -4
  andi s2, a1, -8
  mv s11, s2
  sw zero, 0(s2)
  addi a1, s11, -4
  andi a1, a1, -8
  mv s11, a1
  sw zero, 0(a1)
  addi a2, s11, -4
  andi a2, a2, -8
  mv s11, a2
  sw s0, 0(a2)
  addi a3, s11, -72
  andi a4, a3, -8
  mv s11, a4
  la a3, compute40_7
  sd a3, 0(a4)
  sd s0, 8(a4)
  sd s3, 16(a4)
  sd s4, 24(a4)
  sd s5, 32(a4)
  sd a0, 40(a4)
  sd s1, 48(a4)
  sd s2, 56(a4)
  sd a1, 64(a4)
  mv s10, a4
  ld a1, 0(a4)
  mv a0, a2
  jalr a1
  lw a0, 0(s1)
  lw a1, 0(s2)
  addi a2, s11, -8
  andi a2, a2, -8
  mv s11, a2
  sw a0, 0(a2)
  sw a1, 4(a2)
  mv a0, a2
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl copy_perm46_9
  .type copy_perm46_9, @function
# leaf false
copy_perm46_9:
.copy_perm46_9_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a1, s10
  mv a4, a0
  lw a0, 8(a1)
  ld a2, 16(a1)
  ld a3, 24(a1)
  addi a0, a0, -1
  blt a0, a4, .copy_perm46_9_2

.copy_perm46_9_1:
  slliw a0, a4, 2
  add a0, a2, a0
  lw a0, 0(a0)
  slliw a2, a4, 2
  add a2, a3, a2
  sw a0, 0(a2)
  addi a0, a4, 1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1

.copy_perm46_9_3:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.copy_perm46_9_2:
  mv a0, zero
  j .copy_perm46_9_3

  .p2align 2
  .text
  .globl T$start_22
  .type T$start_22, @function
# leaf false
T$start_22:
.T$start_22_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main262_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_22
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl do_flip90_13
  .type do_flip90_13, @function
# leaf false
do_flip90_13:
.do_flip90_13_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv s0, s10
  mv s1, a0
  ld s2, 8(s0)
  ld s3, 16(s0)
  lw a0, 0(s1)
  beq a0, zero, .do_flip90_13_1

.do_flip90_13_2:
  addi a0, s11, -4
  andi a0, a0, -8
  mv s11, a0
  sw zero, 0(a0)
  addi a1, s11, -32
  andi a1, a1, -8
  mv s11, a1
  la a2, flip_loop99_15
  sd a2, 0(a1)
  sd s1, 8(a1)
  sd s2, 16(a1)
  sd a0, 24(a1)
  mv s10, a1
  ld a1, 0(a1)
  mv a0, zero
  jalr a1
  lw a0, 0(s2)
  sw a0, 0(s1)
  lw a0, 0(s3)
  addi a0, a0, 1
  sw a0, 0(s3)
  mv s10, s0
  ld a1, 0(s0)
  mv a0, s1
  jalr a1

.do_flip90_13_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

.do_flip90_13_1:
  mv a0, zero
  j .do_flip90_13_3

  .p2align 2
  .text
  .globl init_count59_11
  .type init_count59_11, @function
# leaf false
init_count59_11:
.init_count59_11_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a0, s10
  ld a1, 8(a0)
  ld a2, 16(a0)
  lw a3, 0(a1)
  li a4, 1
  beq a3, a4, .init_count59_11_1

.init_count59_11_2:
  lw a3, 0(a1)
  addi a3, a3, -1
  lw a4, 0(a1)
  slliw a3, a3, 2
  add a2, a2, a3
  sw a4, 0(a2)
  lw a2, 0(a1)
  addi a2, a2, -1
  sw a2, 0(a1)
  mv s10, a0
  ld a0, 0(a0)
  jalr a0

.init_count59_11_3:
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.init_count59_11_1:
  mv a0, zero
  j .init_count59_11_3

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/feature_test.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main1_0
  .type main1_0, @function
# leaf false
main1_0:
.main1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4611686018427387904
  fmv.d.x fa1, a0
  fadd.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4611686018427387904
  fmv.d.x fa1, a0
  fsub.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4611686018427387904
  fmv.d.x fa1, a0
  fmul.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4611686018427387904
  fmv.d.x fa1, a0
  fdiv.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4611686018427387904
  fmv.d.x fa1, a0
  fle.d a0, fa0, fa1
  beq a0, zero, .main1_0_2

.main1_0_1:
  li a0, 1
  call minimbt_print_int

.main1_0_3:
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4607182418800017408
  fmv.d.x fa1, a0
  feq.d a0, fa0, fa1
  beq a0, zero, .main1_0_5

.main1_0_4:
  li a0, 1
  call minimbt_print_int

.main1_0_6:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.main1_0_2:
  mv a0, zero
  call minimbt_print_int
  j .main1_0_3

.main1_0_5:
  mv a0, zero
  call minimbt_print_int
  j .main1_0_6

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main1_0
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/fib.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl main11_1
  .type main11_1, @function
# leaf false
main11_1:
.main11_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 30
  call fib1_0
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main11_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl fib1_0
  .type fib1_0, @function
# leaf false
fib1_0:
.fib1_0_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s0, a0
  li a0, 1
  bge a0, s0, .fib1_0_1

.fib1_0_2:
  addi a0, s0, -1
  call fib1_0
  mv s1, a0
  addi a0, s0, -2
  call fib1_0
  add a0, s1, a0

.fib1_0_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.fib1_0_1:
  mv a0, s0
  j .fib1_0_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/float.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main1_0
  .type main1_0, @function
# leaf false
main1_0:
.main1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 4623113902481840538
  fmv.d.x fa0, a0
  fneg.d fa0, fa0
  fabs.d fa0, fa0
  fsqrt.d fa0, fa0
  call minimbt_cos
  call minimbt_sin
  li a0, 4616752568008179712
  fmv.d.x fa1, a0
  fadd.d fa0, fa0, fa1
  li a0, 4619229547803233485
  fmv.d.x fa1, a0
  li a0, 4621199872640208077
  fmv.d.x fa2, a0
  fmul.d fa1, fa1, fa2
  li a0, 4608238818662014491
  fmv.d.x fa2, a0
  fdiv.d fa1, fa1, fa2
  fsub.d fa0, fa0, fa1
  li a0, 1000000
  fcvt.d.w fa1, a0
  fmul.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main1_0
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/funcomp.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl dbl10_1
  .type dbl10_1, @function
# leaf true
dbl10_1:
.dbl10_1_0:
  add a0, a0, a0
  ret

  .p2align 2
  .text
  .globl dec17_3
  .type dec17_3, @function
# leaf true
dec17_3:
.dec17_3_0:
  addi a0, a0, -1
  ret

  .p2align 2
  .text
  .globl T$start_12
  .type T$start_12, @function
# leaf false
T$start_12:
.T$start_12_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main21_4
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl composed6_6
  .type composed6_6, @function
# leaf false
composed6_6:
.composed6_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a1, s10
  ld a2, 8(a1)
  ld s0, 16(a1)
  mv s10, a2
  ld a1, 0(a2)
  jalr a1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl inc13_2
  .type inc13_2, @function
# leaf true
inc13_2:
.inc13_2_0:
  addi a0, a0, 1
  ret

  .p2align 2
  .text
  .globl main21_4
  .type main21_4, @function
# leaf false
main21_4:
.main21_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a1, dbl10_1
  sd a1, 0(a0)
  addi a1, s11, -8
  andi a2, a1, -8
  mv s11, a2
  la a1, dec17_3
  sd a1, 0(a2)
  mv a1, a2
  call compose1_0
  mv a1, a0
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a2, inc13_2
  sd a2, 0(a0)
  call compose1_0
  mv s10, a0
  ld a1, 0(a0)
  li a0, 123
  jalr a1
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl compose1_0
  .type compose1_0, @function
# leaf true
compose1_0:
.compose1_0_0:
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, composed6_6
  sd a3, 0(a2)
  sd a0, 8(a2)
  sd a1, 16(a2)
  mv a0, a2
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_12
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/gcd.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main9_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main9_1
  .type main9_1, @function
# leaf false
main9_1:
.main9_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 21600
  li a1, 337500
  call gcd1_0
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl gcd1_0
  .type gcd1_0, @function
# leaf false
gcd1_0:
.gcd1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a2, a0
  mv a0, a1
  beq a2, zero, .gcd1_0_1

.gcd1_0_2:
  blt a0, a2, .gcd1_0_4

.gcd1_0_3:
  sub a1, a0, a2
  mv a0, a2
  call gcd1_0

.gcd1_0_5:

.gcd1_0_6:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.gcd1_0_1:
  j .gcd1_0_6

.gcd1_0_4:
  sub a1, a2, a0
  call gcd1_0
  j .gcd1_0_5

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/id.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  addi a0, a0, 1
  ret

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main5_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main5_1
  .type main5_1, @function
# leaf false
main5_1:
.main5_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 1000
  call f1_0
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/inprod-loop.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl inprod1_0
  .type inprod1_0, @function
# leaf false
inprod1_0:
.inprod1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a3, a0
  mv a4, a1
  mv a1, a2
  blt a1, zero, .inprod1_0_2

.inprod1_0_1:
  slliw a0, a1, 3
  add a0, a3, a0
  fld fa1, 0(a0)
  slliw a0, a1, 3
  add a0, a4, a0
  fld fa2, 0(a0)
  fmadd.d fa0, fa1, fa2, fa0
  addi a2, a1, -1
  mv a0, a3
  mv a1, a4
  call inprod1_0

.inprod1_0_3:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.inprod1_0_2:
  j .inprod1_0_3

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main17_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main17_1
  .type main17_1, @function
# leaf false
main17_1:
.main17_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  li a1, 4608218246714312622
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  fsd fa0, 8(a0)
  fsd fa0, 16(a0)
  addi a1, s11, -24
  andi a1, a1, -8
  mv s11, a1
  li a2, 4616820122002590269
  fmv.d.x fa0, a2
  fsd fa0, 0(a1)
  fsd fa0, 8(a1)
  fsd fa0, 16(a1)
  fmv.d.x fa0, zero
  li a2, 2
  call inprod1_0
  li a0, 4696837146684686336
  fmv.d.x fa1, a0
  fmul.d fa0, fa1, fa0
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/inprod-rec.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl inprod1_0
  .type inprod1_0, @function
# leaf false
inprod1_0:
.inprod1_0_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  fsd fs0, 8(sp)
  fsd fs1, 16(sp)
  mv a3, a0
  mv a4, a1
  mv a1, a2
  blt a1, zero, .inprod1_0_2

.inprod1_0_1:
  slliw a0, a1, 3
  add a0, a3, a0
  fld fs0, 0(a0)
  slliw a0, a1, 3
  add a0, a4, a0
  fld fs1, 0(a0)
  addi a2, a1, -1
  mv a0, a3
  mv a1, a4
  call inprod1_0
  fmadd.d fa0, fs0, fs1, fa0

.inprod1_0_3:
  ld ra, 0(sp)
  fld fs0, 8(sp)
  fld fs1, 16(sp)
  addi sp, sp, 32
  ret

.inprod1_0_2:
  fmv.d.x fa0, zero
  j .inprod1_0_3

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main15_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main15_1
  .type main15_1, @function
# leaf false
main15_1:
.main15_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  li a1, 4608218246714312622
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  fsd fa0, 8(a0)
  fsd fa0, 16(a0)
  addi a1, s11, -24
  andi a1, a1, -8
  mv s11, a1
  li a2, 4616820122002590269
  fmv.d.x fa0, a2
  fsd fa0, 0(a1)
  fsd fa0, 8(a1)
  fsd fa0, 16(a1)
  li a2, 2
  call inprod1_0
  li a0, 4696837146684686336
  fmv.d.x fa1, a0
  fmul.d fa0, fa1, fa0
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/inprod.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl gety10_1
  .type gety10_1, @function
# leaf true
gety10_1:
.gety10_1_0:
  fld fa0, 8(a0)
  ret

  .p2align 2
  .text
  .globl T$start_10
  .type T$start_10, @function
# leaf false
T$start_10:
.T$start_10_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main43_4
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl getx1_0
  .type getx1_0, @function
# leaf true
getx1_0:
.getx1_0_0:
  fld fa0, 0(a0)
  ret

  .p2align 2
  .text
  .globl inprod28_3
  .type inprod28_3, @function
# leaf false
inprod28_3:
.inprod28_3_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  fsd fs0, 24(sp)
  fsd fs1, 32(sp)
  mv s0, a0
  mv s1, a1
  mv a0, s0
  call getx1_0
  fmv.d fs0, fa0
  mv a0, s1
  call getx1_0
  fmul.d fs0, fs0, fa0
  mv a0, s0
  call gety10_1
  fmv.d fs1, fa0
  mv a0, s1
  call gety10_1
  fmadd.d fs0, fs1, fa0, fs0
  mv a0, s0
  call getz19_2
  fmv.d fs1, fa0
  mv a0, s1
  call getz19_2
  fmadd.d fa0, fs1, fa0, fs0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  fld fs0, 24(sp)
  fld fs1, 32(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl main43_4
  .type main43_4, @function
# leaf false
main43_4:
.main43_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  li a1, 4607182418800017408
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  li a1, 4611686018427387904
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  li a1, 4613937818241073152
  fmv.d.x fa0, a1
  fsd fa0, 16(a0)
  addi a1, s11, -24
  andi a1, a1, -8
  mv s11, a1
  li a2, 4616189618054758400
  fmv.d.x fa0, a2
  fsd fa0, 0(a1)
  li a2, 4617315517961601024
  fmv.d.x fa0, a2
  fsd fa0, 8(a1)
  li a2, 4618441417868443648
  fmv.d.x fa0, a2
  fsd fa0, 16(a1)
  call inprod28_3
  li a0, 4696837146684686336
  fmv.d.x fa1, a0
  fmul.d fa0, fa1, fa0
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_10
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl getz19_2
  .type getz19_2, @function
# leaf true
getz19_2:
.getz19_2_0:
  fld fa0, 16(a0)
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/int_min.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main2_2
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main2_2
  .type main2_2, @function
# leaf false
main2_2:
.main2_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  lw a0, int_min.1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$int_min.10
  la t5, int_min.1
  sw a0, 0(t5)
  call T$start_4
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$int_min.10
  .type T$int_min.10, @function
# leaf true
T$int_min.10:
.T$int_min.10_0:
  li a0, -2147483648
  ret

__end_text:
  .p2align 2
  .bss
  .globl int_min.1
  .type int_min.1, @object
int_min.1:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-reg.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  li a0, 123
  ret

  .p2align 2
  .text
  .globl h7_2
  .type h7_2, @function
# leaf true
h7_2:
.h7_2_0:
  li a0, 789
  ret

  .p2align 2
  .text
  .globl g4_1
  .type g4_1, @function
# leaf true
g4_1:
.g4_1_0:
  li a0, 456
  ret

  .p2align 2
  .text
  .globl T$start_8
  .type T$start_8, @function
# leaf false
T$start_8:
.T$start_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main10_3
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main10_3
  .type main10_3, @function
# leaf false
main10_3:
.main10_3_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv a0, zero
  call f1_0
  mv s0, a0
  mv a0, zero
  call g4_1
  mv s1, a0
  mv a0, zero
  call h7_2
  beq a0, zero, .main10_3_1

.main10_3_2:
  sub a0, s1, s0
  add a0, a0, s0
  add a0, a0, s1

.main10_3_3:
  call minimbt_print_int
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.main10_3_1:
  sub a0, s0, s1
  j .main10_3_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_8
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-reg2.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  li a0, 123
  ret

  .p2align 2
  .text
  .globl h7_2
  .type h7_2, @function
# leaf true
h7_2:
.h7_2_0:
  li a0, 789
  ret

  .p2align 2
  .text
  .globl g4_1
  .type g4_1, @function
# leaf true
g4_1:
.g4_1_0:
  li a0, 456
  ret

  .p2align 2
  .text
  .globl T$start_8
  .type T$start_8, @function
# leaf false
T$start_8:
.T$start_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main10_3
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main10_3
  .type main10_3, @function
# leaf false
main10_3:
.main10_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a0, zero
  call f1_0
  mv s0, a0
  bge zero, s0, .main10_3_1

.main10_3_2:
  mv a0, zero
  call h7_2
  sub a0, a0, s0
  add a0, a0, s0

.main10_3_3:
  call minimbt_print_int
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.main10_3_1:
  mv a0, zero
  call g4_1
  add a0, a0, s0
  j .main10_3_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_8
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-stack.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  li a0, 123
  ret

  .p2align 2
  .text
  .globl h7_2
  .type h7_2, @function
# leaf true
h7_2:
.h7_2_0:
  li a0, 789
  ret

  .p2align 2
  .text
  .globl g4_1
  .type g4_1, @function
# leaf true
g4_1:
.g4_1_0:
  li a0, 456
  ret

  .p2align 2
  .text
  .globl T$start_8
  .type T$start_8, @function
# leaf false
T$start_8:
.T$start_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main10_3
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main10_3
  .type main10_3, @function
# leaf false
main10_3:
.main10_3_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv a0, zero
  call f1_0
  mv s0, a0
  mv a0, zero
  call g4_1
  mv s1, a0
  mv a0, zero
  call h7_2
  beq a0, zero, .main10_3_1

.main10_3_2:
  addi a0, s1, 2
  add a0, a0, s0
  add a0, a0, s1

.main10_3_3:
  call minimbt_print_int
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.main10_3_1:
  addi a0, s0, 1
  j .main10_3_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_8
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-stack2.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  li a0, 123
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main7_2
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl g4_1
  .type g4_1, @function
# leaf true
g4_1:
.g4_1_0:
  li a0, 456
  ret

  .p2align 2
  .text
  .globl main7_2
  .type main7_2, @function
# leaf false
main7_2:
.main7_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a0, zero
  call f1_0
  mv s0, a0
  blt zero, s0, .main7_2_2

.main7_2_1:
  mv a0, zero
  call g4_1
  add a0, a0, s0

.main7_2_3:
  call minimbt_print_int
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.main7_2_2:
  add a0, s0, s0
  j .main7_2_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-stack3.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  li a0, 123
  ret

  .p2align 2
  .text
  .globl h7_2
  .type h7_2, @function
# leaf true
h7_2:
.h7_2_0:
  li a0, 789
  ret

  .p2align 2
  .text
  .globl g4_1
  .type g4_1, @function
# leaf true
g4_1:
.g4_1_0:
  li a0, 456
  ret

  .p2align 2
  .text
  .globl T$start_8
  .type T$start_8, @function
# leaf false
T$start_8:
.T$start_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main10_3
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main10_3
  .type main10_3, @function
# leaf false
main10_3:
.main10_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a0, zero
  call f1_0
  mv s0, a0
  blt zero, s0, .main10_3_2

.main10_3_1:
  mv a0, zero
  call g4_1

.main10_3_3:
  add a0, a0, s0
  call minimbt_print_int
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.main10_3_2:
  mv a0, zero
  call h7_2
  j .main10_3_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_8
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/landins_knot.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl g18_2
  .type g18_2, @function
# leaf true
g18_2:
.g18_2_0:
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, h21_8
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  ret

  .p2align 2
  .text
  .globl T$factorial.2810
  .type T$factorial.2810, @function
# leaf false
T$factorial.2810:
.T$factorial.2810_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a1, g18_2
  sd a1, 0(a0)
  call landins_knot4_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl landins_knot4_1
  .type landins_knot4_1, @function
# leaf false
landins_knot4_1:
.landins_knot4_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  la a2, dummy1_0
  sd a2, 0(a1)
  addi a2, s11, -8
  andi s0, a2, -8
  mv s11, s0
  sd a1, 0(s0)
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, aux9_5
  sd a2, 0(a1)
  sd s0, 8(a1)
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  jalr a2
  sd a0, 0(s0)
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$a.3316
  .type T$a.3316, @function
# leaf false
T$a.3316:
.T$a.3316_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  ld a0, factorial.28
  lw a1, _32
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  jalr a2
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl h21_8
  .type h21_8, @function
# leaf false
h21_8:
.h21_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a1, s10
  mv s0, a0
  ld a1, 8(a1)
  beq s0, zero, .h21_8_1

.h21_8_2:
  addi a0, s0, -1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mul a0, s0, a0

.h21_8_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.h21_8_1:
  li a0, 1
  j .h21_8_3

  .p2align 2
  .text
  .globl aux9_5
  .type aux9_5, @function
# leaf false
aux9_5:
.aux9_5_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a1, s10
  ld a1, 8(a1)
  ld a1, 0(a1)
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$_32_14
  .type T$_32_14, @function
# leaf true
T$_32_14:
.T$_32_14_0:
  li a0, 5
  ret

  .p2align 2
  .text
  .globl f129_12
  .type f129_12, @function
# leaf false
f129_12:
.f129_12_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  ld a0, factorial.28
  mv s10, a0
  ld a1, 0(a0)
  li a0, 5
  jalr a1
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main37_19
  .type main37_19, @function
# leaf false
main37_19:
.main37_19_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call f129_12
  li a0, 10
  call g34_18
  call minimbt_print_int
  li a0, 31
  call g34_18
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl g34_18
  .type g34_18, @function
# leaf true
g34_18:
.g34_18_0:
  lw a1, a.33
  add a0, a0, a1
  ret

  .p2align 2
  .text
  .globl T$start_22
  .type T$start_22, @function
# leaf false
T$start_22:
.T$start_22_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main37_19
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl dummy1_0
  .type dummy1_0, @function
# leaf true
dummy1_0:
.dummy1_0_0:
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$factorial.2810
  la t5, factorial.28
  sd a0, 0(t5)
  call T$_32_14
  la t5, _32
  sw a0, 0(t5)
  call T$a.3316
  la t5, a.33
  sw a0, 0(t5)
  call T$start_22
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl _32
  .type _32, @object
_32:
  .zero 4
  .p2align 2
  .bss
  .globl a.33
  .type a.33, @object
a.33:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4
  .p2align 2
  .bss
  .globl factorial.28
  .type factorial.28, @object
factorial.28:
  .zero 8



Testing test/test_src/mandelbrot.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl main75_1
  .type main75_1, @function
# leaf false
main75_1:
.main75_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 40
  call mandelbrot1_0
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_12
  .type T$start_12, @function
# leaf false
T$start_12:
.T$start_12_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main75_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl iloop29_9
  .type iloop29_9, @function
# leaf false
iloop29_9:
.iloop29_9_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  fsd fs0, 24(sp)
  fsd fs1, 32(sp)
  fsd fs2, 40(sp)
  fsd fs3, 48(sp)
  mv s0, s10
  mv s1, a0
  fmv.d fs0, fa1
  fmv.d fa1, fa2
  fmv.d fa2, fa3
  fmv.d fs1, fa4
  fmv.d fs2, fa5
  ld a0, 8(s0)
  beq s1, zero, .iloop29_9_1

.iloop29_9_2:
  fsub.d fa1, fa1, fa2
  fadd.d fs3, fa1, fs1
  mv s10, a0
  ld a0, 0(a0)
  jalr a0
  fmadd.d fa1, fa0, fs0, fs2
  fmul.d fa2, fs3, fs3
  fmul.d fa3, fa1, fa1
  li a0, 4611686018427387904
  fmv.d.x fa0, a0
  li a0, 4611686018427387904
  fmv.d.x fa4, a0
  fmul.d fa0, fa0, fa4
  fmadd.d fa4, fa1, fa1, fa2
  fle.d a0, fa0, fa4
  bne a0, zero, .iloop29_9_3

.iloop29_9_4:
  addi a0, s1, -1
  mv s10, s0
  ld a1, 0(s0)
  fmv.d fa0, fs3
  fmv.d fa4, fs1
  fmv.d fa5, fs2
  jalr a1

.iloop29_9_5:

.iloop29_9_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  fld fs0, 24(sp)
  fld fs1, 32(sp)
  fld fs2, 40(sp)
  fld fs3, 48(sp)
  addi sp, sp, 64
  ret

.iloop29_9_1:
  li a0, 1
  call minimbt_print_int
  j .iloop29_9_6

.iloop29_9_3:
  mv a0, zero
  call minimbt_print_int
  j .iloop29_9_5

  .p2align 2
  .text
  .globl mandelbrot1_0
  .type mandelbrot1_0, @function
# leaf false
mandelbrot1_0:
.mandelbrot1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  la a2, dbl4_3
  sd a2, 0(a1)
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, yloop7_5
  sd a3, 0(a2)
  sd a0, 8(a2)
  sd a1, 16(a2)
  mv s10, a2
  ld a1, 0(a2)
  mv a0, zero
  jalr a1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl dbl4_3
  .type dbl4_3, @function
# leaf true
dbl4_3:
.dbl4_3_0:
  mv a0, s10
  fadd.d fa0, fa0, fa0
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_12
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl yloop7_5
  .type yloop7_5, @function
# leaf false
yloop7_5:
.yloop7_5_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s0, s10
  mv s1, a0
  lw a0, 8(s0)
  ld a1, 16(s0)
  bge s1, a0, .yloop7_5_1

.yloop7_5_2:
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, xloop10_7
  sd a3, 0(a2)
  sd a0, 8(a2)
  sd a1, 16(a2)
  mv s10, a2
  ld a2, 0(a2)
  mv a0, zero
  mv a1, s1
  jalr a2
  addi a0, s1, 1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1

.yloop7_5_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.yloop7_5_1:
  mv a0, zero
  j .yloop7_5_3

  .p2align 2
  .text
  .globl xloop10_7
  .type xloop10_7, @function
# leaf false
xloop10_7:
.xloop10_7_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  fsd fs0, 48(sp)
  mv s0, s10
  mv s1, a0
  mv s2, a1
  lw s3, 8(s0)
  ld s4, 16(s0)
  bge s1, s3, .xloop10_7_1

.xloop10_7_2:
  fcvt.d.w fa0, s1
  mv s10, s4
  ld a0, 0(s4)
  jalr a0
  fcvt.d.w fa1, s3
  fdiv.d fa0, fa0, fa1
  li a0, 4609434218613702656
  fmv.d.x fa1, a0
  fsub.d fs0, fa0, fa1
  fcvt.d.w fa0, s2
  mv s10, s4
  ld a0, 0(s4)
  jalr a0
  fcvt.d.w fa1, s3
  fdiv.d fa0, fa0, fa1
  li a0, 4607182418800017408
  fmv.d.x fa1, a0
  fsub.d fa5, fa0, fa1
  addi a0, s11, -16
  andi a0, a0, -8
  mv s11, a0
  la a1, iloop29_9
  sd a1, 0(a0)
  sd s4, 8(a0)
  mv s10, a0
  ld a1, 0(a0)
  li a0, 1000
  fmv.d.x fa0, zero
  fmv.d.x fa1, zero
  fmv.d.x fa2, zero
  fmv.d.x fa3, zero
  fmv.d fa4, fs0
  jalr a1
  addi a0, s1, 1
  mv s10, s0
  ld a2, 0(s0)
  mv a1, s2
  jalr a2

.xloop10_7_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  fld fs0, 48(sp)
  addi sp, sp, 64
  ret

.xloop10_7_1:
  call minimbt_print_endline
  mv a0, zero
  j .xloop10_7_3

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/matmul-flat.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti64
  .type memseti64, @function
memseti64:
  blez a1, .memseti64_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti64_b0:
  sd a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti64_b0
.memseti64_b1:
  ret

  .p2align 2
  .text
  .globl memsetf64
  .type memsetf64, @function
memsetf64:
  blez a1, .memsetf64_b1
  slli a1, a1, 3
  add a1, a1, a0
.memsetf64_b0:
  fsd fa0, 0(a0)
  addi a0, a0, 8
  bne a0, a1, .memsetf64_b0
.memsetf64_b1:
  ret

  .p2align 2
  .text
  .globl main85_4
  .type main85_4, @function
# leaf false
main85_4:
.main85_4_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  addi a0, s11, 0
  andi s0, a0, -8
  mv s11, s0
  fmv.d.x fa0, zero
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a1, init_arr89_10
  sd a1, 0(a0)
  addi a1, s11, -16
  andi s1, a1, -8
  mv s11, s1
  la a1, make_arr103_12
  sd a1, 0(s1)
  sd a0, 8(s1)
  mv s10, s1
  ld a3, 0(s1)
  li a0, 2
  li a1, 3
  mv a2, s0
  jalr a3
  mv s2, a0
  mv s10, s1
  ld a3, 0(s1)
  li a0, 3
  li a1, 2
  mv a2, s0
  jalr a3
  mv s3, a0
  mv s10, s1
  ld a3, 0(s1)
  li a0, 2
  li a1, 2
  mv a2, s0
  jalr a3
  mv s0, a0
  ld a0, 0(s2)
  li a1, 4607182418800017408
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 0(s2)
  li a1, 4611686018427387904
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 0(s2)
  li a1, 4613937818241073152
  fmv.d.x fa0, a1
  fsd fa0, 16(a0)
  ld a0, 8(s2)
  li a1, 4616189618054758400
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 8(s2)
  li a1, 4617315517961601024
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 8(s2)
  li a1, 4618441417868443648
  fmv.d.x fa0, a1
  fsd fa0, 16(a0)
  ld a0, 0(s3)
  li a1, 4619567317775286272
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 0(s3)
  li a1, 4620693217682128896
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 8(s3)
  li a1, 4621256167635550208
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 8(s3)
  li a1, 4621819117588971520
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 16(s3)
  li a1, 4622382067542392832
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 16(s3)
  li a1, 4622945017495814144
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  li a0, 2
  li a1, 3
  li a2, 2
  mv a3, s2
  mv a4, s3
  mv a5, s0
  call mul68_3
  ld a0, 0(s0)
  fld fa0, 0(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  call minimbt_print_endline
  ld a0, 0(s0)
  fld fa0, 8(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  call minimbt_print_endline
  ld a0, 8(s0)
  fld fa0, 0(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  call minimbt_print_endline
  ld a0, 8(s0)
  fld fa0, 8(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl init_arr89_10
  .type init_arr89_10, @function
# leaf false
init_arr89_10:
.init_arr89_10_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  mv s1, s10
  mv s3, a0
  mv s0, a1
  mv s2, a2
  blt s3, zero, .init_arr89_10_2

.init_arr89_10_1:
  slliw a0, s0, 3
  sub a0, s11, a0
  andi s4, a0, -8
  mv s11, s4
  fmv.d.x fa0, zero
  mv a1, s0
  mv a0, s4
  call memsetf64
  slliw a0, s3, 3
  add a0, s2, a0
  sd s4, 0(a0)
  addi a0, s3, -1
  mv s10, s1
  ld a3, 0(s1)
  mv a1, s0
  mv a2, s2
  jalr a3

.init_arr89_10_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  addi sp, sp, 48
  ret

.init_arr89_10_2:
  mv a0, zero
  j .init_arr89_10_3

  .p2align 2
  .text
  .globl loop228_1
  .type loop228_1, @function
# leaf false
loop228_1:
.loop228_1_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2
  mv s3, a3
  mv s4, a4
  mv s5, a5
  blt s2, zero, .loop228_1_2

.loop228_1_1:
  addi a2, s1, -1
  mv a0, s0
  mv a1, s2
  mv a3, s3
  mv a4, s4
  mv a5, s5
  call loop31_0
  addi a2, s2, -1
  mv a0, s0
  mv a1, s1
  mv a3, s3
  mv a4, s4
  mv a5, s5
  call loop228_1

.loop228_1_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  addi sp, sp, 64
  ret

.loop228_1_2:
  mv a0, zero
  j .loop228_1_3

  .p2align 2
  .text
  .globl loop148_2
  .type loop148_2, @function
# leaf false
loop148_2:
.loop148_2_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2
  mv s3, a3
  mv s4, a4
  mv s5, a5
  blt s0, zero, .loop148_2_2

.loop148_2_1:
  addi a2, s2, -1
  mv a0, s0
  mv a1, s1
  mv a3, s3
  mv a4, s4
  mv a5, s5
  call loop228_1
  addi a0, s0, -1
  mv a1, s1
  mv a2, s2
  mv a3, s3
  mv a4, s4
  mv a5, s5
  call loop148_2

.loop148_2_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  addi sp, sp, 64
  ret

.loop148_2_2:
  mv a0, zero
  j .loop148_2_3

  .p2align 2
  .text
  .globl T$start_14
  .type T$start_14, @function
# leaf false
T$start_14:
.T$start_14_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main85_4
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl mul68_3
  .type mul68_3, @function
# leaf false
mul68_3:
.mul68_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a0, a0, -1
  call loop148_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl make_arr103_12
  .type make_arr103_12, @function
# leaf false
make_arr103_12:
.make_arr103_12_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv a3, s10
  mv s0, a0
  mv s1, a1
  ld s2, 8(a3)
  slliw a0, s0, 3
  sub a0, s11, a0
  andi s3, a0, -8
  mv s11, s3
  mv a1, s0
  mv a0, s3
  call memseti64
  addi a0, s0, -1
  mv s10, s2
  ld a3, 0(s2)
  mv a1, s1
  mv a2, s3
  jalr a3
  mv a0, s3
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl loop31_0
  .type loop31_0, @function
# leaf false
loop31_0:
.loop31_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  blt a2, zero, .loop31_0_2

.loop31_0_1:
  slliw a6, a0, 3
  add a6, a5, a6
  ld a6, 0(a6)
  slliw a7, a0, 3
  add a7, a5, a7
  ld a7, 0(a7)
  slliw t0, a1, 3
  add a7, a7, t0
  fld fa0, 0(a7)
  slliw a7, a0, 3
  add a7, a3, a7
  ld a7, 0(a7)
  slliw t0, a2, 3
  add a7, a7, t0
  fld fa1, 0(a7)
  slliw a7, a2, 3
  add a7, a4, a7
  ld a7, 0(a7)
  slliw t0, a1, 3
  add a7, a7, t0
  fld fa2, 0(a7)
  fmadd.d fa0, fa1, fa2, fa0
  slliw a7, a1, 3
  add a6, a6, a7
  fsd fa0, 0(a6)
  addi a2, a2, -1
  call loop31_0

.loop31_0_3:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.loop31_0_2:
  mv a0, zero
  j .loop31_0_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_14
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/matmul.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti64
  .type memseti64, @function
memseti64:
  blez a1, .memseti64_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti64_b0:
  sd a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti64_b0
.memseti64_b1:
  ret

  .p2align 2
  .text
  .globl memsetf64
  .type memsetf64, @function
memsetf64:
  blez a1, .memsetf64_b1
  slli a1, a1, 3
  add a1, a1, a0
.memsetf64_b0:
  fsd fa0, 0(a0)
  addi a0, a0, 8
  bne a0, a1, .memsetf64_b0
.memsetf64_b1:
  ret

  .p2align 2
  .text
  .globl matmul1_0
  .type matmul1_0, @function
# leaf false
matmul1_0:
.matmul1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a6, s11, -48
  andi a6, a6, -8
  mv s11, a6
  la a7, loop114_3
  sd a7, 0(a6)
  sd a5, 8(a6)
  sd a3, 16(a6)
  sd a4, 24(a6)
  sd a1, 32(a6)
  sd a2, 40(a6)
  addi a0, a0, -1
  mv s10, a6
  ld a1, 0(a6)
  jalr a1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl init_arr63_12
  .type init_arr63_12, @function
# leaf false
init_arr63_12:
.init_arr63_12_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv s0, s10
  mv s2, a0
  lw a1, 8(s0)
  ld s1, 16(s0)
  blt s2, zero, .init_arr63_12_2

.init_arr63_12_1:
  slliw a0, a1, 3
  sub a0, s11, a0
  andi s3, a0, -8
  mv s11, s3
  fmv.d.x fa0, zero
  mv a0, s3
  call memsetf64
  slliw a0, s2, 3
  add a0, s1, a0
  sd s3, 0(a0)
  addi a0, s2, -1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1

.init_arr63_12_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

.init_arr63_12_2:
  mv a0, zero
  j .init_arr63_12_3

  .p2align 2
  .text
  .globl loop218_5
  .type loop218_5, @function
# leaf false
loop218_5:
.loop218_5_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s0, s10
  mv s1, a0
  ld a1, 8(s0)
  lw a4, 16(s0)
  ld a2, 24(s0)
  ld a5, 32(s0)
  lw a3, 40(s0)
  blt s1, zero, .loop218_5_2

.loop218_5_1:
  addi a0, s11, -48
  andi a0, a0, -8
  mv s11, a0
  la a6, loop322_7
  sd a6, 0(a0)
  sd a1, 8(a0)
  sd a4, 16(a0)
  sd s1, 24(a0)
  sd a2, 32(a0)
  sd a5, 40(a0)
  addi a1, a3, -1
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  jalr a2
  addi a0, s1, -1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1

.loop218_5_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.loop218_5_2:
  mv a0, zero
  j .loop218_5_3

  .p2align 2
  .text
  .globl loop322_7
  .type loop322_7, @function
# leaf false
loop322_7:
.loop322_7_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a4, s10
  mv a7, a0
  ld a1, 8(a4)
  lw a5, 16(a4)
  lw a2, 24(a4)
  ld a6, 32(a4)
  ld a3, 40(a4)
  blt a7, zero, .loop322_7_2

.loop322_7_1:
  slliw a0, a5, 3
  add a0, a1, a0
  ld a0, 0(a0)
  slliw t0, a5, 3
  add a1, a1, t0
  ld a1, 0(a1)
  slliw t0, a2, 3
  add a1, a1, t0
  fld fa0, 0(a1)
  slliw a1, a5, 3
  add a1, a6, a1
  ld a1, 0(a1)
  slliw a5, a7, 3
  add a1, a1, a5
  fld fa1, 0(a1)
  slliw a1, a7, 3
  add a1, a3, a1
  ld a1, 0(a1)
  slliw a3, a2, 3
  add a1, a1, a3
  fld fa2, 0(a1)
  fmadd.d fa0, fa1, fa2, fa0
  slliw a1, a2, 3
  add a0, a0, a1
  fsd fa0, 0(a0)
  addi a0, a7, -1
  mv s10, a4
  ld a1, 0(a4)
  jalr a1

.loop322_7_3:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.loop322_7_2:
  mv a0, zero
  j .loop322_7_3

  .p2align 2
  .text
  .globl main53_1
  .type main53_1, @function
# leaf false
main53_1:
.main53_1_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  addi a0, s11, 0
  andi a0, a0, -8
  mv s11, a0
  fmv.d.x fa0, zero
  addi a1, s11, -16
  andi s0, a1, -8
  mv s11, s0
  la a1, gen_arr57_10
  sd a1, 0(s0)
  sd a0, 8(s0)
  mv s10, s0
  ld a2, 0(s0)
  li a0, 2
  li a1, 3
  jalr a2
  mv s1, a0
  mv s10, s0
  ld a2, 0(s0)
  li a0, 3
  li a1, 2
  jalr a2
  mv s2, a0
  mv s10, s0
  ld a2, 0(s0)
  li a0, 2
  li a1, 2
  jalr a2
  mv s0, a0
  ld a0, 0(s1)
  li a1, 4607182418800017408
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 0(s1)
  li a1, 4611686018427387904
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 0(s1)
  li a1, 4613937818241073152
  fmv.d.x fa0, a1
  fsd fa0, 16(a0)
  ld a0, 8(s1)
  li a1, 4616189618054758400
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 8(s1)
  li a1, 4617315517961601024
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 8(s1)
  li a1, 4618441417868443648
  fmv.d.x fa0, a1
  fsd fa0, 16(a0)
  ld a0, 0(s2)
  li a1, 4619567317775286272
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 0(s2)
  li a1, 4620693217682128896
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 8(s2)
  li a1, 4621256167635550208
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 8(s2)
  li a1, 4621819117588971520
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 16(s2)
  li a1, 4622382067542392832
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 16(s2)
  li a1, 4622945017495814144
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  li a0, 2
  li a1, 3
  li a2, 2
  mv a3, s1
  mv a4, s2
  mv a5, s0
  call matmul1_0
  ld a0, 0(s0)
  fld fa0, 0(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  call minimbt_print_endline
  ld a0, 0(s0)
  fld fa0, 8(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  call minimbt_print_endline
  ld a0, 8(s0)
  fld fa0, 0(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  call minimbt_print_endline
  ld a0, 8(s0)
  fld fa0, 8(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl loop114_3
  .type loop114_3, @function
# leaf false
loop114_3:
.loop114_3_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s0, s10
  mv s1, a0
  ld a0, 8(s0)
  ld a2, 16(s0)
  ld a3, 24(s0)
  lw a4, 32(s0)
  lw a5, 40(s0)
  blt s1, zero, .loop114_3_2

.loop114_3_1:
  addi a1, s11, -48
  andi a1, a1, -8
  mv s11, a1
  la a6, loop218_5
  sd a6, 0(a1)
  sd a0, 8(a1)
  sd s1, 16(a1)
  sd a2, 24(a1)
  sd a3, 32(a1)
  sd a4, 40(a1)
  addi a0, a5, -1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  addi a0, s1, -1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1

.loop114_3_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.loop114_3_2:
  mv a0, zero
  j .loop114_3_3

  .p2align 2
  .text
  .globl T$start_14
  .type T$start_14, @function
# leaf false
T$start_14:
.T$start_14_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main53_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl gen_arr57_10
  .type gen_arr57_10, @function
# leaf false
gen_arr57_10:
.gen_arr57_10_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv a2, s10
  mv s0, a0
  mv s1, a1
  ld a2, 8(a2)
  slliw a0, s0, 3
  sub a0, s11, a0
  andi s2, a0, -8
  mv s11, s2
  mv a1, s0
  mv a0, s2
  call memseti64
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  la a1, init_arr63_12
  sd a1, 0(a0)
  sd s1, 8(a0)
  sd s2, 16(a0)
  addi a1, s0, -1
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  jalr a2
  mv a0, s2
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_14
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/multiple-init.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl T$_11_10
  .type T$_11_10, @function
# leaf true
T$_11_10:
.T$_11_10_0:
  li a0, 1
  ret

  .p2align 2
  .text
  .globl init21_20
  .type init21_20, @function
# leaf true
init21_20:
.init21_20_0:
  ld a0, len.3
  li a1, 3
  sw a1, 0(a0)
  ld a0, len2.13
  li a1, 4
  sw a1, 0(a0)
  mv a0, zero
  ret

  .p2align 2
  .text
  .globl T$_1_0
  .type T$_1_0, @function
# leaf true
T$_1_0:
.T$_1_0_0:
  li a0, 1
  ret

  .p2align 2
  .text
  .globl T$_2_2
  .type T$_2_2, @function
# leaf true
T$_2_2:
.T$_2_2_0:
  mv a0, zero
  ret

  .p2align 2
  .text
  .globl main32_24
  .type main32_24, @function
# leaf false
main32_24:
.main32_24_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  ld a0, len.3
  lw a0, 0(a0)
  call minimbt_print_int
  call minimbt_print_endline
  ld a0, len2.13
  lw a0, 0(a0)
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$len.34
  .type T$len.34, @function
# leaf false
T$len.34:
.T$len.34_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  lw a0, _1
  lw a2, _2
  slliw a1, a0, 2
  sub a1, s11, a1
  andi s0, a1, -8
  mv s11, s0
  mv a1, a0
  mv a0, s0
  call memseti32
  mv a0, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$len2.1314
  .type T$len2.1314, @function
# leaf false
T$len2.1314:
.T$len2.1314_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  lw a0, _11
  lw a2, _12
  slliw a1, a0, 2
  sub a1, s11, a1
  andi s0, a1, -8
  mv s11, s0
  mv a1, a0
  mv a0, s0
  call memseti32
  mv a0, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$_20_18
  .type T$_20_18, @function
# leaf false
T$_20_18:
.T$_20_18_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call init14_16
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_26
  .type T$start_26, @function
# leaf false
T$start_26:
.T$start_26_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main32_24
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$_31_22
  .type T$_31_22, @function
# leaf false
T$_31_22:
.T$_31_22_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call init21_20
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$_10_8
  .type T$_10_8, @function
# leaf false
T$_10_8:
.T$_10_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call init4_6
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$_12_12
  .type T$_12_12, @function
# leaf true
T$_12_12:
.T$_12_12_0:
  mv a0, zero
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$_1_0
  la t5, _1
  sw a0, 0(t5)
  call T$_2_2
  la t5, _2
  sw a0, 0(t5)
  call T$len.34
  la t5, len.3
  sd a0, 0(t5)
  call T$_10_8
  call T$_11_10
  la t5, _11
  sw a0, 0(t5)
  call T$_12_12
  la t5, _12
  sw a0, 0(t5)
  call T$len2.1314
  la t5, len2.13
  sd a0, 0(t5)
  call T$_20_18
  call T$_31_22
  call T$start_26
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl init4_6
  .type init4_6, @function
# leaf true
init4_6:
.init4_6_0:
  ld a0, len.3
  li a1, 1
  sw a1, 0(a0)
  mv a0, zero
  ret

  .p2align 2
  .text
  .globl init14_16
  .type init14_16, @function
# leaf true
init14_16:
.init14_16_0:
  ld a0, len2.13
  li a1, 2
  sw a1, 0(a0)
  mv a0, zero
  ret

__end_text:
  .p2align 2
  .bss
  .globl _11
  .type _11, @object
_11:
  .zero 4
  .p2align 2
  .bss
  .globl _10
  .type _10, @object
_10:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4
  .p2align 2
  .bss
  .globl _1
  .type _1, @object
_1:
  .zero 4
  .p2align 2
  .bss
  .globl len.3
  .type len.3, @object
len.3:
  .zero 8
  .p2align 2
  .bss
  .globl _31
  .type _31, @object
_31:
  .zero 4
  .p2align 2
  .bss
  .globl _20
  .type _20, @object
_20:
  .zero 4
  .p2align 2
  .bss
  .globl _2
  .type _2, @object
_2:
  .zero 4
  .p2align 2
  .bss
  .globl _12
  .type _12, @object
_12:
  .zero 4
  .p2align 2
  .bss
  .globl len2.13
  .type len2.13, @object
len2.13:
  .zero 8



Testing test/test_src/non-tail-if.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main1_0
  .type main1_0, @function
# leaf false
main1_0:
.main1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 4608218246714312622
  fmv.d.x fa0, a0
  fcvt.w.d a4, fa0, rtz
  li a0, 4616820122002590269
  fmv.d.x fa0, a0
  fcvt.w.d a2, fa0, rtz
  li a0, 4620569368692376207
  fmv.d.x fa0, a0
  fneg.d fa0, fa0
  fcvt.w.d a3, fa0, rtz
  blt a3, zero, .main1_0_2

.main1_0_1:
  mv a1, a4

.main1_0_3:
  blt zero, a4, .main1_0_5

.main1_0_4:
  mv a0, a2

.main1_0_6:
  add a0, a1, a0
  blt a2, zero, .main1_0_8

.main1_0_7:
  mv a1, a3

.main1_0_9:
  add a0, a0, a1
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.main1_0_2:
  mv a1, a2
  j .main1_0_3

.main1_0_5:
  mv a0, a3
  j .main1_0_6

.main1_0_8:
  mv a1, a4
  j .main1_0_9

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main1_0
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/non-tail-if2.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main1_0
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f2_2
  .type f2_2, @function
# leaf true
f2_2:
.f2_2_0:
  mv a0, s10
  li a0, 12345
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main1_0
  .type main1_0, @function
# leaf false
main1_0:
.main1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a1, f2_2
  sd a1, 0(a0)
  addi a1, s11, -40
  andi s0, a1, -8
  mv s11, s0
  li a1, 3
  sw a1, 0(s0)
  sw a1, 4(s0)
  sw a1, 8(s0)
  sw a1, 12(s0)
  sw a1, 16(s0)
  sw a1, 20(s0)
  sw a1, 24(s0)
  sw a1, 28(s0)
  sw a1, 32(s0)
  sw a1, 36(s0)
  lw a1, 0(s0)
  li a2, 3
  bne a1, a2, .main1_0_2

.main1_0_1:
  mv s10, a0
  ld a0, 0(a0)
  jalr a0
  lw a1, 4(s0)
  add a0, a0, a1
  li a1, 67890
  add a0, a0, a1

.main1_0_3:
  call minimbt_print_int
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.main1_0_2:
  li a0, 7
  j .main1_0_3

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/print.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main1_0
  .type main1_0, @function
# leaf false
main1_0:
.main1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 123
  call minimbt_print_int
  li a0, -456
  call minimbt_print_int
  addi a0, zero, 789
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main1_0
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/quicksort-std.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl g37_11
  .type g37_11, @function
# leaf false
g37_11:
.g37_11_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s0, s10
  mv s1, a0
  lw a1, 8(s0)
  ld a0, 16(s0)
  addi a1, a1, 1
  blt s1, a1, .g37_11_2

.g37_11_1:
  slliw a1, s1, 2
  add a1, a0, a1
  lw a1, 0(a1)
  addi a2, s1, -1
  slliw a2, a2, 2
  add a2, a0, a2
  lw a2, 0(a2)
  addi a2, a2, -1
  blt a2, a1, .g37_11_4

.g37_11_3:
  addi a2, s1, -1
  mv a1, s1
  call swap1_0
  addi a0, s1, -1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1

.g37_11_5:

.g37_11_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.g37_11_2:
  mv a0, zero
  j .g37_11_6

.g37_11_4:
  mv a0, zero
  j .g37_11_5

  .p2align 2
  .text
  .globl insertion_sort30_2
  .type insertion_sort30_2, @function
# leaf false
insertion_sort30_2:
.insertion_sort30_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a3, s11, -24
  andi a3, a3, -8
  mv s11, a3
  la a4, g37_11
  sd a4, 0(a3)
  sd a1, 8(a3)
  sd a0, 16(a3)
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  la a4, f54_13
  sd a4, 0(a0)
  sd a2, 8(a0)
  sd a3, 16(a0)
  addi a1, a1, 1
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  jalr a2
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl choose_pivot129_4
  .type choose_pivot129_4, @function
# leaf false
choose_pivot129_4:
.choose_pivot129_4_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  mv a3, a1
  mv a1, a2
  addi a2, s11, -4
  andi s0, a2, -8
  mv s11, s0
  sw zero, 0(s0)
  sub a1, a1, a3
  li a2, 4
  div a2, a1, a2
  li a4, 2
  mul a2, a2, a4
  add s1, a3, a2
  li a2, 8
  blt a1, a2, .choose_pivot129_4_2

.choose_pivot129_4_1:
  li a2, 4
  div a2, a1, a2
  li a4, 1
  mul a2, a2, a4
  add s4, a3, a2
  li a2, 4
  div a2, a1, a2
  li a4, 3
  mul a2, a2, a4
  add s2, a3, a2
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, sort_2157_19
  sd a3, 0(a2)
  sd a0, 8(a2)
  sd s0, 16(a2)
  addi a0, s11, -16
  andi s3, a0, -8
  mv s11, s3
  la a0, sort_3173_21
  sd a0, 0(s3)
  sd a2, 8(s3)
  addi a0, a1, -1
  li a1, 50
  blt a0, a1, .choose_pivot129_4_4

.choose_pivot129_4_3:
  addi a0, s4, -1
  addi a2, s4, 1
  mv s10, s3
  ld a3, 0(s3)
  mv a1, s4
  jalr a3
  addi a0, s1, -1
  addi a2, s1, 1
  mv s10, s3
  ld a3, 0(s3)
  mv a1, s1
  jalr a3
  addi a0, s2, -1
  addi a2, s2, 1
  mv s10, s3
  ld a3, 0(s3)
  mv a1, s2
  jalr a3

.choose_pivot129_4_5:
  mv s10, s3
  ld a3, 0(s3)
  mv a0, s4
  mv a1, s1
  mv a2, s2
  jalr a3

.choose_pivot129_4_6:
  lw a0, 0(s0)
  bne a0, zero, .choose_pivot129_4_8

.choose_pivot129_4_7:
  li a0, 1

.choose_pivot129_4_9:
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  sw s1, 0(a1)
  sw a0, 4(a1)
  mv a0, a1
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  addi sp, sp, 48
  ret

.choose_pivot129_4_2:
  mv a0, zero
  j .choose_pivot129_4_6

.choose_pivot129_4_4:
  mv a0, zero
  j .choose_pivot129_4_5

.choose_pivot129_4_8:
  mv a0, zero
  j .choose_pivot129_4_9

  .p2align 2
  .text
  .globl quick_sort210_5
  .type quick_sort210_5, @function
# leaf false
quick_sort210_5:
.quick_sort210_5_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2
  sub a0, s2, s1
  li a1, 16
  bge a1, a0, .quick_sort210_5_1

.quick_sort210_5_2:
  mv a0, s0
  mv a1, s1
  mv a2, s2
  call choose_pivot129_4
  lw a1, 0(a0)
  mv a0, s0
  mv a2, s1
  mv a3, s2
  call partition65_3
  lw s3, 0(a0)
  mv a0, s0
  mv a1, s1
  mv a2, s3
  call quick_sort210_5
  addi a1, s3, 1
  mv a0, s0
  mv a2, s2
  call quick_sort210_5

.quick_sort210_5_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

.quick_sort210_5_1:
  mv a0, s0
  mv a1, s1
  mv a2, s2
  call insertion_sort30_2
  j .quick_sort210_5_3

  .p2align 2
  .text
  .globl main239_7
  .type main239_7, @function
# leaf false
main239_7:
.main239_7_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  call minimbt_read_int
  mv s0, a0
  slliw a0, s0, 2
  sub a0, s11, a0
  andi s1, a0, -8
  mv s11, s1
  mv a1, s0
  mv a0, s1
  mv a2, zero
  call memseti32
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  la a1, input243_26
  sd a1, 0(a0)
  sd s0, 8(a0)
  sd s1, 16(a0)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  mv a0, s1
  mv a1, s0
  call sort233_6
  mv a0, s1
  mv a1, zero
  mv a2, s0
  call output14_1
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl output14_1
  .type output14_1, @function
# leaf false
output14_1:
.output14_1_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s2, a0
  mv s0, a1
  mv s1, a2
  addi a0, s1, -1
  blt a0, s0, .output14_1_2

.output14_1_1:
  slliw a0, s0, 2
  add a0, s2, a0
  lw a0, 0(a0)
  call minimbt_print_int
  call minimbt_print_endline
  addi a1, s0, 1
  mv a0, s2
  mv a2, s1
  call output14_1

.output14_1_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.output14_1_2:
  mv a0, zero
  j .output14_1_3

  .p2align 2
  .text
  .globl input243_26
  .type input243_26, @function
# leaf false
input243_26:
.input243_26_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, s10
  mv s2, a0
  lw a0, 8(s0)
  ld s1, 16(s0)
  addi a0, a0, -1
  blt a0, s2, .input243_26_2

.input243_26_1:
  call minimbt_read_int
  slliw a1, s2, 2
  add a1, s1, a1
  sw a0, 0(a1)
  addi a0, s2, 1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1

.input243_26_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.input243_26_2:
  mv a0, zero
  j .input243_26_3

  .p2align 2
  .text
  .globl sort_3173_21
  .type sort_3173_21, @function
# leaf false
sort_3173_21:
.sort_3173_21_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv a3, s10
  mv s0, a0
  mv s1, a1
  mv s2, a2
  ld s3, 8(a3)
  mv s10, s3
  ld a2, 0(s3)
  mv a0, s0
  mv a1, s1
  jalr a2
  mv s10, s3
  ld a2, 0(s3)
  mv a0, s1
  mv a1, s2
  jalr a2
  mv s10, s3
  ld a2, 0(s3)
  mv a0, s0
  mv a1, s1
  jalr a2
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl sort233_6
  .type sort233_6, @function
# leaf false
sort233_6:
.sort233_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a2, a1
  mv a1, zero
  call quick_sort210_5
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl sort_2157_19
  .type sort_2157_19, @function
# leaf false
sort_2157_19:
.sort_2157_19_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a4, s10
  mv a2, a0
  mv a3, a1
  ld a0, 8(a4)
  ld s0, 16(a4)
  slliw a1, a3, 2
  add a1, a0, a1
  lw a1, 0(a1)
  slliw a4, a2, 2
  add a4, a0, a4
  lw a4, 0(a4)
  addi a4, a4, -1
  blt a4, a1, .sort_2157_19_2

.sort_2157_19_1:
  mv a1, a2
  mv a2, a3
  call swap1_0
  lw a0, 0(s0)
  addi a0, a0, 1
  sw a0, 0(s0)
  mv a0, zero

.sort_2157_19_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.sort_2157_19_2:
  mv a0, zero
  j .sort_2157_19_3

  .p2align 2
  .text
  .globl swap1_0
  .type swap1_0, @function
# leaf true
swap1_0:
.swap1_0_0:
  slliw a3, a1, 2
  add a3, a0, a3
  lw a3, 0(a3)
  slliw a4, a2, 2
  add a4, a0, a4
  lw a4, 0(a4)
  slliw a1, a1, 2
  add a1, a0, a1
  sw a4, 0(a1)
  slliw a1, a2, 2
  add a0, a0, a1
  sw a3, 0(a0)
  mv a0, zero
  ret

  .p2align 2
  .text
  .globl f54_13
  .type f54_13, @function
# leaf false
f54_13:
.f54_13_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s0, s10
  mv s1, a0
  lw a1, 8(s0)
  ld a0, 16(s0)
  addi a1, a1, -1
  blt a1, s1, .f54_13_2

.f54_13_1:
  mv s10, a0
  ld a1, 0(a0)
  mv a0, s1
  jalr a1
  addi a0, s1, 1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1

.f54_13_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.f54_13_2:
  mv a0, zero
  j .f54_13_3

  .p2align 2
  .text
  .globl T$start_28
  .type T$start_28, @function
# leaf false
T$start_28:
.T$start_28_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main239_7
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux86_16
  .type aux86_16, @function
# leaf false
aux86_16:
.aux86_16_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv s0, s10
  mv s1, a0
  lw a1, 8(s0)
  ld a0, 16(s0)
  lw a2, 24(s0)
  ld s2, 32(s0)
  ld s3, 40(s0)
  addi a1, a1, -2
  blt a1, s1, .aux86_16_2

.aux86_16_1:
  slliw a1, s1, 2
  add a1, a0, a1
  lw a1, 0(a1)
  addi a2, a2, -1
  blt a2, a1, .aux86_16_4

.aux86_16_3:
  lw a1, 0(s2)
  beq a1, s1, .aux86_16_5

.aux86_16_6:
  lw a1, 0(s2)
  mv a2, s1
  call swap1_0
  sw zero, 0(s3)
  mv a0, zero

.aux86_16_7:
  lw a0, 0(s2)
  addi a0, a0, 1
  sw a0, 0(s2)
  mv a0, zero

.aux86_16_8:
  addi a0, s1, 1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1

.aux86_16_9:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

.aux86_16_2:
  mv a0, zero
  j .aux86_16_9

.aux86_16_4:
  mv a0, zero
  j .aux86_16_8

.aux86_16_5:
  mv a0, zero
  j .aux86_16_7

  .p2align 2
  .text
  .globl partition65_3
  .type partition65_3, @function
# leaf false
partition65_3:
.partition65_3_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  mv s1, a0
  mv s2, a2
  mv s3, a3
  addi a2, s3, -1
  mv a0, s1
  call swap1_0
  addi a0, s3, -1
  slliw a0, a0, 2
  add a0, s1, a0
  lw a0, 0(a0)
  addi a1, s11, -4
  andi s4, a1, -8
  mv s11, s4
  sw s2, 0(s4)
  addi a1, s11, -4
  andi s0, a1, -8
  mv s11, s0
  li a1, 1
  sw a1, 0(s0)
  addi a1, s11, -48
  andi a2, a1, -8
  mv s11, a2
  la a1, aux86_16
  sd a1, 0(a2)
  sd s3, 8(a2)
  sd s1, 16(a2)
  sd a0, 24(a2)
  sd s4, 32(a2)
  sd s0, 40(a2)
  mv s10, a2
  ld a1, 0(a2)
  mv a0, s2
  jalr a1
  lw a1, 0(s4)
  addi a2, s3, -1
  mv a0, s1
  call swap1_0
  lw a2, 0(s4)
  lw a0, 0(s0)
  li a1, 1
  bne a0, a1, .partition65_3_2

.partition65_3_1:
  li a0, 1
  mv a1, a0

.partition65_3_3:
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  sw a2, 0(a0)
  sw a1, 4(a0)
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  addi sp, sp, 48
  ret

.partition65_3_2:
  mv a1, zero
  j .partition65_3_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_28
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/quicksort.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl output97_12
  .type output97_12, @function
# leaf false
output97_12:
.output97_12_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s0, s10
  mv s1, a0
  lw a0, 8(s0)
  ld a1, 16(s0)
  addi a0, a0, -1
  blt a0, s1, .output97_12_2

.output97_12_1:
  slliw a0, s1, 2
  add a0, a1, a0
  lw a0, 0(a0)
  call minimbt_print_int
  call minimbt_print_endline
  addi a0, s1, 1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1

.output97_12_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.output97_12_2:
  mv a0, zero
  j .output97_12_3

  .p2align 2
  .text
  .globl quicksort59_2
  .type quicksort59_2, @function
# leaf false
quicksort59_2:
.quicksort59_2_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv s2, a0
  mv s0, a1
  mv s1, a2
  addi a0, s1, -1
  blt a0, s0, .quicksort59_2_2

.quicksort59_2_1:
  mv a0, s2
  mv a1, s0
  mv a2, s1
  call partition14_1
  mv s3, a0
  addi a2, s3, -1
  mv a0, s2
  mv a1, s0
  call quicksort59_2
  addi a1, s3, 1
  mv a0, s2
  mv a2, s1
  call quicksort59_2

.quicksort59_2_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

.quicksort59_2_2:
  mv a0, zero
  j .quicksort59_2_3

  .p2align 2
  .text
  .globl input79_10
  .type input79_10, @function
# leaf false
input79_10:
.input79_10_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, s10
  mv s2, a0
  lw a0, 8(s0)
  ld s1, 16(s0)
  addi a0, a0, -1
  blt a0, s2, .input79_10_2

.input79_10_1:
  call minimbt_read_int
  slliw a1, s2, 2
  add a1, s1, a1
  sw a0, 0(a1)
  addi a0, s2, 1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1

.input79_10_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.input79_10_2:
  mv a0, zero
  j .input79_10_3

  .p2align 2
  .text
  .globl main75_3
  .type main75_3, @function
# leaf false
main75_3:
.main75_3_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  call minimbt_read_int
  mv s0, a0
  slliw a0, s0, 2
  sub a0, s11, a0
  andi s1, a0, -8
  mv s11, s1
  mv a1, s0
  mv a0, s1
  mv a2, zero
  call memseti32
  addi a0, s11, -24
  andi a1, a0, -8
  mv s11, a1
  la a0, input79_10
  sd a0, 0(a1)
  sd s0, 8(a1)
  sd s1, 16(a1)
  mv s10, a1
  ld a1, 0(a1)
  mv a0, zero
  jalr a1
  addi a2, s0, -1
  mv a0, s1
  mv a1, zero
  call quicksort59_2
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  la a1, output97_12
  sd a1, 0(a0)
  sd s0, 8(a0)
  sd s1, 16(a0)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$start_14
  .type T$start_14, @function
# leaf false
T$start_14:
.T$start_14_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main75_3
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl partition14_1
  .type partition14_1, @function
# leaf false
partition14_1:
.partition14_1_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, a0
  mv a0, a1
  mv s1, a2
  slliw a1, s1, 2
  add a1, s0, a1
  lw a1, 0(a1)
  addi a2, a0, -1
  addi a3, s11, -4
  andi s2, a3, -8
  mv s11, s2
  sw a2, 0(s2)
  addi a2, s11, -40
  andi a2, a2, -8
  mv s11, a2
  la a3, l26_6
  sd a3, 0(a2)
  sd s1, 8(a2)
  sd s0, 16(a2)
  sd a1, 24(a2)
  sd s2, 32(a2)
  mv s10, a2
  ld a1, 0(a2)
  jalr a1
  lw a0, 0(s2)
  addi a0, a0, 1
  sw a0, 0(s2)
  lw a1, 0(s2)
  mv a0, s0
  mv a2, s1
  call swap1_0
  lw a0, 0(s2)
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl swap1_0
  .type swap1_0, @function
# leaf true
swap1_0:
.swap1_0_0:
  slliw a3, a1, 2
  add a3, a0, a3
  lw a3, 0(a3)
  slliw a4, a2, 2
  add a4, a0, a4
  lw a4, 0(a4)
  slliw a1, a1, 2
  add a1, a0, a1
  sw a4, 0(a1)
  slliw a1, a2, 2
  add a0, a0, a1
  sw a3, 0(a0)
  mv a0, zero
  ret

  .p2align 2
  .text
  .globl l26_6
  .type l26_6, @function
# leaf false
l26_6:
.l26_6_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s0, s10
  mv s1, a0
  lw a0, 8(s0)
  ld a1, 16(s0)
  lw a2, 24(s0)
  ld a3, 32(s0)
  addi a0, a0, -1
  blt a0, s1, .l26_6_2

.l26_6_1:
  slliw a0, s1, 2
  add a0, a1, a0
  lw a0, 0(a0)
  blt a2, a0, .l26_6_4

.l26_6_3:
  lw a0, 0(a3)
  addi a0, a0, 1
  sw a0, 0(a3)
  lw a2, 0(a3)
  mv a0, a1
  mv a1, a2
  mv a2, s1
  call swap1_0

.l26_6_5:
  addi a0, s1, 1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1

.l26_6_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.l26_6_2:
  mv a0, zero
  j .l26_6_6

.l26_6_4:
  mv a0, zero
  j .l26_6_5

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_14
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/read.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main1_0
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f2_2
  .type f2_2, @function
# leaf false
f2_2:
.f2_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv s0, s10
  call minimbt_read_int
  li a1, -2147483648
  beq a0, a1, .f2_2_1

.f2_2_2:
  call minimbt_print_int
  mv s10, s0
  ld a0, 0(s0)
  jalr a0

.f2_2_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.f2_2_1:
  call minimbt_print_int
  j .f2_2_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main1_0
  .type main1_0, @function
# leaf false
main1_0:
.main1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a1, f2_2
  sd a1, 0(a0)
  mv s10, a0
  ld a0, 0(a0)
  jalr a0
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/shuffle.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl bar26_1
  .type bar26_1, @function
# leaf false
bar26_1:
.bar26_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a6, a0
  mv a0, a1
  mv a7, a2
  mv a2, a3
  mv a3, a4
  mv a4, a5
  mv a1, a6
  mv a5, a7
  call foo1_0
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main39_2
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main39_2
  .type main39_2, @function
# leaf false
main39_2:
.main39_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 1
  li a1, 2
  li a2, 3
  li a3, 4
  li a4, 5
  li a5, 6
  call bar26_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl foo1_0
  .type foo1_0, @function
# leaf false
foo1_0:
.foo1_0_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  mv s0, a1
  mv s1, a2
  mv s2, a3
  mv s3, a4
  mv s4, a5
  call minimbt_print_int
  mv a0, s0
  call minimbt_print_int
  mv a0, s1
  call minimbt_print_int
  mv a0, s2
  call minimbt_print_int
  mv a0, s3
  call minimbt_print_int
  mv a0, s4
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  addi sp, sp, 48
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/spill.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl main83_1
  .type main83_1, @function
# leaf false
main83_1:
.main83_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 1
  li a1, 2
  li a2, 3
  li a3, 4
  call f1_0
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  addi sp, sp, -208
  sd s0, 0(sp)
  sd s1, 8(sp)
  sd s2, 16(sp)
  sd s3, 24(sp)
  sd s4, 32(sp)
  sd s5, 40(sp)
  sd s6, 48(sp)
  sd s7, 56(sp)
  sd s8, 64(sp)
  sd s9, 72(sp)
  sd s10, 80(sp)
  add a4, a0, a1
  add a5, a0, a2
  add a6, a0, a3
  add a7, a1, a2
  add t0, a1, a3
  add t1, a2, a3
  add t2, a4, a5
  add t3, a4, a6
  add t4, a4, a7
  add s0, a4, t0
  add s1, a4, t1
  add s2, a5, a6
  add s3, a5, a7
  add s4, a5, t0
  add s5, a5, t1
  add s6, a6, a7
  add s7, a6, t0
  add s8, a6, t1
  add s9, a7, t0
  add s10, a7, t1
  add t5, t0, t1
  sw t5, 88(sp)
  add t5, t2, t3
  sw t5, 96(sp)
  add t5, t2, t4
  sw t5, 104(sp)
  add t5, t2, s0
  sw t5, 112(sp)
  add t5, t2, s1
  sw t5, 120(sp)
  add t5, t2, s2
  sw t5, 128(sp)
  add t5, t2, s3
  sw t5, 136(sp)
  add t5, t2, s4
  sw t5, 144(sp)
  add t5, t2, s5
  sw t5, 152(sp)
  add t5, t2, s6
  sw t5, 160(sp)
  add t5, t2, s7
  sw t5, 168(sp)
  add t5, t2, s8
  sw t5, 176(sp)
  add t5, t2, s9
  sw t5, 184(sp)
  add t5, t2, s10
  sw t5, 192(sp)
  lw t5, 88(sp)
  add t5, t2, t5
  sw t5, 200(sp)
  add a0, a0, a1
  add a0, a0, a2
  add a0, a0, a3
  add a0, a0, a4
  add a0, a0, a5
  add a0, a0, a6
  add a0, a0, a7
  add a0, a0, t0
  add a0, a0, t1
  add a0, a0, t2
  add a0, a0, t3
  add a0, a0, t4
  add a0, a0, s0
  add a0, a0, s1
  add a0, a0, s2
  add a0, a0, s3
  add a0, a0, s4
  add a0, a0, s5
  add a0, a0, s6
  add a0, a0, s7
  add a0, a0, s8
  add a0, a0, s9
  add a0, a0, s10
  lw t5, 88(sp)
  add a0, a0, t5
  lw t5, 96(sp)
  add a0, a0, t5
  lw t5, 104(sp)
  add a0, a0, t5
  lw t5, 112(sp)
  add a0, a0, t5
  lw t5, 120(sp)
  add a0, a0, t5
  lw t5, 128(sp)
  add a0, a0, t5
  lw t5, 136(sp)
  add a0, a0, t5
  lw t5, 144(sp)
  add a0, a0, t5
  lw t5, 152(sp)
  add a0, a0, t5
  lw t5, 160(sp)
  add a0, a0, t5
  lw t5, 168(sp)
  add a0, a0, t5
  lw t5, 176(sp)
  add a0, a0, t5
  lw t5, 184(sp)
  add a0, a0, t5
  lw t5, 192(sp)
  add a0, a0, t5
  lw t5, 200(sp)
  add a0, a0, t5
  neg a0, a0
  ld s0, 0(sp)
  ld s1, 8(sp)
  ld s2, 16(sp)
  ld s3, 24(sp)
  ld s4, 32(sp)
  ld s5, 40(sp)
  ld s6, 48(sp)
  ld s7, 56(sp)
  ld s8, 64(sp)
  ld s9, 72(sp)
  ld s10, 80(sp)
  addi sp, sp, 208
  ret

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main83_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/spill2.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  li a0, 12345
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main6_2
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main6_2
  .type main6_2, @function
# leaf false
main6_2:
.main6_2_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  addi a0, s11, -40
  andi s0, a0, -8
  mv s11, s0
  li a0, 1
  sw a0, 0(s0)
  sw a0, 4(s0)
  sw a0, 8(s0)
  sw a0, 12(s0)
  sw a0, 16(s0)
  sw a0, 20(s0)
  sw a0, 24(s0)
  sw a0, 28(s0)
  sw a0, 32(s0)
  sw a0, 36(s0)
  call f1_0
  mv s1, a0
  lw s3, 0(s0)
  add s4, s3, s3
  add a5, s4, s4
  add t3, a5, a5
  add t0, t3, t3
  add a3, t0, t0
  add a0, a3, a3
  add a7, a0, a0
  add a4, a7, a7
  add a2, a4, a4
  add s2, a2, a2
  add a1, s2, s2
  add a6, a1, a1
  add t1, a6, a6
  add t4, t1, t1
  add t2, t4, t4
  lw s0, 4(s0)
  beq s0, zero, .main6_2_1

.main6_2_2:
  add s0, s3, s4
  add a5, s0, a5
  add a5, a5, t3
  add a5, a5, t0
  add a3, a5, a3
  add a0, a3, a0
  add a0, a0, a7
  add a0, a0, a4
  add a0, a0, a2
  add a0, a0, s2
  add a0, a0, a1
  add a0, a0, a6
  add a0, a0, t1
  add a0, a0, t4
  add a0, a0, t2
  add a0, a0, s1

.main6_2_3:
  call minimbt_print_int
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  addi sp, sp, 48
  ret

.main6_2_1:
  li a0, 67890
  call g2_1
  j .main6_2_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl g2_1
  .type g2_1, @function
# leaf true
g2_1:
.g2_1_0:
  addi a0, a0, 1
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/spill3.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  addi sp, sp, -192
  sd s0, 0(sp)
  sd s1, 8(sp)
  sd s2, 16(sp)
  sd s3, 24(sp)
  sd s4, 32(sp)
  sd s5, 40(sp)
  sd s6, 48(sp)
  sd s7, 56(sp)
  sd s8, 64(sp)
  sd s9, 72(sp)
  sd s10, 80(sp)
  addi a1, a0, 1
  addi a2, a1, 1
  addi a3, a2, 1
  addi a4, a3, 1
  addi a5, a4, 1
  addi a6, a5, 1
  addi a7, a6, 1
  addi t0, a7, 1
  addi t1, t0, 1
  addi t2, t1, 1
  addi t3, t2, 1
  addi t4, t3, 1
  addi s0, t4, 1
  addi s1, s0, 1
  addi s2, s1, 1
  addi s3, s2, 1
  addi s4, s3, 1
  addi s5, s4, 1
  add s6, s5, a1
  add s7, s6, a2
  add s8, s7, a3
  add s9, s8, a4
  add s10, s9, a5
  add t5, s10, a6
  sw t5, 88(sp)
  lw t5, 88(sp)
  add t5, t5, a7
  sw t5, 96(sp)
  lw t5, 96(sp)
  add t5, t5, t0
  sw t5, 104(sp)
  lw t5, 104(sp)
  add t5, t5, t1
  sw t5, 112(sp)
  lw t5, 112(sp)
  add t5, t5, t2
  sw t5, 120(sp)
  lw t5, 120(sp)
  add t5, t5, t3
  sw t5, 128(sp)
  lw t5, 128(sp)
  add t5, t5, t4
  sw t5, 136(sp)
  lw t5, 136(sp)
  add t5, t5, s0
  sw t5, 144(sp)
  lw t5, 144(sp)
  add t5, t5, s1
  sw t5, 152(sp)
  lw t5, 152(sp)
  add t5, t5, s2
  sw t5, 160(sp)
  lw t5, 160(sp)
  add t5, t5, s3
  sw t5, 168(sp)
  lw t5, 168(sp)
  add t5, t5, s4
  sw t5, 176(sp)
  lw t5, 176(sp)
  add t5, t5, a0
  sw t5, 184(sp)
  add a1, a1, a2
  add a1, a1, a3
  add a1, a1, a4
  add a1, a1, a5
  add a1, a1, a6
  add a1, a1, a7
  add a1, a1, t0
  add a1, a1, t1
  add a1, a1, t2
  add a1, a1, t3
  add a1, a1, t4
  add a1, a1, s0
  add a1, a1, s1
  add a1, a1, s2
  add a1, a1, s3
  add a1, a1, s4
  add a1, a1, s5
  add a1, a1, s6
  add a1, a1, s7
  add a1, a1, s8
  add a1, a1, s9
  add a1, a1, s10
  lw t5, 88(sp)
  add a1, a1, t5
  lw t5, 96(sp)
  add a1, a1, t5
  lw t5, 104(sp)
  add a1, a1, t5
  lw t5, 112(sp)
  add a1, a1, t5
  lw t5, 120(sp)
  add a1, a1, t5
  lw t5, 128(sp)
  add a1, a1, t5
  lw t5, 136(sp)
  add a1, a1, t5
  lw t5, 144(sp)
  add a1, a1, t5
  lw t5, 152(sp)
  add a1, a1, t5
  lw t5, 160(sp)
  add a1, a1, t5
  lw t5, 168(sp)
  add a1, a1, t5
  lw t5, 176(sp)
  add a1, a1, t5
  lw t5, 184(sp)
  add a1, a1, t5
  add a0, a1, a0
  ld s0, 0(sp)
  ld s1, 8(sp)
  ld s2, 16(sp)
  ld s3, 24(sp)
  ld s4, 32(sp)
  ld s5, 40(sp)
  ld s6, 48(sp)
  ld s7, 56(sp)
  ld s8, 64(sp)
  ld s9, 72(sp)
  ld s10, 80(sp)
  addi sp, sp, 192
  ret

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main93_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main93_1
  .type main93_1, @function
# leaf false
main93_1:
.main93_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a0, zero
  call f1_0
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/sum-prefix-escape.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main25_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl sum_nested8_3
  .type sum_nested8_3, @function
# leaf false
sum_nested8_3:
.sum_nested8_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a2, s10
  lw a3, 8(a2)
  ld a4, 16(a2)
  ld a5, 24(a2)
  addi a3, a3, -1
  blt a3, a1, .sum_nested8_3_2

.sum_nested8_3_1:
  slliw a3, a1, 2
  add a3, a4, a3
  lw a3, 0(a3)
  add a0, a0, a3
  slliw a3, a1, 2
  add a3, a5, a3
  sw a0, 0(a3)
  addi a1, a1, 1
  mv s10, a2
  ld a2, 0(a2)
  jalr a2

.sum_nested8_3_3:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.sum_nested8_3_2:
  mv a0, zero
  j .sum_nested8_3_3

  .p2align 2
  .text
  .globl sum_prefix1_0
  .type sum_prefix1_0, @function
# leaf false
sum_prefix1_0:
.sum_prefix1_0_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, a0
  mv s1, a1
  slliw a0, s1, 2
  sub a0, s11, a0
  andi s2, a0, -8
  mv s11, s2
  mv a1, s1
  mv a0, s2
  mv a2, zero
  call memseti32
  addi a0, s11, -32
  andi a0, a0, -8
  mv s11, a0
  la a1, sum_nested8_3
  sd a1, 0(a0)
  sd s1, 8(a0)
  sd s0, 16(a0)
  sd s2, 24(a0)
  mv s10, a0
  ld a2, 0(a0)
  mv a0, zero
  mv a1, zero
  jalr a2
  mv a0, s2
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main25_1
  .type main25_1, @function
# leaf false
main25_1:
.main25_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a0, s11, -40
  andi a0, a0, -8
  mv s11, a0
  li a1, 4
  sw a1, 0(a0)
  sw a1, 4(a0)
  sw a1, 8(a0)
  sw a1, 12(a0)
  sw a1, 16(a0)
  sw a1, 20(a0)
  sw a1, 24(a0)
  sw a1, 28(a0)
  sw a1, 32(a0)
  sw a1, 36(a0)
  li a1, 10
  call sum_prefix1_0
  lw a0, 0(a0)
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/sum-tail.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main10_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main10_1
  .type main10_1, @function
# leaf false
main10_1:
.main10_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a0, zero
  li a1, 10000
  call sum1_0
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl sum1_0
  .type sum1_0, @function
# leaf false
sum1_0:
.sum1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  bge zero, a1, .sum1_0_1

.sum1_0_2:
  add a0, a0, a1
  addi a1, a1, -1
  call sum1_0

.sum1_0_3:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.sum1_0_1:
  j .sum1_0_3

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/sum.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl main8_1
  .type main8_1, @function
# leaf false
main8_1:
.main8_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 10000
  call sum1_0
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main8_1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl sum1_0
  .type sum1_0, @function
# leaf false
sum1_0:
.sum1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv s0, a0
  bge zero, s0, .sum1_0_1

.sum1_0_2:
  addi a0, s0, -1
  call sum1_0
  add a0, a0, s0

.sum1_0_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.sum1_0_1:
  mv a0, zero
  j .sum1_0_3

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/longer-cases/isort.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl fill_buffer14_2
  .type fill_buffer14_2, @function
# leaf false
fill_buffer14_2:
.fill_buffer14_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, aux19_9
  sd a3, 0(a2)
  sd a1, 8(a2)
  sd a0, 16(a2)
  mv s10, a2
  ld a2, 0(a2)
  mv a0, zero
  li a1, 12345
  jalr a2
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl isort33_3
  .type isort33_3, @function
# leaf false
isort33_3:
.isort33_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a2, s11, -8
  andi a2, a2, -8
  mv s11, a2
  la a3, insert38_12
  sd a3, 0(a2)
  addi a3, s11, -32
  andi a3, a3, -8
  mv s11, a3
  la a4, aux60_14
  sd a4, 0(a3)
  sd a1, 8(a3)
  sd a2, 16(a3)
  sd a0, 24(a3)
  mv s10, a3
  ld a1, 0(a3)
  li a0, 1
  jalr a1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux73_17
  .type aux73_17, @function
# leaf false
aux73_17:
.aux73_17_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s0, s10
  mv s1, a0
  lw a0, 8(s0)
  ld a1, 16(s0)
  beq s1, a0, .aux73_17_1

.aux73_17_2:
  slliw a0, s1, 2
  add a0, a1, a0
  lw a0, 0(a0)
  call minimbt_print_int
  li a0, 32
  call minimbt_print_char
  addi a0, s1, 1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1

.aux73_17_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.aux73_17_1:
  mv a0, zero
  j .aux73_17_3

  .p2align 2
  .text
  .globl main85_5
  .type main85_5, @function
# leaf false
main85_5:
.main85_5_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  addi a0, s11, -400
  andi s0, a0, -8
  mv s11, s0
  li a0, 100
  mv a1, a0
  mv a0, s0
  mv a2, zero
  call memseti32
  mv a0, s0
  li a1, 100
  call fill_buffer14_2
  mv a0, s0
  li a1, 100
  call isort33_3
  mv a0, s0
  li a1, 100
  call print_array68_4
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl insert38_12
  .type insert38_12, @function
# leaf false
insert38_12:
.insert38_12_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a2, s10
  beq a1, zero, .insert38_12_1

.insert38_12_2:
  addi a3, a1, -1
  slliw a3, a3, 2
  add a3, a0, a3
  lw a3, 0(a3)
  slliw a4, a1, 2
  add a4, a0, a4
  lw a4, 0(a4)
  bge a4, a3, .insert38_12_3

.insert38_12_4:
  slliw a3, a1, 2
  add a3, a0, a3
  lw a3, 0(a3)
  addi a4, a1, -1
  slliw a4, a4, 2
  add a4, a0, a4
  lw a4, 0(a4)
  slliw a5, a1, 2
  add a5, a0, a5
  sw a4, 0(a5)
  addi a4, a1, -1
  slliw a4, a4, 2
  add a4, a0, a4
  sw a3, 0(a4)
  addi a1, a1, -1
  mv s10, a2
  ld a2, 0(a2)
  jalr a2

.insert38_12_5:

.insert38_12_6:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.insert38_12_1:
  mv a0, zero
  j .insert38_12_6

.insert38_12_3:
  mv a0, zero
  j .insert38_12_5

  .p2align 2
  .text
  .globl aux19_9
  .type aux19_9, @function
# leaf false
aux19_9:
.aux19_9_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, s10
  mv s2, a0
  mv a0, a1
  lw a1, 8(s0)
  ld s1, 16(s0)
  beq s2, a1, .aux19_9_1

.aux19_9_2:
  call random1_0
  li a1, 65537
  call modulo7_1
  mv a1, a0
  slliw a0, s2, 2
  add a0, s1, a0
  sw a1, 0(a0)
  addi a0, s2, 1
  mv s10, s0
  ld a2, 0(s0)
  jalr a2

.aux19_9_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.aux19_9_1:
  mv a0, zero
  j .aux19_9_3

  .p2align 2
  .text
  .globl T$start_20
  .type T$start_20, @function
# leaf false
T$start_20:
.T$start_20_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main85_5
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux60_14
  .type aux60_14, @function
# leaf false
aux60_14:
.aux60_14_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s0, s10
  mv s1, a0
  lw a2, 8(s0)
  ld a1, 16(s0)
  ld a0, 24(s0)
  beq s1, a2, .aux60_14_1

.aux60_14_2:
  mv s10, a1
  ld a2, 0(a1)
  mv a1, s1
  jalr a2
  addi a0, s1, 1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1

.aux60_14_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.aux60_14_1:
  mv a0, zero
  j .aux60_14_3

  .p2align 2
  .text
  .globl modulo7_1
  .type modulo7_1, @function
# leaf true
modulo7_1:
.modulo7_1_0:
  div a2, a0, a1
  mul a1, a2, a1
  sub a0, a0, a1
  ret

  .p2align 2
  .text
  .globl print_array68_4
  .type print_array68_4, @function
# leaf false
print_array68_4:
.print_array68_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, aux73_17
  sd a3, 0(a2)
  sd a1, 8(a2)
  sd a0, 16(a2)
  mv s10, a2
  ld a1, 0(a2)
  mv a0, zero
  jalr a1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl random1_0
  .type random1_0, @function
# leaf true
random1_0:
.random1_0_0:
  li a1, 75
  mul a0, a0, a1
  addi a0, a0, 74
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_20
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/longer-cases/julia.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl T$c_re.58
  .type T$c_re.58, @function
# leaf true
T$c_re.58:
.T$c_re.58_0:
  fld fa0, _4
  fneg.d fa0, fa0
  ret

  .p2align 2
  .text
  .globl T$iter.34
  .type T$iter.34, @function
# leaf true
T$iter.34:
.T$iter.34_0:
  li a0, 300
  ret

  .p2align 2
  .text
  .globl T$limit_sq.22
  .type T$limit_sq.22, @function
# leaf true
T$limit_sq.22:
.T$limit_sq.22_0:
  fld fa0, limit.1
  fld fa1, limit.1
  fmul.d fa0, fa0, fa1
  ret

  .p2align 2
  .text
  .globl main_loop30_14
  .type main_loop30_14, @function
# leaf false
main_loop30_14:
.main_loop30_14_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2
  mv s3, a3
  mv s4, a4
  beq s3, s1, .main_loop30_14_1

.main_loop30_14_2:
  beq s2, s0, .main_loop30_14_3

.main_loop30_14_4:
  fcvt.d.w fa0, s2
  li a0, 4613937818241073152
  fmv.d.x fa1, a0
  fmul.d fa0, fa1, fa0
  fcvt.d.w fa1, s0
  fdiv.d fa0, fa0, fa1
  li a0, 4609434218613702656
  fmv.d.x fa1, a0
  fsub.d fa0, fa0, fa1
  fneg.d fa0, fa0
  fcvt.d.w fa1, s3
  li a0, 4613937818241073152
  fmv.d.x fa2, a0
  fmul.d fa1, fa2, fa1
  fcvt.d.w fa2, s1
  fdiv.d fa1, fa1, fa2
  li a0, 4609434218613702656
  fmv.d.x fa2, a0
  fsub.d fa1, fa1, fa2
  mv a0, zero
  call calc_pixel7_12
  mul a1, s3, s0
  add s5, a1, s2
  call clamp25_13
  slliw a1, s5, 2
  add a1, s4, a1
  sw a0, 0(a1)
  addi a2, s2, 1
  mv a0, s0
  mv a1, s1
  mv a3, s3
  mv a4, s4
  call main_loop30_14

.main_loop30_14_5:

.main_loop30_14_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  addi sp, sp, 64
  ret

.main_loop30_14_1:
  mv a0, zero
  j .main_loop30_14_6

.main_loop30_14_3:
  addi a3, s3, 1
  mv a0, s0
  mv a1, s1
  mv a2, zero
  mv a4, s4
  call main_loop30_14
  j .main_loop30_14_5

  .p2align 2
  .text
  .globl T$limit.10
  .type T$limit.10, @function
# leaf true
T$limit.10:
.T$limit.10_0:
  li a0, 4611686018427387904
  fmv.d.x fa0, a0
  ret

  .p2align 2
  .text
  .globl T$_4_6
  .type T$_4_6, @function
# leaf true
T$_4_6:
.T$_4_6_0:
  li a0, 4593527504729830064
  fmv.d.x fa0, a0
  ret

  .p2align 2
  .text
  .globl print_loop68_15
  .type print_loop68_15, @function
# leaf false
print_loop68_15:
.print_loop68_15_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  mv s4, a0
  mv s0, a1
  mv s2, a2
  mv s1, a3
  mv s3, a4
  beq s1, s0, .print_loop68_15_1

.print_loop68_15_2:
  beq s2, s4, .print_loop68_15_3

.print_loop68_15_4:
  mul a0, s1, s4
  add a0, a0, s2
  slliw a0, a0, 2
  add a0, s3, a0
  lw a0, 0(a0)
  addi a0, a0, 48
  call minimbt_print_char
  addi a2, s2, 1
  mv a0, s4
  mv a1, s0
  mv a3, s1
  mv a4, s3
  call print_loop68_15

.print_loop68_15_5:

.print_loop68_15_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  addi sp, sp, 48
  ret

.print_loop68_15_1:
  mv a0, zero
  j .print_loop68_15_6

.print_loop68_15_3:
  li a0, 10
  call minimbt_print_char
  addi a3, s1, 1
  mv a0, s4
  mv a1, s0
  mv a2, zero
  mv a4, s3
  call print_loop68_15
  j .print_loop68_15_5

  .p2align 2
  .text
  .globl T$c_im.610
  .type T$c_im.610, @function
# leaf true
T$c_im.610:
.T$c_im.610_0:
  li a0, 4604885582990058455
  fmv.d.x fa0, a0
  ret

  .p2align 2
  .text
  .globl clamp25_13
  .type clamp25_13, @function
# leaf true
clamp25_13:
.clamp25_13_0:
  mv a1, a0
  bge zero, a1, .clamp25_13_1

.clamp25_13_2:
  li a0, 48
  blt a1, a0, .clamp25_13_4

.clamp25_13_3:
  li a0, 48

.clamp25_13_5:

.clamp25_13_6:
  ret

.clamp25_13_1:
  mv a0, zero
  j .clamp25_13_6

.clamp25_13_4:
  mv a0, a1
  j .clamp25_13_5

  .p2align 2
  .text
  .globl calc_pixel7_12
  .type calc_pixel7_12, @function
# leaf false
calc_pixel7_12:
.calc_pixel7_12_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  fmv.d fa2, fa0
  mv a1, a0
  fmul.d fa0, fa2, fa2
  lw a0, iter.3
  beq a1, a0, .calc_pixel7_12_1

.calc_pixel7_12_2:
  fmadd.d fa3, fa1, fa1, fa0
  fld fa4, limit_sq.2
  fle.d a0, fa4, fa3
  bne a0, zero, .calc_pixel7_12_3

.calc_pixel7_12_4:
  li a0, 4611686018427387904
  fmv.d.x fa3, a0
  fmul.d fa2, fa3, fa2
  fld fa3, c_im.6
  fmadd.d fa2, fa2, fa1, fa3
  fnmsub.d fa0, fa1, fa1, fa0
  fld fa1, c_re.5
  fadd.d fa0, fa0, fa1
  addi a0, a1, 1
  fmv.d fa1, fa2
  call calc_pixel7_12

.calc_pixel7_12_5:

.calc_pixel7_12_6:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.calc_pixel7_12_1:
  lw a0, iter.3
  j .calc_pixel7_12_6

.calc_pixel7_12_3:
  mv a0, a1
  j .calc_pixel7_12_5

  .p2align 2
  .text
  .globl T$start_22
  .type T$start_22, @function
# leaf false
T$start_22:
.T$start_22_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main94_16
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$limit.10
  la t5, limit.1
  fsd fa0, 0(t5)
  call T$limit_sq.22
  la t5, limit_sq.2
  fsd fa0, 0(t5)
  call T$iter.34
  la t5, iter.3
  sw a0, 0(t5)
  call T$_4_6
  la t5, _4
  fsd fa0, 0(t5)
  call T$c_re.58
  la t5, c_re.5
  fsd fa0, 0(t5)
  call T$c_im.610
  la t5, c_im.6
  fsd fa0, 0(t5)
  call T$start_22
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main94_16
  .type main94_16, @function
# leaf false
main94_16:
.main94_16_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  call minimbt_read_int
  mv s0, a0
  li a0, 2
  mul s1, s0, a0
  mul a0, s1, s0
  slliw a1, a0, 2
  sub a1, s11, a1
  andi s2, a1, -8
  mv s11, s2
  mv a1, a0
  mv a0, s2
  mv a2, zero
  call memseti32
  mv a0, s1
  mv a1, s0
  mv a2, zero
  mv a3, zero
  mv a4, s2
  call main_loop30_14
  mv a0, s1
  mv a1, s0
  mv a2, zero
  mv a3, zero
  mv a4, s2
  call print_loop68_15
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl iter.3
  .type iter.3, @object
iter.3:
  .zero 4
  .p2align 2
  .bss
  .globl c_im.6
  .type c_im.6, @object
c_im.6:
  .zero 8
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4
  .p2align 2
  .bss
  .globl _4
  .type _4, @object
_4:
  .zero 8
  .p2align 2
  .bss
  .globl limit_sq.2
  .type limit_sq.2, @object
limit_sq.2:
  .zero 8
  .p2align 2
  .bss
  .globl limit.1
  .type limit.1, @object
limit.1:
  .zero 8
  .p2align 2
  .bss
  .globl c_re.5
  .type c_re.5, @object
c_re.5:
  .zero 8



Testing test/longer-cases/mem-fib.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl T$start_12
  .type T$start_12, @function
# leaf false
T$start_12:
.T$start_12_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main33_5
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$unmem_magic.10
  .type T$unmem_magic.10, @function
# leaf true
T$unmem_magic.10:
.T$unmem_magic.10_0:
  li a0, -1919810
  ret

  .p2align 2
  .text
  .globl mem2_2
  .type mem2_2, @function
# leaf false
mem2_2:
.mem2_2_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s0, a0
  mv a0, a1
  lw a2, unmem_magic.1
  slliw a1, a0, 2
  sub a1, s11, a1
  andi s1, a1, -8
  mv s11, s1
  mv a1, a0
  mv a0, s1
  call memseti32
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  la a1, memed8_7
  sd a1, 0(a0)
  sd s1, 8(a0)
  sd s0, 16(a0)
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main33_5
  .type main33_5, @function
# leaf false
main33_5:
.main33_5_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call minimbt_read_int
  call fib27_4
  call minimbt_print_int
  li a0, 10
  call minimbt_print_char
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl fib27_4
  .type fib27_4, @function
# leaf false
fib27_4:
.fib27_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv s0, a0
  addi a1, s0, 1
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a2, mem_fib15_3
  sd a2, 0(a0)
  call mem2_2
  mv s10, a0
  ld a1, 0(a0)
  mv a0, s0
  jalr a1
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$unmem_magic.10
  la t5, unmem_magic.1
  sw a0, 0(t5)
  call T$start_12
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl memed8_7
  .type memed8_7, @function
# leaf false
memed8_7:
.memed8_7_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv a1, s10
  mv s0, a0
  ld s1, 8(a1)
  ld a0, 16(a1)
  slliw a2, s0, 2
  add a2, s1, a2
  lw a2, 0(a2)
  lw a3, unmem_magic.1
  bne a2, a3, .memed8_7_2

.memed8_7_1:
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  mv a1, s0
  jalr a2
  slliw a1, s0, 2
  add a1, s1, a1
  sw a0, 0(a1)

.memed8_7_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.memed8_7_2:
  slliw a0, s0, 2
  add a0, s1, a0
  lw a0, 0(a0)
  j .memed8_7_3

  .p2align 2
  .text
  .globl mem_fib15_3
  .type mem_fib15_3, @function
# leaf false
mem_fib15_3:
.mem_fib15_3_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, a0
  mv s1, a1
  li a0, 1
  bge a0, s1, .mem_fib15_3_1

.mem_fib15_3_2:
  addi a0, s1, -1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  mv s2, a0
  addi a0, s1, -2
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  add a0, s2, a0

.mem_fib15_3_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.mem_fib15_3_1:
  mv a0, s1
  j .mem_fib15_3_3

__end_text:
  .p2align 2
  .bss
  .globl unmem_magic.1
  .type unmem_magic.1, @object
unmem_magic.1:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/longer-cases/stream.mbt
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl add102_27
  .type add102_27, @function
# leaf true
add102_27:
.add102_27_0:
  mv a2, s10
  add a0, a0, a1
  ret

  .p2align 2
  .text
  .globl aux46_17
  .type aux46_17, @function
# leaf false
aux46_17:
.aux46_17_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a1, s10
  ld a0, 8(a1)
  ld s0, 16(a1)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  lw a1, 0(a0)
  lw a0, 4(a0)
  bne a1, zero, .aux46_17_2

.aux46_17_1:
  mv s10, s0
  ld a1, 0(s0)
  mv a0, zero
  jalr a1

.aux46_17_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.aux46_17_2:
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  li a2, 1
  sw a2, 0(a1)
  sw a0, 4(a1)
  mv a0, a1
  j .aux46_17_3

  .p2align 2
  .text
  .globl aux25_14
  .type aux25_14, @function
# leaf false
aux25_14:
.aux25_14_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, s10
  ld a0, 8(s0)
  ld s1, 16(s0)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  mv a1, a0
  lw a0, 0(a1)
  lw s2, 4(a1)
  beq a0, zero, .aux25_14_1

.aux25_14_2:
  mv s10, s1
  ld a1, 0(s1)
  mv a0, s2
  jalr a1
  bne a0, zero, .aux25_14_4

.aux25_14_3:
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  li a1, 1
  sw a1, 0(a0)
  sw s2, 4(a0)

.aux25_14_5:

.aux25_14_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.aux25_14_1:
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux25_14_6

.aux25_14_4:
  mv s10, s0
  ld a1, 0(s0)
  mv a0, zero
  jalr a1
  j .aux25_14_5

  .p2align 2
  .text
  .globl main120_9
  .type main120_9, @function
# leaf false
main120_9:
.main120_9_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a0, zero
  li a1, 100
  call range58_3
  mv s0, a0
  mv a0, zero
  li a1, 1000
  call range58_3
  mv a1, a0
  mv a0, s0
  call concat41_2
  mv s0, a0
  li a0, 1
  call addx78_4
  mv a1, a0
  mv a0, s0
  call map1_0
  mv s0, a0
  li a0, 50
  call gt108_7
  mv a1, a0
  mv a0, s0
  call filter20_1
  mv s0, a0
  li a0, 1200
  call le114_8
  mv a1, a0
  mv a0, s0
  call filter20_1
  call sum99_6
  call minimbt_print_int
  li a0, 10
  call minimbt_print_char
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux6_11
  .type aux6_11, @function
# leaf false
aux6_11:
.aux6_11_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a1, s10
  ld a0, 8(a1)
  ld s0, 16(a1)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  lw a1, 0(a0)
  lw a0, 4(a0)
  beq a1, zero, .aux6_11_1

.aux6_11_2:
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  li a2, 1
  sw a2, 0(a1)
  sw a0, 4(a1)
  mv a0, a1

.aux6_11_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.aux6_11_1:
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux6_11_3

  .p2align 2
  .text
  .globl map1_0
  .type map1_0, @function
# leaf true
map1_0:
.map1_0_0:
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, aux6_11
  sd a3, 0(a2)
  sd a0, 8(a2)
  sd a1, 16(a2)
  mv a0, a2
  ret

  .p2align 2
  .text
  .globl addx78_4
  .type addx78_4, @function
# leaf true
addx78_4:
.addx78_4_0:
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, aux81_23
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  ret

  .p2align 2
  .text
  .globl le114_8
  .type le114_8, @function
# leaf true
le114_8:
.le114_8_0:
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, aux117_33
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  ret

  .p2align 2
  .text
  .globl gt108_7
  .type gt108_7, @function
# leaf true
gt108_7:
.gt108_7_0:
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, aux111_30
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  ret

  .p2align 2
  .text
  .globl aux111_30
  .type aux111_30, @function
# leaf true
aux111_30:
.aux111_30_0:
  mv a1, s10
  lw a1, 8(a1)
  blt a0, a1, .aux111_30_2

.aux111_30_1:
  mv a0, zero

.aux111_30_3:
  ret

.aux111_30_2:
  li a0, 1
  j .aux111_30_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_36
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl sum99_6
  .type sum99_6, @function
# leaf false
sum99_6:
.sum99_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  la a2, add102_27
  sd a2, 0(a1)
  mv a2, zero
  call fold84_5
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl filter20_1
  .type filter20_1, @function
# leaf true
filter20_1:
.filter20_1_0:
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, aux25_14
  sd a3, 0(a2)
  sd a0, 8(a2)
  sd a1, 16(a2)
  mv a0, a2
  ret

  .p2align 2
  .text
  .globl aux81_23
  .type aux81_23, @function
# leaf true
aux81_23:
.aux81_23_0:
  mv a1, s10
  lw a1, 8(a1)
  add a0, a1, a0
  ret

  .p2align 2
  .text
  .globl aux117_33
  .type aux117_33, @function
# leaf true
aux117_33:
.aux117_33_0:
  mv a1, s10
  lw a1, 8(a1)
  blt a1, a0, .aux117_33_2

.aux117_33_1:
  mv a0, zero

.aux117_33_3:
  ret

.aux117_33_2:
  li a0, 1
  j .aux117_33_3

  .p2align 2
  .text
  .globl T$start_36
  .type T$start_36, @function
# leaf false
T$start_36:
.T$start_36_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main120_9
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl range58_3
  .type range58_3, @function
# leaf true
range58_3:
.range58_3_0:
  addi a2, s11, -4
  andi a2, a2, -8
  mv s11, a2
  sw a0, 0(a2)
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  la a3, aux65_20
  sd a3, 0(a0)
  sd a2, 8(a0)
  sd a1, 16(a0)
  ret

  .p2align 2
  .text
  .globl concat41_2
  .type concat41_2, @function
# leaf true
concat41_2:
.concat41_2_0:
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, aux46_17
  sd a3, 0(a2)
  sd a0, 8(a2)
  sd a1, 16(a2)
  mv a0, a2
  ret

  .p2align 2
  .text
  .globl fold84_5
  .type fold84_5, @function
# leaf false
fold84_5:
.fold84_5_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2
  mv s10, s0
  ld a1, 0(s0)
  mv a0, zero
  jalr a1
  mv a1, a0
  lw a0, 0(a1)
  lw a1, 4(a1)
  beq a0, zero, .fold84_5_1

.fold84_5_2:
  mv s10, s1
  ld a2, 0(s1)
  mv a0, s2
  jalr a2
  mv a2, a0
  mv a0, s0
  mv a1, s1
  call fold84_5

.fold84_5_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.fold84_5_1:
  mv a0, s2
  j .fold84_5_3

  .p2align 2
  .text
  .globl aux65_20
  .type aux65_20, @function
# leaf true
aux65_20:
.aux65_20_0:
  mv a1, s10
  ld a0, 8(a1)
  lw a1, 16(a1)
  lw a2, 0(a0)
  beq a2, a1, .aux65_20_1

.aux65_20_2:
  addi a1, a2, 1
  sw a1, 0(a0)
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  li a1, 1
  sw a1, 0(a0)
  sw a2, 4(a0)

.aux65_20_3:
  ret

.aux65_20_1:
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux65_20_3

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4




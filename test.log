Testing test/test_src/ack.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl ack1l0_0
  .type ack1l0_0, @function
# leaf false
ack1l0_0:
.ack1l0_0_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  bge zero, a0, .ack1l0_0_1

.ack1l0_0_2:
  bge zero, a1, .ack1l0_0_3

.ack1l0_0_4:
  addi s0, a0, -1
  addi a1, a1, -1
  call ack1l0_0
  mv a1, a0
  mv a0, s0
  call ack1l0_0

.ack1l0_0_5:

.ack1l0_0_6:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

.ack1l0_0_1:
  addi a0, a1, 1
  j .ack1l0_0_6

.ack1l0_0_3:
  addi a0, a0, -1
  li a1, 1
  call ack1l0_0
  j .ack1l0_0_5

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main17l1_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl main17l1_1
  .type main17l1_1, @function
# leaf false
main17l1_1:
.main17l1_1_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 3
  li a1, 8
  call ack1l0_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/adder.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl make_adder1l0_1
  .type make_adder1l0_1, @function
# leaf true
make_adder1l0_1:
.make_adder1l0_1_0:
  addi sp, sp, -32
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, adder4l1c0_5
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl adder4l1c0_5
  .type adder4l1c0_5, @function
# leaf false
adder4l1c0_5:
.adder4l1c0_5_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, s10
  lw a1, 8(a1)
  call adder4l1_0
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main7l1_2
  .type main7l1_2, @function
# leaf false
main7l1_2:
.main7l1_2_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 3
  call make_adder1l0_1
  mv s10, a0
  ld a1, 0(a0)
  li a0, 7
  jalr a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$start_8
  .type T$start_8, @function
# leaf false
T$start_8:
.T$start_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main7l1_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_8
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl adder4l1_0
  .type adder4l1_0, @function
# leaf true
adder4l1_0:
.adder4l1_0_0:
  addi sp, sp, -16
  add a0, a1, a0
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/adder2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl make_adder1l0_1
  .type make_adder1l0_1, @function
# leaf true
make_adder1l0_1:
.make_adder1l0_1_0:
  addi sp, sp, -32
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, adder4l1c0_5
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl adder4l1c0_5
  .type adder4l1c0_5, @function
# leaf false
adder4l1c0_5:
.adder4l1c0_5_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, s10
  lw a1, 8(a1)
  call adder4l1_0
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main7l1_2
  .type main7l1_2, @function
# leaf false
main7l1_2:
.main7l1_2_0:
  addi sp, sp, -48
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  li a0, 2
  call make_adder1l0_1
  mv s0, a0
  li a0, 3
  call make_adder1l0_1
  mv s1, a0
  mv s10, s0
  ld a1, 0(s0)
  li a0, 10
  jalr a1
  mv s0, a0
  mv s10, s1
  ld a1, 0(s1)
  li a0, 20
  jalr a1
  add a0, s0, a0
  call minimbt_print_int
  mv a0, zero
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl T$start_8
  .type T$start_8, @function
# leaf false
T$start_8:
.T$start_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main7l1_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_8
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl adder4l1_0
  .type adder4l1_0, @function
# leaf true
adder4l1_0:
.adder4l1_0_0:
  addi sp, sp, -16
  add a0, a1, a0
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/bf.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl lp110l4_2
  .type lp110l4_2, @function
# leaf false
lp110l4_2:
.lp110l4_2_0:
  addi sp, sp, -80
  sd s5, 0(sp)
  sd s4, 8(sp)
  sd s3, 16(sp)
  sd s2, 24(sp)
  sd s1, 32(sp)
  sd s0, 40(sp)
  sd ra, 48(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2
  mv s3, a3
  mv s4, a4
  mv s5, a5
  lw a0, 0(s0)
  slli a0, a0, 2
  add a0, s3, a0
  lw a0, 0(a0)
  beq a0, zero, .lp110l4_2_1

.lp110l4_2_2:
  addi a0, s2, 1
  mv a1, s0
  mv a2, s1
  mv a3, s3
  mv a4, s4
  mv a5, s5
  call aux42l3_3
  sw a0, 0(s5)
  mv a0, s0
  mv a1, s1
  mv a2, s2
  mv a3, s3
  mv a4, s4
  mv a5, s5
  call lp110l4_2
  mv a0, zero

.lp110l4_2_3:
  ld s5, 0(sp)
  ld s4, 8(sp)
  ld s3, 16(sp)
  ld s2, 24(sp)
  ld s1, 32(sp)
  ld s0, 40(sp)
  ld ra, 48(sp)
  addi sp, sp, 80
  ret

.lp110l4_2_1:
  addi a0, s2, 1
  mv a1, zero
  mv a2, s1
  mv a3, s4
  call skip23l2_1
  sw a0, 0(s5)
  mv a0, zero
  j .lp110l4_2_3

  .p2align 2
  .text
  .globl read_prog142l3_5
  .type read_prog142l3_5, @function
# leaf false
read_prog142l3_5:
.read_prog142l3_5_0:
  addi sp, sp, -48
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv s1, a0
  mv s0, a1
  call read_ch_until_newline_or_eof1l0_0
  mv a1, a0
  li a0, 1
  neg a0, a0
  beq a1, a0, .read_prog142l3_5_1

.read_prog142l3_5_2:
  slli a0, s1, 2
  add a0, s0, a0
  sw a1, 0(a0)
  addi a0, s1, 1
  mv a1, s0
  call read_prog142l3_5
  mv a0, zero

.read_prog142l3_5_3:
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 48
  ret

.read_prog142l3_5_1:
  mv a0, s1
  mv a1, s0
  call bf7l1_4
  mv a0, zero
  j .read_prog142l3_5_3

  .p2align 2
  .text
  .globl T$start_14
  .type T$start_14, @function
# leaf false
T$start_14:
.T$start_14_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main138l2_6
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl read_ch_until_newline_or_eof1l0_0
  .type read_ch_until_newline_or_eof1l0_0, @function
# leaf false
read_ch_until_newline_or_eof1l0_0:
.read_ch_until_newline_or_eof1l0_0_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  call minimbt_read_char
  li a1, 10
  beq a0, a1, .read_ch_until_newline_or_eof1l0_0_1

.read_ch_until_newline_or_eof1l0_0_2:
  li a1, 13
  bne a0, a1, .read_ch_until_newline_or_eof1l0_0_4

.read_ch_until_newline_or_eof1l0_0_3:
  li a0, 1
  neg a0, a0

.read_ch_until_newline_or_eof1l0_0_5:

.read_ch_until_newline_or_eof1l0_0_6:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.read_ch_until_newline_or_eof1l0_0_1:
  li a0, 1
  neg a0, a0
  j .read_ch_until_newline_or_eof1l0_0_6

.read_ch_until_newline_or_eof1l0_0_4:
  j .read_ch_until_newline_or_eof1l0_0_5

  .p2align 2
  .text
  .globl main138l2_6
  .type main138l2_6, @function
# leaf false
main138l2_6:
.main138l2_6_0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  li a0, 4096
  sub a0, s11, a0
  andi s0, a0, -8
  mv s11, s0
  li a0, 1024
  mv a1, a0
  mv a0, s0
  mv a2, zero
  call memseti32
  mv a0, zero
  mv a1, s0
  call read_prog142l3_5
  mv a0, zero
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl skip23l2_1
  .type skip23l2_1, @function
# leaf false
skip23l2_1:
.skip23l2_1_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  bge a0, a2, .skip23l2_1_1

.skip23l2_1_2:
  slli a4, a0, 2
  add a4, a3, a4
  lw a4, 0(a4)
  li a5, 91
  beq a4, a5, .skip23l2_1_3

.skip23l2_1_4:
  li a5, 93
  bne a4, a5, .skip23l2_1_6

.skip23l2_1_5:
  beq a1, zero, .skip23l2_1_7

.skip23l2_1_8:
  addi a0, a0, 1
  addi a1, a1, -1
  call skip23l2_1

.skip23l2_1_9:

.skip23l2_1_10:

.skip23l2_1_11:

.skip23l2_1_12:
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

.skip23l2_1_1:
  j .skip23l2_1_12

.skip23l2_1_3:
  addi a0, a0, 1
  addi a1, a1, 1
  call skip23l2_1
  j .skip23l2_1_11

.skip23l2_1_6:
  addi a0, a0, 1
  call skip23l2_1
  j .skip23l2_1_10

.skip23l2_1_7:
  j .skip23l2_1_9

  .p2align 2
  .text
  .globl aux42l3_3
  .type aux42l3_3, @function
# leaf false
aux42l3_3:
.aux42l3_3_0:
  addi sp, sp, -96
  sd s6, 0(sp)
  sd s5, 8(sp)
  sd s4, 16(sp)
  sd s3, 24(sp)
  sd s2, 32(sp)
  sd s1, 40(sp)
  sd s0, 48(sp)
  sd ra, 56(sp)
  mv s5, a0
  mv s0, a1
  mv s3, a2
  mv s1, a3
  mv s4, a4
  mv s2, a5
  bge s5, s3, .aux42l3_3_1

.aux42l3_3_2:
  slli a0, s5, 2
  add a0, s4, a0
  lw a1, 0(a0)
  li a0, 62
  beq a1, a0, .aux42l3_3_3

.aux42l3_3_4:
  li a0, 60
  beq a1, a0, .aux42l3_3_5

.aux42l3_3_6:
  li a0, 43
  beq a1, a0, .aux42l3_3_7

.aux42l3_3_8:
  li a0, 45
  beq a1, a0, .aux42l3_3_9

.aux42l3_3_10:
  li a0, 46
  beq a1, a0, .aux42l3_3_11

.aux42l3_3_12:
  li a0, 44
  beq a1, a0, .aux42l3_3_13

.aux42l3_3_14:
  li a0, 91
  beq a1, a0, .aux42l3_3_15

.aux42l3_3_16:
  li a0, 93
  bne a1, a0, .aux42l3_3_18

.aux42l3_3_17:
  mv a0, s5

.aux42l3_3_19:

.aux42l3_3_20:

.aux42l3_3_21:

.aux42l3_3_22:

.aux42l3_3_23:

.aux42l3_3_24:

.aux42l3_3_25:

.aux42l3_3_26:

.aux42l3_3_27:
  ld s6, 0(sp)
  ld s5, 8(sp)
  ld s4, 16(sp)
  ld s3, 24(sp)
  ld s2, 32(sp)
  ld s1, 40(sp)
  ld s0, 48(sp)
  ld ra, 56(sp)
  addi sp, sp, 96
  ret

.aux42l3_3_1:
  mv a0, s5
  j .aux42l3_3_27

.aux42l3_3_3:
  lw a0, 0(s0)
  addi a0, a0, 1
  sw a0, 0(s0)
  addi a0, s5, 1
  mv a1, s0
  mv a2, s3
  mv a3, s1
  mv a4, s4
  mv a5, s2
  call aux42l3_3
  j .aux42l3_3_26

.aux42l3_3_5:
  lw a0, 0(s0)
  addi a0, a0, -1
  sw a0, 0(s0)
  addi a0, s5, 1
  mv a1, s0
  mv a2, s3
  mv a3, s1
  mv a4, s4
  mv a5, s2
  call aux42l3_3
  j .aux42l3_3_25

.aux42l3_3_7:
  lw a0, 0(s0)
  lw a1, 0(s0)
  slli a1, a1, 2
  add a1, s1, a1
  lw a1, 0(a1)
  addi a1, a1, 1
  slli a0, a0, 2
  add a0, s1, a0
  sw a1, 0(a0)
  addi a0, s5, 1
  mv a1, s0
  mv a2, s3
  mv a3, s1
  mv a4, s4
  mv a5, s2
  call aux42l3_3
  j .aux42l3_3_24

.aux42l3_3_9:
  lw a0, 0(s0)
  lw a1, 0(s0)
  slli a1, a1, 2
  add a1, s1, a1
  lw a1, 0(a1)
  addi a1, a1, -1
  slli a0, a0, 2
  add a0, s1, a0
  sw a1, 0(a0)
  addi a0, s5, 1
  mv a1, s0
  mv a2, s3
  mv a3, s1
  mv a4, s4
  mv a5, s2
  call aux42l3_3
  j .aux42l3_3_23

.aux42l3_3_11:
  lw a0, 0(s0)
  slli a0, a0, 2
  add a0, s1, a0
  lw a0, 0(a0)
  call minimbt_print_char
  mv a0, zero
  addi a0, s5, 1
  mv a1, s0
  mv a2, s3
  mv a3, s1
  mv a4, s4
  mv a5, s2
  call aux42l3_3
  j .aux42l3_3_22

.aux42l3_3_13:
  lw s6, 0(s0)
  call read_ch_until_newline_or_eof1l0_0
  slli a1, s6, 2
  add a1, s1, a1
  sw a0, 0(a1)
  addi a0, s5, 1
  mv a1, s0
  mv a2, s3
  mv a3, s1
  mv a4, s4
  mv a5, s2
  call aux42l3_3
  j .aux42l3_3_21

.aux42l3_3_15:
  sw s5, 0(s2)
  mv a0, s0
  mv a1, s3
  mv a2, s5
  mv a3, s1
  mv a4, s4
  mv a5, s2
  call lp110l4_2
  mv a0, zero
  lw a0, 0(s2)
  addi a0, a0, 1
  mv a1, s0
  mv a2, s3
  mv a3, s1
  mv a4, s4
  mv a5, s2
  call aux42l3_3
  j .aux42l3_3_20

.aux42l3_3_18:
  mv a0, s5
  j .aux42l3_3_19

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_14
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl bf7l1_4
  .type bf7l1_4, @function
# leaf false
bf7l1_4:
.bf7l1_4_0:
  addi sp, sp, -80
  sd s3, 0(sp)
  sd s2, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  mv s0, a0
  mv s1, a1
  addi a0, s11, -4
  andi s2, a0, -8
  mv s11, s2
  sw zero, 0(s2)
  li a0, 1024
  li a1, 1024
  mulw a0, a0, a1
  slli a1, a0, 2
  sub a1, s11, a1
  andi s3, a1, -8
  mv s11, s3
  mv a1, a0
  mv a0, s3
  mv a2, zero
  call memseti32
  addi a0, s11, -4
  andi a5, a0, -8
  mv s11, a5
  sw zero, 0(a5)
  mv a0, zero
  mv a1, s2
  mv a2, s0
  mv a3, s3
  mv a4, s1
  call aux42l3_3
  mv a0, zero
  ld s3, 0(sp)
  ld s2, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 80
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-bug.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl g5l1_1
  .type g5l1_1, @function
# leaf true
g5l1_1:
.g5l1_1_0:
  addi sp, sp, -16
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a1, f1l0c0_5
  sd a1, 0(a0)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f1l0_0
  .type f1l0_0, @function
# leaf true
f1l0_0:
.f1l0_0_0:
  addi sp, sp, -16
  addi a0, a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_8
  .type T$start_8, @function
# leaf false
T$start_8:
.T$start_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main8l2_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_8
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl main8l2_2
  .type main8l2_2, @function
# leaf false
main8l2_2:
.main8l2_2_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 456
  call g5l1_1
  mv s10, a0
  ld a1, 0(a0)
  li a0, 789
  jalr a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl f1l0c0_5
  .type f1l0c0_5, @function
# leaf false
f1l0c0_5:
.f1l0c0_5_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, s10
  call f1l0_0
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-bug2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl f1l0_0
  .type f1l0_0, @function
# leaf false
f1l0_0:
.f1l0_0_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv s0, a0
  blt s0, zero, .f1l0_0_2

.f1l0_0_1:
  mv a0, s0
  call minimbt_print_int
  mv a0, zero
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a1, f1l0c0_3
  sd a1, 0(a0)
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  sd a0, 0(a1)
  ld a0, 0(a1)
  addi a1, s0, -1
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  jalr a2
  mv a0, zero

.f1l0_0_3:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

.f1l0_0_2:
  mv a0, zero
  j .f1l0_0_3

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main12l1_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f1l0c0_3
  .type f1l0c0_3, @function
# leaf false
f1l0c0_3:
.f1l0c0_3_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, s10
  call f1l0_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main12l1_1
  .type main12l1_1, @function
# leaf false
main12l1_1:
.main12l1_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 9
  call f1l0_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-rec.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$x.10
  .type T$x.10, @function
# leaf true
T$x.10:
.T$x.10_0:
  addi sp, sp, -16
  li a0, 10
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  la a0, x.1
  lw a0, 0(a0)
  call main9l1_3
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f2l0_2
  .type f2l0_2, @function
# leaf false
f2l0_2:
.f2l0_2_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  beq a0, zero, .f2l0_2_1

.f2l0_2_2:
  addi a0, a0, -1
  la a1, x.1
  lw a1, 0(a1)
  call f2l0_2
  la a1, x.1
  lw a1, 0(a1)
  add a0, a1, a0

.f2l0_2_3:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.f2l0_2_1:
  mv a0, zero
  j .f2l0_2_3

  .p2align 2
  .text
  .globl main9l1_3
  .type main9l1_3, @function
# leaf false
main9l1_3:
.main9l1_3_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  la a0, x.1
  lw a1, 0(a0)
  li a0, 12
  call f2l0_2
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$x.10
  la t5, x.1
  sw a0, 0(t5)
  call T$start_6
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl x.1
  .type x.1, @object
x.1:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-reg-bug.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main39l1_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl g24_3
  .type g24_3, @function
# leaf false
g24_3:
.g24_3_0:
  addi sp, sp, -112
  sd ra, 0(sp)
  mv a1, s10
  lw a2, 8(a1)
  lw a3, 16(a1)
  lw a4, 24(a1)
  lw a5, 32(a1)
  lw a6, 40(a1)
  lw a7, 48(a1)
  lw t0, 56(a1)
  lw t1, 64(a1)
  lw t2, 72(a1)
  lw t3, 80(a1)
  add a2, a2, a3
  add a2, a2, a4
  add a2, a2, a5
  add a2, a2, a6
  add a2, a2, a7
  add a2, a2, t0
  add a2, a2, t1
  add a2, a2, t2
  add a2, a2, t3
  blt zero, a0, .g24_3_2

.g24_3_1:
  neg a0, a0
  mv s10, a1
  ld a1, 0(a1)
  jalr a1

.g24_3_3:
  ld ra, 0(sp)
  addi sp, sp, 112
  ret

.g24_3_2:
  mv a0, a2
  j .g24_3_3

  .p2align 2
  .text
  .globl main39l1_1
  .type main39l1_1, @function
# leaf false
main39l1_1:
.main39l1_1_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  addi a0, s11, -40
  andi a0, a0, -8
  mv s11, a0
  li a1, 1
  sw a1, 0(a0)
  li a1, 2
  sw a1, 4(a0)
  li a1, 3
  sw a1, 8(a0)
  li a1, 4
  sw a1, 12(a0)
  li a1, 5
  sw a1, 16(a0)
  li a1, 6
  sw a1, 20(a0)
  li a1, 7
  sw a1, 24(a0)
  li a1, 8
  sw a1, 28(a0)
  li a1, 9
  sw a1, 32(a0)
  li a1, 10
  sw a1, 36(a0)
  call h1l0_0
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl h1l0_0
  .type h1l0_0, @function
# leaf false
h1l0_0:
.h1l0_0_0:
  addi sp, sp, -112
  sd ra, 0(sp)
  lw a1, 0(a0)
  lw a2, 4(a0)
  lw a3, 8(a0)
  lw a4, 12(a0)
  lw a5, 16(a0)
  lw a6, 20(a0)
  lw a7, 24(a0)
  lw t0, 28(a0)
  lw t1, 32(a0)
  lw a0, 36(a0)
  addi t2, s11, -88
  andi t2, t2, -8
  mv s11, t2
  la t3, g24_3
  sd t3, 0(t2)
  sd a1, 8(t2)
  sd a2, 16(t2)
  sd a3, 24(t2)
  sd a4, 32(t2)
  sd a5, 40(t2)
  sd a6, 48(t2)
  sd a7, 56(t2)
  sd t0, 64(t2)
  sd t1, 72(t2)
  sd a0, 80(t2)
  mv s10, t2
  ld a1, 0(t2)
  li a0, 1
  jalr a1
  ld ra, 0(sp)
  addi sp, sp, 112
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/debug.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl f9l2_3
  .type f9l2_3, @function
# leaf false
f9l2_3:
.f9l2_3_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, a0
  li a0, 1
  li a2, 1
  bne a0, a2, .f9l2_3_2

.f9l2_3_1:
  li a0, 1
  call f9l2_3

.f9l2_3_3:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.f9l2_3_2:
  li a0, 2
  call g12l3_2
  j .f9l2_3_3

  .p2align 2
  .text
  .globl T$start_10
  .type T$start_10, @function
# leaf false
T$start_10:
.T$start_10_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main19l3_4
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl useless1l0_0
  .type useless1l0_0, @function
# leaf true
useless1l0_0:
.useless1l0_0_0:
  addi sp, sp, -16
  li a0, 10
  addi a0, a0, -1
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl g12l3_2
  .type g12l3_2, @function
# leaf true
g12l3_2:
.g12l3_2_0:
  addi sp, sp, -16
  mv a0, a1
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main19l3_4
  .type main19l3_4, @function
# leaf true
main19l3_4:
.main19l3_4_0:
  addi sp, sp, 0
  mv a0, zero
  addi sp, sp, 0
  ret

  .p2align 2
  .text
  .globl dummy6l1_1
  .type dummy6l1_1, @function
# leaf true
dummy6l1_1:
.dummy6l1_1_0:
  addi sp, sp, -16
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_10
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/even-odd.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$t.10
  .type T$t.10, @function
# leaf true
T$t.10:
.T$t.10_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main21l1_6
  .type main21l1_6, @function
# leaf false
main21l1_6:
.main21l1_6_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a0, a1
  la a0, f.2
  lw a1, 0(a0)
  la a0, t.1
  lw a2, 0(a0)
  li a0, 789
  call even3l0_5
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$start_10
  .type T$start_10, @function
# leaf false
T$start_10:
.T$start_10_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  la a0, f.2
  lw a0, 0(a0)
  la a1, t.1
  lw a1, 0(a1)
  call main21l1_6
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl odd6l1_4
  .type odd6l1_4, @function
# leaf false
odd6l1_4:
.odd6l1_4_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, a2
  blt a0, zero, .odd6l1_4_2

.odd6l1_4_1:
  beq a0, zero, .odd6l1_4_3

.odd6l1_4_4:
  addi a0, a0, -1
  la a1, f.2
  lw a1, 0(a1)
  la a2, t.1
  lw a2, 0(a2)
  call even3l0_5

.odd6l1_4_5:

.odd6l1_4_6:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.odd6l1_4_2:
  addi a0, a0, 1
  la a1, f.2
  lw a1, 0(a1)
  la a2, t.1
  lw a2, 0(a2)
  call even3l0_5
  j .odd6l1_4_6

.odd6l1_4_3:
  la a0, f.2
  lw a0, 0(a0)
  j .odd6l1_4_5

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$t.10
  la t5, t.1
  sw a0, 0(t5)
  call T$f.22
  la t5, f.2
  sw a0, 0(t5)
  call T$start_10
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$f.22
  .type T$f.22, @function
# leaf true
T$f.22:
.T$f.22_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl even3l0_5
  .type even3l0_5, @function
# leaf false
even3l0_5:
.even3l0_5_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, a2
  blt a0, zero, .even3l0_5_2

.even3l0_5_1:
  beq a0, zero, .even3l0_5_3

.even3l0_5_4:
  addi a0, a0, -1
  la a1, f.2
  lw a1, 0(a1)
  la a2, t.1
  lw a2, 0(a2)
  call odd6l1_4

.even3l0_5_5:

.even3l0_5_6:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.even3l0_5_2:
  addi a0, a0, 1
  la a1, f.2
  lw a1, 0(a1)
  la a2, t.1
  lw a2, 0(a2)
  call odd6l1_4
  j .even3l0_5_6

.even3l0_5_3:
  la a0, t.1
  lw a0, 0(a0)
  j .even3l0_5_5

  .p2align 2
  .bss
  .globl t.1
  .type t.1, @object
t.1:
  .zero 4
  .p2align 2
  .bss
  .globl f.2
  .type f.2, @object
f.2:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/feature_test.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main1l0_0
  .type main1l0_0, @function
# leaf false
main1l0_0:
.main1l0_0_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4611686018427387904
  fmv.d.x fa1, a0
  fadd.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4611686018427387904
  fmv.d.x fa1, a0
  fsub.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4611686018427387904
  fmv.d.x fa1, a0
  fmul.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4611686018427387904
  fmv.d.x fa1, a0
  fdiv.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4611686018427387904
  fmv.d.x fa1, a0
  fle.d a0, fa0, fa1
  beq a0, zero, .main1l0_0_2

.main1l0_0_1:
  li a0, 1
  call minimbt_print_int
  mv a0, zero

.main1l0_0_3:
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4607182418800017408
  fmv.d.x fa1, a0
  feq.d a0, fa0, fa1
  beq a0, zero, .main1l0_0_5

.main1l0_0_4:
  li a0, 1
  call minimbt_print_int
  mv a0, zero

.main1l0_0_6:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.main1l0_0_2:
  mv a0, zero
  call minimbt_print_int
  mv a0, zero
  j .main1l0_0_3

.main1l0_0_5:
  mv a0, zero
  call minimbt_print_int
  mv a0, zero
  j .main1l0_0_6

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main1l0_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/fib.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl fib1l0_0
  .type fib1l0_0, @function
# leaf false
fib1l0_0:
.fib1l0_0_0:
  addi sp, sp, -48
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv s0, a0
  li a0, 1
  bge a0, s0, .fib1l0_0_1

.fib1l0_0_2:
  addi a0, s0, -1
  call fib1l0_0
  mv s1, a0
  addi a0, s0, -2
  call fib1l0_0
  add a0, s1, a0

.fib1l0_0_3:
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 48
  ret

.fib1l0_0_1:
  mv a0, s0
  j .fib1l0_0_3

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main11l1_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl main11l1_1
  .type main11l1_1, @function
# leaf false
main11l1_1:
.main11l1_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 30
  call fib1l0_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/float.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main1l0_0
  .type main1l0_0, @function
# leaf false
main1l0_0:
.main1l0_0_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  li a0, 4623113902481840538
  fmv.d.x fa0, a0
  fneg.d fa0, fa0
  fabs.d fa0, fa0
  fsqrt.d fa0, fa0
  call minimbt_cos
  call minimbt_sin
  li a0, 4616752568008179712
  fmv.d.x fa1, a0
  fadd.d fa0, fa0, fa1
  li a0, 4619229547803233485
  fmv.d.x fa1, a0
  li a0, 4621199872640208077
  fmv.d.x fa2, a0
  fmul.d fa1, fa1, fa2
  li a0, 4608238818662014491
  fmv.d.x fa2, a0
  fdiv.d fa1, fa1, fa2
  fsub.d fa0, fa0, fa1
  li a0, 1000000
  fcvt.d.w fa1, a0
  fmul.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main1l0_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/funcomp.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl dec17l3_4
  .type dec17l3_4, @function
# leaf true
dec17l3_4:
.dec17l3_4_0:
  addi sp, sp, -16
  addi a0, a0, -1
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl composed6l1c0_8
  .type composed6l1c0_8, @function
# leaf false
composed6l1c0_8:
.composed6l1c0_8_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  mv a1, s10
  ld a2, 8(a1)
  ld a3, 16(a1)
  mv a1, a2
  mv a2, a3
  call composed6l1_0
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl dec17l3c0_16
  .type dec17l3c0_16, @function
# leaf false
dec17l3c0_16:
.dec17l3c0_16_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, s10
  call dec17l3_4
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl dbl10l1c0_14
  .type dbl10l1c0_14, @function
# leaf false
dbl10l1c0_14:
.dbl10l1c0_14_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, s10
  call dbl10l1_2
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl inc13l2c0_18
  .type inc13l2c0_18, @function
# leaf false
inc13l2c0_18:
.inc13l2c0_18_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, s10
  call inc13l2_3
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$start_20
  .type T$start_20, @function
# leaf false
T$start_20:
.T$start_20_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main21l4_5
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl composed6l1_0
  .type composed6l1_0, @function
# leaf false
composed6l1_0:
.composed6l1_0_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv s0, a2
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl inc13l2_3
  .type inc13l2_3, @function
# leaf true
inc13l2_3:
.inc13l2_3_0:
  addi sp, sp, -16
  addi a0, a0, 1
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl compose1l0_1
  .type compose1l0_1, @function
# leaf true
compose1l0_1:
.compose1l0_1_0:
  addi sp, sp, -32
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, composed6l1c0_8
  sd a3, 0(a2)
  sd a0, 8(a2)
  sd a1, 16(a2)
  mv a0, a2
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main21l4_5
  .type main21l4_5, @function
# leaf false
main21l4_5:
.main21l4_5_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a1, dbl10l1c0_14
  sd a1, 0(a0)
  addi a1, s11, -8
  andi a2, a1, -8
  mv s11, a2
  la a1, dec17l3c0_16
  sd a1, 0(a2)
  mv a1, a2
  call compose1l0_1
  mv a1, a0
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a2, inc13l2c0_18
  sd a2, 0(a0)
  call compose1l0_1
  mv s10, a0
  ld a1, 0(a0)
  li a0, 123
  jalr a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_20
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl dbl10l1_2
  .type dbl10l1_2, @function
# leaf true
dbl10l1_2:
.dbl10l1_2_0:
  addi sp, sp, -16
  add a0, a0, a0
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/gcd.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main9l1_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl gcd1l0_0
  .type gcd1l0_0, @function
# leaf false
gcd1l0_0:
.gcd1l0_0_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a2, a1
  beq a0, zero, .gcd1l0_0_1

.gcd1l0_0_2:
  blt a2, a0, .gcd1l0_0_4

.gcd1l0_0_3:
  sub a1, a2, a0
  call gcd1l0_0

.gcd1l0_0_5:

.gcd1l0_0_6:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.gcd1l0_0_1:
  mv a0, a2
  j .gcd1l0_0_6

.gcd1l0_0_4:
  sub a1, a0, a2
  mv a0, a2
  call gcd1l0_0
  j .gcd1l0_0_5

  .p2align 2
  .text
  .globl main9l1_1
  .type main9l1_1, @function
# leaf false
main9l1_1:
.main9l1_1_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 21600
  li a1, 337500
  call gcd1l0_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/id.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl f1l0_0
  .type f1l0_0, @function
# leaf true
f1l0_0:
.f1l0_0_0:
  addi sp, sp, -16
  addi a0, a0, 1
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main5l1_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main5l1_1
  .type main5l1_1, @function
# leaf false
main5l1_1:
.main5l1_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 1000
  call f1l0_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/inprod-loop.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main17l1_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl inprod1l0_0
  .type inprod1l0_0, @function
# leaf false
inprod1l0_0:
.inprod1l0_0_0:
  addi sp, sp, -80
  sd ra, 0(sp)
  mv a3, a0
  mv a4, a1
  fmv.d fa1, fa0
  mv a1, a2
  blt a1, zero, .inprod1l0_0_2

.inprod1l0_0_1:
  slli a0, a1, 3
  add a0, a3, a0
  fld fa0, 0(a0)
  slli a0, a1, 3
  add a0, a4, a0
  fld fa2, 0(a0)
  fmul.d fa0, fa0, fa2
  fadd.d fa0, fa1, fa0
  addi a2, a1, -1
  mv a0, a3
  mv a1, a4
  call inprod1l0_0

.inprod1l0_0_3:
  ld ra, 0(sp)
  addi sp, sp, 80
  ret

.inprod1l0_0_2:
  fmv.d fa0, fa1
  j .inprod1l0_0_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl main17l1_1
  .type main17l1_1, @function
# leaf false
main17l1_1:
.main17l1_1_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  li a1, 4608218246714312622
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  fsd fa0, 8(a0)
  fsd fa0, 16(a0)
  addi a1, s11, -24
  andi a1, a1, -8
  mv s11, a1
  li a2, 4616820122002590269
  fmv.d.x fa0, a2
  fsd fa0, 0(a1)
  fsd fa0, 8(a1)
  fsd fa0, 16(a1)
  fmv.d.x fa0, zero
  li a2, 2
  call inprod1l0_0
  li a0, 4696837146684686336
  fmv.d.x fa1, a0
  fmul.d fa0, fa1, fa0
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/inprod-rec.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main15l1_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main15l1_1
  .type main15l1_1, @function
# leaf false
main15l1_1:
.main15l1_1_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  li a1, 4608218246714312622
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  fsd fa0, 8(a0)
  fsd fa0, 16(a0)
  addi a1, s11, -24
  andi a1, a1, -8
  mv s11, a1
  li a2, 4616820122002590269
  fmv.d.x fa0, a2
  fsd fa0, 0(a1)
  fsd fa0, 8(a1)
  fsd fa0, 16(a1)
  li a2, 2
  call inprod1l0_0
  li a0, 4696837146684686336
  fmv.d.x fa1, a0
  fmul.d fa0, fa1, fa0
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl inprod1l0_0
  .type inprod1l0_0, @function
# leaf false
inprod1l0_0:
.inprod1l0_0_0:
  addi sp, sp, -80
  fsd fs0, 0(sp)
  sd ra, 8(sp)
  mv a3, a0
  mv a4, a1
  mv a1, a2
  blt a1, zero, .inprod1l0_0_2

.inprod1l0_0_1:
  slli a0, a1, 3
  add a0, a3, a0
  fld fa0, 0(a0)
  slli a0, a1, 3
  add a0, a4, a0
  fld fa1, 0(a0)
  fmul.d fs0, fa0, fa1
  addi a2, a1, -1
  mv a0, a3
  mv a1, a4
  call inprod1l0_0
  fadd.d fa0, fs0, fa0

.inprod1l0_0_3:
  fld fs0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 80
  ret

.inprod1l0_0_2:
  fmv.d.x fa0, zero
  j .inprod1l0_0_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/inprod.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl getx1l0_0
  .type getx1l0_0, @function
# leaf true
getx1l0_0:
.getx1l0_0_0:
  addi sp, sp, -16
  fld fa0, 0(a0)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl getz19l2_2
  .type getz19l2_2, @function
# leaf true
getz19l2_2:
.getz19l2_2_0:
  addi sp, sp, -16
  fld fa0, 16(a0)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_10
  .type T$start_10, @function
# leaf false
T$start_10:
.T$start_10_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main43l4_4
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main43l4_4
  .type main43l4_4, @function
# leaf false
main43l4_4:
.main43l4_4_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  li a1, 4607182418800017408
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  li a1, 4611686018427387904
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  li a1, 4613937818241073152
  fmv.d.x fa0, a1
  fsd fa0, 16(a0)
  addi a1, s11, -24
  andi a1, a1, -8
  mv s11, a1
  li a2, 4616189618054758400
  fmv.d.x fa0, a2
  fsd fa0, 0(a1)
  li a2, 4617315517961601024
  fmv.d.x fa0, a2
  fsd fa0, 8(a1)
  li a2, 4618441417868443648
  fmv.d.x fa0, a2
  fsd fa0, 16(a1)
  call inprod28l3_3
  li a0, 4696837146684686336
  fmv.d.x fa1, a0
  fmul.d fa0, fa1, fa0
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_10
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl gety10l1_1
  .type gety10l1_1, @function
# leaf true
gety10l1_1:
.gety10l1_1_0:
  addi sp, sp, -16
  fld fa0, 8(a0)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl inprod28l3_3
  .type inprod28l3_3, @function
# leaf false
inprod28l3_3:
.inprod28l3_3_0:
  addi sp, sp, -64
  fsd fs1, 0(sp)
  fsd fs0, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  mv s0, a0
  mv s1, a1
  mv a0, s0
  call getx1l0_0
  fmv.d fs0, fa0
  mv a0, s1
  call getx1l0_0
  fmul.d fs0, fs0, fa0
  mv a0, s0
  call gety10l1_1
  fmv.d fs1, fa0
  mv a0, s1
  call gety10l1_1
  fmul.d fa0, fs1, fa0
  fadd.d fs0, fs0, fa0
  mv a0, s0
  call getz19l2_2
  fmv.d fs1, fa0
  mv a0, s1
  call getz19l2_2
  fmul.d fa0, fs1, fa0
  fadd.d fa0, fs0, fa0
  fld fs1, 0(sp)
  fld fs0, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/int_min.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  la a0, int_min.2
  lw a0, 0(a0)
  call main3l0_4
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$_1_0
  .type T$_1_0, @function
# leaf true
T$_1_0:
.T$_1_0_0:
  addi sp, sp, -16
  li a0, -2147483648
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main3l0_4
  .type main3l0_4, @function
# leaf false
main3l0_4:
.main3l0_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  la a0, int_min.2
  lw a0, 0(a0)
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$_1_0
  la t5, _1
  sw a0, 0(t5)
  call T$int_min.22
  la t5, int_min.2
  sw a0, 0(t5)
  call T$start_6
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$int_min.22
  .type T$int_min.22, @function
# leaf true
T$int_min.22:
.T$int_min.22_0:
  addi sp, sp, -16
  la a0, _1
  lw a0, 0(a0)
  neg a0, a0
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl _1
  .type _1, @object
_1:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4
  .p2align 2
  .bss
  .globl int_min.2
  .type int_min.2, @object
int_min.2:
  .zero 4



Testing test/test_src/join-reg.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl g4l1_1
  .type g4l1_1, @function
# leaf true
g4l1_1:
.g4l1_1_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main10l3_3
  .type main10l3_3, @function
# leaf false
main10l3_3:
.main10l3_3_0:
  addi sp, sp, -48
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv a0, zero
  call f1l0_0
  mv s0, a0
  mv a0, zero
  call g4l1_1
  mv s1, a0
  mv a0, zero
  call h7l2_2
  beq a0, zero, .main10l3_3_1

.main10l3_3_2:
  sub a0, s1, s0
  add a0, a0, s0
  add a0, a0, s1

.main10l3_3_3:
  call minimbt_print_int
  mv a0, zero
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 48
  ret

.main10l3_3_1:
  sub a0, s0, s1
  j .main10l3_3_3

  .p2align 2
  .text
  .globl f1l0_0
  .type f1l0_0, @function
# leaf true
f1l0_0:
.f1l0_0_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_8
  .type T$start_8, @function
# leaf false
T$start_8:
.T$start_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main10l3_3
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_8
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl h7l2_2
  .type h7l2_2, @function
# leaf true
h7l2_2:
.h7l2_2_0:
  addi sp, sp, -16
  li a0, 789
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-reg2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl g4l1_1
  .type g4l1_1, @function
# leaf true
g4l1_1:
.g4l1_1_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main10l3_3
  .type main10l3_3, @function
# leaf false
main10l3_3:
.main10l3_3_0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a0, zero
  call f1l0_0
  mv s0, a0
  bge zero, s0, .main10l3_3_1

.main10l3_3_2:
  mv a0, zero
  call h7l2_2
  sub a0, a0, s0
  add a0, a0, s0

.main10l3_3_3:
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.main10l3_3_1:
  mv a0, zero
  call g4l1_1
  add a0, a0, s0
  j .main10l3_3_3

  .p2align 2
  .text
  .globl f1l0_0
  .type f1l0_0, @function
# leaf true
f1l0_0:
.f1l0_0_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_8
  .type T$start_8, @function
# leaf false
T$start_8:
.T$start_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main10l3_3
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_8
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl h7l2_2
  .type h7l2_2, @function
# leaf true
h7l2_2:
.h7l2_2_0:
  addi sp, sp, -16
  li a0, 789
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-stack.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl g4l1_1
  .type g4l1_1, @function
# leaf true
g4l1_1:
.g4l1_1_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main10l3_3
  .type main10l3_3, @function
# leaf false
main10l3_3:
.main10l3_3_0:
  addi sp, sp, -48
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv a0, zero
  call f1l0_0
  mv s0, a0
  mv a0, zero
  call g4l1_1
  mv s1, a0
  mv a0, zero
  call h7l2_2
  beq a0, zero, .main10l3_3_1

.main10l3_3_2:
  addi a0, s1, 2
  add a0, a0, s0
  add a0, a0, s1

.main10l3_3_3:
  call minimbt_print_int
  mv a0, zero
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 48
  ret

.main10l3_3_1:
  addi a0, s0, 1
  j .main10l3_3_3

  .p2align 2
  .text
  .globl f1l0_0
  .type f1l0_0, @function
# leaf true
f1l0_0:
.f1l0_0_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_8
  .type T$start_8, @function
# leaf false
T$start_8:
.T$start_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main10l3_3
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_8
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl h7l2_2
  .type h7l2_2, @function
# leaf true
h7l2_2:
.h7l2_2_0:
  addi sp, sp, -16
  li a0, 789
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-stack2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl g4l1_1
  .type g4l1_1, @function
# leaf true
g4l1_1:
.g4l1_1_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f1l0_0
  .type f1l0_0, @function
# leaf true
f1l0_0:
.f1l0_0_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main7l2_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl main7l2_2
  .type main7l2_2, @function
# leaf false
main7l2_2:
.main7l2_2_0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a0, zero
  call f1l0_0
  mv s0, a0
  blt zero, s0, .main7l2_2_2

.main7l2_2_1:
  mv a0, zero
  call g4l1_1
  add a0, a0, s0

.main7l2_2_3:
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.main7l2_2_2:
  add a0, s0, s0
  j .main7l2_2_3

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-stack3.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl g4l1_1
  .type g4l1_1, @function
# leaf true
g4l1_1:
.g4l1_1_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main10l3_3
  .type main10l3_3, @function
# leaf false
main10l3_3:
.main10l3_3_0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a0, zero
  call f1l0_0
  mv s0, a0
  blt zero, s0, .main10l3_3_2

.main10l3_3_1:
  mv a0, zero
  call g4l1_1

.main10l3_3_3:
  add a0, a0, s0
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.main10l3_3_2:
  mv a0, zero
  call h7l2_2
  j .main10l3_3_3

  .p2align 2
  .text
  .globl f1l0_0
  .type f1l0_0, @function
# leaf true
f1l0_0:
.f1l0_0_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_8
  .type T$start_8, @function
# leaf false
T$start_8:
.T$start_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main10l3_3
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_8
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl h7l2_2
  .type h7l2_2, @function
# leaf true
h7l2_2:
.h7l2_2_0:
  addi sp, sp, -16
  li a0, 789
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/landins_knot.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl h21l3_3
  .type h21l3_3, @function
# leaf false
h21l3_3:
.h21l3_3_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv s0, a0
  beq s0, zero, .h21l3_3_1

.h21l3_3_2:
  addi a0, s0, -1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mulw a0, s0, a0

.h21l3_3_3:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

.h21l3_3_1:
  li a0, 1
  j .h21l3_3_3

  .p2align 2
  .text
  .globl main37l5_27
  .type main37l5_27, @function
# leaf false
main37l5_27:
.main37l5_27_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a0, a1
  la a0, factorial.28
  ld a0, 0(a0)
  call f129l3_20
  mv a0, zero
  la a0, a.33
  lw a1, 0(a0)
  li a0, 10
  call g34l4_26
  call minimbt_print_int
  mv a0, zero
  la a0, a.33
  lw a1, 0(a0)
  li a0, 31
  call g34l4_26
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl dummy1l0_0
  .type dummy1l0_0, @function
# leaf true
dummy1l0_0:
.dummy1l0_0_0:
  addi sp, sp, -16
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$_32_22
  .type T$_32_22, @function
# leaf true
T$_32_22:
.T$_32_22_0:
  addi sp, sp, -16
  li a0, 5
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux9l2_1
  .type aux9l2_1, @function
# leaf false
aux9l2_1:
.aux9l2_1_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  ld a1, 0(a1)
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl h21l3c0_14
  .type h21l3c0_14, @function
# leaf false
h21l3c0_14:
.h21l3c0_14_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, s10
  ld a1, 8(a1)
  call h21l3_3
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl g18l2_4
  .type g18l2_4, @function
# leaf true
g18l2_4:
.g18l2_4_0:
  addi sp, sp, -32
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, h21l3c0_14
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl landins_knot4l1_2
  .type landins_knot4l1_2, @function
# leaf false
landins_knot4l1_2:
.landins_knot4l1_2_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  la a2, dummy1l0c0_8
  sd a2, 0(a1)
  addi a2, s11, -8
  andi s0, a2, -8
  mv s11, s0
  sd a1, 0(s0)
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, aux9l2c0_10
  sd a2, 0(a1)
  sd s0, 8(a1)
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  jalr a2
  sd a0, 0(s0)
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$factorial.2816
  la t5, factorial.28
  sd a0, 0(t5)
  call T$_32_22
  la t5, _32
  sw a0, 0(t5)
  call T$a.3324
  la t5, a.33
  sw a0, 0(t5)
  call T$start_30
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$start_30
  .type T$start_30, @function
# leaf false
T$start_30:
.T$start_30_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  la a0, a.33
  lw a0, 0(a0)
  la a1, factorial.28
  ld a1, 0(a1)
  call main37l5_27
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl g34l4_26
  .type g34l4_26, @function
# leaf true
g34l4_26:
.g34l4_26_0:
  addi sp, sp, -16
  la a1, a.33
  lw a1, 0(a1)
  add a0, a0, a1
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$a.3324
  .type T$a.3324, @function
# leaf false
T$a.3324:
.T$a.3324_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  la a0, factorial.28
  ld a0, 0(a0)
  la a1, _32
  lw a1, 0(a1)
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  jalr a2
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl f129l3_20
  .type f129l3_20, @function
# leaf false
f129l3_20:
.f129l3_20_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  la a0, factorial.28
  ld a0, 0(a0)
  mv s10, a0
  ld a1, 0(a0)
  li a0, 5
  jalr a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl aux9l2c0_10
  .type aux9l2c0_10, @function
# leaf false
aux9l2c0_10:
.aux9l2c0_10_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, s10
  ld a1, 8(a1)
  call aux9l2_1
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$factorial.2816
  .type T$factorial.2816, @function
# leaf false
T$factorial.2816:
.T$factorial.2816_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a1, g18l2c0_18
  sd a1, 0(a0)
  call landins_knot4l1_2
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl g18l2c0_18
  .type g18l2c0_18, @function
# leaf false
g18l2c0_18:
.g18l2c0_18_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, s10
  call g18l2_4
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl dummy1l0c0_8
  .type dummy1l0c0_8, @function
# leaf false
dummy1l0c0_8:
.dummy1l0c0_8_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, s10
  call dummy1l0_0
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .bss
  .globl _32
  .type _32, @object
_32:
  .zero 4
  .p2align 2
  .bss
  .globl a.33
  .type a.33, @object
a.33:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4
  .p2align 2
  .bss
  .globl factorial.28
  .type factorial.28, @object
factorial.28:
  .zero 8



Testing test/test_src/mandelbrot.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl mandelbrot3l0_4
  .type mandelbrot3l0_4, @function
# leaf false
mandelbrot3l0_4:
.mandelbrot3l0_4_0:
  addi sp, sp, -80
  sd ra, 0(sp)
  fcvt.d.w fa0, a0
  li a1, 4611686018427387904
  fmv.d.x fa1, a1
  fdiv.d fa0, fa0, fa1
  fcvt.d.w fa1, a0
  li a1, 4611686018427387904
  fmv.d.x fa2, a1
  fdiv.d fa1, fa1, fa2
  addi a1, a0, -1
  addi a0, a0, -1
  addi a2, s11, -4
  andi a2, a2, -8
  mv s11, a2
  sw zero, 0(a2)
  addi a3, s11, -48
  andi a3, a3, -8
  mv s11, a3
  la a4, loop119_7
  sd a4, 0(a3)
  sd a1, 8(a3)
  fsd fa1, 16(a3)
  sd a0, 24(a3)
  fsd fa0, 32(a3)
  sd a2, 40(a3)
  mv s10, a3
  ld a1, 0(a3)
  mv a0, zero
  jalr a1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 80
  ret

  .p2align 2
  .text
  .globl T$limit.10
  .type T$limit.10, @function
# leaf true
T$limit.10:
.T$limit.10_0:
  addi sp, sp, -16
  li a0, 4616189618054758400
  fmv.d.x fa0, a0
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl loop119_7
  .type loop119_7, @function
# leaf false
loop119_7:
.loop119_7_0:
  addi sp, sp, -80
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv s0, s10
  mv s1, a0
  lw a0, 8(s0)
  fld fa1, 16(s0)
  lw a1, 24(s0)
  fld fa2, 32(s0)
  ld a2, 40(s0)
  blt a0, s1, .loop119_7_2

.loop119_7_1:
  fcvt.d.w fa0, s1
  fdiv.d fa0, fa0, fa1
  li a0, 4607182418800017408
  fmv.d.x fa1, a0
  fsub.d fa0, fa0, fa1
  addi a0, s11, -40
  andi a0, a0, -8
  mv s11, a0
  la a3, loop226_9
  sd a3, 0(a0)
  sd a1, 8(a0)
  fsd fa2, 16(a0)
  fsd fa0, 24(a0)
  sd a2, 32(a0)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  mv a0, zero
  addi a0, s1, 1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  mv a0, zero

.loop119_7_3:
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 80
  ret

.loop119_7_2:
  mv a0, zero
  j .loop119_7_3

  .p2align 2
  .text
  .globl loop345_11
  .type loop345_11, @function
# leaf false
loop345_11:
.loop345_11_0:
  addi sp, sp, -96
  sd ra, 0(sp)
  mv a0, s10
  ld a2, 8(a0)
  ld a3, 16(a0)
  fld fa0, 24(a0)
  ld a4, 32(a0)
  fld fa1, 40(a0)
  ld a1, 48(a0)
  ld a5, 56(a0)
  fld fa2, 0(a2)
  li a6, 4611686018427387904
  fmv.d.x fa3, a6
  fmul.d fa2, fa3, fa2
  fld fa3, 0(a3)
  fmul.d fa2, fa2, fa3
  fadd.d fa0, fa2, fa0
  fsd fa0, 0(a3)
  fld fa0, 0(a4)
  fadd.d fa0, fa0, fa1
  fsd fa0, 0(a2)
  fld fa0, 0(a2)
  fld fa1, 0(a2)
  fmul.d fa0, fa0, fa1
  fld fa1, 0(a3)
  fld fa2, 0(a3)
  fmul.d fa1, fa1, fa2
  fadd.d fa2, fa0, fa1
  la a2, limit.1
  fld fa3, 0(a2)
  fle.d a2, fa3, fa2
  bne a2, zero, .loop345_11_1

.loop345_11_2:
  lw a2, 0(a5)
  addi a2, a2, 1
  sw a2, 0(a5)
  lw a2, 0(a5)
  la a3, niter.2
  lw a3, 0(a3)
  bne a2, a3, .loop345_11_4

.loop345_11_3:
  lw a0, 0(a1)
  li a2, 2
  mulw a0, a0, a2
  addi a0, a0, 1
  sw a0, 0(a1)
  mv a0, zero

.loop345_11_5:

.loop345_11_6:
  ld ra, 0(sp)
  addi sp, sp, 96
  ret

.loop345_11_1:
  lw a0, 0(a1)
  li a2, 2
  mulw a0, a0, a2
  sw a0, 0(a1)
  mv a0, zero
  j .loop345_11_6

.loop345_11_4:
  fsub.d fa0, fa0, fa1
  fsd fa0, 0(a4)
  mv s10, a0
  ld a0, 0(a0)
  jalr a0
  mv a0, zero
  j .loop345_11_5

  .p2align 2
  .text
  .globl T$start_14
  .type T$start_14, @function
# leaf false
T$start_14:
.T$start_14_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  la a0, limit.1
  fld fa0, 0(a0)
  la a0, niter.2
  lw a0, 0(a0)
  call main129l1_5
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main129l1_5
  .type main129l1_5, @function
# leaf false
main129l1_5:
.main129l1_5_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  la a0, limit.1
  fld fa0, 0(a0)
  la a0, niter.2
  lw a1, 0(a0)
  li a0, 16
  call mandelbrot3l0_4
  mv a0, zero
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl loop226_9
  .type loop226_9, @function
# leaf false
loop226_9:
.loop226_9_0:
  addi sp, sp, -112
  sd s2, 0(sp)
  sd s1, 8(sp)
  sd s0, 16(sp)
  sd ra, 24(sp)
  mv s0, s10
  mv s1, a0
  lw a0, 8(s0)
  fld fa0, 16(s0)
  fld fa1, 24(s0)
  ld s2, 32(s0)
  blt a0, s1, .loop226_9_2

.loop226_9_1:
  fcvt.d.w fa2, s1
  fdiv.d fa0, fa2, fa0
  li a0, 4609434218613702656
  fmv.d.x fa2, a0
  fsub.d fa0, fa0, fa2
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  fmv.d.x fa2, zero
  fsd fa2, 0(a0)
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  fmv.d.x fa2, zero
  fsd fa2, 0(a1)
  addi a2, s11, -8
  andi a2, a2, -8
  mv s11, a2
  fmv.d.x fa2, zero
  fsd fa2, 0(a2)
  addi a3, s11, -4
  andi a3, a3, -8
  mv s11, a3
  sw zero, 0(a3)
  addi a4, s11, -64
  andi a4, a4, -8
  mv s11, a4
  la a5, loop345_11
  sd a5, 0(a4)
  sd a0, 8(a4)
  sd a1, 16(a4)
  fsd fa1, 24(a4)
  sd a2, 32(a4)
  fsd fa0, 40(a4)
  sd s2, 48(a4)
  sd a3, 56(a4)
  mv s10, a4
  ld a0, 0(a4)
  jalr a0
  mv a0, zero
  addi a0, s1, 1
  li a1, 8
  divw a0, a0, a1
  li a1, 8
  mulw a0, a0, a1
  addi a1, s1, 1
  bne a0, a1, .loop226_9_4

.loop226_9_3:
  lw a0, 0(s2)
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  mv a0, zero

.loop226_9_5:
  addi a0, s1, 1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  mv a0, zero

.loop226_9_6:
  ld s2, 0(sp)
  ld s1, 8(sp)
  ld s0, 16(sp)
  ld ra, 24(sp)
  addi sp, sp, 112
  ret

.loop226_9_2:
  mv a0, zero
  j .loop226_9_6

.loop226_9_4:
  mv a0, zero
  j .loop226_9_5

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$limit.10
  la t5, limit.1
  fsd fa0, 0(t5)
  call T$niter.22
  la t5, niter.2
  sw a0, 0(t5)
  call T$start_14
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$niter.22
  .type T$niter.22, @function
# leaf true
T$niter.22:
.T$niter.22_0:
  addi sp, sp, -16
  li a0, 50
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl limit.1
  .type limit.1, @object
limit.1:
  .zero 8
  .p2align 2
  .bss
  .globl niter.2
  .type niter.2, @object
niter.2:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/matmul-flat.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl memseti64
  .type memseti64, @function
memseti64:
  blez a1, .memseti64_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti64_b0:
  sd a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti64_b0
.memseti64_b1:
  ret


  .p2align 2
  .text
  .globl memsetf64
  .type memsetf64, @function
memsetf64:
  blez a1, .memsetf64_b1
  slli a1, a1, 3
  add a1, a1, a0
.memsetf64_b0:
  fsd fa0, 0(a0)
  addi a0, a0, 8
  bne a0, a1, .memsetf64_b0
.memsetf64_b1:
  ret

  .p2align 2
  .text
  .globl loop148l2_2
  .type loop148l2_2, @function
# leaf false
loop148l2_2:
.loop148l2_2_0:
  addi sp, sp, -80
  sd s5, 0(sp)
  sd s4, 8(sp)
  sd s3, 16(sp)
  sd s2, 24(sp)
  sd s1, 32(sp)
  sd s0, 40(sp)
  sd ra, 48(sp)
  mv s0, a0
  mv s5, a1
  mv s3, a2
  mv s1, a3
  mv s4, a4
  mv s2, a5
  blt s0, zero, .loop148l2_2_2

.loop148l2_2_1:
  addi a2, s3, -1
  mv a0, s0
  mv a1, s5
  mv a3, s1
  mv a4, s4
  mv a5, s2
  call loop228l1_1
  mv a0, zero
  addi a0, s0, -1
  mv a1, s5
  mv a2, s3
  mv a3, s1
  mv a4, s4
  mv a5, s2
  call loop148l2_2
  mv a0, zero

.loop148l2_2_3:
  ld s5, 0(sp)
  ld s4, 8(sp)
  ld s3, 16(sp)
  ld s2, 24(sp)
  ld s1, 32(sp)
  ld s0, 40(sp)
  ld ra, 48(sp)
  addi sp, sp, 80
  ret

.loop148l2_2_2:
  mv a0, zero
  j .loop148l2_2_3

  .p2align 2
  .text
  .globl mul68l3_3
  .type mul68l3_3, @function
# leaf false
mul68l3_3:
.mul68l3_3_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  addi a0, a0, -1
  call loop148l2_2
  mv a0, zero
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl main85l4_6
  .type main85l4_6, @function
# leaf false
main85l4_6:
.main85l4_6_0:
  addi sp, sp, -64
  sd s2, 0(sp)
  sd s1, 8(sp)
  sd s0, 16(sp)
  sd ra, 24(sp)
  addi a0, s11, 0
  andi s0, a0, -8
  mv s11, s0
  fmv.d.x fa0, zero
  li a0, 2
  li a1, 3
  mv a2, s0
  call make_arr103l6_5
  mv s1, a0
  li a0, 3
  li a1, 2
  mv a2, s0
  call make_arr103l6_5
  mv s2, a0
  li a0, 2
  li a1, 2
  mv a2, s0
  call make_arr103l6_5
  mv s0, a0
  ld a0, 0(s1)
  li a1, 4607182418800017408
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 0(s1)
  li a1, 4611686018427387904
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 0(s1)
  li a1, 4613937818241073152
  fmv.d.x fa0, a1
  fsd fa0, 16(a0)
  ld a0, 8(s1)
  li a1, 4616189618054758400
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 8(s1)
  li a1, 4617315517961601024
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 8(s1)
  li a1, 4618441417868443648
  fmv.d.x fa0, a1
  fsd fa0, 16(a0)
  ld a0, 0(s2)
  li a1, 4619567317775286272
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 0(s2)
  li a1, 4620693217682128896
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 8(s2)
  li a1, 4621256167635550208
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 8(s2)
  li a1, 4621819117588971520
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 16(s2)
  li a1, 4622382067542392832
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 16(s2)
  li a1, 4622945017495814144
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  li a0, 2
  li a1, 3
  li a2, 2
  mv a3, s1
  mv a4, s2
  mv a5, s0
  call mul68l3_3
  mv a0, zero
  ld a0, 0(s0)
  fld fa0, 0(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 0(s0)
  fld fa0, 8(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 8(s0)
  fld fa0, 0(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 8(s0)
  fld fa0, 8(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld s2, 0(sp)
  ld s1, 8(sp)
  ld s0, 16(sp)
  ld ra, 24(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl T$start_14
  .type T$start_14, @function
# leaf false
T$start_14:
.T$start_14_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main85l4_6
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl loop31l0_0
  .type loop31l0_0, @function
# leaf false
loop31l0_0:
.loop31l0_0_0:
  addi sp, sp, -112
  sd ra, 0(sp)
  blt a2, zero, .loop31l0_0_2

.loop31l0_0_1:
  slli a6, a0, 3
  add a6, a5, a6
  ld a6, 0(a6)
  slli a7, a0, 3
  add a7, a5, a7
  ld a7, 0(a7)
  slli t0, a1, 3
  add a7, a7, t0
  fld fa0, 0(a7)
  slli a7, a0, 3
  add a7, a3, a7
  ld a7, 0(a7)
  slli t0, a2, 3
  add a7, a7, t0
  fld fa1, 0(a7)
  slli a7, a2, 3
  add a7, a4, a7
  ld a7, 0(a7)
  slli t0, a1, 3
  add a7, a7, t0
  fld fa2, 0(a7)
  fmul.d fa1, fa1, fa2
  fadd.d fa0, fa0, fa1
  slli a7, a1, 3
  add a6, a6, a7
  fsd fa0, 0(a6)
  addi a2, a2, -1
  call loop31l0_0
  mv a0, zero

.loop31l0_0_3:
  ld ra, 0(sp)
  addi sp, sp, 112
  ret

.loop31l0_0_2:
  mv a0, zero
  j .loop31l0_0_3

  .p2align 2
  .text
  .globl loop228l1_1
  .type loop228l1_1, @function
# leaf false
loop228l1_1:
.loop228l1_1_0:
  addi sp, sp, -80
  sd s5, 0(sp)
  sd s4, 8(sp)
  sd s3, 16(sp)
  sd s2, 24(sp)
  sd s1, 32(sp)
  sd s0, 40(sp)
  sd ra, 48(sp)
  mv s0, a0
  mv s5, a1
  mv s3, a2
  mv s1, a3
  mv s4, a4
  mv s2, a5
  blt s3, zero, .loop228l1_1_2

.loop228l1_1_1:
  addi a2, s5, -1
  mv a0, s0
  mv a1, s3
  mv a3, s1
  mv a4, s4
  mv a5, s2
  call loop31l0_0
  mv a0, zero
  addi a2, s3, -1
  mv a0, s0
  mv a1, s5
  mv a3, s1
  mv a4, s4
  mv a5, s2
  call loop228l1_1
  mv a0, zero

.loop228l1_1_3:
  ld s5, 0(sp)
  ld s4, 8(sp)
  ld s3, 16(sp)
  ld s2, 24(sp)
  ld s1, 32(sp)
  ld s0, 40(sp)
  ld ra, 48(sp)
  addi sp, sp, 80
  ret

.loop228l1_1_2:
  mv a0, zero
  j .loop228l1_1_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_14
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl init_arr89l5_4
  .type init_arr89l5_4, @function
# leaf false
init_arr89l5_4:
.init_arr89l5_4_0:
  addi sp, sp, -64
  sd s3, 0(sp)
  sd s2, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  mv s2, a0
  mv s0, a1
  mv s1, a2
  blt s2, zero, .init_arr89l5_4_2

.init_arr89l5_4_1:
  slli a0, s0, 3
  sub a0, s11, a0
  andi s3, a0, -8
  mv s11, s3
  fmv.d.x fa0, zero
  mv a1, s0
  mv a0, s3
  call memsetf64
  slli a0, s2, 3
  add a0, s1, a0
  sd s3, 0(a0)
  addi a0, s2, -1
  mv a1, s0
  mv a2, s1
  call init_arr89l5_4
  mv a0, zero

.init_arr89l5_4_3:
  ld s3, 0(sp)
  ld s2, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 64
  ret

.init_arr89l5_4_2:
  mv a0, zero
  j .init_arr89l5_4_3

  .p2align 2
  .text
  .globl make_arr103l6_5
  .type make_arr103l6_5, @function
# leaf false
make_arr103l6_5:
.make_arr103l6_5_0:
  addi sp, sp, -64
  sd s2, 0(sp)
  sd s1, 8(sp)
  sd s0, 16(sp)
  sd ra, 24(sp)
  mv s0, a0
  mv s1, a1
  slli a0, s0, 3
  sub a0, s11, a0
  andi s2, a0, -8
  mv s11, s2
  mv a1, s0
  mv a0, s2
  call memseti64
  addi a0, s0, -1
  mv a1, s1
  mv a2, s2
  call init_arr89l5_4
  mv a0, zero
  mv a0, s2
  ld s2, 0(sp)
  ld s1, 8(sp)
  ld s0, 16(sp)
  ld ra, 24(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/matmul.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl memseti64
  .type memseti64, @function
memseti64:
  blez a1, .memseti64_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti64_b0:
  sd a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti64_b0
.memseti64_b1:
  ret


  .p2align 2
  .text
  .globl memsetf64
  .type memsetf64, @function
memsetf64:
  blez a1, .memsetf64_b1
  slli a1, a1, 3
  add a1, a1, a0
.memsetf64_b0:
  fsd fa0, 0(a0)
  addi a0, a0, 8
  bne a0, a1, .memsetf64_b0
.memsetf64_b1:
  ret

  .p2align 2
  .text
  .globl gen_arr57l2_5
  .type gen_arr57l2_5, @function
# leaf false
gen_arr57l2_5:
.gen_arr57l2_5_0:
  addi sp, sp, -64
  sd s2, 0(sp)
  sd s1, 8(sp)
  sd s0, 16(sp)
  sd ra, 24(sp)
  mv s0, a0
  mv s1, a1
  slli a0, s0, 3
  sub a0, s11, a0
  andi s2, a0, -8
  mv s11, s2
  mv a1, s0
  mv a0, s2
  call memseti64
  addi a0, s0, -1
  mv a1, s2
  mv a2, s1
  call init_arr63l3_4
  mv a0, zero
  mv a0, s2
  ld s2, 0(sp)
  ld s1, 8(sp)
  ld s0, 16(sp)
  ld ra, 24(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl init_arr63l3_4
  .type init_arr63l3_4, @function
# leaf false
init_arr63l3_4:
.init_arr63l3_4_0:
  addi sp, sp, -64
  sd s3, 0(sp)
  sd s2, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2
  blt s0, zero, .init_arr63l3_4_2

.init_arr63l3_4_1:
  slli a0, s2, 3
  sub a0, s11, a0
  andi s3, a0, -8
  mv s11, s3
  fmv.d.x fa0, zero
  mv a1, s2
  mv a0, s3
  call memsetf64
  slli a0, s0, 3
  add a0, s1, a0
  sd s3, 0(a0)
  addi a0, s0, -1
  mv a1, s1
  mv a2, s2
  call init_arr63l3_4
  mv a0, zero

.init_arr63l3_4_3:
  ld s3, 0(sp)
  ld s2, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 64
  ret

.init_arr63l3_4_2:
  mv a0, zero
  j .init_arr63l3_4_3

  .p2align 2
  .text
  .globl loop218l2_1
  .type loop218l2_1, @function
# leaf false
loop218l2_1:
.loop218l2_1_0:
  addi sp, sp, -80
  sd s5, 0(sp)
  sd s4, 8(sp)
  sd s3, 16(sp)
  sd s2, 24(sp)
  sd s1, 32(sp)
  sd s0, 40(sp)
  sd ra, 48(sp)
  mv s0, a0
  mv s5, a1
  mv s3, a2
  mv s1, a3
  mv s4, a4
  mv s2, a5
  blt s0, zero, .loop218l2_1_2

.loop218l2_1_1:
  addi a0, s3, -1
  mv a1, s5
  mv a2, s1
  mv a3, s4
  mv a4, s2
  mv a5, s0
  call loop322l3_0
  mv a0, zero
  addi a0, s0, -1
  mv a1, s5
  mv a2, s3
  mv a3, s1
  mv a4, s4
  mv a5, s2
  call loop218l2_1
  mv a0, zero

.loop218l2_1_3:
  ld s5, 0(sp)
  ld s4, 8(sp)
  ld s3, 16(sp)
  ld s2, 24(sp)
  ld s1, 32(sp)
  ld s0, 40(sp)
  ld ra, 48(sp)
  addi sp, sp, 80
  ret

.loop218l2_1_2:
  mv a0, zero
  j .loop218l2_1_3

  .p2align 2
  .text
  .globl matmul1l0_3
  .type matmul1l0_3, @function
# leaf false
matmul1l0_3:
.matmul1l0_3_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  mv a6, a1
  mv a7, a2
  mv a1, a3
  addi a0, a0, -1
  mv a2, a6
  mv a3, a7
  call loop114l1_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl main53l1_6
  .type main53l1_6, @function
# leaf false
main53l1_6:
.main53l1_6_0:
  addi sp, sp, -64
  sd s2, 0(sp)
  sd s1, 8(sp)
  sd s0, 16(sp)
  sd ra, 24(sp)
  addi a0, s11, 0
  andi s0, a0, -8
  mv s11, s0
  fmv.d.x fa0, zero
  li a0, 2
  li a1, 3
  mv a2, s0
  call gen_arr57l2_5
  mv s1, a0
  li a0, 3
  li a1, 2
  mv a2, s0
  call gen_arr57l2_5
  mv s2, a0
  li a0, 2
  li a1, 2
  mv a2, s0
  call gen_arr57l2_5
  mv s0, a0
  ld a0, 0(s1)
  li a1, 4607182418800017408
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 0(s1)
  li a1, 4611686018427387904
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 0(s1)
  li a1, 4613937818241073152
  fmv.d.x fa0, a1
  fsd fa0, 16(a0)
  ld a0, 8(s1)
  li a1, 4616189618054758400
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 8(s1)
  li a1, 4617315517961601024
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 8(s1)
  li a1, 4618441417868443648
  fmv.d.x fa0, a1
  fsd fa0, 16(a0)
  ld a0, 0(s2)
  li a1, 4619567317775286272
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 0(s2)
  li a1, 4620693217682128896
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 8(s2)
  li a1, 4621256167635550208
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 8(s2)
  li a1, 4621819117588971520
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 16(s2)
  li a1, 4622382067542392832
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 16(s2)
  li a1, 4622945017495814144
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  li a0, 2
  li a1, 3
  li a2, 2
  mv a3, s1
  mv a4, s2
  mv a5, s0
  call matmul1l0_3
  mv a0, zero
  ld a0, 0(s0)
  fld fa0, 0(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 0(s0)
  fld fa0, 8(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 8(s0)
  fld fa0, 0(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 8(s0)
  fld fa0, 8(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld s2, 0(sp)
  ld s1, 8(sp)
  ld s0, 16(sp)
  ld ra, 24(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl T$start_14
  .type T$start_14, @function
# leaf false
T$start_14:
.T$start_14_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main53l1_6
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl loop114l1_2
  .type loop114l1_2, @function
# leaf false
loop114l1_2:
.loop114l1_2_0:
  addi sp, sp, -80
  sd s5, 0(sp)
  sd s4, 8(sp)
  sd s3, 16(sp)
  sd s2, 24(sp)
  sd s1, 32(sp)
  sd s0, 40(sp)
  sd ra, 48(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2
  mv s3, a3
  mv s4, a4
  mv s5, a5
  blt s0, zero, .loop114l1_2_2

.loop114l1_2_1:
  addi a0, s3, -1
  mv a1, s1
  mv a2, s2
  mv a3, s4
  mv a4, s5
  mv a5, s0
  call loop218l2_1
  mv a0, zero
  addi a0, s0, -1
  mv a1, s1
  mv a2, s2
  mv a3, s3
  mv a4, s4
  mv a5, s5
  call loop114l1_2
  mv a0, zero

.loop114l1_2_3:
  ld s5, 0(sp)
  ld s4, 8(sp)
  ld s3, 16(sp)
  ld s2, 24(sp)
  ld s1, 32(sp)
  ld s0, 40(sp)
  ld ra, 48(sp)
  addi sp, sp, 80
  ret

.loop114l1_2_2:
  mv a0, zero
  j .loop114l1_2_3

  .p2align 2
  .text
  .globl loop322l3_0
  .type loop322l3_0, @function
# leaf false
loop322l3_0:
.loop322l3_0_0:
  addi sp, sp, -112
  sd ra, 0(sp)
  mv a6, a0
  blt a6, zero, .loop322l3_0_2

.loop322l3_0_1:
  slli a0, a4, 3
  add a0, a3, a0
  ld a0, 0(a0)
  slli a7, a4, 3
  add a7, a3, a7
  ld a7, 0(a7)
  slli t0, a5, 3
  add a7, a7, t0
  fld fa0, 0(a7)
  slli a7, a4, 3
  add a7, a1, a7
  ld a7, 0(a7)
  slli t0, a6, 3
  add a7, a7, t0
  fld fa1, 0(a7)
  slli a7, a6, 3
  add a7, a2, a7
  ld a7, 0(a7)
  slli t0, a5, 3
  add a7, a7, t0
  fld fa2, 0(a7)
  fmul.d fa1, fa1, fa2
  fadd.d fa0, fa0, fa1
  slli a7, a5, 3
  add a0, a0, a7
  fsd fa0, 0(a0)
  addi a0, a6, -1
  call loop322l3_0
  mv a0, zero

.loop322l3_0_3:
  ld ra, 0(sp)
  addi sp, sp, 112
  ret

.loop322l3_0_2:
  mv a0, zero
  j .loop322l3_0_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_14
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/non-tail-if.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main1l0_0
  .type main1l0_0, @function
# leaf false
main1l0_0:
.main1l0_0_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  li a0, 4608218246714312622
  fmv.d.x fa0, a0
  fcvt.w.d a4, fa0, rtz
  li a0, 4616820122002590269
  fmv.d.x fa0, a0
  fcvt.w.d a2, fa0, rtz
  li a0, 4620569368692376207
  fmv.d.x fa0, a0
  fneg.d fa0, fa0
  fcvt.w.d a3, fa0, rtz
  blt a3, zero, .main1l0_0_2

.main1l0_0_1:
  mv a1, a4

.main1l0_0_3:
  blt zero, a4, .main1l0_0_5

.main1l0_0_4:
  mv a0, a2

.main1l0_0_6:
  add a0, a1, a0
  blt a2, zero, .main1l0_0_8

.main1l0_0_7:
  mv a1, a3

.main1l0_0_9:
  add a0, a0, a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

.main1l0_0_2:
  mv a1, a2
  j .main1l0_0_3

.main1l0_0_5:
  mv a0, a3
  j .main1l0_0_6

.main1l0_0_8:
  mv a1, a4
  j .main1l0_0_9

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main1l0_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/non-tail-if2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main1l0_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl main1l0_1
  .type main1l0_1, @function
# leaf false
main1l0_1:
.main1l0_1_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  addi a0, s11, -40
  andi s0, a0, -8
  mv s11, s0
  li a0, 3
  sw a0, 0(s0)
  sw a0, 4(s0)
  sw a0, 8(s0)
  sw a0, 12(s0)
  sw a0, 16(s0)
  sw a0, 20(s0)
  sw a0, 24(s0)
  sw a0, 28(s0)
  sw a0, 32(s0)
  sw a0, 36(s0)
  lw a0, 0(s0)
  li a1, 3
  bne a0, a1, .main1l0_1_2

.main1l0_1_1:
  call f2l1_0
  lw a1, 4(s0)
  add a0, a0, a1
  li a1, 67890
  add a0, a0, a1

.main1l0_1_3:
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

.main1l0_1_2:
  li a0, 7
  j .main1l0_1_3

  .p2align 2
  .text
  .globl f2l1_0
  .type f2l1_0, @function
# leaf true
f2l1_0:
.f2l1_0_0:
  addi sp, sp, -16
  li a0, 12345
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/print.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main1l0_0
  .type main1l0_0, @function
# leaf false
main1l0_0:
.main1l0_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 123
  call minimbt_print_int
  mv a0, zero
  li a0, 456
  neg a0, a0
  call minimbt_print_int
  mv a0, zero
  addi a0, zero, 789
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main1l0_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/quicksort.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main75l3_4
  .type main75l3_4, @function
# leaf false
main75l3_4:
.main75l3_4_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  addi a0, s11, -24
  andi s0, a0, -8
  mv s11, s0
  sw zero, 0(s0)
  sw zero, 4(s0)
  sw zero, 8(s0)
  sw zero, 12(s0)
  sw zero, 16(s0)
  sw zero, 20(s0)
  li a0, 10
  sw a0, 0(s0)
  li a0, 7
  sw a0, 4(s0)
  li a0, 8
  sw a0, 8(s0)
  li a0, 9
  sw a0, 12(s0)
  li a0, 1
  sw a0, 16(s0)
  li a0, 5
  sw a0, 20(s0)
  mv a0, s0
  mv a1, zero
  li a2, 5
  call quicksort59l2_3
  mv a0, zero
  lw a0, 0(s0)
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  lw a0, 4(s0)
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  lw a0, 8(s0)
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  lw a0, 12(s0)
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  lw a0, 16(s0)
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  lw a0, 20(s0)
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl T$start_10
  .type T$start_10, @function
# leaf false
T$start_10:
.T$start_10_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main75l3_4
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl partition14l1_2
  .type partition14l1_2, @function
# leaf false
partition14l1_2:
.partition14l1_2_0:
  addi sp, sp, -80
  sd s2, 0(sp)
  sd s1, 8(sp)
  sd s0, 16(sp)
  sd ra, 24(sp)
  mv s0, a0
  mv a0, a1
  mv s1, a2
  slli a1, s1, 2
  add a1, s0, a1
  lw a3, 0(a1)
  addi a1, a0, -1
  addi a2, s11, -4
  andi s2, a2, -8
  mv s11, s2
  sw a1, 0(s2)
  mv a1, s2
  mv a2, s0
  mv a4, s1
  call l26l2_1
  mv a0, zero
  lw a0, 0(s2)
  addi a0, a0, 1
  sw a0, 0(s2)
  lw a1, 0(s2)
  mv a0, s0
  mv a2, s1
  call swap1l0_0
  mv a0, zero
  lw a0, 0(s2)
  ld s2, 0(sp)
  ld s1, 8(sp)
  ld s0, 16(sp)
  ld ra, 24(sp)
  addi sp, sp, 80
  ret

  .p2align 2
  .text
  .globl quicksort59l2_3
  .type quicksort59l2_3, @function
# leaf false
quicksort59l2_3:
.quicksort59l2_3_0:
  addi sp, sp, -80
  sd s3, 0(sp)
  sd s2, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  mv s2, a0
  mv s0, a1
  mv s1, a2
  addi a0, s1, -1
  blt a0, s0, .quicksort59l2_3_2

.quicksort59l2_3_1:
  mv a0, s2
  mv a1, s0
  mv a2, s1
  call partition14l1_2
  mv s3, a0
  addi a2, s3, -1
  mv a0, s2
  mv a1, s0
  call quicksort59l2_3
  mv a0, zero
  addi a1, s3, 1
  mv a0, s2
  mv a2, s1
  call quicksort59l2_3
  mv a0, zero

.quicksort59l2_3_3:
  ld s3, 0(sp)
  ld s2, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 80
  ret

.quicksort59l2_3_2:
  mv a0, zero
  j .quicksort59l2_3_3

  .p2align 2
  .text
  .globl l26l2_1
  .type l26l2_1, @function
# leaf false
l26l2_1:
.l26l2_1_0:
  addi sp, sp, -80
  sd s4, 0(sp)
  sd s3, 8(sp)
  sd s2, 16(sp)
  sd s1, 24(sp)
  sd s0, 32(sp)
  sd ra, 40(sp)
  mv s0, a0
  mv s4, a1
  mv s2, a2
  mv s1, a3
  mv s3, a4
  addi a0, s3, -1
  blt a0, s0, .l26l2_1_2

.l26l2_1_1:
  slli a0, s0, 2
  add a0, s2, a0
  lw a0, 0(a0)
  blt s1, a0, .l26l2_1_4

.l26l2_1_3:
  lw a0, 0(s4)
  addi a0, a0, 1
  sw a0, 0(s4)
  lw a1, 0(s4)
  mv a0, s2
  mv a2, s0
  call swap1l0_0
  mv a0, zero

.l26l2_1_5:
  addi a0, s0, 1
  mv a1, s4
  mv a2, s2
  mv a3, s1
  mv a4, s3
  call l26l2_1
  mv a0, zero

.l26l2_1_6:
  ld s4, 0(sp)
  ld s3, 8(sp)
  ld s2, 16(sp)
  ld s1, 24(sp)
  ld s0, 32(sp)
  ld ra, 40(sp)
  addi sp, sp, 80
  ret

.l26l2_1_2:
  mv a0, zero
  j .l26l2_1_6

.l26l2_1_4:
  mv a0, zero
  j .l26l2_1_5

  .p2align 2
  .text
  .globl swap1l0_0
  .type swap1l0_0, @function
# leaf true
swap1l0_0:
.swap1l0_0_0:
  addi sp, sp, -48
  slli a3, a1, 2
  add a3, a0, a3
  lw a3, 0(a3)
  slli a4, a2, 2
  add a4, a0, a4
  lw a4, 0(a4)
  slli a1, a1, 2
  add a1, a0, a1
  sw a4, 0(a1)
  slli a1, a2, 2
  add a0, a0, a1
  sw a3, 0(a0)
  mv a0, zero
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_10
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/shuffle.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main39l2_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl foo1l0_0
  .type foo1l0_0, @function
# leaf false
foo1l0_0:
.foo1l0_0_0:
  addi sp, sp, -64
  sd s4, 0(sp)
  sd s3, 8(sp)
  sd s2, 16(sp)
  sd s1, 24(sp)
  sd s0, 32(sp)
  sd ra, 40(sp)
  mv s0, a1
  mv s1, a2
  mv s2, a3
  mv s3, a4
  mv s4, a5
  call minimbt_print_int
  mv a0, zero
  mv a0, s0
  call minimbt_print_int
  mv a0, zero
  mv a0, s1
  call minimbt_print_int
  mv a0, zero
  mv a0, s2
  call minimbt_print_int
  mv a0, zero
  mv a0, s3
  call minimbt_print_int
  mv a0, zero
  mv a0, s4
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld s4, 0(sp)
  ld s3, 8(sp)
  ld s2, 16(sp)
  ld s1, 24(sp)
  ld s0, 32(sp)
  ld ra, 40(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl main39l2_2
  .type main39l2_2, @function
# leaf false
main39l2_2:
.main39l2_2_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  li a0, 1
  li a1, 2
  li a2, 3
  li a3, 4
  li a4, 5
  li a5, 6
  call bar26l1_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl bar26l1_1
  .type bar26l1_1, @function
# leaf false
bar26l1_1:
.bar26l1_1_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  mv a6, a0
  mv a0, a1
  mv a7, a2
  mv a2, a3
  mv a3, a4
  mv a4, a5
  mv a1, a6
  mv a5, a7
  call foo1l0_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/spill.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl f1l0_0
  .type f1l0_0, @function
# leaf true
f1l0_0:
.f1l0_0_0:
  addi sp, sp, -320
  sd s10, 0(sp)
  sd s9, 8(sp)
  sd s8, 16(sp)
  sd s7, 24(sp)
  sd s6, 32(sp)
  sd s5, 40(sp)
  sd s4, 48(sp)
  sd s3, 56(sp)
  sd s2, 64(sp)
  sd s1, 72(sp)
  sd s0, 80(sp)
  add a4, a0, a1
  add a5, a0, a2
  add a6, a0, a3
  add a7, a1, a2
  add t0, a1, a3
  add t1, a2, a3
  add t2, a4, a5
  add t3, a4, a6
  add t4, a4, a7
  add s0, a4, t0
  add s1, a4, t1
  add s2, a5, a6
  add s3, a5, a7
  add s4, a5, t0
  add s5, a5, t1
  add s6, a6, a7
  add s7, a6, t0
  add s8, a6, t1
  add s9, a7, t0
  add s10, a7, t1
  add t5, t0, t1
  sw t5, 192(sp)
  add t5, t2, t3
  sw t5, 200(sp)
  add t5, t2, t4
  sw t5, 208(sp)
  add t5, t2, s0
  sw t5, 216(sp)
  add t5, t2, s1
  sw t5, 224(sp)
  add t5, t2, s2
  sw t5, 232(sp)
  add t5, t2, s3
  sw t5, 240(sp)
  add t5, t2, s4
  sw t5, 248(sp)
  add t5, t2, s5
  sw t5, 256(sp)
  add t5, t2, s6
  sw t5, 264(sp)
  add t5, t2, s7
  sw t5, 272(sp)
  add t5, t2, s8
  sw t5, 280(sp)
  add t5, t2, s9
  sw t5, 288(sp)
  add t5, t2, s10
  sw t5, 296(sp)
  lw t5, 192(sp)
  add t5, t2, t5
  sw t5, 304(sp)
  add a0, a0, a1
  add a0, a0, a2
  add a0, a0, a3
  add a0, a0, a4
  add a0, a0, a5
  add a0, a0, a6
  add a0, a0, a7
  add a0, a0, t0
  add a0, a0, t1
  add a0, a0, t2
  add a0, a0, t3
  add a0, a0, t4
  add a0, a0, s0
  add a0, a0, s1
  add a0, a0, s2
  add a0, a0, s3
  add a0, a0, s4
  add a0, a0, s5
  add a0, a0, s6
  add a0, a0, s7
  add a0, a0, s8
  add a0, a0, s9
  add a0, a0, s10
  lw t5, 192(sp)
  add a0, a0, t5
  lw t5, 200(sp)
  add a0, a0, t5
  lw t5, 208(sp)
  add a0, a0, t5
  lw t5, 216(sp)
  add a0, a0, t5
  lw t5, 224(sp)
  add a0, a0, t5
  lw t5, 232(sp)
  add a0, a0, t5
  lw t5, 240(sp)
  add a0, a0, t5
  lw t5, 248(sp)
  add a0, a0, t5
  lw t5, 256(sp)
  add a0, a0, t5
  lw t5, 264(sp)
  add a0, a0, t5
  lw t5, 272(sp)
  add a0, a0, t5
  lw t5, 280(sp)
  add a0, a0, t5
  lw t5, 288(sp)
  add a0, a0, t5
  lw t5, 296(sp)
  add a0, a0, t5
  lw t5, 304(sp)
  add a0, a0, t5
  neg a0, a0
  ld s10, 0(sp)
  ld s9, 8(sp)
  ld s8, 16(sp)
  ld s7, 24(sp)
  ld s6, 32(sp)
  ld s5, 40(sp)
  ld s4, 48(sp)
  ld s3, 56(sp)
  ld s2, 64(sp)
  ld s1, 72(sp)
  ld s0, 80(sp)
  addi sp, sp, 320
  ret

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main83l1_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl main83l1_1
  .type main83l1_1, @function
# leaf false
main83l1_1:
.main83l1_1_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  li a0, 1
  li a1, 2
  li a2, 3
  li a3, 4
  call f1l0_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/spill2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl f1l0_0
  .type f1l0_0, @function
# leaf true
f1l0_0:
.f1l0_0_0:
  addi sp, sp, -16
  li a0, 12345
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main6l2_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main6l2_2
  .type main6l2_2, @function
# leaf false
main6l2_2:
.main6l2_2_0:
  addi sp, sp, -160
  sd s4, 0(sp)
  sd s3, 8(sp)
  sd s2, 16(sp)
  sd s1, 24(sp)
  sd s0, 32(sp)
  sd ra, 40(sp)
  addi a0, s11, -40
  andi s0, a0, -8
  mv s11, s0
  li a0, 1
  sw a0, 0(s0)
  sw a0, 4(s0)
  sw a0, 8(s0)
  sw a0, 12(s0)
  sw a0, 16(s0)
  sw a0, 20(s0)
  sw a0, 24(s0)
  sw a0, 28(s0)
  sw a0, 32(s0)
  sw a0, 36(s0)
  call f1l0_0
  mv s1, a0
  lw s3, 0(s0)
  add s4, s3, s3
  add a5, s4, s4
  add t3, a5, a5
  add t0, t3, t3
  add a3, t0, t0
  add a0, a3, a3
  add a7, a0, a0
  add a4, a7, a7
  add a2, a4, a4
  add s2, a2, a2
  add a1, s2, s2
  add a6, a1, a1
  add t1, a6, a6
  add t4, t1, t1
  add t2, t4, t4
  lw s0, 4(s0)
  beq s0, zero, .main6l2_2_1

.main6l2_2_2:
  add s0, s3, s4
  add a5, s0, a5
  add a5, a5, t3
  add a5, a5, t0
  add a3, a5, a3
  add a0, a3, a0
  add a0, a0, a7
  add a0, a0, a4
  add a0, a0, a2
  add a0, a0, s2
  add a0, a0, a1
  add a0, a0, a6
  add a0, a0, t1
  add a0, a0, t4
  add a0, a0, t2
  add a0, a0, s1

.main6l2_2_3:
  call minimbt_print_int
  mv a0, zero
  ld s4, 0(sp)
  ld s3, 8(sp)
  ld s2, 16(sp)
  ld s1, 24(sp)
  ld s0, 32(sp)
  ld ra, 40(sp)
  addi sp, sp, 160
  ret

.main6l2_2_1:
  li a0, 67890
  call g2l1_1
  j .main6l2_2_3

  .p2align 2
  .text
  .globl g2l1_1
  .type g2l1_1, @function
# leaf true
g2l1_1:
.g2l1_1_0:
  addi sp, sp, -16
  addi a0, a0, 1
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/spill3.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl f1l0_0
  .type f1l0_0, @function
# leaf true
f1l0_0:
.f1l0_0_0:
  addi sp, sp, -304
  sd s10, 0(sp)
  sd s9, 8(sp)
  sd s8, 16(sp)
  sd s7, 24(sp)
  sd s6, 32(sp)
  sd s5, 40(sp)
  sd s4, 48(sp)
  sd s3, 56(sp)
  sd s2, 64(sp)
  sd s1, 72(sp)
  sd s0, 80(sp)
  addi a1, a0, 1
  addi a2, a1, 1
  addi a3, a2, 1
  addi a4, a3, 1
  addi a5, a4, 1
  addi a6, a5, 1
  addi a7, a6, 1
  addi t0, a7, 1
  addi t1, t0, 1
  addi t2, t1, 1
  addi t3, t2, 1
  addi t4, t3, 1
  addi s0, t4, 1
  addi s1, s0, 1
  addi s2, s1, 1
  addi s3, s2, 1
  addi s4, s3, 1
  addi s5, s4, 1
  add s6, s5, a1
  add s7, s6, a2
  add s8, s7, a3
  add s9, s8, a4
  add s10, s9, a5
  add t5, s10, a6
  sw t5, 192(sp)
  lw t5, 192(sp)
  add t5, t5, a7
  sw t5, 200(sp)
  lw t5, 200(sp)
  add t5, t5, t0
  sw t5, 208(sp)
  lw t5, 208(sp)
  add t5, t5, t1
  sw t5, 216(sp)
  lw t5, 216(sp)
  add t5, t5, t2
  sw t5, 224(sp)
  lw t5, 224(sp)
  add t5, t5, t3
  sw t5, 232(sp)
  lw t5, 232(sp)
  add t5, t5, t4
  sw t5, 240(sp)
  lw t5, 240(sp)
  add t5, t5, s0
  sw t5, 248(sp)
  lw t5, 248(sp)
  add t5, t5, s1
  sw t5, 256(sp)
  lw t5, 256(sp)
  add t5, t5, s2
  sw t5, 264(sp)
  lw t5, 264(sp)
  add t5, t5, s3
  sw t5, 272(sp)
  lw t5, 272(sp)
  add t5, t5, s4
  sw t5, 280(sp)
  lw t5, 280(sp)
  add t5, t5, a0
  sw t5, 288(sp)
  add a1, a1, a2
  add a1, a1, a3
  add a1, a1, a4
  add a1, a1, a5
  add a1, a1, a6
  add a1, a1, a7
  add a1, a1, t0
  add a1, a1, t1
  add a1, a1, t2
  add a1, a1, t3
  add a1, a1, t4
  add a1, a1, s0
  add a1, a1, s1
  add a1, a1, s2
  add a1, a1, s3
  add a1, a1, s4
  add a1, a1, s5
  add a1, a1, s6
  add a1, a1, s7
  add a1, a1, s8
  add a1, a1, s9
  add a1, a1, s10
  lw t5, 192(sp)
  add a1, a1, t5
  lw t5, 200(sp)
  add a1, a1, t5
  lw t5, 208(sp)
  add a1, a1, t5
  lw t5, 216(sp)
  add a1, a1, t5
  lw t5, 224(sp)
  add a1, a1, t5
  lw t5, 232(sp)
  add a1, a1, t5
  lw t5, 240(sp)
  add a1, a1, t5
  lw t5, 248(sp)
  add a1, a1, t5
  lw t5, 256(sp)
  add a1, a1, t5
  lw t5, 264(sp)
  add a1, a1, t5
  lw t5, 272(sp)
  add a1, a1, t5
  lw t5, 280(sp)
  add a1, a1, t5
  lw t5, 288(sp)
  add a1, a1, t5
  add a0, a1, a0
  ld s10, 0(sp)
  ld s9, 8(sp)
  ld s8, 16(sp)
  ld s7, 24(sp)
  ld s6, 32(sp)
  ld s5, 40(sp)
  ld s4, 48(sp)
  ld s3, 56(sp)
  ld s2, 64(sp)
  ld s1, 72(sp)
  ld s0, 80(sp)
  addi sp, sp, 304
  ret

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main93l1_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl main93l1_1
  .type main93l1_1, @function
# leaf false
main93l1_1:
.main93l1_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a0, zero
  call f1l0_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/sum-tail.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl sum1l0_0
  .type sum1l0_0, @function
# leaf false
sum1l0_0:
.sum1l0_0_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  bge zero, a1, .sum1l0_0_1

.sum1l0_0_2:
  add a0, a0, a1
  addi a1, a1, -1
  call sum1l0_0

.sum1l0_0_3:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.sum1l0_0_1:
  j .sum1l0_0_3

  .p2align 2
  .text
  .globl main10l1_1
  .type main10l1_1, @function
# leaf false
main10l1_1:
.main10l1_1_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a0, zero
  li a1, 10000
  call sum1l0_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main10l1_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/sum.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl sum1l0_0
  .type sum1l0_0, @function
# leaf false
sum1l0_0:
.sum1l0_0_0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv s0, a0
  bge zero, s0, .sum1l0_0_1

.sum1l0_0_2:
  addi a0, s0, -1
  call sum1l0_0
  add a0, a0, s0

.sum1l0_0_3:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.sum1l0_0_1:
  mv a0, zero
  j .sum1l0_0_3

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main8l1_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main8l1_1
  .type main8l1_1, @function
# leaf false
main8l1_1:
.main8l1_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 10000
  call sum1l0_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4




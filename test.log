Testing test/test_src/ack.mbt
  .p2align 3
  .globl ack
  .type ack, @function
# leaf false
ack:
.ack_b0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  bge zero, a0, .ack_b1
  j .ack_b2

.ack_b1:
  addi a0, a1, 1
  j .ack_b6

.ack_b5:
  j .ack_b6

.ack_b2:
  bge zero, a1, .ack_b3
  j .ack_b4

.ack_b6:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.ack_b4:
  addi s0, a0, -1
  addi a1, a1, -1
  call ack
  mv a1, a0
  mv a0, s0
  call ack
  j .ack_b5

.ack_b3:
  addi a0, a0, -1
  li a1, 1
  call ack
  j .ack_b5

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 3
  li a1, 8
  call ack
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/adder.mbt
  .p2align 3
  .globl adder
  .type adder, @function
# leaf true
adder:
.adder_b0:
  addi sp, sp, -32
  mv a2, s10
  mv a1, a0
  lw a0, 8(a2)
  add a0, a0, a1
  addi sp, sp, 32
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl make_adder
  .type make_adder, @function
# leaf true
make_adder:
.make_adder_b0:
  addi sp, sp, -32
  mv a2, a0
  addi a0, s11, -16
  andi a1, a0, -8
  mv s11, a1
  la a0, adder
  sd a0, 0(a1)
  sd a2, 8(a1)
  mv a0, a1
  addi sp, sp, 32
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 3
  call make_adder
  mv s10, a0
  ld a1, 0(a0)
  li a0, 7
  jalr a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/adder2.mbt
  .p2align 3
  .globl adder
  .type adder, @function
# leaf true
adder:
.adder_b0:
  addi sp, sp, -32
  mv a2, s10
  mv a1, a0
  lw a0, 8(a2)
  add a0, a0, a1
  addi sp, sp, 32
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl make_adder
  .type make_adder, @function
# leaf true
make_adder:
.make_adder_b0:
  addi sp, sp, -32
  mv a2, a0
  addi a0, s11, -16
  andi a1, a0, -8
  mv s11, a1
  la a0, adder
  sd a0, 0(a1)
  sd a2, 8(a1)
  mv a0, a1
  addi sp, sp, 32
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -48
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  li a0, 2
  call make_adder
  mv s0, a0
  li a0, 3
  call make_adder
  mv s1, a0
  mv s10, s0
  ld a1, 0(s0)
  li a0, 10
  jalr a1
  mv s0, a0
  mv s10, s1
  ld a1, 0(s1)
  li a0, 20
  jalr a1
  add a0, s0, a0
  call minimbt_print_int
  mv a0, zero
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 48
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/bf.mbt
  .p2align 3
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl lp
  .type lp, @function
# leaf false
lp:
.lp_b0:
  addi sp, sp, -64
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv s1, s10
  ld a2, 8(s1)
  ld a3, 16(s1)
  lw a0, 24(s1)
  ld a1, 32(s1)
  ld s0, 40(s1)
  lw a2, 0(a2)
  slli a2, a2, 2
  add a2, a3, a2
  lw a2, 0(a2)
  beq a2, zero, .lp_b1
  j .lp_b2

.lp_b1:
  mv a0, zero
  j .lp_b3

.lp_b2:
  addi a0, a0, 1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  sw a0, 0(s0)
  mv s10, s1
  ld a0, 0(s1)
  jalr a0
  mv a0, zero
  j .lp_b3

.lp_b3:
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 64
  ret

  .p2align 3
  .globl aux
  .type aux, @function
# leaf false
aux:
.aux_b0:
  addi sp, sp, -64
  sd s2, 0(sp)
  sd s1, 8(sp)
  sd s0, 16(sp)
  sd ra, 24(sp)
  mv s1, s10
  mv s0, a0
  lw a0, 8(s1)
  ld a3, 16(s1)
  ld a1, 24(s1)
  ld a2, 32(s1)
  bge s0, a0, .aux_b1
  j .aux_b2

.aux_b19:
  j .aux_b20

.aux_b1:
  mv a0, s0
  j .aux_b24

.aux_b7:
  lw a0, 0(a1)
  lw a1, 0(a1)
  slli a1, a1, 2
  add a1, a2, a1
  lw a1, 0(a1)
  addi a1, a1, 1
  slli a0, a0, 2
  add a0, a2, a0
  sw a1, 0(a0)
  addi a0, s0, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux_b21

.aux_b13:
  addi a0, s11, -4
  andi s2, a0, -8
  mv s11, s2
  sw s0, 0(s2)
  addi a0, s11, -48
  andi a0, a0, -8
  mv s11, a0
  la a3, lp
  sd a3, 0(a0)
  sd a1, 8(a0)
  sd a2, 16(a0)
  sd s0, 24(a0)
  sd s1, 32(a0)
  sd s2, 40(a0)
  mv s10, a0
  ld a0, 0(a0)
  jalr a0
  mv a0, zero
  lw a0, 0(s2)
  addi a0, a0, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux_b18

.aux_b22:
  j .aux_b23

.aux_b5:
  lw a0, 0(a1)
  addi a0, a0, -1
  sw a0, 0(a1)
  addi a0, s0, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux_b22

.aux_b4:
  li a0, 2
  beq a3, a0, .aux_b5
  j .aux_b6

.aux_b8:
  li a0, 4
  beq a3, a0, .aux_b9
  j .aux_b10

.aux_b17:
  j .aux_b18

.aux_b2:
  slli a0, s0, 2
  add a0, a3, a0
  lw a3, 0(a0)
  li a0, 1
  beq a3, a0, .aux_b3
  j .aux_b4

.aux_b24:
  ld s2, 0(sp)
  ld s1, 8(sp)
  ld s0, 16(sp)
  ld ra, 24(sp)
  addi sp, sp, 64
  ret

.aux_b6:
  li a0, 3
  beq a3, a0, .aux_b7
  j .aux_b8

.aux_b20:
  j .aux_b21

.aux_b12:
  li a0, 7
  beq a3, a0, .aux_b13
  j .aux_b14

.aux_b23:
  j .aux_b24

.aux_b3:
  lw a0, 0(a1)
  addi a0, a0, 1
  sw a0, 0(a1)
  addi a0, s0, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux_b23

.aux_b9:
  lw a0, 0(a1)
  lw a1, 0(a1)
  slli a1, a1, 2
  add a1, a2, a1
  lw a1, 0(a1)
  addi a1, a1, -1
  slli a0, a0, 2
  add a0, a2, a0
  sw a1, 0(a0)
  addi a0, s0, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux_b20

.aux_b16:
  mv a0, s0
  j .aux_b17

.aux_b10:
  li a0, 5
  beq a3, a0, .aux_b11
  j .aux_b12

.aux_b11:
  lw a0, 0(a1)
  slli a0, a0, 2
  add a0, a2, a0
  lw a0, 0(a0)
  call minimbt_print_char
  mv a0, zero
  addi a0, s0, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux_b19

.aux_b21:
  j .aux_b22

.aux_b18:
  j .aux_b19

.aux_b14:
  li a0, 8
  beq a3, a0, .aux_b15
  j .aux_b16

.aux_b15:
  mv a0, s0
  j .aux_b17

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl bf
  .type bf, @function
# leaf false
bf:
.bf_b0:
  addi sp, sp, -64
  sd s3, 0(sp)
  sd s2, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  mv s1, a0
  mv s0, a1
  addi a0, s11, -4
  andi s3, a0, -8
  mv s11, s3
  sw zero, 0(s3)
  li a0, 4096
  sub a0, s11, a0
  andi s2, a0, -8
  mv s11, s2
  li a0, 1024
  mv a1, a0
  mv a0, s2
  mv a2, zero
  call memseti32
  addi a0, s11, -40
  andi a0, a0, -8
  mv s11, a0
  la a1, aux
  sd a1, 0(a0)
  sd s1, 8(a0)
  sd s0, 16(a0)
  sd s3, 24(a0)
  sd s2, 32(a0)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  mv a0, zero
  ld s3, 0(sp)
  ld s2, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 64
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  addi a0, s11, -92
  andi a1, a0, -8
  mv s11, a1
  sw zero, 0(a1)
  sw zero, 4(a1)
  sw zero, 8(a1)
  sw zero, 12(a1)
  sw zero, 16(a1)
  sw zero, 20(a1)
  sw zero, 24(a1)
  sw zero, 28(a1)
  sw zero, 32(a1)
  sw zero, 36(a1)
  sw zero, 40(a1)
  sw zero, 44(a1)
  sw zero, 48(a1)
  sw zero, 52(a1)
  sw zero, 56(a1)
  sw zero, 60(a1)
  sw zero, 64(a1)
  sw zero, 68(a1)
  sw zero, 72(a1)
  sw zero, 76(a1)
  sw zero, 80(a1)
  sw zero, 84(a1)
  sw zero, 88(a1)
  li a0, 3
  sw a0, 0(a1)
  li a0, 3
  sw a0, 4(a1)
  li a0, 3
  sw a0, 8(a1)
  li a0, 3
  sw a0, 12(a1)
  li a0, 3
  sw a0, 16(a1)
  li a0, 3
  sw a0, 20(a1)
  li a0, 3
  sw a0, 24(a1)
  li a0, 3
  sw a0, 28(a1)
  li a0, 7
  sw a0, 32(a1)
  li a0, 1
  sw a0, 36(a1)
  li a0, 3
  sw a0, 40(a1)
  li a0, 3
  sw a0, 44(a1)
  li a0, 3
  sw a0, 48(a1)
  li a0, 3
  sw a0, 52(a1)
  li a0, 3
  sw a0, 56(a1)
  li a0, 3
  sw a0, 60(a1)
  li a0, 3
  sw a0, 64(a1)
  li a0, 3
  sw a0, 68(a1)
  li a0, 2
  sw a0, 72(a1)
  li a0, 4
  sw a0, 76(a1)
  li a0, 8
  sw a0, 80(a1)
  li a0, 1
  sw a0, 84(a1)
  li a0, 5
  sw a0, 88(a1)
  li a0, 23
  call bf
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/cls-bug.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf true
f:
.f_b0:
  addi sp, sp, -16
  addi a0, a0, 123
  addi sp, sp, 16
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl g
  .type g, @function
# leaf true
g:
.g_b0:
  addi sp, sp, -16
  addi a0, s11, -8
  andi a1, a0, -8
  mv s11, a1
  la a0, f
  sd a0, 0(a1)
  mv a0, a1
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 456
  call g
  mv s10, a0
  ld a1, 0(a0)
  li a0, 789
  jalr a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/cls-bug2.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf false
f:
.f_b0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv s0, a0
  bge s0, zero, .f_b1
  j .f_b2

.f_b3:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.f_b1:
  mv a0, s0
  call minimbt_print_int
  mv a0, zero
  addi a0, s11, -8
  andi a1, a0, -8
  mv s11, a1
  la a0, f
  sd a0, 0(a1)
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  sd a1, 0(a0)
  ld a1, 0(a0)
  addi a0, s0, -1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mv a0, zero
  j .f_b3

.f_b2:
  mv a0, zero
  j .f_b3

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 9
  call f
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/cls-rec.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf false
f:
.f_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  beq a0, zero, .f_b1
  j .f_b2

.f_b3:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.f_b1:
  mv a0, zero
  j .f_b3

.f_b2:
  addi a0, a0, -1
  call f
  mv a1, a0
  la a0, x.1
  lw a0, 0(a0)
  add a0, a0, a1
  j .f_b3

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl thunk_x.1
  .type thunk_x.1, @function
# leaf true
thunk_x.1:
.thunk_x.1_b0:
  addi sp, sp, -16
  li a0, 10
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_x.1
  la t5, x.1
  sw a0, 0(t5)
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 12
  call f
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl x.1
  .type x.1, @object
  .bss
x.1:
  .zero 4
  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/cls-reg-bug.mbt
  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl g
  .type g, @function
# leaf false
g:
.g_b0:
  addi sp, sp, -112
  sd ra, 0(sp)
  mv a1, s10
  mv a2, a0
  lw t1, 8(a1)
  lw a0, 16(a1)
  lw t2, 24(a1)
  lw t3, 32(a1)
  lw t0, 40(a1)
  lw a7, 48(a1)
  lw a5, 56(a1)
  lw a6, 64(a1)
  lw a3, 72(a1)
  lw a4, 80(a1)
  add a0, t1, a0
  add a0, a0, t2
  add a0, a0, t3
  add a0, a0, t0
  add a0, a0, a7
  add a0, a0, a5
  add a0, a0, a6
  add a0, a0, a3
  add a0, a0, a4
  bge zero, a2, .g_b1
  j .g_b2

.g_b2:
  j .g_b3

.g_b3:
  ld ra, 0(sp)
  addi sp, sp, 112
  ret

.g_b1:
  neg a0, a2
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  j .g_b3

  .p2align 3
  .globl h
  .type h, @function
# leaf false
h:
.h_b0:
  addi sp, sp, -112
  sd ra, 0(sp)
  mv a2, a0
  lw a0, 0(a2)
  lw a4, 4(a2)
  lw a6, 8(a2)
  lw t0, 12(a2)
  lw a1, 16(a2)
  lw t2, 20(a2)
  lw t1, 24(a2)
  lw a5, 28(a2)
  lw a7, 32(a2)
  lw a3, 36(a2)
  addi a2, s11, -88
  andi a2, a2, -8
  mv s11, a2
  la t3, g
  sd t3, 0(a2)
  sd a0, 8(a2)
  sd a4, 16(a2)
  sd a6, 24(a2)
  sd t0, 32(a2)
  sd a1, 40(a2)
  sd t2, 48(a2)
  sd t1, 56(a2)
  sd a5, 64(a2)
  sd a7, 72(a2)
  sd a3, 80(a2)
  mv s10, a2
  ld a1, 0(a2)
  li a0, 1
  jalr a1
  ld ra, 0(sp)
  addi sp, sp, 112
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  addi a0, s11, -80
  andi a1, a0, -8
  mv s11, a1
  li a0, 1
  sd a0, 0(a1)
  li a0, 2
  sd a0, 8(a1)
  li a0, 3
  sd a0, 16(a1)
  li a0, 4
  sd a0, 24(a1)
  li a0, 5
  sd a0, 32(a1)
  li a0, 6
  sd a0, 40(a1)
  li a0, 7
  sd a0, 48(a1)
  li a0, 8
  sd a0, 56(a1)
  li a0, 9
  sd a0, 64(a1)
  li a0, 10
  sd a0, 72(a1)
  mv a0, a1
  call h
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/debug.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf false
f:
.f_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, a0
  addi a0, s11, -16
  andi a2, a0, -8
  mv s11, a2
  la a0, g
  sd a0, 0(a2)
  sd a1, 8(a2)
  li a1, 1
  li a0, 1
  beq a1, a0, .f_b1
  j .f_b2

.f_b3:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.f_b1:
  li a0, 1
  call f
  j .f_b3

.f_b2:
  mv s10, a2
  ld a1, 0(a2)
  li a0, 2
  jalr a1
  j .f_b3

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl useless
  .type useless, @function
# leaf true
useless:
.useless_b0:
  addi sp, sp, -16
  li a0, 10
  addi sp, sp, 16
  ret

  .p2align 3
  .globl g
  .type g, @function
# leaf true
g:
.g_b0:
  addi sp, sp, -16
  mv a1, s10
  lw a0, 8(a1)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl dummy
  .type dummy, @function
# leaf true
dummy:
.dummy_b0:
  addi sp, sp, -16
  addi sp, sp, 16
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf true
main:
.main_b0:
  addi sp, sp, 0
  mv a0, zero
  addi sp, sp, 0
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/even-odd.mbt
  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 789
  call even
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl even
  .type even, @function
# leaf false
even:
.even_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a2, a0
  addi a0, s11, -8
  andi a1, a0, -8
  mv s11, a1
  la a0, odd
  sd a0, 0(a1)
  bge a2, zero, .even_b1
  j .even_b2

.even_b3:
  la a0, t.1
  lw a0, 0(a0)
  j .even_b5

.even_b5:
  j .even_b6

.even_b1:
  beq a2, zero, .even_b3
  j .even_b4

.even_b6:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.even_b4:
  addi a0, a2, -1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  j .even_b5

.even_b2:
  addi a0, a2, 1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  j .even_b6

  .p2align 3
  .globl odd
  .type odd, @function
# leaf false
odd:
.odd_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, s10
  bge a0, zero, .odd_b1
  j .odd_b2

.odd_b3:
  la a0, f.2
  lw a0, 0(a0)
  j .odd_b5

.odd_b1:
  beq a0, zero, .odd_b3
  j .odd_b4

.odd_b4:
  addi a0, a0, -1
  call even
  j .odd_b5

.odd_b6:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.odd_b5:
  j .odd_b6

.odd_b2:
  addi a0, a0, 1
  call even
  j .odd_b6

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl thunk_t.1
  .type thunk_t.1, @function
# leaf true
thunk_t.1:
.thunk_t.1_b0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_t.1
  la t5, t.1
  sw a0, 0(t5)
  call thunk_f.2
  la t5, f.2
  sw a0, 0(t5)
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl thunk_f.2
  .type thunk_f.2, @function
# leaf true
thunk_f.2:
.thunk_f.2_b0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 3
  .globl t.1
  .type t.1, @object
  .bss
t.1:
  .zero 4
  .p2align 3
  .globl f.2
  .type f.2, @object
  .bss
f.2:
  .zero 4
  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/fib.mbt
  .p2align 3
  .globl fib
  .type fib, @function
# leaf false
fib:
.fib_b0:
  addi sp, sp, -32
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv s0, a0
  li a0, 1
  bge a0, s0, .fib_b1
  j .fib_b2

.fib_b3:
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 32
  ret

.fib_b2:
  addi a0, s0, -1
  call fib
  mv s1, a0
  addi a0, s0, -2
  call fib
  add a0, s1, a0
  j .fib_b3

.fib_b1:
  mv a0, s0
  j .fib_b3

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 30
  call fib
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/float.mbt
  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -48
  sd ra, 0(sp)
  li a0, 4623113902481840538
  fmv.d.x fa0, a0
  fneg.d fa0, fa0
  fabs.d fa0, fa0
  fsqrt.d fa0, fa0
  call minimbt_cos
  call minimbt_sin
  fmv.d fa1, fa0
  li a0, 4616752568008179712
  fmv.d.x fa0, a0
  fadd.d fa1, fa1, fa0
  li a0, 4619229547803233485
  fmv.d.x fa2, a0
  li a0, 4621199872640208077
  fmv.d.x fa0, a0
  fmul.d fa2, fa2, fa0
  li a0, 4608238818662014491
  fmv.d.x fa0, a0
  fdiv.d fa0, fa2, fa0
  fsub.d fa1, fa1, fa0
  li a0, 1000000
  fcvt.d.w fa0, a0
  fmul.d fa0, fa1, fa0
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/funcomp.mbt
  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl dec
  .type dec, @function
# leaf true
dec:
.dec_b0:
  addi sp, sp, -16
  addi a0, a0, -1
  addi sp, sp, 16
  ret

  .p2align 3
  .globl compose
  .type compose, @function
# leaf true
compose:
.compose_b0:
  addi sp, sp, -32
  mv a3, a0
  mv a2, a1
  addi a0, s11, -24
  andi a1, a0, -8
  mv s11, a1
  la a0, composed
  sd a0, 0(a1)
  sd a3, 8(a1)
  sd a2, 16(a1)
  mv a0, a1
  addi sp, sp, 32
  ret

  .p2align 3
  .globl dbl
  .type dbl, @function
# leaf true
dbl:
.dbl_b0:
  addi sp, sp, -16
  add a0, a0, a0
  addi sp, sp, 16
  ret

  .p2align 3
  .globl composed
  .type composed, @function
# leaf false
composed:
.composed_b0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a2, s10
  ld a1, 8(a2)
  ld s0, 16(a2)
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl inc
  .type inc, @function
# leaf true
inc:
.inc_b0:
  addi sp, sp, -16
  addi a0, a0, 1
  addi sp, sp, 16
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  addi a0, s11, -8
  andi a1, a0, -8
  mv s11, a1
  la a0, dbl
  sd a0, 0(a1)
  addi a0, s11, -8
  andi a2, a0, -8
  mv s11, a2
  la a0, dec
  sd a0, 0(a2)
  mv a0, a1
  mv a1, a2
  call compose
  mv a1, a0
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a2, inc
  sd a2, 0(a0)
  call compose
  mv s10, a0
  ld a1, 0(a0)
  li a0, 123
  jalr a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/gcd.mbt
  .p2align 3
  .globl gcd
  .type gcd, @function
# leaf false
gcd:
.gcd_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  beq a0, zero, .gcd_b1
  j .gcd_b2

.gcd_b6:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.gcd_b1:
  mv a0, a1
  j .gcd_b6

.gcd_b4:
  sub a2, a0, a1
  mv a0, a1
  mv a1, a2
  call gcd
  j .gcd_b5

.gcd_b3:
  sub a1, a1, a0
  call gcd
  j .gcd_b5

.gcd_b2:
  bge a1, a0, .gcd_b3
  j .gcd_b4

.gcd_b5:
  j .gcd_b6

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 21600
  li a1, 337500
  call gcd
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/id.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf true
f:
.f_b0:
  addi sp, sp, -16
  addi a0, a0, 1
  addi sp, sp, 16
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 1000
  call f
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/inprod-loop.mbt
  .p2align 3
  .globl inprod
  .type inprod, @function
# leaf false
inprod:
.inprod_b0:
  addi sp, sp, -64
  sd ra, 0(sp)
  mv a3, a0
  fmv.d fa2, fa0
  mv a0, a2
  bge a0, zero, .inprod_b1
  j .inprod_b2

.inprod_b3:
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

.inprod_b1:
  slli a2, a0, 3
  add a2, a3, a2
  fld fa1, 0(a2)
  slli a2, a0, 3
  add a2, a1, a2
  fld fa0, 0(a2)
  fmul.d fa0, fa1, fa0
  fadd.d fa0, fa2, fa0
  addi a2, a0, -1
  mv a0, a3
  call inprod
  j .inprod_b3

.inprod_b2:
  fmv.d fa0, fa2
  j .inprod_b3

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -48
  sd ra, 0(sp)
  addi a0, s11, -24
  andi a1, a0, -8
  mv s11, a1
  li a0, 4608218246714312622
  fmv.d.x fa0, a0
  fsd fa0, 0(a1)
  fsd fa0, 8(a1)
  fsd fa0, 16(a1)
  addi a0, s11, -24
  andi a2, a0, -8
  mv s11, a2
  li a0, 4616820122002590269
  fmv.d.x fa0, a0
  fsd fa0, 0(a2)
  fsd fa0, 8(a2)
  fsd fa0, 16(a2)
  mv a0, a1
  mv a1, a2
  fmv.d.x fa0, zero
  li a2, 2
  call inprod
  fmv.d fa1, fa0
  li a0, 4696837146684686336
  fmv.d.x fa0, a0
  fmul.d fa0, fa0, fa1
  call minimbt_truncate
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/inprod-rec.mbt
  .p2align 3
  .globl inprod
  .type inprod, @function
# leaf false
inprod:
.inprod_b0:
  addi sp, sp, -64
  fsd fs0, 0(sp)
  sd ra, 8(sp)
  mv a3, a0
  mv a0, a2
  bge a0, zero, .inprod_b1
  j .inprod_b2

.inprod_b3:
  fld fs0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 64
  ret

.inprod_b1:
  slli a2, a0, 3
  add a2, a3, a2
  fld fa1, 0(a2)
  slli a2, a0, 3
  add a2, a1, a2
  fld fa0, 0(a2)
  fmul.d fs0, fa1, fa0
  addi a2, a0, -1
  mv a0, a3
  call inprod
  fadd.d fa0, fs0, fa0
  j .inprod_b3

.inprod_b2:
  fmv.d.x fa0, zero
  j .inprod_b3

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -48
  sd ra, 0(sp)
  addi a0, s11, -24
  andi a1, a0, -8
  mv s11, a1
  li a0, 4608218246714312622
  fmv.d.x fa0, a0
  fsd fa0, 0(a1)
  fsd fa0, 8(a1)
  fsd fa0, 16(a1)
  addi a0, s11, -24
  andi a2, a0, -8
  mv s11, a2
  li a0, 4616820122002590269
  fmv.d.x fa0, a0
  fsd fa0, 0(a2)
  fsd fa0, 8(a2)
  fsd fa0, 16(a2)
  mv a0, a1
  mv a1, a2
  li a2, 2
  call inprod
  fmv.d fa1, fa0
  li a0, 4696837146684686336
  fmv.d.x fa0, a0
  fmul.d fa0, fa0, fa1
  call minimbt_truncate
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/inprod.mbt
  .p2align 3
  .globl gety
  .type gety, @function
# leaf true
gety:
.gety_b0:
  addi sp, sp, -16
  fld fa0, 8(a0)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl getx
  .type getx, @function
# leaf true
getx:
.getx_b0:
  addi sp, sp, -16
  fld fa0, 0(a0)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl inprod
  .type inprod, @function
# leaf false
inprod:
.inprod_b0:
  addi sp, sp, -48
  fsd fs1, 0(sp)
  fsd fs0, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  mv s1, a0
  mv s0, a1
  mv a0, s1
  call getx
  fmv.d fs0, fa0
  mv a0, s0
  call getx
  fmul.d fs1, fs0, fa0
  mv a0, s1
  call gety
  fmv.d fs0, fa0
  mv a0, s0
  call gety
  fmul.d fa0, fs0, fa0
  fadd.d fs0, fs1, fa0
  mv a0, s1
  call getz
  fmv.d fs1, fa0
  mv a0, s0
  call getz
  fmul.d fa0, fs1, fa0
  fadd.d fa0, fs0, fa0
  fld fs1, 0(sp)
  fld fs0, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 48
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl getz
  .type getz, @function
# leaf true
getz:
.getz_b0:
  addi sp, sp, -16
  fld fa0, 16(a0)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -48
  sd ra, 0(sp)
  addi a0, s11, -24
  andi a1, a0, -8
  mv s11, a1
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  fsd fa0, 0(a1)
  li a0, 4611686018427387904
  fmv.d.x fa0, a0
  fsd fa0, 8(a1)
  li a0, 4613937818241073152
  fmv.d.x fa0, a0
  fsd fa0, 16(a1)
  addi a0, s11, -24
  andi a2, a0, -8
  mv s11, a2
  li a0, 4616189618054758400
  fmv.d.x fa0, a0
  fsd fa0, 0(a2)
  li a0, 4617315517961601024
  fmv.d.x fa0, a0
  fsd fa0, 8(a2)
  li a0, 4618441417868443648
  fmv.d.x fa0, a0
  fsd fa0, 16(a2)
  mv a0, a1
  mv a1, a2
  call inprod
  fmv.d fa1, fa0
  li a0, 4696837146684686336
  fmv.d.x fa0, a0
  fmul.d fa0, fa0, fa1
  call minimbt_truncate
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/join-reg.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf true
f:
.f_b0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl h
  .type h, @function
# leaf true
h:
.h_b0:
  addi sp, sp, -16
  li a0, 789
  addi sp, sp, 16
  ret

  .p2align 3
  .globl g
  .type g, @function
# leaf true
g:
.g_b0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -32
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv a0, zero
  call f
  mv s1, a0
  mv a0, zero
  call g
  mv s0, a0
  mv a0, zero
  call h
  beq a0, zero, .main_b1
  j .main_b2

.main_b3:
  call minimbt_print_int
  mv a0, zero
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 32
  ret

.main_b1:
  sub a0, s1, s0
  j .main_b3

.main_b2:
  sub a0, s0, s1
  add a0, a0, s1
  add a0, a0, s0
  j .main_b3

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/join-reg2.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf true
f:
.f_b0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl h
  .type h, @function
# leaf true
h:
.h_b0:
  addi sp, sp, -16
  li a0, 789
  addi sp, sp, 16
  ret

  .p2align 3
  .globl g
  .type g, @function
# leaf true
g:
.g_b0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a0, zero
  call f
  mv s0, a0
  bge zero, s0, .main_b1
  j .main_b2

.main_b3:
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.main_b1:
  mv a0, zero
  call g
  add a0, a0, s0
  j .main_b3

.main_b2:
  mv a0, zero
  call h
  sub a0, a0, s0
  add a0, a0, s0
  j .main_b3

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/join-stack.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf true
f:
.f_b0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl h
  .type h, @function
# leaf true
h:
.h_b0:
  addi sp, sp, -16
  li a0, 789
  addi sp, sp, 16
  ret

  .p2align 3
  .globl g
  .type g, @function
# leaf true
g:
.g_b0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -32
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv a0, zero
  call f
  mv s1, a0
  mv a0, zero
  call g
  mv s0, a0
  mv a0, zero
  call h
  beq a0, zero, .main_b1
  j .main_b2

.main_b3:
  call minimbt_print_int
  mv a0, zero
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 32
  ret

.main_b1:
  addi a0, s1, 1
  j .main_b3

.main_b2:
  addi a0, s0, 2
  add a0, a0, s1
  add a0, a0, s0
  j .main_b3

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/join-stack2.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf true
f:
.f_b0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl g
  .type g, @function
# leaf true
g:
.g_b0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a0, zero
  call f
  mv s0, a0
  bge zero, s0, .main_b1
  j .main_b2

.main_b3:
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.main_b1:
  mv a0, zero
  call g
  add a0, a0, s0
  j .main_b3

.main_b2:
  add a0, s0, s0
  j .main_b3

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/join-stack3.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf true
f:
.f_b0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl h
  .type h, @function
# leaf true
h:
.h_b0:
  addi sp, sp, -16
  li a0, 789
  addi sp, sp, 16
  ret

  .p2align 3
  .globl g
  .type g, @function
# leaf true
g:
.g_b0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a0, zero
  call f
  mv s0, a0
  bge zero, s0, .main_b1
  j .main_b2

.main_b3:
  add a0, a0, s0
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.main_b1:
  mv a0, zero
  call g
  j .main_b3

.main_b2:
  mv a0, zero
  call h
  j .main_b3

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/landins_knot.mbt
  .p2align 3
  .globl init
  .type init, @function
# leaf false
init:
.init_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 10
  call g
  call minimbt_print_int
  mv a0, zero
  li a0, 31
  call g
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl thunk__21
  .type thunk__21, @function
# leaf true
thunk__21:
.thunk__21_b0:
  addi sp, sp, -16
  li a0, 5
  addi sp, sp, 16
  ret

  .p2align 3
  .globl thunk_factorial.18
  .type thunk_factorial.18, @function
# leaf false
thunk_factorial.18:
.thunk_factorial.18_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  addi a0, s11, -8
  andi a1, a0, -8
  mv s11, a1
  la a0, g
  sd a0, 0(a1)
  mv a0, a1
  call landins_kont
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 3
  .globl dummy
  .type dummy, @function
# leaf true
dummy:
.dummy_b0:
  addi sp, sp, -16
  addi sp, sp, 16
  ret

  .p2align 3
  .globl landins_kont
  .type landins_kont, @function
# leaf false
landins_kont:
.landins_kont_b0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a2, a0
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a1, dummy
  sd a1, 0(a0)
  addi a1, s11, -8
  andi s0, a1, -8
  mv s11, s0
  sd a0, 0(s0)
  addi a0, s11, -16
  andi a0, a0, -8
  mv s11, a0
  la a1, aux
  sd a1, 0(a0)
  sd s0, 8(a0)
  mv s10, a2
  ld a1, 0(a2)
  jalr a1
  sd a0, 0(s0)
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

  .p2align 3
  .globl thunk_a.22
  .type thunk_a.22, @function
# leaf false
thunk_a.22:
.thunk_a.22_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  la a0, factorial.18
  ld a1, 0(a0)
  la a0, _21
  lw a0, 0(a0)
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call init
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl aux
  .type aux, @function
# leaf false
aux:
.aux_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, s10
  ld a1, 8(a1)
  ld a1, 0(a1)
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 3
  .globl h
  .type h, @function
# leaf false
h:
.h_b0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a1, s10
  mv s0, a0
  ld a0, 8(a1)
  beq s0, zero, .h_b1
  j .h_b2

.h_b1:
  li a0, 1
  j .h_b3

.h_b3:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

.h_b2:
  addi a1, s0, -1
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  jalr a2
  mulw a0, s0, a0
  j .h_b3

  .p2align 3
  .globl g
  .type g, @function
# leaf true
g:
.g_b0:
  addi sp, sp, -32
  mv a2, a0
  addi a0, s11, -16
  andi a1, a0, -8
  mv s11, a1
  la a0, h
  sd a0, 0(a1)
  sd a2, 8(a1)
  mv a0, a1
  addi sp, sp, 32
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_factorial.18
  la t5, factorial.18
  sd a0, 0(t5)
  call thunk__21
  la t5, _21
  sw a0, 0(t5)
  call thunk_a.22
  la t5, a.22
  sw a0, 0(t5)
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl _21
  .type _21, @object
  .bss
_21:
  .zero 4
  .p2align 3
  .globl a.22
  .type a.22, @object
  .bss
a.22:
  .zero 4
  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4
  .p2align 3
  .globl factorial.18
  .type factorial.18, @object
  .bss
factorial.18:
  .zero 8



Testing test/test_src/matmul-flat.mbt
  .p2align 3
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

memsetf64:
  blez a1, .memsetf64_b1
  slli a1, a1, 3
  add a1, a1, a0
.memsetf64_b0:
  fsd fa0, 0(a0)
  addi a0, a0, 8
  bne a0, a1, .memsetf64_b0
.memsetf64_b1:
  ret

  .p2align 3
  .globl loop2
  .type loop2, @function
# leaf false
loop2:
.loop2_b0:
  addi sp, sp, -80
  sd s5, 0(sp)
  sd s4, 8(sp)
  sd s3, 16(sp)
  sd s2, 24(sp)
  sd s1, 32(sp)
  sd s0, 40(sp)
  sd ra, 48(sp)
  mv s3, a0
  mv s4, a1
  mv s5, a2
  mv s2, a3
  mv s1, a4
  mv s0, a5
  bge s5, zero, .loop2_b1
  j .loop2_b2

.loop2_b2:
  mv a0, zero
  j .loop2_b3

.loop2_b3:
  ld s5, 0(sp)
  ld s4, 8(sp)
  ld s3, 16(sp)
  ld s2, 24(sp)
  ld s1, 32(sp)
  ld s0, 40(sp)
  ld ra, 48(sp)
  addi sp, sp, 80
  ret

.loop2_b1:
  addi a2, s4, -1
  mv a0, s3
  mv a1, s5
  mv a3, s2
  mv a4, s1
  mv a5, s0
  call loop3
  mv a0, zero
  addi a2, s5, -1
  mv a0, s3
  mv a1, s4
  mv a3, s2
  mv a4, s1
  mv a5, s0
  call loop2
  mv a0, zero
  j .loop2_b3

  .p2align 3
  .globl make_arr
  .type make_arr, @function
# leaf false
make_arr:
.make_arr_b0:
  addi sp, sp, -64
  sd s3, 0(sp)
  sd s2, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  mv a3, s10
  mv s1, a0
  mv s3, a1
  ld s2, 8(a3)
  slli a0, s1, 3
  sub a0, s11, a0
  andi s0, a0, -8
  mv s11, s0
  mv a1, s1
  mv a0, s0
  call memseti32
  addi a0, s1, -1
  mv s10, s2
  ld a3, 0(s2)
  mv a1, s3
  mv a2, s0
  jalr a3
  mv a0, zero
  mv a0, s0
  ld s3, 0(sp)
  ld s2, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 64
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -80
  sd s3, 0(sp)
  sd s2, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  addi a0, s11, 0
  andi s0, a0, -8
  mv s11, s0
  fmv.d.x fa0, zero
  addi a0, s11, -8
  andi a1, a0, -8
  mv s11, a1
  la a0, init_arr
  sd a0, 0(a1)
  addi a0, s11, -16
  andi s1, a0, -8
  mv s11, s1
  la a0, make_arr
  sd a0, 0(s1)
  sd a1, 8(s1)
  mv s10, s1
  ld a3, 0(s1)
  li a0, 2
  li a1, 3
  mv a2, s0
  jalr a3
  mv s3, a0
  mv s10, s1
  ld a3, 0(s1)
  li a0, 3
  li a1, 2
  mv a2, s0
  jalr a3
  mv s2, a0
  mv s10, s1
  ld a3, 0(s1)
  li a0, 2
  li a1, 2
  mv a2, s0
  jalr a3
  mv s0, a0
  ld a0, 0(s3)
  li a1, 4607182418800017408
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 0(s3)
  li a1, 4611686018427387904
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 0(s3)
  li a1, 4613937818241073152
  fmv.d.x fa0, a1
  fsd fa0, 16(a0)
  ld a0, 8(s3)
  li a1, 4616189618054758400
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 8(s3)
  li a1, 4617315517961601024
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 8(s3)
  li a1, 4618441417868443648
  fmv.d.x fa0, a1
  fsd fa0, 16(a0)
  ld a1, 0(s2)
  li a0, 4619567317775286272
  fmv.d.x fa0, a0
  fsd fa0, 0(a1)
  ld a0, 0(s2)
  li a1, 4620693217682128896
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 8(s2)
  li a1, 4621256167635550208
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 8(s2)
  li a1, 4621819117588971520
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a1, 16(s2)
  li a0, 4622382067542392832
  fmv.d.x fa0, a0
  fsd fa0, 0(a1)
  ld a0, 16(s2)
  li a1, 4622945017495814144
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  li a0, 2
  li a1, 3
  li a2, 2
  mv a3, s3
  mv a4, s2
  mv a5, s0
  call mul
  mv a0, zero
  ld a0, 0(s0)
  fld fa0, 0(a0)
  call minimbt_truncate
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 0(s0)
  fld fa0, 8(a0)
  call minimbt_truncate
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 8(s0)
  fld fa0, 0(a0)
  call minimbt_truncate
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 8(s0)
  fld fa0, 8(a0)
  call minimbt_truncate
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld s3, 0(sp)
  ld s2, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 80
  ret

  .p2align 3
  .globl init_arr
  .type init_arr, @function
# leaf false
init_arr:
.init_arr_b0:
  addi sp, sp, -80
  sd s4, 0(sp)
  sd s3, 8(sp)
  sd s2, 16(sp)
  sd s1, 24(sp)
  sd s0, 32(sp)
  sd ra, 40(sp)
  mv s3, s10
  mv s2, a0
  mv s0, a1
  mv s1, a2
  bge s2, zero, .init_arr_b1
  j .init_arr_b2

.init_arr_b3:
  ld s4, 0(sp)
  ld s3, 8(sp)
  ld s2, 16(sp)
  ld s1, 24(sp)
  ld s0, 32(sp)
  ld ra, 40(sp)
  addi sp, sp, 80
  ret

.init_arr_b2:
  mv a0, zero
  j .init_arr_b3

.init_arr_b1:
  slli a0, s0, 3
  sub a0, s11, a0
  andi s4, a0, -8
  mv s11, s4
  fmv.d.x fa0, zero
  mv a1, s0
  mv a0, s4
  call memsetf64
  slli a0, s2, 3
  add a0, s1, a0
  sd s4, 0(a0)
  addi a0, s2, -1
  mv s10, s3
  ld a3, 0(s3)
  mv a1, s0
  mv a2, s1
  jalr a3
  mv a0, zero
  j .init_arr_b3

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl mul
  .type mul, @function
# leaf false
mul:
.mul_b0:
  addi sp, sp, -64
  sd ra, 0(sp)
  addi a0, a0, -1
  call loop1
  mv a0, zero
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

  .p2align 3
  .globl loop3
  .type loop3, @function
# leaf false
loop3:
.loop3_b0:
  addi sp, sp, -112
  sd ra, 0(sp)
  mv a6, a0
  mv a0, a2
  bge a0, zero, .loop3_b1
  j .loop3_b2

.loop3_b1:
  slli a2, a6, 3
  add a2, a5, a2
  ld a7, 0(a2)
  slli a2, a6, 3
  add a2, a5, a2
  ld t0, 0(a2)
  slli a2, a1, 3
  add a2, t0, a2
  fld fa1, 0(a2)
  slli a2, a6, 3
  add a2, a3, a2
  ld t0, 0(a2)
  slli a2, a0, 3
  add a2, t0, a2
  fld fa2, 0(a2)
  slli a2, a0, 3
  add a2, a4, a2
  ld t0, 0(a2)
  slli a2, a1, 3
  add a2, t0, a2
  fld fa0, 0(a2)
  fmul.d fa0, fa2, fa0
  fadd.d fa0, fa1, fa0
  slli a2, a1, 3
  add a2, a7, a2
  fsd fa0, 0(a2)
  addi a2, a0, -1
  mv a0, a6
  call loop3
  mv a0, zero
  j .loop3_b3

.loop3_b2:
  mv a0, zero
  j .loop3_b3

.loop3_b3:
  ld ra, 0(sp)
  addi sp, sp, 112
  ret

  .p2align 3
  .globl loop1
  .type loop1, @function
# leaf false
loop1:
.loop1_b0:
  addi sp, sp, -80
  sd s5, 0(sp)
  sd s4, 8(sp)
  sd s3, 16(sp)
  sd s2, 24(sp)
  sd s1, 32(sp)
  sd s0, 40(sp)
  sd ra, 48(sp)
  mv s5, a0
  mv s3, a1
  mv s4, a2
  mv s0, a3
  mv s1, a4
  mv s2, a5
  bge s5, zero, .loop1_b1
  j .loop1_b2

.loop1_b1:
  addi a2, s4, -1
  mv a0, s5
  mv a1, s3
  mv a3, s0
  mv a4, s1
  mv a5, s2
  call loop2
  mv a0, zero
  addi a0, s5, -1
  mv a1, s3
  mv a2, s4
  mv a3, s0
  mv a4, s1
  mv a5, s2
  call loop1
  mv a0, zero
  j .loop1_b3

.loop1_b2:
  mv a0, zero
  j .loop1_b3

.loop1_b3:
  ld s5, 0(sp)
  ld s4, 8(sp)
  ld s3, 16(sp)
  ld s2, 24(sp)
  ld s1, 32(sp)
  ld s0, 40(sp)
  ld ra, 48(sp)
  addi sp, sp, 80
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/matmul.mbt
  .p2align 3
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

memsetf64:
  blez a1, .memsetf64_b1
  slli a1, a1, 3
  add a1, a1, a0
.memsetf64_b0:
  fsd fa0, 0(a0)
  addi a0, a0, 8
  bne a0, a1, .memsetf64_b0
.memsetf64_b1:
  ret

  .p2align 3
  .globl loop2
  .type loop2, @function
# leaf false
loop2:
.loop2_b0:
  addi sp, sp, -80
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv s0, s10
  mv s1, a0
  ld a5, 8(s0)
  lw a2, 16(s0)
  ld a3, 24(s0)
  ld a1, 32(s0)
  lw a4, 40(s0)
  bge s1, zero, .loop2_b1
  j .loop2_b2

.loop2_b2:
  mv a0, zero
  j .loop2_b3

.loop2_b3:
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 80
  ret

.loop2_b1:
  addi a0, s11, -48
  andi a0, a0, -8
  mv s11, a0
  la a6, loop3
  sd a6, 0(a0)
  sd a5, 8(a0)
  sd a2, 16(a0)
  sd s1, 24(a0)
  sd a3, 32(a0)
  sd a1, 40(a0)
  addi a1, a4, -1
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  jalr a2
  mv a0, zero
  addi a0, s1, -1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  mv a0, zero
  j .loop2_b3

  .p2align 3
  .globl matmul
  .type matmul, @function
# leaf false
matmul:
.matmul_b0:
  addi sp, sp, -80
  sd ra, 0(sp)
  mv a6, a1
  mv a7, a3
  mv a3, a4
  mv a4, a5
  addi a1, s11, -48
  andi a1, a1, -8
  mv s11, a1
  la a5, loop1
  sd a5, 0(a1)
  sd a4, 8(a1)
  sd a7, 16(a1)
  sd a3, 24(a1)
  sd a6, 32(a1)
  sd a2, 40(a1)
  addi a0, a0, -1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 80
  ret

  .p2align 3
  .globl gen_arr
  .type gen_arr, @function
# leaf false
gen_arr:
.gen_arr_b0:
  addi sp, sp, -64
  sd s2, 0(sp)
  sd s1, 8(sp)
  sd s0, 16(sp)
  sd ra, 24(sp)
  mv a2, s10
  mv s2, a0
  mv s1, a1
  ld a2, 8(a2)
  slli a0, s2, 3
  sub a0, s11, a0
  andi s0, a0, -8
  mv s11, s0
  mv a1, s2
  mv a0, s0
  call memseti32
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  la a1, init_arr
  sd a1, 0(a0)
  sd s1, 8(a0)
  sd s0, 16(a0)
  addi a1, s2, -1
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  jalr a2
  mv a0, zero
  mv a0, s0
  ld s2, 0(sp)
  ld s1, 8(sp)
  ld s0, 16(sp)
  ld ra, 24(sp)
  addi sp, sp, 64
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -64
  sd s2, 0(sp)
  sd s1, 8(sp)
  sd s0, 16(sp)
  sd ra, 24(sp)
  addi a0, s11, 0
  andi a0, a0, -8
  mv s11, a0
  fmv.d.x fa0, zero
  addi a1, s11, -16
  andi s0, a1, -8
  mv s11, s0
  la a1, gen_arr
  sd a1, 0(s0)
  sd a0, 8(s0)
  mv s10, s0
  ld a2, 0(s0)
  li a0, 2
  li a1, 3
  jalr a2
  mv s2, a0
  mv s10, s0
  ld a2, 0(s0)
  li a0, 3
  li a1, 2
  jalr a2
  mv s1, a0
  mv s10, s0
  ld a2, 0(s0)
  li a0, 2
  li a1, 2
  jalr a2
  mv s0, a0
  ld a1, 0(s2)
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  fsd fa0, 0(a1)
  ld a1, 0(s2)
  li a0, 4611686018427387904
  fmv.d.x fa0, a0
  fsd fa0, 8(a1)
  ld a1, 0(s2)
  li a0, 4613937818241073152
  fmv.d.x fa0, a0
  fsd fa0, 16(a1)
  ld a0, 8(s2)
  li a1, 4616189618054758400
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a1, 8(s2)
  li a0, 4617315517961601024
  fmv.d.x fa0, a0
  fsd fa0, 8(a1)
  ld a0, 8(s2)
  li a1, 4618441417868443648
  fmv.d.x fa0, a1
  fsd fa0, 16(a0)
  ld a1, 0(s1)
  li a0, 4619567317775286272
  fmv.d.x fa0, a0
  fsd fa0, 0(a1)
  ld a1, 0(s1)
  li a0, 4620693217682128896
  fmv.d.x fa0, a0
  fsd fa0, 8(a1)
  ld a1, 8(s1)
  li a0, 4621256167635550208
  fmv.d.x fa0, a0
  fsd fa0, 0(a1)
  ld a0, 8(s1)
  li a1, 4621819117588971520
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 16(s1)
  li a1, 4622382067542392832
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a1, 16(s1)
  li a0, 4622945017495814144
  fmv.d.x fa0, a0
  fsd fa0, 8(a1)
  li a0, 2
  li a1, 3
  li a2, 2
  mv a3, s2
  mv a4, s1
  mv a5, s0
  call matmul
  mv a0, zero
  ld a0, 0(s0)
  fld fa0, 0(a0)
  call minimbt_truncate
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 0(s0)
  fld fa0, 8(a0)
  call minimbt_truncate
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 8(s0)
  fld fa0, 0(a0)
  call minimbt_truncate
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 8(s0)
  fld fa0, 8(a0)
  call minimbt_truncate
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld s2, 0(sp)
  ld s1, 8(sp)
  ld s0, 16(sp)
  ld ra, 24(sp)
  addi sp, sp, 64
  ret

  .p2align 3
  .globl init_arr
  .type init_arr, @function
# leaf false
init_arr:
.init_arr_b0:
  addi sp, sp, -64
  sd s3, 0(sp)
  sd s2, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  mv s3, s10
  mv s0, a0
  lw a0, 8(s3)
  ld s1, 16(s3)
  bge s0, zero, .init_arr_b1
  j .init_arr_b2

.init_arr_b3:
  ld s3, 0(sp)
  ld s2, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 64
  ret

.init_arr_b2:
  mv a0, zero
  j .init_arr_b3

.init_arr_b1:
  slli a1, a0, 3
  sub a1, s11, a1
  andi s2, a1, -8
  mv s11, s2
  fmv.d.x fa0, zero
  mv a1, a0
  mv a0, s2
  call memsetf64
  slli a0, s0, 3
  add a0, s1, a0
  sd s2, 0(a0)
  addi a0, s0, -1
  mv s10, s3
  ld a1, 0(s3)
  jalr a1
  mv a0, zero
  j .init_arr_b3

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl loop3
  .type loop3, @function
# leaf false
loop3:
.loop3_b0:
  addi sp, sp, -112
  sd ra, 0(sp)
  mv a6, s10
  mv a7, a0
  ld a3, 8(a6)
  lw a0, 16(a6)
  lw t0, 24(a6)
  ld a2, 32(a6)
  ld a5, 40(a6)
  bge a7, zero, .loop3_b1
  j .loop3_b2

.loop3_b1:
  slli a1, a0, 3
  add a1, a3, a1
  ld a1, 0(a1)
  slli a4, a0, 3
  add a3, a3, a4
  ld a4, 0(a3)
  slli a3, t0, 3
  add a3, a4, a3
  fld fa1, 0(a3)
  slli a0, a0, 3
  add a0, a2, a0
  ld a0, 0(a0)
  slli a2, a7, 3
  add a0, a0, a2
  fld fa2, 0(a0)
  slli a0, a7, 3
  add a0, a5, a0
  ld a0, 0(a0)
  slli a2, t0, 3
  add a0, a0, a2
  fld fa0, 0(a0)
  fmul.d fa0, fa2, fa0
  fadd.d fa0, fa1, fa0
  slli a0, t0, 3
  add a0, a1, a0
  fsd fa0, 0(a0)
  addi a0, a7, -1
  mv s10, a6
  ld a1, 0(a6)
  jalr a1
  mv a0, zero
  j .loop3_b3

.loop3_b2:
  mv a0, zero
  j .loop3_b3

.loop3_b3:
  ld ra, 0(sp)
  addi sp, sp, 112
  ret

  .p2align 3
  .globl loop1
  .type loop1, @function
# leaf false
loop1:
.loop1_b0:
  addi sp, sp, -80
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv s0, s10
  mv s1, a0
  ld a4, 8(s0)
  ld a3, 16(s0)
  ld a2, 24(s0)
  lw a0, 32(s0)
  lw a5, 40(s0)
  bge s1, zero, .loop1_b1
  j .loop1_b2

.loop1_b1:
  addi a1, s11, -48
  andi a1, a1, -8
  mv s11, a1
  la a6, loop2
  sd a6, 0(a1)
  sd a4, 8(a1)
  sd s1, 16(a1)
  sd a3, 24(a1)
  sd a2, 32(a1)
  sd a0, 40(a1)
  addi a0, a5, -1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mv a0, zero
  addi a0, s1, -1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  mv a0, zero
  j .loop1_b3

.loop1_b2:
  mv a0, zero
  j .loop1_b3

.loop1_b3:
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 80
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/non-tail-if.mbt
  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -64
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  li a0, 4608218246714312622
  fmv.d.x fa0, a0
  call minimbt_truncate
  mv s0, a0
  li a0, 4616820122002590269
  fmv.d.x fa0, a0
  call minimbt_truncate
  mv s1, a0
  li a0, 4620569368692376207
  fmv.d.x fa0, a0
  fneg.d fa0, fa0
  call minimbt_truncate
  mv a2, a0
  bge a2, zero, .main_b1
  j .main_b2

.main_b1:
  mv a1, s0
  j .main_b3

.main_b8:
  mv a1, s0
  j .main_b9

.main_b5:
  mv a0, a2
  j .main_b6

.main_b4:
  mv a0, s1
  j .main_b6

.main_b6:
  add a0, a1, a0
  bge s1, zero, .main_b7
  j .main_b8

.main_b9:
  add a0, a0, a1
  call minimbt_print_int
  mv a0, zero
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 64
  ret

.main_b2:
  mv a1, s1
  j .main_b3

.main_b7:
  mv a1, a2
  j .main_b9

.main_b3:
  bge zero, s0, .main_b4
  j .main_b5

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/non-tail-if2.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf true
f:
.f_b0:
  addi sp, sp, -16
  mv a0, s10
  li a0, 12345
  addi sp, sp, 16
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  addi a0, s11, -8
  andi a2, a0, -8
  mv s11, a2
  la a0, f
  sd a0, 0(a2)
  addi a0, s11, -40
  andi s0, a0, -8
  mv s11, s0
  li a0, 3
  sw a0, 0(s0)
  sw a0, 4(s0)
  sw a0, 8(s0)
  sw a0, 12(s0)
  sw a0, 16(s0)
  sw a0, 20(s0)
  sw a0, 24(s0)
  sw a0, 28(s0)
  sw a0, 32(s0)
  sw a0, 36(s0)
  lw a0, 0(s0)
  li a1, 3
  beq a0, a1, .main_b1
  j .main_b2

.main_b3:
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

.main_b1:
  mv s10, a2
  ld a0, 0(a2)
  jalr a0
  lw a1, 4(s0)
  add a1, a0, a1
  li a0, 67890
  add a0, a1, a0
  j .main_b3

.main_b2:
  li a0, 7
  j .main_b3

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/print.mbt
  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 123
  call minimbt_print_int
  mv a0, zero
  li a0, 456
  neg a0, a0
  call minimbt_print_int
  mv a0, zero
  addi a0, zero, 789
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/shuffle.mbt
  .p2align 3
  .globl foo
  .type foo, @function
# leaf false
foo:
.foo_b0:
  addi sp, sp, -64
  sd s4, 0(sp)
  sd s3, 8(sp)
  sd s2, 16(sp)
  sd s1, 24(sp)
  sd s0, 32(sp)
  sd ra, 40(sp)
  mv s0, a1
  mv s1, a2
  mv s4, a3
  mv s3, a4
  mv s2, a5
  call minimbt_print_int
  mv a0, zero
  mv a0, s0
  call minimbt_print_int
  mv a0, zero
  mv a0, s1
  call minimbt_print_int
  mv a0, zero
  mv a0, s4
  call minimbt_print_int
  mv a0, zero
  mv a0, s3
  call minimbt_print_int
  mv a0, zero
  mv a0, s2
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld s4, 0(sp)
  ld s3, 8(sp)
  ld s2, 16(sp)
  ld s1, 24(sp)
  ld s0, 32(sp)
  ld ra, 40(sp)
  addi sp, sp, 64
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl bar
  .type bar, @function
# leaf false
bar:
.bar_b0:
  addi sp, sp, -64
  sd ra, 0(sp)
  mv a7, a0
  mv a0, a1
  mv a6, a2
  mv a2, a3
  mv a3, a4
  mv a4, a5
  mv a1, a7
  mv a5, a6
  call foo
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -64
  sd ra, 0(sp)
  li a0, 1
  li a1, 2
  li a2, 3
  li a3, 4
  li a4, 5
  li a5, 6
  call bar
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/spill.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf true
f:
.f_b0:
  addi sp, sp, -240
  sd s10, 0(sp)
  sd s9, 8(sp)
  sd s7, 16(sp)
  sd s4, 24(sp)
  sd s3, 32(sp)
  sd s2, 40(sp)
  mv t5, a0
  sw t5, 160(sp)
  mv s6, a1
  mv t5, a3
  sw t5, 184(sp)
  lw t5, 160(sp)
  add s5, t5, s6
  lw t5, 160(sp)
  add a0, t5, a2
  lw t5, 160(sp)
  lw t6, 184(sp)
  add a3, t5, t6
  add t5, s6, a2
  sw t5, 168(sp)
  lw t5, 184(sp)
  add s8, s6, t5
  lw t5, 184(sp)
  add t5, a2, t5
  sw t5, 136(sp)
  add t5, s5, a0
  sw t5, 128(sp)
  add t5, s5, a3
  sw t5, 120(sp)
  lw t5, 168(sp)
  add s10, s5, t5
  add s9, s5, s8
  lw t5, 136(sp)
  add t2, s5, t5
  add t5, a0, a3
  sw t5, 200(sp)
  lw t5, 168(sp)
  add t5, a0, t5
  sw t5, 208(sp)
  add s4, a0, s8
  lw t5, 136(sp)
  add t5, a0, t5
  sw t5, 216(sp)
  lw t5, 168(sp)
  add s3, a3, t5
  add s2, a3, s8
  lw t5, 136(sp)
  add s1, a3, t5
  lw t5, 168(sp)
  add s0, t5, s8
  lw t5, 168(sp)
  lw t6, 136(sp)
  add t4, t5, t6
  lw t5, 136(sp)
  add t3, s8, t5
  lw t5, 128(sp)
  lw t6, 120(sp)
  add t5, t5, t6
  sw t5, 144(sp)
  lw t5, 128(sp)
  add t1, t5, s10
  lw t5, 128(sp)
  add t0, t5, s9
  lw t5, 128(sp)
  add a7, t5, t2
  lw t5, 128(sp)
  lw t6, 200(sp)
  add a6, t5, t6
  lw t5, 128(sp)
  lw t6, 208(sp)
  add a5, t5, t6
  lw t5, 128(sp)
  add t5, t5, s4
  sw t5, 232(sp)
  lw t5, 128(sp)
  lw t6, 216(sp)
  add a4, t5, t6
  lw t5, 128(sp)
  add t5, t5, s3
  sw t5, 224(sp)
  lw t5, 128(sp)
  add t5, t5, s2
  sw t5, 192(sp)
  lw t5, 128(sp)
  add t5, t5, s1
  sw t5, 152(sp)
  lw t5, 128(sp)
  add t5, t5, s0
  sw t5, 176(sp)
  lw t5, 128(sp)
  add s7, t5, t4
  lw t5, 128(sp)
  add a1, t5, t3
  lw t5, 160(sp)
  add s6, t5, s6
  add a2, s6, a2
  lw t5, 184(sp)
  add a2, a2, t5
  add a2, a2, s5
  add a0, a2, a0
  add a0, a0, a3
  lw t5, 168(sp)
  add a0, a0, t5
  add a0, a0, s8
  lw t5, 136(sp)
  add a0, a0, t5
  lw t5, 128(sp)
  add a0, a0, t5
  lw t5, 120(sp)
  add a0, a0, t5
  add a0, a0, s10
  add a0, a0, s9
  add a0, a0, t2
  lw t5, 200(sp)
  add a0, a0, t5
  lw t5, 208(sp)
  add a0, a0, t5
  add a0, a0, s4
  lw t5, 216(sp)
  add a0, a0, t5
  add a0, a0, s3
  add a0, a0, s2
  add a0, a0, s1
  add a0, a0, s0
  add a0, a0, t4
  add a0, a0, t3
  lw t5, 144(sp)
  add a0, a0, t5
  add a0, a0, t1
  add a0, a0, t0
  add a0, a0, a7
  add a0, a0, a6
  add a0, a0, a5
  lw t5, 232(sp)
  add a0, a0, t5
  add a0, a0, a4
  lw t5, 224(sp)
  add a0, a0, t5
  lw t5, 192(sp)
  add a0, a0, t5
  lw t5, 152(sp)
  add a0, a0, t5
  lw t5, 176(sp)
  add a0, a0, t5
  add a0, a0, s7
  add a0, a0, a1
  neg a0, a0
  ld s10, 0(sp)
  ld s9, 8(sp)
  ld s7, 16(sp)
  ld s4, 24(sp)
  ld s3, 32(sp)
  ld s2, 40(sp)
  addi sp, sp, 240
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -48
  sd ra, 0(sp)
  li a0, 1
  li a1, 2
  li a2, 3
  li a3, 4
  call f
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/spill2.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf true
f:
.f_b0:
  addi sp, sp, -16
  li a0, 12345
  addi sp, sp, 16
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl g
  .type g, @function
# leaf true
g:
.g_b0:
  addi sp, sp, -16
  addi a0, a0, 1
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -160
  sd s4, 0(sp)
  sd s3, 8(sp)
  sd s2, 16(sp)
  sd s1, 24(sp)
  sd s0, 32(sp)
  sd ra, 40(sp)
  addi a0, s11, -40
  andi s0, a0, -8
  mv s11, s0
  li a0, 1
  sw a0, 0(s0)
  sw a0, 4(s0)
  sw a0, 8(s0)
  sw a0, 12(s0)
  sw a0, 16(s0)
  sw a0, 20(s0)
  sw a0, 24(s0)
  sw a0, 28(s0)
  sw a0, 32(s0)
  sw a0, 36(s0)
  call f
  mv t2, a0
  lw a0, 0(s0)
  add a2, a0, a0
  add s2, a2, a2
  add a6, s2, s2
  add a1, a6, a6
  add t0, a1, a1
  add a3, t0, t0
  add s3, a3, a3
  add a5, s3, s3
  add a4, a5, a5
  add t3, a4, a4
  add s4, t3, t3
  add a7, s4, s4
  add t1, a7, a7
  add t4, t1, t1
  add s1, t4, t4
  lw s0, 4(s0)
  beq s0, zero, .main_b1
  j .main_b2

.main_b3:
  call minimbt_print_int
  mv a0, zero
  ld s4, 0(sp)
  ld s3, 8(sp)
  ld s2, 16(sp)
  ld s1, 24(sp)
  ld s0, 32(sp)
  ld ra, 40(sp)
  addi sp, sp, 160
  ret

.main_b1:
  li a0, 67890
  call g
  j .main_b3

.main_b2:
  add a0, a0, a2
  add a0, a0, s2
  add a0, a0, a6
  add a0, a0, a1
  add a0, a0, t0
  add a0, a0, a3
  add a0, a0, s3
  add a0, a0, a5
  add a0, a0, a4
  add a0, a0, t3
  add a0, a0, s4
  add a0, a0, a7
  add a0, a0, t1
  add a0, a0, t4
  add a0, a0, s1
  add a0, a0, t2
  j .main_b3

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/spill3.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf true
f:
.f_b0:
  addi sp, sp, -224
  sd s10, 0(sp)
  sd s9, 8(sp)
  sd s8, 16(sp)
  sd s7, 24(sp)
  sd s6, 32(sp)
  sd s4, 40(sp)
  sd s3, 48(sp)
  sd s2, 56(sp)
  sd s1, 64(sp)
  mv a1, a0
  addi s10, a1, 1
  addi t5, s10, 1
  sw t5, 160(sp)
  lw t5, 160(sp)
  addi t5, t5, 1
  sw t5, 152(sp)
  lw t5, 152(sp)
  addi s7, t5, 1
  addi a3, s7, 1
  addi a2, a3, 1
  addi a0, a2, 1
  addi t5, a0, 1
  sw t5, 200(sp)
  lw t5, 200(sp)
  addi t5, t5, 1
  sw t5, 208(sp)
  lw t5, 208(sp)
  addi t5, t5, 1
  sw t5, 192(sp)
  lw t5, 192(sp)
  addi t5, t5, 1
  sw t5, 136(sp)
  lw t5, 136(sp)
  addi t5, t5, 1
  sw t5, 176(sp)
  lw t5, 176(sp)
  addi t5, t5, 1
  sw t5, 168(sp)
  lw t5, 168(sp)
  addi t4, t5, 1
  addi s6, t4, 1
  addi s5, s6, 1
  addi s4, s5, 1
  addi t5, s4, 1
  sw t5, 144(sp)
  lw t5, 144(sp)
  add s2, t5, s10
  lw t5, 160(sp)
  add s1, s2, t5
  lw t5, 152(sp)
  add s0, s1, t5
  add t3, s0, s7
  add t2, t3, a3
  add t1, t2, a2
  add t0, t1, a0
  lw t5, 200(sp)
  add a7, t0, t5
  lw t5, 208(sp)
  add a6, a7, t5
  lw t5, 192(sp)
  add a5, a6, t5
  lw t5, 136(sp)
  add a4, a5, t5
  lw t5, 176(sp)
  add t5, a4, t5
  sw t5, 184(sp)
  lw t5, 184(sp)
  lw t6, 168(sp)
  add t5, t5, t6
  sw t5, 120(sp)
  lw t5, 120(sp)
  add t5, t5, t4
  sw t5, 128(sp)
  lw t5, 128(sp)
  add t5, t5, s6
  sw t5, 216(sp)
  lw t5, 216(sp)
  add s3, t5, s5
  add s9, s3, s4
  add s8, s9, a1
  lw t5, 160(sp)
  add s10, s10, t5
  lw t5, 152(sp)
  add s10, s10, t5
  add s7, s10, s7
  add a3, s7, a3
  add a2, a3, a2
  add a0, a2, a0
  lw t5, 200(sp)
  add a0, a0, t5
  lw t5, 208(sp)
  add a0, a0, t5
  lw t5, 192(sp)
  add a0, a0, t5
  lw t5, 136(sp)
  add a0, a0, t5
  lw t5, 176(sp)
  add a0, a0, t5
  lw t5, 168(sp)
  add a0, a0, t5
  add a0, a0, t4
  add a0, a0, s6
  add a0, a0, s5
  add a0, a0, s4
  lw t5, 144(sp)
  add a0, a0, t5
  add a0, a0, s2
  add a0, a0, s1
  add a0, a0, s0
  add a0, a0, t3
  add a0, a0, t2
  add a0, a0, t1
  add a0, a0, t0
  add a0, a0, a7
  add a0, a0, a6
  add a0, a0, a5
  add a0, a0, a4
  lw t5, 184(sp)
  add a0, a0, t5
  lw t5, 120(sp)
  add a0, a0, t5
  lw t5, 128(sp)
  add a0, a0, t5
  lw t5, 216(sp)
  add a0, a0, t5
  add a0, a0, s3
  add a0, a0, s9
  add a0, a0, s8
  add a0, a0, a1
  ld s10, 0(sp)
  ld s9, 8(sp)
  ld s8, 16(sp)
  ld s7, 24(sp)
  ld s6, 32(sp)
  ld s4, 40(sp)
  ld s3, 48(sp)
  ld s2, 56(sp)
  ld s1, 64(sp)
  addi sp, sp, 224
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a0, zero
  call f
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/sum-tail.mbt
  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl sum
  .type sum, @function
# leaf false
sum:
.sum_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  bge zero, a1, .sum_b1
  j .sum_b2

.sum_b1:
  j .sum_b3

.sum_b3:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.sum_b2:
  add a0, a0, a1
  addi a1, a1, -1
  call sum
  j .sum_b3

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a0, zero
  li a1, 10000
  call sum
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4



Testing test/test_src/sum.mbt
  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 131072
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  call thunk_start
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 3
  .globl sum
  .type sum, @function
# leaf false
sum:
.sum_b0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv s0, a0
  bge zero, s0, .sum_b1
  j .sum_b2

.sum_b1:
  mv a0, zero
  j .sum_b3

.sum_b3:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.sum_b2:
  addi a0, s0, -1
  call sum
  add a0, a0, s0
  j .sum_b3

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
.main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 10000
  call sum
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 3
  .globl start
  .type start, @object
  .bss
start:
  .zero 4




Testing test/test_src/ack.mbt
  .p2align 3
  .globl ack
  .type ack, @function
# leaf false
ack:
# block parameters: []
.ack_b0:
  addi sp, sp, -40
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a2, a1
  slt a1, a0, zero
  xori a1, a1, 1
# control
  bne a1, zero, .ack_b1
  j .ack_b2

# block parameters: []
.ack_b1:
  li a0, 1
  add a0, a2, a0
# control
  j .ack_b6

# block parameters: [v12]
.ack_b5:
# control
  j .ack_b6

# block parameters: []
.ack_b2:
  slt a1, a2, zero
  xori a1, a1, 1
# control
  bne a1, zero, .ack_b3
  j .ack_b4

# block parameters: [v14]
.ack_b6:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 40
# control
  ret

# block parameters: []
.ack_b4:
  li a1, 1
  sub s0, a0, a1
  li a1, 1
  sub a1, a2, a1
  call ack
  mv a1, a0
  mv a0, s0
  call ack
# control
  j .ack_b5

# block parameters: []
.ack_b3:
  li a1, 1
  sub a0, a0, a1
  li a1, 1
  call ack
# control
  j .ack_b5

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
# block parameters: []
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
# block parameters: []
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  call thunk_start
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  ld ra, 0(sp)
  addi sp, sp, 128
# control
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
# block parameters: []
.main_b0:
  addi sp, sp, -24
  sd ra, 0(sp)
  li a0, 3
  li a1, 8
  call ack
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 24
# control
  ret

  .p2align 3
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/adder.mbt
reg s10 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4defb
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2354]:0x51f8f
    at wasm://wasm/00190366:wasm-function[2357]:0x5338e
    at wasm://wasm/00190366:wasm-function[2361]:0x5396d
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/adder2.mbt
reg s10 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4defb
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2354]:0x51f8f
    at wasm://wasm/00190366:wasm-function[2357]:0x5338e
    at wasm://wasm/00190366:wasm-function[2361]:0x5396d
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/bf.mbt
.aux_b8 live set mismatch: @hashset.of([v5, v10, zero, v0, v6, s11, v2]) and @hashset.of([v5, v10, zero, v0, v6, v2])
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2244]:0x4f6b6
    at wasm://wasm/00190366:wasm-function[2245]:0x4f84e
    at wasm://wasm/00190366:wasm-function[2260]:0x4fcfd
    at wasm://wasm/00190366:wasm-function[1590]:0x20a80
    at wasm://wasm/00190366:wasm-function[2257]:0x4fc04
    at wasm://wasm/00190366:wasm-function[2352]:0x51f56
    at wasm://wasm/00190366:wasm-function[2380]:0x54543
    at wasm://wasm/00190366:wasm-function[1600]:0x20e10
    at wasm://wasm/00190366:wasm-function[2379]:0x5444d
    at wasm://wasm/00190366:wasm-function[2410]:0x55856
error: failed to run


Testing test/test_src/cls-bug.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf true
f:
# block parameters: []
.f_b0:
  addi sp, sp, -16
  mv a1, a0
  li a0, 123
  add a0, a1, a0
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
# block parameters: []
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl g
  .type g, @function
# leaf true
g:
# block parameters: []
.g_b0:
  addi sp, sp, -16
  addi a0, s11, -8
  andi a1, a0, -8
  la a0, f
  sd a0, 0(a1)
  addi sp, sp, 16
# control
  mv a0, a1
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
# block parameters: []
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  call thunk_start
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  ld ra, 0(sp)
  addi sp, sp, 128
# control
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
# block parameters: []
.main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 456
  call g
  mv s10, a0
  ld a0, 0(a0)
  li a0, 789
  jalr a0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-bug2.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf false
f:
# block parameters: []
.f_b0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv s0, a0
  slt a0, zero, s0
  xori a0, a0, 1
# control
  bne a0, zero, .f_b1
  j .f_b2

# block parameters: [v12]
.f_b3:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
# control
  ret

# block parameters: []
.f_b1:
  mv a0, s0
  call minimbt_print_int
  mv a0, zero
  addi a0, s11, -8
  andi a0, a0, -8
  la a1, f
  sd a1, 0(a0)
  addi a1, s11, -8
  andi a1, a1, -8
  sd a0, 0(a1)
  slli a0, zero, 3
  add a0, a1, a0
  ld a1, 0(a0)
  li a0, 1
  sub a0, s0, a0
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mv a0, zero
# control
  j .f_b3

# block parameters: []
.f_b2:
# control
  mv a0, zero
  j .f_b3

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
# block parameters: []
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
# block parameters: []
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  call thunk_start
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  ld ra, 0(sp)
  addi sp, sp, 128
# control
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
# block parameters: []
.main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 9
  call f
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-rec.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf false
f:
# block parameters: []
.f_b0:
  addi sp, sp, -24
  sd ra, 0(sp)
  mv a1, a0
  xor a0, a1, zero
  sltiu a0, a0, 1
# control
  bne a0, zero, .f_b1
  j .f_b2

# block parameters: [v8]
.f_b3:
  ld ra, 0(sp)
  addi sp, sp, 24
# control
  ret

# block parameters: []
.f_b1:
# control
  mv a0, zero
  j .f_b3

# block parameters: []
.f_b2:
  li a0, 1
  sub a0, a1, a0
  call f
  mv a1, a0
  la a0, x.1
  lw a0, 0(a0)
  add a0, a0, a1
# control
  j .f_b3

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
# block parameters: []
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl thunk_x.1
  .type thunk_x.1, @function
# leaf true
thunk_x.1:
# block parameters: []
.thunk_x.1_b0:
  addi sp, sp, -8
  addi sp, sp, 8
# control
  li a0, 10
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
# block parameters: []
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  call thunk_x.1
  la t6, x.1
  sw a0, 0(t6)
  call thunk_start
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  ld ra, 0(sp)
  addi sp, sp, 128
# control
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
# block parameters: []
.main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 12
  call f
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl x.1
  .type x.1, @object
x.1:
  .zero 4
  .p2align 3
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-reg-bug.mbt
reg v16 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4defb
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2354]:0x51f8f
    at wasm://wasm/00190366:wasm-function[2357]:0x52982
    at wasm://wasm/00190366:wasm-function[2361]:0x5396d
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/debug.mbt
reg v11 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4defb
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2354]:0x51f8f
    at wasm://wasm/00190366:wasm-function[2357]:0x52982
    at wasm://wasm/00190366:wasm-function[2361]:0x5396d
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/even-odd.mbt
  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
# block parameters: []
.main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 789
  call even
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl even
  .type even, @function
# leaf false
even:
# block parameters: []
.even_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a2, a0
  addi a0, s11, -8
  andi a0, a0, -8
  la a1, odd
  sd a1, 0(a0)
  slt a1, zero, a2
  xori a1, a1, 1
# control
  bne a1, zero, .even_b1
  j .even_b2

# block parameters: []
.even_b3:
  la a0, t.1
  lw a0, 0(a0)
# control
  j .even_b5

# block parameters: [v12]
.even_b5:
# control
  j .even_b6

# block parameters: []
.even_b1:
  xor a1, a2, zero
  sltiu a1, a1, 1
# control
  bne a1, zero, .even_b3
  j .even_b4

# block parameters: [v13]
.even_b6:
  ld ra, 0(sp)
  addi sp, sp, 32
# control
  ret

# block parameters: []
.even_b4:
  li a1, 1
  sub a1, a2, a1
  mv s10, a0
  ld a0, 0(a0)
  mv a0, a1
  jalr a0
# control
  j .even_b5

# block parameters: []
.even_b2:
  li a1, 1
  add a1, a2, a1
  mv s10, a0
  ld a0, 0(a0)
  mv a0, a1
  jalr a0
# control
  j .even_b6

  .p2align 3
  .globl odd
  .type odd, @function
# leaf false
odd:
# block parameters: []
.odd_b0:
  addi sp, sp, -24
  sd ra, 0(sp)
  mv a1, a0
  slt a0, zero, a1
  xori a0, a0, 1
# control
  bne a0, zero, .odd_b1
  j .odd_b2

# block parameters: []
.odd_b3:
  la a0, f.2
  lw a0, 0(a0)
# control
  j .odd_b5

# block parameters: []
.odd_b1:
  xor a0, a1, zero
  sltiu a0, a0, 1
# control
  bne a0, zero, .odd_b3
  j .odd_b4

# block parameters: []
.odd_b4:
  li a0, 1
  sub a0, a1, a0
  call even
# control
  j .odd_b5

# block parameters: [v11]
.odd_b6:
  ld ra, 0(sp)
  addi sp, sp, 24
# control
  ret

# block parameters: [v10]
.odd_b5:
# control
  j .odd_b6

# block parameters: []
.odd_b2:
  li a0, 1
  add a0, a1, a0
  call even
# control
  j .odd_b6

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
# block parameters: []
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl thunk_t.1
  .type thunk_t.1, @function
# leaf true
thunk_t.1:
# block parameters: []
.thunk_t.1_b0:
  addi sp, sp, -8
  addi sp, sp, 8
# control
  li a0, 123
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
# block parameters: []
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  call thunk_t.1
  la t6, t.1
  sw a0, 0(t6)
  call thunk_f.2
  la t6, f.2
  sw a0, 0(t6)
  call thunk_start
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  ld ra, 0(sp)
  addi sp, sp, 128
# control
  ret

  .p2align 3
  .globl thunk_f.2
  .type thunk_f.2, @function
# leaf true
thunk_f.2:
# block parameters: []
.thunk_f.2_b0:
  addi sp, sp, -8
  addi sp, sp, 8
# control
  li a0, 456
  ret

  .p2align 3
  .globl t.1
  .type t.1, @object
t.1:
  .zero 4
  .p2align 3
  .globl f.2
  .type f.2, @object
f.2:
  .zero 4
  .p2align 3
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/fib.mbt
  .p2align 3
  .globl fib
  .type fib, @function
# leaf false
fib:
# block parameters: []
.fib_b0:
  addi sp, sp, -32
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv s0, a0
  li a0, 1
  slt a0, s0, a0
  xori a0, a0, 1
# control
  bne a0, zero, .fib_b1
  j .fib_b2

# block parameters: [v9]
.fib_b3:
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 32
# control
  ret

# block parameters: []
.fib_b2:
  li a0, 1
  sub a0, s0, a0
  call fib
  mv s1, a0
  li a0, 2
  sub a0, s0, a0
  call fib
  add a0, s1, a0
# control
  j .fib_b3

# block parameters: []
.fib_b1:
# control
  mv a0, s0
  j .fib_b3

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
# block parameters: []
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
# block parameters: []
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  call thunk_start
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  ld ra, 0(sp)
  addi sp, sp, 128
# control
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
# block parameters: []
.main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 30
  call fib
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/float.mbt
reg fv37 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4df27
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2356]:0x51fc6
    at wasm://wasm/00190366:wasm-function[2357]:0x531d6
    at wasm://wasm/00190366:wasm-function[2361]:0x5396d
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/funcomp.mbt
  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
# block parameters: []
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl dec
  .type dec, @function
# leaf true
dec:
# block parameters: []
.dec_b0:
  addi sp, sp, -16
  mv a1, a0
  li a0, 1
  sub a0, a1, a0
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl compose
  .type compose, @function
# leaf true
compose:
# block parameters: []
.compose_b0:
  addi sp, sp, -32
  mv a3, a0
  mv a2, a1
  addi a0, s11, -24
  andi a1, a0, -8
  la a0, composed
  sd a0, 0(a1)
  sd a3, 8(a1)
  sd a2, 16(a1)
  addi sp, sp, 32
# control
  mv a0, a1
  ret

  .p2align 3
  .globl dbl
  .type dbl, @function
# leaf true
dbl:
# block parameters: []
.dbl_b0:
  addi sp, sp, -8
  add a0, a0, a0
  addi sp, sp, 8
# control
  ret

  .p2align 3
  .globl composed
  .type composed, @function
# leaf false
composed:
# block parameters: []
.composed_b0:
  addi sp, sp, -40
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a2, s10
  lw a1, 8(a2)
  lw s0, 16(a2)
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mv a1, a0
  mv s10, s0
  ld a0, 0(s0)
  mv a0, a1
  jalr a0
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 40
# control
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
# block parameters: []
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  call thunk_start
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  ld ra, 0(sp)
  addi sp, sp, 128
# control
  ret

  .p2align 3
  .globl inc
  .type inc, @function
# leaf true
inc:
# block parameters: []
.inc_b0:
  addi sp, sp, -16
  mv a1, a0
  li a0, 1
  add a0, a1, a0
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
# block parameters: []
.main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  addi a0, s11, -8
  andi a1, a0, -8
  la a0, dbl
  sd a0, 0(a1)
  addi a0, s11, -8
  andi a2, a0, -8
  la a0, dec
  sd a0, 0(a2)
  mv a0, a1
  mv a1, a2
  call compose
  mv a1, a0
  addi a0, s11, -8
  andi a2, a0, -8
  la a0, inc
  sd a0, 0(a2)
  mv a0, a2
  call compose
  mv s10, a0
  ld a0, 0(a0)
  li a0, 123
  jalr a0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
# control
  ret

  .p2align 3
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/gcd.mbt
  .p2align 3
  .globl gcd
  .type gcd, @function
# leaf false
gcd:
# block parameters: []
.gcd_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a2, a0
  xor a0, a2, zero
  sltiu a0, a0, 1
# control
  bne a0, zero, .gcd_b1
  j .gcd_b2

# block parameters: [v11]
.gcd_b6:
  ld ra, 0(sp)
  addi sp, sp, 32
# control
  ret

# block parameters: []
.gcd_b1:
# control
  mv a0, a1
  j .gcd_b6

# block parameters: []
.gcd_b4:
  sub a2, a2, a1
  mv a0, a1
  mv a1, a2
  call gcd
# control
  j .gcd_b5

# block parameters: []
.gcd_b3:
  sub a1, a1, a2
  mv a0, a2
  call gcd
# control
  j .gcd_b5

# block parameters: []
.gcd_b2:
  slt a0, a2, a1
  xori a0, a0, 1
# control
  bne a0, zero, .gcd_b3
  j .gcd_b4

# block parameters: [v10]
.gcd_b5:
# control
  j .gcd_b6

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
# block parameters: []
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
# block parameters: []
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  call thunk_start
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  ld ra, 0(sp)
  addi sp, sp, 128
# control
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
# block parameters: []
.main_b0:
  addi sp, sp, -24
  sd ra, 0(sp)
  li a0, 21600
  li a1, 337500
  call gcd
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 24
# control
  ret

  .p2align 3
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/id.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf true
f:
# block parameters: []
.f_b0:
  addi sp, sp, -16
  mv a1, a0
  li a0, 1
  add a0, a1, a0
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
# block parameters: []
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
# block parameters: []
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  call thunk_start
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  ld ra, 0(sp)
  addi sp, sp, 128
# control
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
# block parameters: []
.main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 1000
  call f
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/inprod-loop.mbt
reg fv13 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4df27
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2356]:0x51fc6
    at wasm://wasm/00190366:wasm-function[2357]:0x5340d
    at wasm://wasm/00190366:wasm-function[2361]:0x53a0e
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/inprod-rec.mbt
reg fv24 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4df27
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2356]:0x51fc6
    at wasm://wasm/00190366:wasm-function[2357]:0x531d6
    at wasm://wasm/00190366:wasm-function[2361]:0x53a0e
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/inprod.mbt
reg fv27 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4df27
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2356]:0x51fc6
    at wasm://wasm/00190366:wasm-function[2357]:0x531d6
    at wasm://wasm/00190366:wasm-function[2361]:0x5396d
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/join-reg.mbt
reg v2 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4defb
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2354]:0x51f8f
    at wasm://wasm/00190366:wasm-function[2357]:0x53383
    at wasm://wasm/00190366:wasm-function[2361]:0x5396d
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/join-reg2.mbt
reg v2 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4defb
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2354]:0x51f8f
    at wasm://wasm/00190366:wasm-function[2357]:0x53383
    at wasm://wasm/00190366:wasm-function[2361]:0x5396d
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/join-stack.mbt
reg v2 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4defb
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2354]:0x51f8f
    at wasm://wasm/00190366:wasm-function[2357]:0x53383
    at wasm://wasm/00190366:wasm-function[2361]:0x5396d
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/join-stack2.mbt
reg v2 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4defb
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2354]:0x51f8f
    at wasm://wasm/00190366:wasm-function[2357]:0x53383
    at wasm://wasm/00190366:wasm-function[2361]:0x5396d
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/join-stack3.mbt
reg v2 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4defb
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2354]:0x51f8f
    at wasm://wasm/00190366:wasm-function[2357]:0x53383
    at wasm://wasm/00190366:wasm-function[2361]:0x5396d
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/landins_knot.mbt
reg s11 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4defb
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2354]:0x51f8f
    at wasm://wasm/00190366:wasm-function[2357]:0x52618
    at wasm://wasm/00190366:wasm-function[2361]:0x5396d
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/matmul-flat.mbt
reg fv216 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4df27
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2356]:0x51fc6
    at wasm://wasm/00190366:wasm-function[2357]:0x531d6
    at wasm://wasm/00190366:wasm-function[2361]:0x5396d
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/matmul.mbt
reg fv21 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4df27
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2356]:0x51fc6
    at wasm://wasm/00190366:wasm-function[2357]:0x531d6
    at wasm://wasm/00190366:wasm-function[2361]:0x5396d
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/non-tail-if.mbt
reg fv32 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4df27
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2356]:0x51fc6
    at wasm://wasm/00190366:wasm-function[2357]:0x531d6
    at wasm://wasm/00190366:wasm-function[2361]:0x5396d
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/non-tail-if2.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf true
f:
# block parameters: []
.f_b0:
  addi sp, sp, -8
  addi sp, sp, 8
# control
  li a0, 12345
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
# block parameters: []
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
# block parameters: []
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  call thunk_start
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  ld ra, 0(sp)
  addi sp, sp, 128
# control
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
# block parameters: []
.main_b0:
  addi sp, sp, -40
  sd s0, 0(sp)
  sd ra, 8(sp)
  addi a0, s11, -8
  andi a1, a0, -8
  la a0, f
  sd a0, 0(a1)
  addi a0, s11, -40
  andi s0, a0, -8
  li a0, 3
  sw a0, 0(s0)
  sw a0, 4(s0)
  sw a0, 8(s0)
  sw a0, 12(s0)
  sw a0, 16(s0)
  sw a0, 20(s0)
  sw a0, 24(s0)
  sw a0, 28(s0)
  sw a0, 32(s0)
  sw a0, 36(s0)
  slli a0, zero, 2
  add a0, s0, a0
  lw a0, 0(a0)
  li a2, 3
  xor a0, a0, a2
  sltiu a0, a0, 1
# control
  bne a0, zero, .main_b1
  j .main_b2

# block parameters: [v12]
.main_b3:
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 40
# control
  ret

# block parameters: []
.main_b1:
  mv s10, a1
  ld a0, 0(a1)
  jalr a0
  mv a1, a0
  li a0, 1
  slli a0, a0, 2
  add a0, s0, a0
  lw a0, 0(a0)
  add a1, a1, a0
  li a0, 67890
  add a0, a1, a0
# control
  j .main_b3

# block parameters: []
.main_b2:
# control
  li a0, 7
  j .main_b3

  .p2align 3
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/print.mbt
  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
# block parameters: []
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
# block parameters: []
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  call thunk_start
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  ld ra, 0(sp)
  addi sp, sp, 128
# control
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
# block parameters: []
.main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 123
  call minimbt_print_int
  mv a0, zero
  li a0, 456
  neg a0, a0
  call minimbt_print_int
  mv a0, zero
  li a0, 789
  add a0, a0, zero
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  mv a0, zero
  ret

  .p2align 3
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/shuffle.mbt
  .p2align 3
  .globl foo
  .type foo, @function
# leaf false
foo:
# block parameters: []
.foo_b0:
  addi sp, sp, -56
  sd s4, 0(sp)
  sd s3, 8(sp)
  sd s2, 16(sp)
  sd s1, 24(sp)
  sd s0, 32(sp)
  sd ra, 40(sp)
  mv s0, a1
  mv s1, a2
  mv s4, a3
  mv s3, a4
  mv s2, a5
  call minimbt_print_int
  mv a0, zero
  mv a0, s0
  call minimbt_print_int
  mv a0, zero
  mv a0, s1
  call minimbt_print_int
  mv a0, zero
  mv a0, s4
  call minimbt_print_int
  mv a0, zero
  mv a0, s3
  call minimbt_print_int
  mv a0, zero
  mv a0, s2
  call minimbt_print_int
  mv a0, zero
  ld s4, 0(sp)
  ld s3, 8(sp)
  ld s2, 16(sp)
  ld s1, 24(sp)
  ld s0, 32(sp)
  ld ra, 40(sp)
  addi sp, sp, 56
# control
  mv a0, zero
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
# block parameters: []
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl bar
  .type bar, @function
# leaf false
bar:
# block parameters: []
.bar_b0:
  addi sp, sp, -56
  sd ra, 0(sp)
  mv a7, a0
  mv a0, a1
  mv a6, a2
  mv a2, a3
  mv a3, a4
  mv a4, a5
  mv a1, a7
  mv a5, a6
  call foo
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 56
# control
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
# block parameters: []
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  call thunk_start
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  ld ra, 0(sp)
  addi sp, sp, 128
# control
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
# block parameters: []
.main_b0:
  addi sp, sp, -56
  sd ra, 0(sp)
  li a0, 1
  li a1, 2
  li a2, 3
  li a3, 4
  li a4, 5
  li a5, 6
  call bar
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 56
# control
  ret

  .p2align 3
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/spill.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf true
f:
# block parameters: []
.f_b0:
  addi sp, sp, -312
  sd s10, 0(sp)
  sd s9, 8(sp)
  sd s8, 16(sp)
  sd s7, 24(sp)
  sd s6, 32(sp)
  sd s5, 40(sp)
  sd s4, 48(sp)
  sd s3, 56(sp)
  sd s2, 64(sp)
  sd s1, 72(sp)
  sd s0, 80(sp)
  mv v2, a0
  mv s5, a1
  mv v5, a3
  add s4, v2, s5
  add a0, v2, a2
  add a3, v2, v5
  add v9, s5, a2
  add s7, s5, v5
  add v11, a2, v5
  add v12, s4, a0
  add s10, s4, a3
  add s9, s4, v9
  add s8, s4, s7
  add t2, s4, v11
  add v17, a0, a3
  add v18, a0, v9
  add s3, a0, s7
  add v20, a0, v11
  add s2, a3, v9
  add s1, a3, s7
  add s0, a3, v11
  add t5, v9, s7
  add t4, v9, v11
  add t3, s7, v11
  add v27, v12, s10
  add t1, v12, s9
  add t0, v12, s8
  add a7, v12, t2
  add a6, v12, v17
  add a5, v12, v18
  add v33, v12, s3
  add a4, v12, v20
  add v35, v12, s2
  add v36, v12, s1
  add v37, v12, s0
  add v38, v12, t5
  add s6, v12, t4
  add a1, v12, t3
  add s5, v2, s5
  add a2, s5, a2
  add a2, a2, v5
  add a2, a2, s4
  add a0, a2, a0
  add a0, a0, a3
  add a0, a0, v9
  add a0, a0, s7
  add a0, a0, v11
  add a0, a0, v12
  add a0, a0, s10
  add a0, a0, s9
  add a0, a0, s8
  add a0, a0, t2
  add a0, a0, v17
  add a0, a0, v18
  add a0, a0, s3
  add a0, a0, v20
  add a0, a0, s2
  add a0, a0, s1
  add a0, a0, s0
  add a0, a0, t5
  add a0, a0, t4
  add a0, a0, t3
  add a0, a0, v27
  add a0, a0, t1
  add a0, a0, t0
  add a0, a0, a7
  add a0, a0, a6
  add a0, a0, a5
  add a0, a0, v33
  add a0, a0, a4
  add a0, a0, v35
  add a0, a0, v36
  add a0, a0, v37
  add a0, a0, v38
  add a0, a0, s6
  add a0, a0, a1
  neg a0, a0
  ld s10, 0(sp)
  ld s9, 8(sp)
  ld s8, 16(sp)
  ld s7, 24(sp)
  ld s6, 32(sp)
  ld s5, 40(sp)
  ld s4, 48(sp)
  ld s3, 56(sp)
  ld s2, 64(sp)
  ld s1, 72(sp)
  ld s0, 80(sp)
  addi sp, sp, 312
# control
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
# block parameters: []
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
# block parameters: []
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  call thunk_start
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  ld ra, 0(sp)
  addi sp, sp, 128
# control
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
# block parameters: []
.main_b0:
  addi sp, sp, -40
  sd ra, 0(sp)
  li a0, 1
  li a1, 2
  li a2, 3
  li a3, 4
  call f
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 40
# control
  ret

  .p2align 3
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/spill2.mbt
reg s11 not found in reg_memo
RuntimeError: unreachable
    at wasm://wasm/00190366:wasm-function[2214]:0x4dc34
    at wasm://wasm/00190366:wasm-function[1429]:0x1c9b3
    at wasm://wasm/00190366:wasm-function[2213]:0x4dbf4
    at wasm://wasm/00190366:wasm-function[2220]:0x4defb
    at wasm://wasm/00190366:wasm-function[2353]:0x51f7b
    at wasm://wasm/00190366:wasm-function[2354]:0x51f8f
    at wasm://wasm/00190366:wasm-function[2357]:0x52618
    at wasm://wasm/00190366:wasm-function[2361]:0x5396d
    at wasm://wasm/00190366:wasm-function[2374]:0x53fb6
    at wasm://wasm/00190366:wasm-function[1598]:0x20d5a
error: failed to run


Testing test/test_src/spill3.mbt
  .p2align 3
  .globl f
  .type f, @function
# leaf true
f:
# block parameters: []
.f_b0:
  addi sp, sp, -296
  sd s10, 0(sp)
  sd s9, 8(sp)
  sd s8, 16(sp)
  sd s7, 24(sp)
  sd s6, 32(sp)
  sd s5, 40(sp)
  sd s4, 48(sp)
  sd s3, 56(sp)
  sd s2, 64(sp)
  sd s1, 72(sp)
  sd s0, 80(sp)
  mv a1, a0
  li a0, 1
  add a4, a1, a0
  li a0, 1
  add a2, a4, a0
  li a0, 1
  add a3, a2, a0
  li a0, 1
  add v6, a3, a0
  li a0, 1
  add t4, v6, a0
  li a0, 1
  add s9, t4, a0
  li a0, 1
  add v9, s9, a0
  li a0, 1
  add v10, v9, a0
  li a0, 1
  add t0, v10, a0
  li a0, 1
  add t2, t0, a0
  li a0, 1
  add a6, t2, a0
  li a0, 1
  add v14, a6, a0
  li a0, 1
  add t5, v14, a0
  li a0, 1
  add s5, t5, a0
  li a0, 1
  add v17, s5, a0
  li a0, 1
  add s1, v17, a0
  li a0, 1
  add s3, s1, a0
  li a0, 1
  add v20, s3, a0
  add v21, v20, a4
  add v22, v21, a2
  add s4, v22, a3
  add v24, s4, v6
  add v25, v24, t4
  add s8, v25, s9
  add v27, s8, v9
  add s7, v27, v10
  add a5, s7, t0
  add a0, a5, t2
  add a7, a0, a6
  add s0, a7, v14
  add v33, s0, t5
  add s6, v33, s5
  add t3, s6, v17
  add s2, t3, s1
  add s10, s2, s3
  add t1, s10, a1
  add a2, a4, a2
  add a2, a2, a3
  add a2, a2, v6
  add a2, a2, t4
  add a2, a2, s9
  add a2, a2, v9
  add a2, a2, v10
  add a2, a2, t0
  add a2, a2, t2
  add a2, a2, a6
  add a2, a2, v14
  add a2, a2, t5
  add a2, a2, s5
  add a2, a2, v17
  add a2, a2, s1
  add a2, a2, s3
  add a2, a2, v20
  add a2, a2, v21
  add a2, a2, v22
  add a2, a2, s4
  add a2, a2, v24
  add a2, a2, v25
  add a2, a2, s8
  add a2, a2, v27
  add a2, a2, s7
  add a2, a2, a5
  add a0, a2, a0
  add a0, a0, a7
  add a0, a0, s0
  add a0, a0, v33
  add a0, a0, s6
  add a0, a0, t3
  add a0, a0, s2
  add a0, a0, s10
  add a0, a0, t1
  add a0, a0, a1
  ld s10, 0(sp)
  ld s9, 8(sp)
  ld s8, 16(sp)
  ld s7, 24(sp)
  ld s6, 32(sp)
  ld s5, 40(sp)
  ld s4, 48(sp)
  ld s3, 56(sp)
  ld s2, 64(sp)
  ld s1, 72(sp)
  ld s0, 80(sp)
  addi sp, sp, 296
# control
  ret

  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
# block parameters: []
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
# block parameters: []
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  call thunk_start
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  ld ra, 0(sp)
  addi sp, sp, 128
# control
  ret

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
# block parameters: []
.main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a0, zero
  call f
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/sum-tail.mbt
  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
# block parameters: []
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
# block parameters: []
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  call thunk_start
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  ld ra, 0(sp)
  addi sp, sp, 128
# control
  ret

  .p2align 3
  .globl sum
  .type sum, @function
# leaf false
sum:
# block parameters: []
.sum_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a2, a0
  slt a0, a1, zero
  xori a0, a0, 1
# control
  bne a0, zero, .sum_b1
  j .sum_b2

# block parameters: []
.sum_b1:
# control
  mv a0, a2
  j .sum_b3

# block parameters: [v8]
.sum_b3:
  ld ra, 0(sp)
  addi sp, sp, 32
# control
  ret

# block parameters: []
.sum_b2:
  add a2, a2, a1
  li a0, 1
  sub a1, a1, a0
  mv a0, a2
  call sum
# control
  j .sum_b3

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
# block parameters: []
.main_b0:
  addi sp, sp, -24
  sd ra, 0(sp)
  mv a0, zero
  li a1, 10000
  call sum
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 24
# control
  ret

  .p2align 3
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/sum.mbt
  .p2align 3
  .globl thunk_start
  .type thunk_start, @function
# leaf false
thunk_start:
# block parameters: []
.thunk_start_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
# block parameters: []
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  call thunk_start
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  ld ra, 0(sp)
  addi sp, sp, 128
# control
  ret

  .p2align 3
  .globl sum
  .type sum, @function
# leaf false
sum:
# block parameters: []
.sum_b0:
  addi sp, sp, -24
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv s0, a0
  slt a0, s0, zero
  xori a0, a0, 1
# control
  bne a0, zero, .sum_b1
  j .sum_b2

# block parameters: []
.sum_b1:
# control
  mv a0, zero
  j .sum_b3

# block parameters: [v7]
.sum_b3:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 24
# control
  ret

# block parameters: []
.sum_b2:
  li a0, 1
  sub a0, s0, a0
  call sum
  add a0, a0, s0
# control
  j .sum_b3

  .p2align 3
  .globl main
  .type main, @function
# leaf false
main:
# block parameters: []
.main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 10000
  call sum
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
# control
  ret

  .p2align 3
  .globl start
  .type start, @object
start:
  .zero 4




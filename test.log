Testing test/test_src/ack.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main_1
  .type main_1, @function
# leaf false
main_1:
.main_1_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 3
  li a1, 8
  call ack_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl ack_0
  .type ack_0, @function
# leaf false
ack_0:
.ack_0_0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  bge zero, a0, .ack_0_1
  j .ack_0_2

.ack_0_6:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.ack_0_3:
  addi a0, a0, -1
  li a1, 1
  call ack_0
  j .ack_0_5

.ack_0_5:
  j .ack_0_6

.ack_0_1:
  addi a0, a1, 1
  j .ack_0_6

.ack_0_2:
  bge zero, a1, .ack_0_3
  j .ack_0_4

.ack_0_4:
  addi s0, a0, -1
  addi a1, a1, -1
  call ack_0
  mv a1, a0
  mv a0, s0
  call ack_0
  j .ack_0_5

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/adder.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl make_adder_0
  .type make_adder_0, @function
# leaf true
make_adder_0:
.make_adder_0_0:
  addi sp, sp, -32
  mv a2, a0
  addi a0, s11, -16
  andi a1, a0, -8
  mv s11, a1
  la a0, adder_1
  sd a0, 0(a1)
  sd a2, 8(a1)
  mv a0, a1
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$start_3
  .type T$start_3, @function
# leaf false
T$start_3:
.T$start_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl adder_1
  .type adder_1, @function
# leaf true
adder_1:
.adder_1_0:
  addi sp, sp, -32
  mv a2, s10
  mv a1, a0
  lw a0, 8(a2)
  add a0, a0, a1
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main_2
  .type main_2, @function
# leaf false
main_2:
.main_2_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 3
  call make_adder_0
  mv s10, a0
  ld a1, 0(a0)
  li a0, 7
  jalr a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_3
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/adder2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl make_adder_0
  .type make_adder_0, @function
# leaf true
make_adder_0:
.make_adder_0_0:
  addi sp, sp, -32
  mv a2, a0
  addi a0, s11, -16
  andi a1, a0, -8
  mv s11, a1
  la a0, adder_1
  sd a0, 0(a1)
  sd a2, 8(a1)
  mv a0, a1
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$start_3
  .type T$start_3, @function
# leaf false
T$start_3:
.T$start_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl adder_1
  .type adder_1, @function
# leaf true
adder_1:
.adder_1_0:
  addi sp, sp, -32
  mv a2, s10
  mv a1, a0
  lw a0, 8(a2)
  add a0, a0, a1
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main_2
  .type main_2, @function
# leaf false
main_2:
.main_2_0:
  addi sp, sp, -48
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  li a0, 2
  call make_adder_0
  mv s0, a0
  li a0, 3
  call make_adder_0
  mv s1, a0
  mv s10, s0
  ld a1, 0(s0)
  li a0, 10
  jalr a1
  mv s0, a0
  mv s10, s1
  ld a1, 0(s1)
  li a0, 20
  jalr a1
  add a0, s0, a0
  call minimbt_print_int
  mv a0, zero
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_3
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/bf.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl read_prog_5
  .type read_prog_5, @function
# leaf false
read_prog_5:
.read_prog_5_0:
  addi sp, sp, -48
  sd s2, 0(sp)
  sd s1, 8(sp)
  sd s0, 16(sp)
  sd ra, 24(sp)
  mv s0, s10
  mv s2, a0
  ld s1, 8(s0)
  call minimbt_read_char
  mv a1, a0
  li a0, -1
  beq a1, a0, .read_prog_5_1
  j .read_prog_5_2

.read_prog_5_3:
  ld s2, 0(sp)
  ld s1, 8(sp)
  ld s0, 16(sp)
  ld ra, 24(sp)
  addi sp, sp, 48
  ret

.read_prog_5_2:
  slli a0, s2, 2
  add a0, s1, a0
  sw a1, 0(a0)
  addi a0, s2, 1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  mv a0, zero
  j .read_prog_5_3

.read_prog_5_1:
  mv a0, s2
  mv a1, s1
  call bf_0
  mv a0, zero
  j .read_prog_5_3

  .p2align 2
  .text
  .globl aux_2
  .type aux_2, @function
# leaf false
aux_2:
.aux_2_0:
  addi sp, sp, -80
  sd s3, 0(sp)
  sd s2, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  mv s1, s10
  mv s2, a0
  lw a0, 8(s1)
  ld a3, 16(s1)
  ld a1, 24(s1)
  ld s0, 32(s1)
  ld s3, 40(s1)
  ld a2, 48(s1)
  bge s2, a0, .aux_2_1
  j .aux_2_2

.aux_2_2:
  slli a0, s2, 2
  add a0, a3, a0
  lw a3, 0(a0)
  li a0, 62
  beq a3, a0, .aux_2_3
  j .aux_2_4

.aux_2_25:
  j .aux_2_26

.aux_2_27:
  ld s3, 0(sp)
  ld s2, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 80
  ret

.aux_2_12:
  li a0, 44
  beq a3, a0, .aux_2_13
  j .aux_2_14

.aux_2_1:
  mv a0, s2
  j .aux_2_27

.aux_2_13:
  lw s3, 0(a1)
  call minimbt_read_char
  slli a1, s3, 2
  add a1, s0, a1
  sw a0, 0(a1)
  addi a0, s2, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux_2_21

.aux_2_18:
  mv a0, s2
  j .aux_2_19

.aux_2_8:
  li a0, 45
  beq a3, a0, .aux_2_9
  j .aux_2_10

.aux_2_9:
  lw a0, 0(a1)
  lw a1, 0(a1)
  slli a1, a1, 2
  add a1, s0, a1
  lw a1, 0(a1)
  addi a1, a1, -1
  slli a0, a0, 2
  add a0, s0, a0
  sw a1, 0(a0)
  addi a0, s2, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux_2_23

.aux_2_26:
  j .aux_2_27

.aux_2_7:
  lw a0, 0(a1)
  lw a1, 0(a1)
  slli a1, a1, 2
  add a1, s0, a1
  lw a1, 0(a1)
  addi a1, a1, 1
  slli a0, a0, 2
  add a0, s0, a0
  sw a1, 0(a0)
  addi a0, s2, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux_2_24

.aux_2_15:
  sw s2, 0(s3)
  addi a0, s11, -56
  andi a0, a0, -8
  mv s11, a0
  la a3, lp_3
  sd a3, 0(a0)
  sd a1, 8(a0)
  sd s0, 16(a0)
  sd s2, 24(a0)
  sd a2, 32(a0)
  sd s3, 40(a0)
  sd s1, 48(a0)
  mv s10, a0
  ld a0, 0(a0)
  jalr a0
  mv a0, zero
  lw a0, 0(s3)
  addi a0, a0, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux_2_20

.aux_2_24:
  j .aux_2_25

.aux_2_5:
  lw a0, 0(a1)
  addi a0, a0, -1
  sw a0, 0(a1)
  addi a0, s2, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux_2_25

.aux_2_3:
  lw a0, 0(a1)
  addi a0, a0, 1
  sw a0, 0(a1)
  addi a0, s2, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux_2_26

.aux_2_17:
  mv a0, s2
  j .aux_2_19

.aux_2_20:
  j .aux_2_21

.aux_2_6:
  li a0, 43
  beq a3, a0, .aux_2_7
  j .aux_2_8

.aux_2_11:
  lw a0, 0(a1)
  slli a0, a0, 2
  add a0, s0, a0
  lw a0, 0(a0)
  call minimbt_print_char
  mv a0, zero
  addi a0, s2, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  j .aux_2_22

.aux_2_10:
  li a0, 46
  beq a3, a0, .aux_2_11
  j .aux_2_12

.aux_2_21:
  j .aux_2_22

.aux_2_16:
  li a0, 93
  beq a3, a0, .aux_2_17
  j .aux_2_18

.aux_2_23:
  j .aux_2_24

.aux_2_4:
  li a0, 60
  beq a3, a0, .aux_2_5
  j .aux_2_6

.aux_2_22:
  j .aux_2_23

.aux_2_19:
  j .aux_2_20

.aux_2_14:
  li a0, 91
  beq a3, a0, .aux_2_15
  j .aux_2_16

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_4
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl lp_3
  .type lp_3, @function
# leaf false
lp_3:
.lp_3_0:
  addi sp, sp, -64
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv s0, s10
  ld a0, 8(s0)
  ld a4, 16(s0)
  lw a2, 24(s0)
  ld a3, 32(s0)
  ld s1, 40(s0)
  ld a1, 48(s0)
  lw a0, 0(a0)
  slli a0, a0, 2
  add a0, a4, a0
  lw a0, 0(a0)
  beq a0, zero, .lp_3_1
  j .lp_3_2

.lp_3_1:
  addi a0, a2, 1
  mv s10, a3
  ld a2, 0(a3)
  mv a1, zero
  jalr a2
  sw a0, 0(s1)
  mv a0, zero
  j .lp_3_3

.lp_3_3:
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 64
  ret

.lp_3_2:
  addi a0, a2, 1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  sw a0, 0(s1)
  mv s10, s0
  ld a0, 0(s0)
  jalr a0
  mv a0, zero
  j .lp_3_3

  .p2align 2
  .text
  .globl bf_0
  .type bf_0, @function
# leaf false
bf_0:
.bf_0_0:
  addi sp, sp, -80
  sd s3, 0(sp)
  sd s2, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  mv s1, a0
  mv s3, a1
  addi a0, s11, -4
  andi s0, a0, -8
  mv s11, s0
  sw zero, 0(s0)
  li a0, 1024
  li a1, 1024
  mulw a0, a0, a1
  slli a1, a0, 2
  sub a1, s11, a1
  andi s2, a1, -8
  mv s11, s2
  mv a1, a0
  mv a0, s2
  mv a2, zero
  call memseti32
  addi a0, s11, -4
  andi a3, a0, -8
  mv s11, a3
  sw zero, 0(a3)
  addi a0, s11, -24
  andi a2, a0, -8
  mv s11, a2
  la a0, skip_1
  sd a0, 0(a2)
  sd s1, 8(a2)
  sd s3, 16(a2)
  addi a0, s11, -56
  andi a1, a0, -8
  mv s11, a1
  la a0, aux_2
  sd a0, 0(a1)
  sd s1, 8(a1)
  sd s3, 16(a1)
  sd s0, 24(a1)
  sd s2, 32(a1)
  sd a3, 40(a1)
  sd a2, 48(a1)
  mv s10, a1
  ld a1, 0(a1)
  mv a0, zero
  jalr a1
  mv a0, zero
  ld s3, 0(sp)
  ld s2, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 80
  ret

  .p2align 2
  .text
  .globl main_4
  .type main_4, @function
# leaf false
main_4:
.main_4_0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  addi a0, s11, -512
  andi s0, a0, -8
  mv s11, s0
  li a0, 128
  mv a1, a0
  mv a0, s0
  mv a2, zero
  call memseti32
  addi a0, s11, -16
  andi a0, a0, -8
  mv s11, a0
  la a1, read_prog_5
  sd a1, 0(a0)
  sd s0, 8(a0)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  mv a0, zero
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl skip_1
  .type skip_1, @function
# leaf false
skip_1:
.skip_1_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  mv a4, s10
  mv a2, a0
  mv a3, a1
  lw a0, 8(a4)
  ld a1, 16(a4)
  bge a2, a0, .skip_1_1
  j .skip_1_2

.skip_1_6:
  addi a0, a2, 1
  mv s10, a4
  ld a2, 0(a4)
  mv a1, a3
  jalr a2
  j .skip_1_10

.skip_1_7:
  mv a0, a2
  j .skip_1_9

.skip_1_11:
  j .skip_1_12

.skip_1_10:
  j .skip_1_11

.skip_1_3:
  addi a0, a2, 1
  addi a1, a3, 1
  mv s10, a4
  ld a2, 0(a4)
  jalr a2
  j .skip_1_11

.skip_1_5:
  beq a3, zero, .skip_1_7
  j .skip_1_8

.skip_1_2:
  slli a0, a2, 2
  add a0, a1, a0
  lw a1, 0(a0)
  li a0, 91
  beq a1, a0, .skip_1_3
  j .skip_1_4

.skip_1_1:
  mv a0, a2
  j .skip_1_12

.skip_1_8:
  addi a0, a2, 1
  addi a1, a3, -1
  mv s10, a4
  ld a2, 0(a4)
  jalr a2
  j .skip_1_9

.skip_1_12:
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

.skip_1_4:
  li a0, 93
  beq a1, a0, .skip_1_5
  j .skip_1_6

.skip_1_9:
  j .skip_1_10

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-bug.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$start_3
  .type T$start_3, @function
# leaf false
T$start_3:
.T$start_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main_2
  .type main_2, @function
# leaf false
main_2:
.main_2_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 456
  call g_1
  mv s10, a0
  ld a1, 0(a0)
  li a0, 789
  jalr a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_3
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl f_0
  .type f_0, @function
# leaf true
f_0:
.f_0_0:
  addi sp, sp, -16
  addi a0, a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl g_1
  .type g_1, @function
# leaf true
g_1:
.g_1_0:
  addi sp, sp, -16
  addi a0, s11, -8
  andi a1, a0, -8
  mv s11, a1
  la a0, f_0
  sd a0, 0(a1)
  mv a0, a1
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-bug2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main_1
  .type main_1, @function
# leaf false
main_1:
.main_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 9
  call f_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl f_0
  .type f_0, @function
# leaf false
f_0:
.f_0_0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv s0, a0
  bge s0, zero, .f_0_1
  j .f_0_2

.f_0_3:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.f_0_2:
  mv a0, zero
  j .f_0_3

.f_0_1:
  mv a0, s0
  call minimbt_print_int
  mv a0, zero
  addi a0, s11, -8
  andi a1, a0, -8
  mv s11, a1
  la a0, f_0
  sd a0, 0(a1)
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  sd a1, 0(a0)
  ld a1, 0(a0)
  addi a0, s0, -1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mv a0, zero
  j .f_0_3

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-rec.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$x.10
  .type T$x.10, @function
# leaf true
T$x.10:
.T$x.10_0:
  addi sp, sp, -16
  li a0, 10
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_3
  .type T$start_3, @function
# leaf false
T$start_3:
.T$start_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f_1
  .type f_1, @function
# leaf false
f_1:
.f_1_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  beq a0, zero, .f_1_1
  j .f_1_2

.f_1_3:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.f_1_1:
  mv a0, zero
  j .f_1_3

.f_1_2:
  addi a0, a0, -1
  call f_1
  mv a1, a0
  la a0, x.1
  lw a0, 0(a0)
  add a0, a0, a1
  j .f_1_3

  .p2align 2
  .text
  .globl main_2
  .type main_2, @function
# leaf false
main_2:
.main_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 12
  call f_1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$x.10
  la t5, x.1
  sw a0, 0(t5)
  call T$start_3
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl x.1
  .type x.1, @object
x.1:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-reg-bug.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$start_3
  .type T$start_3, @function
# leaf false
T$start_3:
.T$start_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl h_0
  .type h_0, @function
# leaf false
h_0:
.h_0_0:
  addi sp, sp, -112
  sd ra, 0(sp)
  mv a2, a0
  lw a0, 0(a2)
  lw a4, 4(a2)
  lw a6, 8(a2)
  lw t0, 12(a2)
  lw a1, 16(a2)
  lw t2, 20(a2)
  lw t1, 24(a2)
  lw a5, 28(a2)
  lw a7, 32(a2)
  lw a3, 36(a2)
  addi a2, s11, -88
  andi a2, a2, -8
  mv s11, a2
  la t3, g_1
  sd t3, 0(a2)
  sd a0, 8(a2)
  sd a4, 16(a2)
  sd a6, 24(a2)
  sd t0, 32(a2)
  sd a1, 40(a2)
  sd t2, 48(a2)
  sd t1, 56(a2)
  sd a5, 64(a2)
  sd a7, 72(a2)
  sd a3, 80(a2)
  mv s10, a2
  ld a1, 0(a2)
  li a0, 1
  jalr a1
  ld ra, 0(sp)
  addi sp, sp, 112
  ret

  .p2align 2
  .text
  .globl main_2
  .type main_2, @function
# leaf false
main_2:
.main_2_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  addi a0, s11, -40
  andi a1, a0, -8
  mv s11, a1
  li a0, 1
  sw a0, 0(a1)
  li a0, 2
  sw a0, 4(a1)
  li a0, 3
  sw a0, 8(a1)
  li a0, 4
  sw a0, 12(a1)
  li a0, 5
  sw a0, 16(a1)
  li a0, 6
  sw a0, 20(a1)
  li a0, 7
  sw a0, 24(a1)
  li a0, 8
  sw a0, 28(a1)
  li a0, 9
  sw a0, 32(a1)
  li a0, 10
  sw a0, 36(a1)
  mv a0, a1
  call h_0
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_3
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl g_1
  .type g_1, @function
# leaf false
g_1:
.g_1_0:
  addi sp, sp, -112
  sd ra, 0(sp)
  mv a1, s10
  mv t3, a0
  lw t1, 8(a1)
  lw a0, 16(a1)
  lw a5, 24(a1)
  lw t2, 32(a1)
  lw t0, 40(a1)
  lw a7, 48(a1)
  lw a6, 56(a1)
  lw a3, 64(a1)
  lw a4, 72(a1)
  lw a2, 80(a1)
  add a0, t1, a0
  add a0, a0, a5
  add a0, a0, t2
  add a0, a0, t0
  add a0, a0, a7
  add a0, a0, a6
  add a0, a0, a3
  add a0, a0, a4
  add a0, a0, a2
  bge zero, t3, .g_1_1
  j .g_1_2

.g_1_3:
  ld ra, 0(sp)
  addi sp, sp, 112
  ret

.g_1_1:
  neg a0, t3
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  j .g_1_3

.g_1_2:
  j .g_1_3

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/debug.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl g_3
  .type g_3, @function
# leaf true
g_3:
.g_3_0:
  addi sp, sp, -16
  mv a1, s10
  lw a0, 8(a1)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl useless_0
  .type useless_0, @function
# leaf true
useless_0:
.useless_0_0:
  addi sp, sp, -16
  li a0, 10
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_5
  .type T$start_5, @function
# leaf false
T$start_5:
.T$start_5_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_4
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f_2
  .type f_2, @function
# leaf false
f_2:
.f_2_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, a0
  addi a0, s11, -16
  andi a2, a0, -8
  mv s11, a2
  la a0, g_3
  sd a0, 0(a2)
  sd a1, 8(a2)
  li a1, 1
  li a0, 1
  beq a1, a0, .f_2_1
  j .f_2_2

.f_2_3:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.f_2_1:
  li a0, 1
  call f_2
  j .f_2_3

.f_2_2:
  mv s10, a2
  ld a1, 0(a2)
  li a0, 2
  jalr a1
  j .f_2_3

  .p2align 2
  .text
  .globl main_4
  .type main_4, @function
# leaf true
main_4:
.main_4_0:
  addi sp, sp, 0
  mv a0, zero
  addi sp, sp, 0
  ret

  .p2align 2
  .text
  .globl dummy_1
  .type dummy_1, @function
# leaf true
dummy_1:
.dummy_1_0:
  addi sp, sp, -16
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_5
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/even-odd.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$t.10
  .type T$t.10, @function
# leaf true
T$t.10:
.T$t.10_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_5
  .type T$start_5, @function
# leaf false
T$start_5:
.T$start_5_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_4
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main_4
  .type main_4, @function
# leaf false
main_4:
.main_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 789
  call even_2
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl even_2
  .type even_2, @function
# leaf false
even_2:
.even_2_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a2, a0
  addi a0, s11, -8
  andi a1, a0, -8
  mv s11, a1
  la a0, odd_3
  sd a0, 0(a1)
  bge a2, zero, .even_2_1
  j .even_2_2

.even_2_5:
  j .even_2_6

.even_2_1:
  beq a2, zero, .even_2_3
  j .even_2_4

.even_2_3:
  la a0, t.1
  lw a0, 0(a0)
  j .even_2_5

.even_2_6:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.even_2_2:
  addi a0, a2, 1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  j .even_2_6

.even_2_4:
  addi a0, a2, -1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  j .even_2_5

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$t.10
  la t5, t.1
  sw a0, 0(t5)
  call T$f.21
  la t5, f.2
  sw a0, 0(t5)
  call T$start_5
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$f.21
  .type T$f.21, @function
# leaf true
T$f.21:
.T$f.21_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl odd_3
  .type odd_3, @function
# leaf false
odd_3:
.odd_3_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, s10
  bge a0, zero, .odd_3_1
  j .odd_3_2

.odd_3_6:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.odd_3_4:
  addi a0, a0, -1
  call even_2
  j .odd_3_5

.odd_3_1:
  beq a0, zero, .odd_3_3
  j .odd_3_4

.odd_3_3:
  la a0, f.2
  lw a0, 0(a0)
  j .odd_3_5

.odd_3_5:
  j .odd_3_6

.odd_3_2:
  addi a0, a0, 1
  call even_2
  j .odd_3_6

  .p2align 2
  .bss
  .globl t.1
  .type t.1, @object
t.1:
  .zero 4
  .p2align 2
  .bss
  .globl f.2
  .type f.2, @object
f.2:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/feature_test.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main_0
  .type main_0, @function
# leaf false
main_0:
.main_0_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 4607182418800017408
  fmv.d.x fa1, a0
  li a0, 4611686018427387904
  fmv.d.x fa0, a0
  fadd.d fa0, fa1, fa0
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  li a0, 4607182418800017408
  fmv.d.x fa1, a0
  li a0, 4611686018427387904
  fmv.d.x fa0, a0
  fsub.d fa0, fa1, fa0
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  li a0, 4607182418800017408
  fmv.d.x fa1, a0
  li a0, 4611686018427387904
  fmv.d.x fa0, a0
  fmul.d fa0, fa1, fa0
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  li a0, 4607182418800017408
  fmv.d.x fa1, a0
  li a0, 4611686018427387904
  fmv.d.x fa0, a0
  fdiv.d fa0, fa1, fa0
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  li a0, 4607182418800017408
  fmv.d.x fa1, a0
  li a0, 4611686018427387904
  fmv.d.x fa0, a0
  fle.d a0, fa1, fa0
  bne a0, zero, .main_0_1
  j .main_0_2

.main_0_4:
  li a0, 1
  call minimbt_print_int
  mv a0, zero
  j .main_0_6

.main_0_1:
  li a0, 1
  call minimbt_print_int
  mv a0, zero
  j .main_0_3

.main_0_2:
  mv a0, zero
  call minimbt_print_int
  mv a0, zero
  j .main_0_3

.main_0_6:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.main_0_5:
  mv a0, zero
  call minimbt_print_int
  mv a0, zero
  j .main_0_6

.main_0_3:
  li a0, 4607182418800017408
  fmv.d.x fa1, a0
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  feq.d a0, fa1, fa0
  bne a0, zero, .main_0_4
  j .main_0_5

  .p2align 2
  .text
  .globl T$start_1
  .type T$start_1, @function
# leaf false
T$start_1:
.T$start_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_1
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/fib.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl fib_0
  .type fib_0, @function
# leaf false
fib_0:
.fib_0_0:
  addi sp, sp, -32
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv s1, a0
  li a0, 1
  bge a0, s1, .fib_0_1
  j .fib_0_2

.fib_0_3:
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 32
  ret

.fib_0_1:
  mv a0, s1
  j .fib_0_3

.fib_0_2:
  addi a0, s1, -1
  call fib_0
  mv s0, a0
  addi a0, s1, -2
  call fib_0
  add a0, s0, a0
  j .fib_0_3

  .p2align 2
  .text
  .globl main_1
  .type main_1, @function
# leaf false
main_1:
.main_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 30
  call fib_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/float.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main_0
  .type main_0, @function
# leaf false
main_0:
.main_0_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  li a0, -4600258134372935270
  fmv.d.x fa0, a0
  fabs.d fa0, fa0
  fsqrt.d fa0, fa0
  call minimbt_cos
  call minimbt_sin
  fmv.d fa1, fa0
  li a0, 4616752568008179712
  fmv.d.x fa0, a0
  fadd.d fa1, fa1, fa0
  li a0, 4619229547803233485
  fmv.d.x fa2, a0
  li a0, 4621199872640208077
  fmv.d.x fa0, a0
  fmul.d fa2, fa2, fa0
  li a0, 4608238818662014491
  fmv.d.x fa0, a0
  fdiv.d fa0, fa2, fa0
  fsub.d fa1, fa1, fa0
  li a0, 1000000
  fcvt.d.w fa0, a0
  fmul.d fa0, fa1, fa0
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl T$start_1
  .type T$start_1, @function
# leaf false
T$start_1:
.T$start_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_1
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/funcomp.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl dec_4
  .type dec_4, @function
# leaf true
dec_4:
.dec_4_0:
  addi sp, sp, -16
  addi a0, a0, -1
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl dbl_2
  .type dbl_2, @function
# leaf true
dbl_2:
.dbl_2_0:
  addi sp, sp, -16
  add a0, a0, a0
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl compose_0
  .type compose_0, @function
# leaf true
compose_0:
.compose_0_0:
  addi sp, sp, -32
  mv a3, a0
  mv a2, a1
  addi a0, s11, -24
  andi a1, a0, -8
  mv s11, a1
  la a0, composed_1
  sd a0, 0(a1)
  sd a3, 8(a1)
  sd a2, 16(a1)
  mv a0, a1
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main_5
  .type main_5, @function
# leaf false
main_5:
.main_5_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  addi a0, s11, -8
  andi a1, a0, -8
  mv s11, a1
  la a0, dbl_2
  sd a0, 0(a1)
  addi a0, s11, -8
  andi a2, a0, -8
  mv s11, a2
  la a0, dec_4
  sd a0, 0(a2)
  mv a0, a1
  mv a1, a2
  call compose_0
  mv a1, a0
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a2, inc_3
  sd a2, 0(a0)
  call compose_0
  mv s10, a0
  ld a1, 0(a0)
  li a0, 123
  jalr a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_5
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl composed_1
  .type composed_1, @function
# leaf false
composed_1:
.composed_1_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a2, s10
  ld a1, 8(a2)
  ld s0, 16(a2)
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl inc_3
  .type inc_3, @function
# leaf true
inc_3:
.inc_3_0:
  addi sp, sp, -16
  addi a0, a0, 1
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/gcd.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main_1
  .type main_1, @function
# leaf false
main_1:
.main_1_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 21600
  li a1, 337500
  call gcd_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl gcd_0
  .type gcd_0, @function
# leaf false
gcd_0:
.gcd_0_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a2, a0
  mv a0, a1
  beq a2, zero, .gcd_0_1
  j .gcd_0_2

.gcd_0_2:
  bge a0, a2, .gcd_0_3
  j .gcd_0_4

.gcd_0_3:
  sub a1, a0, a2
  mv a0, a2
  call gcd_0
  j .gcd_0_5

.gcd_0_4:
  sub a1, a2, a0
  call gcd_0
  j .gcd_0_5

.gcd_0_6:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.gcd_0_5:
  j .gcd_0_6

.gcd_0_1:
  j .gcd_0_6

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/id.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main_1
  .type main_1, @function
# leaf false
main_1:
.main_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 1000
  call f_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl f_0
  .type f_0, @function
# leaf true
f_0:
.f_0_0:
  addi sp, sp, -16
  addi a0, a0, 1
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/inprod-loop.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main_1
  .type main_1, @function
# leaf false
main_1:
.main_1_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  addi a0, s11, -24
  andi a1, a0, -8
  mv s11, a1
  li a0, 4608218246714312622
  fmv.d.x fa0, a0
  fsd fa0, 0(a1)
  fsd fa0, 8(a1)
  fsd fa0, 16(a1)
  addi a0, s11, -24
  andi a2, a0, -8
  mv s11, a2
  li a0, 4616820122002590269
  fmv.d.x fa0, a0
  fsd fa0, 0(a2)
  fsd fa0, 8(a2)
  fsd fa0, 16(a2)
  mv a0, a1
  mv a1, a2
  fmv.d.x fa0, zero
  li a2, 2
  call inprod_0
  fmv.d fa1, fa0
  li a0, 4696837146684686336
  fmv.d.x fa0, a0
  fmul.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl inprod_0
  .type inprod_0, @function
# leaf false
inprod_0:
.inprod_0_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  mv a3, a0
  fmv.d fa2, fa0
  mv a0, a2
  bge a0, zero, .inprod_0_1
  j .inprod_0_2

.inprod_0_1:
  slli a2, a0, 3
  add a2, a3, a2
  fld fa1, 0(a2)
  slli a2, a0, 3
  add a2, a1, a2
  fld fa0, 0(a2)
  fmul.d fa0, fa1, fa0
  fadd.d fa0, fa2, fa0
  addi a2, a0, -1
  mv a0, a3
  call inprod_0
  j .inprod_0_3

.inprod_0_2:
  fmv.d fa0, fa2
  j .inprod_0_3

.inprod_0_3:
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/inprod-rec.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main_1
  .type main_1, @function
# leaf false
main_1:
.main_1_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  addi a0, s11, -24
  andi a1, a0, -8
  mv s11, a1
  li a0, 4608218246714312622
  fmv.d.x fa0, a0
  fsd fa0, 0(a1)
  fsd fa0, 8(a1)
  fsd fa0, 16(a1)
  addi a0, s11, -24
  andi a2, a0, -8
  mv s11, a2
  li a0, 4616820122002590269
  fmv.d.x fa0, a0
  fsd fa0, 0(a2)
  fsd fa0, 8(a2)
  fsd fa0, 16(a2)
  mv a0, a1
  mv a1, a2
  li a2, 2
  call inprod_0
  fmv.d fa1, fa0
  li a0, 4696837146684686336
  fmv.d.x fa0, a0
  fmul.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl inprod_0
  .type inprod_0, @function
# leaf false
inprod_0:
.inprod_0_0:
  addi sp, sp, -64
  fsd fs0, 0(sp)
  sd ra, 8(sp)
  mv a3, a0
  mv a0, a2
  bge a0, zero, .inprod_0_1
  j .inprod_0_2

.inprod_0_1:
  slli a2, a0, 3
  add a2, a3, a2
  fld fa1, 0(a2)
  slli a2, a0, 3
  add a2, a1, a2
  fld fa0, 0(a2)
  fmul.d fs0, fa1, fa0
  addi a2, a0, -1
  mv a0, a3
  call inprod_0
  fadd.d fa0, fs0, fa0
  j .inprod_0_3

.inprod_0_2:
  fmv.d.x fa0, zero
  j .inprod_0_3

.inprod_0_3:
  fld fs0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/inprod.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl inprod_3
  .type inprod_3, @function
# leaf false
inprod_3:
.inprod_3_0:
  addi sp, sp, -48
  fsd fs1, 0(sp)
  fsd fs0, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  mv s1, a0
  mv s0, a1
  mv a0, s1
  call getx_0
  fmv.d fs0, fa0
  mv a0, s0
  call getx_0
  fmul.d fs1, fs0, fa0
  mv a0, s1
  call gety_1
  fmv.d fs0, fa0
  mv a0, s0
  call gety_1
  fmul.d fa0, fs0, fa0
  fadd.d fs0, fs1, fa0
  mv a0, s1
  call getz_2
  fmv.d fs1, fa0
  mv a0, s0
  call getz_2
  fmul.d fa0, fs1, fa0
  fadd.d fa0, fs0, fa0
  fld fs1, 0(sp)
  fld fs0, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl getx_0
  .type getx_0, @function
# leaf true
getx_0:
.getx_0_0:
  addi sp, sp, -16
  fld fa0, 0(a0)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_5
  .type T$start_5, @function
# leaf false
T$start_5:
.T$start_5_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_4
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl gety_1
  .type gety_1, @function
# leaf true
gety_1:
.gety_1_0:
  addi sp, sp, -16
  fld fa0, 8(a0)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main_4
  .type main_4, @function
# leaf false
main_4:
.main_4_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  addi a0, s11, -24
  andi a1, a0, -8
  mv s11, a1
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  fsd fa0, 0(a1)
  li a0, 4611686018427387904
  fmv.d.x fa0, a0
  fsd fa0, 8(a1)
  li a0, 4613937818241073152
  fmv.d.x fa0, a0
  fsd fa0, 16(a1)
  addi a0, s11, -24
  andi a2, a0, -8
  mv s11, a2
  li a0, 4616189618054758400
  fmv.d.x fa0, a0
  fsd fa0, 0(a2)
  li a0, 4617315517961601024
  fmv.d.x fa0, a0
  fsd fa0, 8(a2)
  li a0, 4618441417868443648
  fmv.d.x fa0, a0
  fsd fa0, 16(a2)
  mv a0, a1
  mv a1, a2
  call inprod_3
  fmv.d fa1, fa0
  li a0, 4696837146684686336
  fmv.d.x fa0, a0
  fmul.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl getz_2
  .type getz_2, @function
# leaf true
getz_2:
.getz_2_0:
  addi sp, sp, -16
  fld fa0, 16(a0)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_5
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/int_min.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main_1
  .type main_1, @function
# leaf false
main_1:
.main_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  la a0, int_min.1
  lw a0, 0(a0)
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$int_min.10
  la t5, int_min.1
  sw a0, 0(t5)
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$int_min.10
  .type T$int_min.10, @function
# leaf true
T$int_min.10:
.T$int_min.10_0:
  addi sp, sp, -16
  li a0, -2147483648
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl int_min.1
  .type int_min.1, @object
int_min.1:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-reg.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main_3
  .type main_3, @function
# leaf false
main_3:
.main_3_0:
  addi sp, sp, -32
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv a0, zero
  call f_0
  mv s1, a0
  mv a0, zero
  call g_1
  mv s0, a0
  mv a0, zero
  call h_2
  beq a0, zero, .main_3_1
  j .main_3_2

.main_3_1:
  sub a0, s1, s0
  j .main_3_3

.main_3_3:
  call minimbt_print_int
  mv a0, zero
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 32
  ret

.main_3_2:
  sub a0, s0, s1
  add a0, a0, s1
  add a0, a0, s0
  j .main_3_3

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_3
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl h_2
  .type h_2, @function
# leaf true
h_2:
.h_2_0:
  addi sp, sp, -16
  li a0, 789
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl g_1
  .type g_1, @function
# leaf true
g_1:
.g_1_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f_0
  .type f_0, @function
# leaf true
f_0:
.f_0_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-reg2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main_3
  .type main_3, @function
# leaf false
main_3:
.main_3_0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a0, zero
  call f_0
  mv s0, a0
  bge zero, s0, .main_3_1
  j .main_3_2

.main_3_1:
  mv a0, zero
  call g_1
  add a0, a0, s0
  j .main_3_3

.main_3_3:
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.main_3_2:
  mv a0, zero
  call h_2
  sub a0, a0, s0
  add a0, a0, s0
  j .main_3_3

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_3
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl h_2
  .type h_2, @function
# leaf true
h_2:
.h_2_0:
  addi sp, sp, -16
  li a0, 789
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl g_1
  .type g_1, @function
# leaf true
g_1:
.g_1_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f_0
  .type f_0, @function
# leaf true
f_0:
.f_0_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-stack.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main_3
  .type main_3, @function
# leaf false
main_3:
.main_3_0:
  addi sp, sp, -32
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv a0, zero
  call f_0
  mv s1, a0
  mv a0, zero
  call g_1
  mv s0, a0
  mv a0, zero
  call h_2
  beq a0, zero, .main_3_1
  j .main_3_2

.main_3_1:
  addi a0, s1, 1
  j .main_3_3

.main_3_3:
  call minimbt_print_int
  mv a0, zero
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 32
  ret

.main_3_2:
  addi a0, s0, 2
  add a0, a0, s1
  add a0, a0, s0
  j .main_3_3

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_3
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl h_2
  .type h_2, @function
# leaf true
h_2:
.h_2_0:
  addi sp, sp, -16
  li a0, 789
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl g_1
  .type g_1, @function
# leaf true
g_1:
.g_1_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f_0
  .type f_0, @function
# leaf true
f_0:
.f_0_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-stack2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$start_3
  .type T$start_3, @function
# leaf false
T$start_3:
.T$start_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main_2
  .type main_2, @function
# leaf false
main_2:
.main_2_0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a0, zero
  call f_0
  mv s0, a0
  bge zero, s0, .main_2_1
  j .main_2_2

.main_2_2:
  add a0, s0, s0
  j .main_2_3

.main_2_3:
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.main_2_1:
  mv a0, zero
  call g_1
  add a0, a0, s0
  j .main_2_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_3
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl f_0
  .type f_0, @function
# leaf true
f_0:
.f_0_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl g_1
  .type g_1, @function
# leaf true
g_1:
.g_1_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-stack3.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main_3
  .type main_3, @function
# leaf false
main_3:
.main_3_0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a0, zero
  call f_0
  mv s0, a0
  bge zero, s0, .main_3_1
  j .main_3_2

.main_3_1:
  mv a0, zero
  call g_1
  j .main_3_3

.main_3_3:
  add a0, a0, s0
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.main_3_2:
  mv a0, zero
  call h_2
  j .main_3_3

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_3
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl h_2
  .type h_2, @function
# leaf true
h_2:
.h_2_0:
  addi sp, sp, -16
  li a0, 789
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl g_1
  .type g_1, @function
# leaf true
g_1:
.g_1_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f_0
  .type f_0, @function
# leaf true
f_0:
.f_0_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/landins_knot.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$a.228
  .type T$a.228, @function
# leaf false
T$a.228:
.T$a.228_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  la a0, factorial.18
  ld a1, 0(a0)
  la a0, _21
  lw a0, 0(a0)
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl dummy_0
  .type dummy_0, @function
# leaf true
dummy_0:
.dummy_0_0:
  addi sp, sp, -16
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$factorial.185
  .type T$factorial.185, @function
# leaf false
T$factorial.185:
.T$factorial.185_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  addi a0, s11, -8
  andi a1, a0, -8
  mv s11, a1
  la a0, g_3
  sd a0, 0(a1)
  mv a0, a1
  call landins_knot_1
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl aux_2
  .type aux_2, @function
# leaf false
aux_2:
.aux_2_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, s10
  ld a1, 8(a1)
  ld a1, 0(a1)
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main_10
  .type main_10, @function
# leaf false
main_10:
.main_10_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call f1_6
  mv a0, zero
  li a0, 10
  call g_9
  call minimbt_print_int
  mv a0, zero
  li a0, 31
  call g_9
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl g_3
  .type g_3, @function
# leaf true
g_3:
.g_3_0:
  addi sp, sp, -32
  mv a2, a0
  addi a0, s11, -16
  andi a1, a0, -8
  mv s11, a1
  la a0, h_4
  sd a0, 0(a1)
  sd a2, 8(a1)
  mv a0, a1
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$start_11
  .type T$start_11, @function
# leaf false
T$start_11:
.T$start_11_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_10
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f1_6
  .type f1_6, @function
# leaf false
f1_6:
.f1_6_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  la a0, factorial.18
  ld a0, 0(a0)
  mv s10, a0
  ld a1, 0(a0)
  li a0, 5
  jalr a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl h_4
  .type h_4, @function
# leaf false
h_4:
.h_4_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a1, s10
  mv s0, a0
  ld a0, 8(a1)
  beq s0, zero, .h_4_1
  j .h_4_2

.h_4_1:
  li a0, 1
  j .h_4_3

.h_4_2:
  addi a1, s0, -1
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  jalr a2
  mulw a0, s0, a0
  j .h_4_3

.h_4_3:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl landins_knot_1
  .type landins_knot_1, @function
# leaf false
landins_knot_1:
.landins_knot_1_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a2, a0
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a1, dummy_0
  sd a1, 0(a0)
  addi a1, s11, -8
  andi s0, a1, -8
  mv s11, s0
  sd a0, 0(s0)
  addi a0, s11, -16
  andi a0, a0, -8
  mv s11, a0
  la a1, aux_2
  sd a1, 0(a0)
  sd s0, 8(a0)
  mv s10, a2
  ld a1, 0(a2)
  jalr a1
  sd a0, 0(s0)
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl T$_21_7
  .type T$_21_7, @function
# leaf true
T$_21_7:
.T$_21_7_0:
  addi sp, sp, -16
  li a0, 5
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl g_9
  .type g_9, @function
# leaf true
g_9:
.g_9_0:
  addi sp, sp, -16
  mv a1, a0
  la a0, a.22
  lw a0, 0(a0)
  add a0, a1, a0
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$factorial.185
  la t5, factorial.18
  sd a0, 0(t5)
  call T$_21_7
  la t5, _21
  sw a0, 0(t5)
  call T$a.228
  la t5, a.22
  sw a0, 0(t5)
  call T$start_11
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl _21
  .type _21, @object
_21:
  .zero 4
  .p2align 2
  .bss
  .globl a.22
  .type a.22, @object
a.22:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4
  .p2align 2
  .bss
  .globl factorial.18
  .type factorial.18, @object
factorial.18:
  .zero 8



Testing test/test_src/mandelbrot.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl loop1_3
  .type loop1_3, @function
# leaf false
loop1_3:
.loop1_3_0:
  addi sp, sp, -80
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv s1, s10
  mv s0, a0
  lw a0, 8(s1)
  fld fa0, 16(s1)
  lw a2, 24(s1)
  fld fa1, 32(s1)
  ld a1, 40(s1)
  bge a0, s0, .loop1_3_1
  j .loop1_3_2

.loop1_3_1:
  fcvt.d.w fa2, s0
  fdiv.d fa2, fa2, fa0
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  fsub.d fa0, fa2, fa0
  addi a0, s11, -40
  andi a0, a0, -8
  mv s11, a0
  la a3, loop2_4
  sd a3, 0(a0)
  sd a2, 8(a0)
  fsd fa1, 16(a0)
  fsd fa0, 24(a0)
  sd a1, 32(a0)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  mv a0, zero
  addi a0, s0, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  mv a0, zero
  j .loop1_3_3

.loop1_3_3:
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 80
  ret

.loop1_3_2:
  mv a0, zero
  j .loop1_3_3

  .p2align 2
  .text
  .globl loop3_5
  .type loop3_5, @function
# leaf false
loop3_5:
.loop3_5_0:
  addi sp, sp, -96
  sd ra, 0(sp)
  mv a3, s10
  ld a2, 8(a3)
  ld a5, 16(a3)
  fld fa2, 24(a3)
  ld a4, 32(a3)
  fld fa1, 40(a3)
  ld a1, 48(a3)
  ld a0, 56(a3)
  fld fa3, 0(a2)
  li a6, 4611686018427387904
  fmv.d.x fa0, a6
  fmul.d fa3, fa0, fa3
  fld fa0, 0(a5)
  fmul.d fa0, fa3, fa0
  fadd.d fa0, fa0, fa2
  fsd fa0, 0(a5)
  fld fa0, 0(a4)
  fadd.d fa0, fa0, fa1
  fsd fa0, 0(a2)
  fld fa1, 0(a2)
  fld fa0, 0(a2)
  fmul.d fa3, fa1, fa0
  fld fa1, 0(a5)
  fld fa0, 0(a5)
  fmul.d fa2, fa1, fa0
  fadd.d fa1, fa3, fa2
  la a2, limit.1
  fld fa0, 0(a2)
  fle.d a2, fa0, fa1
  bne a2, zero, .loop3_5_1
  j .loop3_5_2

.loop3_5_6:
  ld ra, 0(sp)
  addi sp, sp, 96
  ret

.loop3_5_5:
  j .loop3_5_6

.loop3_5_4:
  fsub.d fa0, fa3, fa2
  fsd fa0, 0(a4)
  mv s10, a3
  ld a0, 0(a3)
  jalr a0
  mv a0, zero
  j .loop3_5_5

.loop3_5_2:
  lw a2, 0(a0)
  addi a2, a2, 1
  sw a2, 0(a0)
  lw a2, 0(a0)
  la a0, niter.2
  lw a0, 0(a0)
  beq a2, a0, .loop3_5_3
  j .loop3_5_4

.loop3_5_3:
  lw a2, 0(a1)
  li a0, 2
  mulw a0, a2, a0
  addi a0, a0, 1
  sw a0, 0(a1)
  mv a0, zero
  j .loop3_5_5

.loop3_5_1:
  lw a2, 0(a1)
  li a0, 2
  mulw a0, a2, a0
  sw a0, 0(a1)
  mv a0, zero
  j .loop3_5_6

  .p2align 2
  .text
  .globl T$limit.10
  .type T$limit.10, @function
# leaf true
T$limit.10:
.T$limit.10_0:
  addi sp, sp, -16
  li a0, 4616189618054758400
  fmv.d.x fa0, a0
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_7
  .type T$start_7, @function
# leaf false
T$start_7:
.T$start_7_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_6
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl loop2_4
  .type loop2_4, @function
# leaf false
loop2_4:
.loop2_4_0:
  addi sp, sp, -112
  sd s2, 0(sp)
  sd s1, 8(sp)
  sd s0, 16(sp)
  sd ra, 24(sp)
  mv s0, s10
  mv s1, a0
  lw a0, 8(s0)
  fld fa1, 16(s0)
  fld fa2, 24(s0)
  ld s2, 32(s0)
  bge a0, s1, .loop2_4_1
  j .loop2_4_2

.loop2_4_3:
  lw a0, 0(s2)
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  mv a0, zero
  j .loop2_4_5

.loop2_4_1:
  fcvt.d.w fa0, s1
  fdiv.d fa1, fa0, fa1
  li a0, 4609434218613702656
  fmv.d.x fa0, a0
  fsub.d fa1, fa1, fa0
  addi a0, s11, -8
  andi a4, a0, -8
  mv s11, a4
  fmv.d.x fa0, zero
  fsd fa0, 0(a4)
  addi a0, s11, -8
  andi a5, a0, -8
  mv s11, a5
  fmv.d.x fa0, zero
  fsd fa0, 0(a5)
  addi a0, s11, -8
  andi a3, a0, -8
  mv s11, a3
  fmv.d.x fa0, zero
  fsd fa0, 0(a3)
  addi a0, s11, -4
  andi a2, a0, -8
  mv s11, a2
  sw zero, 0(a2)
  addi a0, s11, -64
  andi a0, a0, -8
  mv s11, a0
  la a1, loop3_5
  sd a1, 0(a0)
  sd a4, 8(a0)
  sd a5, 16(a0)
  fsd fa2, 24(a0)
  sd a3, 32(a0)
  fsd fa1, 40(a0)
  sd s2, 48(a0)
  sd a2, 56(a0)
  mv s10, a0
  ld a0, 0(a0)
  jalr a0
  mv a0, zero
  addi a1, s1, 1
  li a0, 8
  divw a0, a1, a0
  li a1, 8
  mulw a0, a0, a1
  addi a1, s1, 1
  beq a0, a1, .loop2_4_3
  j .loop2_4_4

.loop2_4_2:
  mv a0, zero
  j .loop2_4_6

.loop2_4_5:
  addi a0, s1, 1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  mv a0, zero
  j .loop2_4_6

.loop2_4_4:
  mv a0, zero
  j .loop2_4_5

.loop2_4_6:
  ld s2, 0(sp)
  ld s1, 8(sp)
  ld s0, 16(sp)
  ld ra, 24(sp)
  addi sp, sp, 112
  ret

  .p2align 2
  .text
  .globl T$niter.21
  .type T$niter.21, @function
# leaf true
T$niter.21:
.T$niter.21_0:
  addi sp, sp, -16
  li a0, 50
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl mandelbrot_2
  .type mandelbrot_2, @function
# leaf false
mandelbrot_2:
.mandelbrot_2_0:
  addi sp, sp, -80
  sd ra, 0(sp)
  mv a1, a0
  fcvt.d.w fa1, a1
  li a0, 4611686018427387904
  fmv.d.x fa0, a0
  fdiv.d fa1, fa1, fa0
  fcvt.d.w fa2, a1
  li a0, 4611686018427387904
  fmv.d.x fa0, a0
  fdiv.d fa0, fa2, fa0
  addi a0, a1, -1
  addi a2, a1, -1
  addi a1, s11, -4
  andi a3, a1, -8
  mv s11, a3
  sw zero, 0(a3)
  addi a1, s11, -48
  andi a4, a1, -8
  mv s11, a4
  la a1, loop1_3
  sd a1, 0(a4)
  sd a0, 8(a4)
  fsd fa0, 16(a4)
  sd a2, 24(a4)
  fsd fa1, 32(a4)
  sd a3, 40(a4)
  mv s10, a4
  ld a1, 0(a4)
  mv a0, zero
  jalr a1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 80
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$limit.10
  la t5, limit.1
  fsd fa0, 0(t5)
  call T$niter.21
  la t5, niter.2
  sw a0, 0(t5)
  call T$start_7
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl main_6
  .type main_6, @function
# leaf false
main_6:
.main_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 320
  call mandelbrot_2
  mv a0, zero
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl limit.1
  .type limit.1, @object
limit.1:
  .zero 8
  .p2align 2
  .bss
  .globl niter.2
  .type niter.2, @object
niter.2:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/matmul-flat.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl memseti64
  .type memseti64, @function
memseti64:
  blez a1, .memseti64_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti64_b0:
  sd a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti64_b0
.memseti64_b1:
  ret


  .p2align 2
  .text
  .globl memsetf64
  .type memsetf64, @function
memsetf64:
  blez a1, .memsetf64_b1
  slli a1, a1, 3
  add a1, a1, a0
.memsetf64_b0:
  fsd fa0, 0(a0)
  addi a0, a0, 8
  bne a0, a1, .memsetf64_b0
.memsetf64_b1:
  ret

  .p2align 2
  .text
  .globl loop3_0
  .type loop3_0, @function
# leaf false
loop3_0:
.loop3_0_0:
  addi sp, sp, -112
  sd ra, 0(sp)
  mv a6, a0
  mv a0, a2
  bge a0, zero, .loop3_0_1
  j .loop3_0_2

.loop3_0_3:
  ld ra, 0(sp)
  addi sp, sp, 112
  ret

.loop3_0_1:
  slli a2, a6, 3
  add a2, a5, a2
  ld a7, 0(a2)
  slli a2, a6, 3
  add a2, a5, a2
  ld a2, 0(a2)
  slli t0, a1, 3
  add a2, a2, t0
  fld fa1, 0(a2)
  slli a2, a6, 3
  add a2, a3, a2
  ld t0, 0(a2)
  slli a2, a0, 3
  add a2, t0, a2
  fld fa2, 0(a2)
  slli a2, a0, 3
  add a2, a4, a2
  ld t0, 0(a2)
  slli a2, a1, 3
  add a2, t0, a2
  fld fa0, 0(a2)
  fmul.d fa0, fa2, fa0
  fadd.d fa0, fa1, fa0
  slli a2, a1, 3
  add a2, a7, a2
  fsd fa0, 0(a2)
  addi a2, a0, -1
  mv a0, a6
  call loop3_0
  mv a0, zero
  j .loop3_0_3

.loop3_0_2:
  mv a0, zero
  j .loop3_0_3

  .p2align 2
  .text
  .globl T$start_7
  .type T$start_7, @function
# leaf false
T$start_7:
.T$start_7_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_4
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl loop1_2
  .type loop1_2, @function
# leaf false
loop1_2:
.loop1_2_0:
  addi sp, sp, -80
  sd s5, 0(sp)
  sd s4, 8(sp)
  sd s3, 16(sp)
  sd s2, 24(sp)
  sd s1, 32(sp)
  sd s0, 40(sp)
  sd ra, 48(sp)
  mv s5, a0
  mv s4, a1
  mv s0, a2
  mv s1, a3
  mv s2, a4
  mv s3, a5
  bge s5, zero, .loop1_2_1
  j .loop1_2_2

.loop1_2_3:
  ld s5, 0(sp)
  ld s4, 8(sp)
  ld s3, 16(sp)
  ld s2, 24(sp)
  ld s1, 32(sp)
  ld s0, 40(sp)
  ld ra, 48(sp)
  addi sp, sp, 80
  ret

.loop1_2_1:
  addi a2, s0, -1
  mv a0, s5
  mv a1, s4
  mv a3, s1
  mv a4, s2
  mv a5, s3
  call loop2_1
  mv a0, zero
  addi a0, s5, -1
  mv a1, s4
  mv a2, s0
  mv a3, s1
  mv a4, s2
  mv a5, s3
  call loop1_2
  mv a0, zero
  j .loop1_2_3

.loop1_2_2:
  mv a0, zero
  j .loop1_2_3

  .p2align 2
  .text
  .globl mul_3
  .type mul_3, @function
# leaf false
mul_3:
.mul_3_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  addi a0, a0, -1
  call loop1_2
  mv a0, zero
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl init_arr_5
  .type init_arr_5, @function
# leaf false
init_arr_5:
.init_arr_5_0:
  addi sp, sp, -80
  sd s4, 0(sp)
  sd s3, 8(sp)
  sd s2, 16(sp)
  sd s1, 24(sp)
  sd s0, 32(sp)
  sd ra, 40(sp)
  mv s2, s10
  mv s3, a0
  mv s1, a1
  mv s0, a2
  bge s3, zero, .init_arr_5_1
  j .init_arr_5_2

.init_arr_5_1:
  slli a0, s1, 3
  sub a0, s11, a0
  andi s4, a0, -8
  mv s11, s4
  fmv.d.x fa0, zero
  mv a1, s1
  mv a0, s4
  call memsetf64
  slli a0, s3, 3
  add a0, s0, a0
  sd s4, 0(a0)
  addi a0, s3, -1
  mv s10, s2
  ld a3, 0(s2)
  mv a1, s1
  mv a2, s0
  jalr a3
  mv a0, zero
  j .init_arr_5_3

.init_arr_5_3:
  ld s4, 0(sp)
  ld s3, 8(sp)
  ld s2, 16(sp)
  ld s1, 24(sp)
  ld s0, 32(sp)
  ld ra, 40(sp)
  addi sp, sp, 80
  ret

.init_arr_5_2:
  mv a0, zero
  j .init_arr_5_3

  .p2align 2
  .text
  .globl main_4
  .type main_4, @function
# leaf false
main_4:
.main_4_0:
  addi sp, sp, -80
  sd s3, 0(sp)
  sd s2, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  addi a0, s11, 0
  andi s0, a0, -8
  mv s11, s0
  fmv.d.x fa0, zero
  addi a0, s11, -8
  andi a1, a0, -8
  mv s11, a1
  la a0, init_arr_5
  sd a0, 0(a1)
  addi a0, s11, -16
  andi s1, a0, -8
  mv s11, s1
  la a0, make_arr_6
  sd a0, 0(s1)
  sd a1, 8(s1)
  mv s10, s1
  ld a3, 0(s1)
  li a0, 2
  li a1, 3
  mv a2, s0
  jalr a3
  mv s3, a0
  mv s10, s1
  ld a3, 0(s1)
  li a0, 3
  li a1, 2
  mv a2, s0
  jalr a3
  mv s2, a0
  mv s10, s1
  ld a3, 0(s1)
  li a0, 2
  li a1, 2
  mv a2, s0
  jalr a3
  mv s0, a0
  ld a0, 0(s3)
  li a1, 4607182418800017408
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 0(s3)
  li a1, 4611686018427387904
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 0(s3)
  li a1, 4613937818241073152
  fmv.d.x fa0, a1
  fsd fa0, 16(a0)
  ld a0, 8(s3)
  li a1, 4616189618054758400
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 8(s3)
  li a1, 4617315517961601024
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 8(s3)
  li a1, 4618441417868443648
  fmv.d.x fa0, a1
  fsd fa0, 16(a0)
  ld a1, 0(s2)
  li a0, 4619567317775286272
  fmv.d.x fa0, a0
  fsd fa0, 0(a1)
  ld a0, 0(s2)
  li a1, 4620693217682128896
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 8(s2)
  li a1, 4621256167635550208
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a0, 8(s2)
  li a1, 4621819117588971520
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a1, 16(s2)
  li a0, 4622382067542392832
  fmv.d.x fa0, a0
  fsd fa0, 0(a1)
  ld a0, 16(s2)
  li a1, 4622945017495814144
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  li a0, 2
  li a1, 3
  li a2, 2
  mv a3, s3
  mv a4, s2
  mv a5, s0
  call mul_3
  mv a0, zero
  ld a0, 0(s0)
  fld fa0, 0(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 0(s0)
  fld fa0, 8(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 8(s0)
  fld fa0, 0(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 8(s0)
  fld fa0, 8(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld s3, 0(sp)
  ld s2, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 80
  ret

  .p2align 2
  .text
  .globl loop2_1
  .type loop2_1, @function
# leaf false
loop2_1:
.loop2_1_0:
  addi sp, sp, -80
  sd s5, 0(sp)
  sd s4, 8(sp)
  sd s3, 16(sp)
  sd s2, 24(sp)
  sd s1, 32(sp)
  sd s0, 40(sp)
  sd ra, 48(sp)
  mv s1, a0
  mv s2, a1
  mv s5, a2
  mv s0, a3
  mv s3, a4
  mv s4, a5
  bge s5, zero, .loop2_1_1
  j .loop2_1_2

.loop2_1_3:
  ld s5, 0(sp)
  ld s4, 8(sp)
  ld s3, 16(sp)
  ld s2, 24(sp)
  ld s1, 32(sp)
  ld s0, 40(sp)
  ld ra, 48(sp)
  addi sp, sp, 80
  ret

.loop2_1_1:
  addi a2, s2, -1
  mv a0, s1
  mv a1, s5
  mv a3, s0
  mv a4, s3
  mv a5, s4
  call loop3_0
  mv a0, zero
  addi a2, s5, -1
  mv a0, s1
  mv a1, s2
  mv a3, s0
  mv a4, s3
  mv a5, s4
  call loop2_1
  mv a0, zero
  j .loop2_1_3

.loop2_1_2:
  mv a0, zero
  j .loop2_1_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_7
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl make_arr_6
  .type make_arr_6, @function
# leaf false
make_arr_6:
.make_arr_6_0:
  addi sp, sp, -64
  sd s3, 0(sp)
  sd s2, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  mv a3, s10
  mv s1, a0
  mv s3, a1
  ld s2, 8(a3)
  slli a0, s1, 3
  sub a0, s11, a0
  andi s0, a0, -8
  mv s11, s0
  mv a1, s1
  mv a0, s0
  call memseti64
  addi a0, s1, -1
  mv s10, s2
  ld a3, 0(s2)
  mv a1, s3
  mv a2, s0
  jalr a3
  mv a0, zero
  mv a0, s0
  ld s3, 0(sp)
  ld s2, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/matmul.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl memseti64
  .type memseti64, @function
memseti64:
  blez a1, .memseti64_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti64_b0:
  sd a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti64_b0
.memseti64_b1:
  ret


  .p2align 2
  .text
  .globl memsetf64
  .type memsetf64, @function
memsetf64:
  blez a1, .memsetf64_b1
  slli a1, a1, 3
  add a1, a1, a0
.memsetf64_b0:
  fsd fa0, 0(a0)
  addi a0, a0, 8
  bne a0, a1, .memsetf64_b0
.memsetf64_b1:
  ret

  .p2align 2
  .text
  .globl T$start_7
  .type T$start_7, @function
# leaf false
T$start_7:
.T$start_7_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_4
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl gen_arr_5
  .type gen_arr_5, @function
# leaf false
gen_arr_5:
.gen_arr_5_0:
  addi sp, sp, -64
  sd s2, 0(sp)
  sd s1, 8(sp)
  sd s0, 16(sp)
  sd ra, 24(sp)
  mv a2, s10
  mv s2, a0
  mv s1, a1
  ld a2, 8(a2)
  slli a0, s2, 3
  sub a0, s11, a0
  andi s0, a0, -8
  mv s11, s0
  mv a1, s2
  mv a0, s0
  call memseti64
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  la a1, init_arr_6
  sd a1, 0(a0)
  sd s1, 8(a0)
  sd s0, 16(a0)
  addi a1, s2, -1
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  jalr a2
  mv a0, zero
  mv a0, s0
  ld s2, 0(sp)
  ld s1, 8(sp)
  ld s0, 16(sp)
  ld ra, 24(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl init_arr_6
  .type init_arr_6, @function
# leaf false
init_arr_6:
.init_arr_6_0:
  addi sp, sp, -64
  sd s3, 0(sp)
  sd s2, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  mv s2, s10
  mv s1, a0
  lw a0, 8(s2)
  ld s0, 16(s2)
  bge s1, zero, .init_arr_6_1
  j .init_arr_6_2

.init_arr_6_3:
  ld s3, 0(sp)
  ld s2, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 64
  ret

.init_arr_6_1:
  slli a1, a0, 3
  sub a1, s11, a1
  andi s3, a1, -8
  mv s11, s3
  fmv.d.x fa0, zero
  mv a1, a0
  mv a0, s3
  call memsetf64
  slli a0, s1, 3
  add a0, s0, a0
  sd s3, 0(a0)
  addi a0, s1, -1
  mv s10, s2
  ld a1, 0(s2)
  jalr a1
  mv a0, zero
  j .init_arr_6_3

.init_arr_6_2:
  mv a0, zero
  j .init_arr_6_3

  .p2align 2
  .text
  .globl loop3_3
  .type loop3_3, @function
# leaf false
loop3_3:
.loop3_3_0:
  addi sp, sp, -112
  sd ra, 0(sp)
  mv a1, s10
  mv a2, a0
  ld t0, 8(a1)
  lw a6, 16(a1)
  lw a4, 24(a1)
  ld a7, 32(a1)
  ld a5, 40(a1)
  bge a2, zero, .loop3_3_1
  j .loop3_3_2

.loop3_3_3:
  ld ra, 0(sp)
  addi sp, sp, 112
  ret

.loop3_3_1:
  slli a0, a6, 3
  add a0, t0, a0
  ld a3, 0(a0)
  slli a0, a6, 3
  add a0, t0, a0
  ld t0, 0(a0)
  slli a0, a4, 3
  add a0, t0, a0
  fld fa1, 0(a0)
  slli a0, a6, 3
  add a0, a7, a0
  ld a0, 0(a0)
  slli a6, a2, 3
  add a0, a0, a6
  fld fa2, 0(a0)
  slli a0, a2, 3
  add a0, a5, a0
  ld a0, 0(a0)
  slli a5, a4, 3
  add a0, a0, a5
  fld fa0, 0(a0)
  fmul.d fa0, fa2, fa0
  fadd.d fa0, fa1, fa0
  slli a0, a4, 3
  add a0, a3, a0
  fsd fa0, 0(a0)
  addi a0, a2, -1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mv a0, zero
  j .loop3_3_3

.loop3_3_2:
  mv a0, zero
  j .loop3_3_3

  .p2align 2
  .text
  .globl loop2_2
  .type loop2_2, @function
# leaf false
loop2_2:
.loop2_2_0:
  addi sp, sp, -80
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv s0, s10
  mv s1, a0
  ld a5, 8(s0)
  lw a0, 16(s0)
  ld a4, 24(s0)
  ld a6, 32(s0)
  lw a3, 40(s0)
  bge s1, zero, .loop2_2_1
  j .loop2_2_2

.loop2_2_3:
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 80
  ret

.loop2_2_1:
  addi a1, s11, -48
  andi a1, a1, -8
  mv s11, a1
  la a2, loop3_3
  sd a2, 0(a1)
  sd a5, 8(a1)
  sd a0, 16(a1)
  sd s1, 24(a1)
  sd a4, 32(a1)
  sd a6, 40(a1)
  addi a0, a3, -1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mv a0, zero
  addi a0, s1, -1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  mv a0, zero
  j .loop2_2_3

.loop2_2_2:
  mv a0, zero
  j .loop2_2_3

  .p2align 2
  .text
  .globl loop1_1
  .type loop1_1, @function
# leaf false
loop1_1:
.loop1_1_0:
  addi sp, sp, -80
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv s0, s10
  mv s1, a0
  ld a5, 8(s0)
  ld a3, 16(s0)
  ld a2, 24(s0)
  lw a4, 32(s0)
  lw a0, 40(s0)
  bge s1, zero, .loop1_1_1
  j .loop1_1_2

.loop1_1_1:
  addi a1, s11, -48
  andi a1, a1, -8
  mv s11, a1
  la a6, loop2_2
  sd a6, 0(a1)
  sd a5, 8(a1)
  sd s1, 16(a1)
  sd a3, 24(a1)
  sd a2, 32(a1)
  sd a4, 40(a1)
  addi a0, a0, -1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mv a0, zero
  addi a0, s1, -1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  mv a0, zero
  j .loop1_1_3

.loop1_1_2:
  mv a0, zero
  j .loop1_1_3

.loop1_1_3:
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 80
  ret

  .p2align 2
  .text
  .globl matmul_0
  .type matmul_0, @function
# leaf false
matmul_0:
.matmul_0_0:
  addi sp, sp, -80
  sd ra, 0(sp)
  mv a6, a1
  mv a7, a3
  mv a3, a4
  mv a4, a5
  addi a1, s11, -48
  andi a1, a1, -8
  mv s11, a1
  la a5, loop1_1
  sd a5, 0(a1)
  sd a4, 8(a1)
  sd a7, 16(a1)
  sd a3, 24(a1)
  sd a6, 32(a1)
  sd a2, 40(a1)
  addi a0, a0, -1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 80
  ret

  .p2align 2
  .text
  .globl main_4
  .type main_4, @function
# leaf false
main_4:
.main_4_0:
  addi sp, sp, -64
  sd s2, 0(sp)
  sd s1, 8(sp)
  sd s0, 16(sp)
  sd ra, 24(sp)
  addi a0, s11, 0
  andi a0, a0, -8
  mv s11, a0
  fmv.d.x fa0, zero
  addi a1, s11, -16
  andi s0, a1, -8
  mv s11, s0
  la a1, gen_arr_5
  sd a1, 0(s0)
  sd a0, 8(s0)
  mv s10, s0
  ld a2, 0(s0)
  li a0, 2
  li a1, 3
  jalr a2
  mv s2, a0
  mv s10, s0
  ld a2, 0(s0)
  li a0, 3
  li a1, 2
  jalr a2
  mv s1, a0
  mv s10, s0
  ld a2, 0(s0)
  li a0, 2
  li a1, 2
  jalr a2
  mv s0, a0
  ld a1, 0(s2)
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  fsd fa0, 0(a1)
  ld a1, 0(s2)
  li a0, 4611686018427387904
  fmv.d.x fa0, a0
  fsd fa0, 8(a1)
  ld a1, 0(s2)
  li a0, 4613937818241073152
  fmv.d.x fa0, a0
  fsd fa0, 16(a1)
  ld a0, 8(s2)
  li a1, 4616189618054758400
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a1, 8(s2)
  li a0, 4617315517961601024
  fmv.d.x fa0, a0
  fsd fa0, 8(a1)
  ld a0, 8(s2)
  li a1, 4618441417868443648
  fmv.d.x fa0, a1
  fsd fa0, 16(a0)
  ld a1, 0(s1)
  li a0, 4619567317775286272
  fmv.d.x fa0, a0
  fsd fa0, 0(a1)
  ld a1, 0(s1)
  li a0, 4620693217682128896
  fmv.d.x fa0, a0
  fsd fa0, 8(a1)
  ld a1, 8(s1)
  li a0, 4621256167635550208
  fmv.d.x fa0, a0
  fsd fa0, 0(a1)
  ld a0, 8(s1)
  li a1, 4621819117588971520
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  ld a0, 16(s1)
  li a1, 4622382067542392832
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  ld a1, 16(s1)
  li a0, 4622945017495814144
  fmv.d.x fa0, a0
  fsd fa0, 8(a1)
  li a0, 2
  li a1, 3
  li a2, 2
  mv a3, s2
  mv a4, s1
  mv a5, s0
  call matmul_0
  mv a0, zero
  ld a0, 0(s0)
  fld fa0, 0(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 0(s0)
  fld fa0, 8(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 8(s0)
  fld fa0, 0(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  ld a0, 8(s0)
  fld fa0, 8(a0)
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld s2, 0(sp)
  ld s1, 8(sp)
  ld s0, 16(sp)
  ld ra, 24(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_7
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/non-tail-if.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main_0
  .type main_0, @function
# leaf false
main_0:
.main_0_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  li a0, 4608218246714312622
  fmv.d.x fa0, a0
  fcvt.w.d a2, fa0, rtz
  li a0, 4616820122002590269
  fmv.d.x fa0, a0
  fcvt.w.d a1, fa0, rtz
  li a0, -4602802668162399601
  fmv.d.x fa0, a0
  fcvt.w.d a3, fa0, rtz
  bge a3, zero, .main_0_1
  j .main_0_2

.main_0_1:
  mv a4, a2
  j .main_0_3

.main_0_2:
  mv a4, a1
  j .main_0_3

.main_0_6:
  add a0, a4, a0
  bge a1, zero, .main_0_7
  j .main_0_8

.main_0_3:
  bge zero, a2, .main_0_4
  j .main_0_5

.main_0_7:
  mv a1, a3
  j .main_0_9

.main_0_9:
  add a0, a0, a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

.main_0_5:
  mv a0, a3
  j .main_0_6

.main_0_8:
  mv a1, a2
  j .main_0_9

.main_0_4:
  mv a0, a1
  j .main_0_6

  .p2align 2
  .text
  .globl T$start_1
  .type T$start_1, @function
# leaf false
T$start_1:
.T$start_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_1
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/non-tail-if2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main_0
  .type main_0, @function
# leaf false
main_0:
.main_0_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  addi a0, s11, -8
  andi a2, a0, -8
  mv s11, a2
  la a0, f_1
  sd a0, 0(a2)
  addi a0, s11, -40
  andi s0, a0, -8
  mv s11, s0
  li a0, 3
  sw a0, 0(s0)
  sw a0, 4(s0)
  sw a0, 8(s0)
  sw a0, 12(s0)
  sw a0, 16(s0)
  sw a0, 20(s0)
  sw a0, 24(s0)
  sw a0, 28(s0)
  sw a0, 32(s0)
  sw a0, 36(s0)
  lw a1, 0(s0)
  li a0, 3
  beq a1, a0, .main_0_1
  j .main_0_2

.main_0_1:
  mv s10, a2
  ld a0, 0(a2)
  jalr a0
  lw a1, 4(s0)
  add a0, a0, a1
  li a1, 67890
  add a0, a0, a1
  j .main_0_3

.main_0_2:
  li a0, 7
  j .main_0_3

.main_0_3:
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl f_1
  .type f_1, @function
# leaf true
f_1:
.f_1_0:
  addi sp, sp, -16
  mv a0, s10
  li a0, 12345
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/print.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main_0
  .type main_0, @function
# leaf false
main_0:
.main_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 123
  call minimbt_print_int
  mv a0, zero
  li a0, -456
  call minimbt_print_int
  mv a0, zero
  addi a0, zero, 789
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_1
  .type T$start_1, @function
# leaf false
T$start_1:
.T$start_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_1
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/quicksort.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$start_5
  .type T$start_5, @function
# leaf false
T$start_5:
.T$start_5_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_4
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl quicksort_3
  .type quicksort_3, @function
# leaf false
quicksort_3:
.quicksort_3_0:
  addi sp, sp, -64
  sd s3, 0(sp)
  sd s2, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2
  addi a0, s2, -1
  bge a0, s1, .quicksort_3_1
  j .quicksort_3_2

.quicksort_3_1:
  mv a0, s0
  mv a1, s1
  mv a2, s2
  call partition_1
  mv s3, a0
  addi a2, s3, -1
  mv a0, s0
  mv a1, s1
  call quicksort_3
  mv a0, zero
  addi a1, s3, 1
  mv a0, s0
  mv a2, s2
  call quicksort_3
  mv a0, zero
  j .quicksort_3_3

.quicksort_3_3:
  ld s3, 0(sp)
  ld s2, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 64
  ret

.quicksort_3_2:
  mv a0, zero
  j .quicksort_3_3

  .p2align 2
  .text
  .globl main_4
  .type main_4, @function
# leaf false
main_4:
.main_4_0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  addi a0, s11, -24
  andi s0, a0, -8
  mv s11, s0
  sw zero, 0(s0)
  sw zero, 4(s0)
  sw zero, 8(s0)
  sw zero, 12(s0)
  sw zero, 16(s0)
  sw zero, 20(s0)
  li a0, 10
  sw a0, 0(s0)
  li a0, 7
  sw a0, 4(s0)
  li a0, 8
  sw a0, 8(s0)
  li a0, 9
  sw a0, 12(s0)
  li a0, 1
  sw a0, 16(s0)
  li a0, 5
  sw a0, 20(s0)
  mv a0, s0
  mv a1, zero
  li a2, 5
  call quicksort_3
  mv a0, zero
  lw a0, 0(s0)
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  lw a0, 4(s0)
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  lw a0, 8(s0)
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  lw a0, 12(s0)
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  lw a0, 16(s0)
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  lw a0, 20(s0)
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl partition_1
  .type partition_1, @function
# leaf false
partition_1:
.partition_1_0:
  addi sp, sp, -64
  sd s2, 0(sp)
  sd s1, 8(sp)
  sd s0, 16(sp)
  sd ra, 24(sp)
  mv s2, a0
  mv a0, a1
  mv s1, a2
  slli a1, s1, 2
  add a1, s2, a1
  lw a2, 0(a1)
  addi a1, a0, -1
  addi a3, s11, -4
  andi s0, a3, -8
  mv s11, s0
  sw a1, 0(s0)
  addi a1, s11, -40
  andi a1, a1, -8
  mv s11, a1
  la a3, l_2
  sd a3, 0(a1)
  sd s1, 8(a1)
  sd s2, 16(a1)
  sd a2, 24(a1)
  sd s0, 32(a1)
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mv a0, zero
  lw a0, 0(s0)
  addi a0, a0, 1
  sw a0, 0(s0)
  lw a1, 0(s0)
  mv a0, s2
  mv a2, s1
  call swap_0
  mv a0, zero
  lw a0, 0(s0)
  ld s2, 0(sp)
  ld s1, 8(sp)
  ld s0, 16(sp)
  ld ra, 24(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl l_2
  .type l_2, @function
# leaf false
l_2:
.l_2_0:
  addi sp, sp, -64
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv s1, s10
  mv s0, a0
  lw a0, 8(s1)
  ld a1, 16(s1)
  lw a2, 24(s1)
  ld a3, 32(s1)
  addi a0, a0, -1
  bge a0, s0, .l_2_1
  j .l_2_2

.l_2_5:
  addi a0, s0, 1
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  mv a0, zero
  j .l_2_6

.l_2_3:
  lw a0, 0(a3)
  addi a0, a0, 1
  sw a0, 0(a3)
  lw a2, 0(a3)
  mv a0, a1
  mv a1, a2
  mv a2, s0
  call swap_0
  mv a0, zero
  j .l_2_5

.l_2_1:
  slli a0, s0, 2
  add a0, a1, a0
  lw a0, 0(a0)
  bge a2, a0, .l_2_3
  j .l_2_4

.l_2_6:
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 64
  ret

.l_2_4:
  mv a0, zero
  j .l_2_5

.l_2_2:
  mv a0, zero
  j .l_2_6

  .p2align 2
  .text
  .globl swap_0
  .type swap_0, @function
# leaf true
swap_0:
.swap_0_0:
  addi sp, sp, -48
  mv a3, a0
  mv a0, a1
  mv a4, a2
  slli a1, a0, 2
  add a1, a3, a1
  lw a1, 0(a1)
  slli a2, a4, 2
  add a2, a3, a2
  lw a2, 0(a2)
  slli a0, a0, 2
  add a0, a3, a0
  sw a2, 0(a0)
  slli a0, a4, 2
  add a0, a3, a0
  sw a1, 0(a0)
  mv a0, zero
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_5
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/shuffle.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl foo_0
  .type foo_0, @function
# leaf false
foo_0:
.foo_0_0:
  addi sp, sp, -64
  sd s4, 0(sp)
  sd s3, 8(sp)
  sd s2, 16(sp)
  sd s1, 24(sp)
  sd s0, 32(sp)
  sd ra, 40(sp)
  mv s0, a1
  mv s1, a2
  mv s4, a3
  mv s3, a4
  mv s2, a5
  call minimbt_print_int
  mv a0, zero
  mv a0, s0
  call minimbt_print_int
  mv a0, zero
  mv a0, s1
  call minimbt_print_int
  mv a0, zero
  mv a0, s4
  call minimbt_print_int
  mv a0, zero
  mv a0, s3
  call minimbt_print_int
  mv a0, zero
  mv a0, s2
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld s4, 0(sp)
  ld s3, 8(sp)
  ld s2, 16(sp)
  ld s1, 24(sp)
  ld s0, 32(sp)
  ld ra, 40(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl T$start_3
  .type T$start_3, @function
# leaf false
T$start_3:
.T$start_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl bar_1
  .type bar_1, @function
# leaf false
bar_1:
.bar_1_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  mv a7, a0
  mv a0, a1
  mv a6, a2
  mv a2, a3
  mv a3, a4
  mv a4, a5
  mv a1, a7
  mv a5, a6
  call foo_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl main_2
  .type main_2, @function
# leaf false
main_2:
.main_2_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  li a0, 1
  li a1, 2
  li a2, 3
  li a3, 4
  li a4, 5
  li a5, 6
  call bar_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_3
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/spill.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main_1
  .type main_1, @function
# leaf false
main_1:
.main_1_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  li a0, 1
  li a1, 2
  li a2, 3
  li a3, 4
  call f_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl f_0
  .type f_0, @function
# leaf true
f_0:
.f_0_0:
  addi sp, sp, -240
  sd s10, 0(sp)
  sd s9, 8(sp)
  sd s7, 16(sp)
  sd s4, 24(sp)
  sd s3, 32(sp)
  sd s2, 40(sp)
  mv t5, a0
  sw t5, 160(sp)
  mv s6, a1
  mv t5, a3
  sw t5, 184(sp)
  lw t5, 160(sp)
  add s5, t5, s6
  lw t5, 160(sp)
  add a0, t5, a2
  lw t5, 160(sp)
  lw t6, 184(sp)
  add a3, t5, t6
  add t5, s6, a2
  sw t5, 168(sp)
  lw t5, 184(sp)
  add s8, s6, t5
  lw t5, 184(sp)
  add t5, a2, t5
  sw t5, 136(sp)
  add t5, s5, a0
  sw t5, 128(sp)
  add t5, s5, a3
  sw t5, 120(sp)
  lw t5, 168(sp)
  add s10, s5, t5
  add s9, s5, s8
  lw t5, 136(sp)
  add t2, s5, t5
  add t5, a0, a3
  sw t5, 200(sp)
  lw t5, 168(sp)
  add t5, a0, t5
  sw t5, 208(sp)
  add s4, a0, s8
  lw t5, 136(sp)
  add t5, a0, t5
  sw t5, 216(sp)
  lw t5, 168(sp)
  add s3, a3, t5
  add s2, a3, s8
  lw t5, 136(sp)
  add s1, a3, t5
  lw t5, 168(sp)
  add s0, t5, s8
  lw t5, 168(sp)
  lw t6, 136(sp)
  add t4, t5, t6
  lw t5, 136(sp)
  add t3, s8, t5
  lw t5, 128(sp)
  lw t6, 120(sp)
  add t5, t5, t6
  sw t5, 144(sp)
  lw t5, 128(sp)
  add t1, t5, s10
  lw t5, 128(sp)
  add t0, t5, s9
  lw t5, 128(sp)
  add a7, t5, t2
  lw t5, 128(sp)
  lw t6, 200(sp)
  add a6, t5, t6
  lw t5, 128(sp)
  lw t6, 208(sp)
  add a5, t5, t6
  lw t5, 128(sp)
  add t5, t5, s4
  sw t5, 232(sp)
  lw t5, 128(sp)
  lw t6, 216(sp)
  add a4, t5, t6
  lw t5, 128(sp)
  add t5, t5, s3
  sw t5, 224(sp)
  lw t5, 128(sp)
  add t5, t5, s2
  sw t5, 192(sp)
  lw t5, 128(sp)
  add t5, t5, s1
  sw t5, 152(sp)
  lw t5, 128(sp)
  add t5, t5, s0
  sw t5, 176(sp)
  lw t5, 128(sp)
  add s7, t5, t4
  lw t5, 128(sp)
  add a1, t5, t3
  lw t5, 160(sp)
  add s6, t5, s6
  add a2, s6, a2
  lw t5, 184(sp)
  add a2, a2, t5
  add a2, a2, s5
  add a0, a2, a0
  add a0, a0, a3
  lw t5, 168(sp)
  add a0, a0, t5
  add a0, a0, s8
  lw t5, 136(sp)
  add a0, a0, t5
  lw t5, 128(sp)
  add a0, a0, t5
  lw t5, 120(sp)
  add a0, a0, t5
  add a0, a0, s10
  add a0, a0, s9
  add a0, a0, t2
  lw t5, 200(sp)
  add a0, a0, t5
  lw t5, 208(sp)
  add a0, a0, t5
  add a0, a0, s4
  lw t5, 216(sp)
  add a0, a0, t5
  add a0, a0, s3
  add a0, a0, s2
  add a0, a0, s1
  add a0, a0, s0
  add a0, a0, t4
  add a0, a0, t3
  lw t5, 144(sp)
  add a0, a0, t5
  add a0, a0, t1
  add a0, a0, t0
  add a0, a0, a7
  add a0, a0, a6
  add a0, a0, a5
  lw t5, 232(sp)
  add a0, a0, t5
  add a0, a0, a4
  lw t5, 224(sp)
  add a0, a0, t5
  lw t5, 192(sp)
  add a0, a0, t5
  lw t5, 152(sp)
  add a0, a0, t5
  lw t5, 176(sp)
  add a0, a0, t5
  add a0, a0, s7
  add a0, a0, a1
  neg a0, a0
  ld s10, 0(sp)
  ld s9, 8(sp)
  ld s7, 16(sp)
  ld s4, 24(sp)
  ld s3, 32(sp)
  ld s2, 40(sp)
  addi sp, sp, 240
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/spill2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$start_3
  .type T$start_3, @function
# leaf false
T$start_3:
.T$start_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main_2
  .type main_2, @function
# leaf false
main_2:
.main_2_0:
  addi sp, sp, -160
  sd s4, 0(sp)
  sd s3, 8(sp)
  sd s2, 16(sp)
  sd s1, 24(sp)
  sd s0, 32(sp)
  sd ra, 40(sp)
  addi a0, s11, -40
  andi s0, a0, -8
  mv s11, s0
  li a0, 1
  sw a0, 0(s0)
  sw a0, 4(s0)
  sw a0, 8(s0)
  sw a0, 12(s0)
  sw a0, 16(s0)
  sw a0, 20(s0)
  sw a0, 24(s0)
  sw a0, 28(s0)
  sw a0, 32(s0)
  sw a0, 36(s0)
  call f_0
  mv t1, a0
  lw a5, 0(s0)
  add s4, a5, a5
  add a4, s4, s4
  add t2, a4, a4
  add a0, t2, t2
  add a2, a0, a0
  add a7, a2, a2
  add a1, a7, a7
  add s1, a1, a1
  add a6, s1, s1
  add t3, a6, a6
  add s2, t3, t3
  add a3, s2, s2
  add t0, a3, a3
  add s3, t0, t0
  add t4, s3, s3
  lw s0, 4(s0)
  beq s0, zero, .main_2_1
  j .main_2_2

.main_2_2:
  add a5, a5, s4
  add a4, a5, a4
  add a4, a4, t2
  add a0, a4, a0
  add a0, a0, a2
  add a0, a0, a7
  add a0, a0, a1
  add a0, a0, s1
  add a0, a0, a6
  add a0, a0, t3
  add a0, a0, s2
  add a0, a0, a3
  add a0, a0, t0
  add a0, a0, s3
  add a0, a0, t4
  add a0, a0, t1
  j .main_2_3

.main_2_3:
  call minimbt_print_int
  mv a0, zero
  ld s4, 0(sp)
  ld s3, 8(sp)
  ld s2, 16(sp)
  ld s1, 24(sp)
  ld s0, 32(sp)
  ld ra, 40(sp)
  addi sp, sp, 160
  ret

.main_2_1:
  li a0, 67890
  call g_1
  j .main_2_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_3
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl f_0
  .type f_0, @function
# leaf true
f_0:
.f_0_0:
  addi sp, sp, -16
  li a0, 12345
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl g_1
  .type g_1, @function
# leaf true
g_1:
.g_1_0:
  addi sp, sp, -16
  addi a0, a0, 1
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/spill3.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl main_1
  .type main_1, @function
# leaf false
main_1:
.main_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a0, zero
  call f_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl f_0
  .type f_0, @function
# leaf true
f_0:
.f_0_0:
  addi sp, sp, -224
  sd s10, 0(sp)
  sd s9, 8(sp)
  sd s8, 16(sp)
  sd s7, 24(sp)
  sd s6, 32(sp)
  sd s4, 40(sp)
  sd s3, 48(sp)
  sd s2, 56(sp)
  sd s1, 64(sp)
  mv a1, a0
  addi s10, a1, 1
  addi t5, s10, 1
  sw t5, 160(sp)
  lw t5, 160(sp)
  addi t5, t5, 1
  sw t5, 152(sp)
  lw t5, 152(sp)
  addi s7, t5, 1
  addi a3, s7, 1
  addi a2, a3, 1
  addi a0, a2, 1
  addi t5, a0, 1
  sw t5, 200(sp)
  lw t5, 200(sp)
  addi t5, t5, 1
  sw t5, 208(sp)
  lw t5, 208(sp)
  addi t5, t5, 1
  sw t5, 192(sp)
  lw t5, 192(sp)
  addi t5, t5, 1
  sw t5, 136(sp)
  lw t5, 136(sp)
  addi t5, t5, 1
  sw t5, 176(sp)
  lw t5, 176(sp)
  addi t5, t5, 1
  sw t5, 168(sp)
  lw t5, 168(sp)
  addi t4, t5, 1
  addi s6, t4, 1
  addi s5, s6, 1
  addi s4, s5, 1
  addi t5, s4, 1
  sw t5, 144(sp)
  lw t5, 144(sp)
  add s2, t5, s10
  lw t5, 160(sp)
  add s1, s2, t5
  lw t5, 152(sp)
  add s0, s1, t5
  add t3, s0, s7
  add t2, t3, a3
  add t1, t2, a2
  add t0, t1, a0
  lw t5, 200(sp)
  add a7, t0, t5
  lw t5, 208(sp)
  add a6, a7, t5
  lw t5, 192(sp)
  add a5, a6, t5
  lw t5, 136(sp)
  add a4, a5, t5
  lw t5, 176(sp)
  add t5, a4, t5
  sw t5, 184(sp)
  lw t5, 184(sp)
  lw t6, 168(sp)
  add t5, t5, t6
  sw t5, 120(sp)
  lw t5, 120(sp)
  add t5, t5, t4
  sw t5, 128(sp)
  lw t5, 128(sp)
  add t5, t5, s6
  sw t5, 216(sp)
  lw t5, 216(sp)
  add s3, t5, s5
  add s9, s3, s4
  add s8, s9, a1
  lw t5, 160(sp)
  add s10, s10, t5
  lw t5, 152(sp)
  add s10, s10, t5
  add s7, s10, s7
  add a3, s7, a3
  add a2, a3, a2
  add a0, a2, a0
  lw t5, 200(sp)
  add a0, a0, t5
  lw t5, 208(sp)
  add a0, a0, t5
  lw t5, 192(sp)
  add a0, a0, t5
  lw t5, 136(sp)
  add a0, a0, t5
  lw t5, 176(sp)
  add a0, a0, t5
  lw t5, 168(sp)
  add a0, a0, t5
  add a0, a0, t4
  add a0, a0, s6
  add a0, a0, s5
  add a0, a0, s4
  lw t5, 144(sp)
  add a0, a0, t5
  add a0, a0, s2
  add a0, a0, s1
  add a0, a0, s0
  add a0, a0, t3
  add a0, a0, t2
  add a0, a0, t1
  add a0, a0, t0
  add a0, a0, a7
  add a0, a0, a6
  add a0, a0, a5
  add a0, a0, a4
  lw t5, 184(sp)
  add a0, a0, t5
  lw t5, 120(sp)
  add a0, a0, t5
  lw t5, 128(sp)
  add a0, a0, t5
  lw t5, 216(sp)
  add a0, a0, t5
  add a0, a0, s3
  add a0, a0, s9
  add a0, a0, s8
  add a0, a0, a1
  ld s10, 0(sp)
  ld s9, 8(sp)
  ld s8, 16(sp)
  ld s7, 24(sp)
  ld s6, 32(sp)
  ld s4, 40(sp)
  ld s3, 48(sp)
  ld s2, 56(sp)
  ld s1, 64(sp)
  addi sp, sp, 224
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/sum-tail.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main_1
  .type main_1, @function
# leaf false
main_1:
.main_1_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a0, zero
  li a1, 10000
  call sum_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl sum_0
  .type sum_0, @function
# leaf false
sum_0:
.sum_0_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  bge zero, a1, .sum_0_1
  j .sum_0_2

.sum_0_3:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.sum_0_2:
  add a0, a0, a1
  addi a1, a1, -1
  call sum_0
  j .sum_0_3

.sum_0_1:
  j .sum_0_3

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/sum.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 1073741824
large_stack_end:
  .zero 16
  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main_1
  .type main_1, @function
# leaf false
main_1:
.main_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 10000
  call sum_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  li a0, 134217728
  mv s0, a0
  call minimbt_malloc
  add a0, s0, a0
  mv s11, a0
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl sum_0
  .type sum_0, @function
# leaf false
sum_0:
.sum_0_0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv s0, a0
  bge zero, s0, .sum_0_1
  j .sum_0_2

.sum_0_3:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.sum_0_2:
  addi a0, s0, -1
  call sum_0
  add a0, a0, s0
  j .sum_0_3

.sum_0_1:
  mv a0, zero
  j .sum_0_3

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4




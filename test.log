Testing test/test_src/ack.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl ack1_0
  .type ack1_0, @function
# leaf false
ack1_0:
.ack1_0_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  bge zero, a0, .ack1_0_1

.ack1_0_2:
  bge zero, a1, .ack1_0_3

.ack1_0_4:
  addi s0, a0, -1
  addi a1, a1, -1
  call ack1_0
  mv a1, a0
  mv a0, s0
  call ack1_0

.ack1_0_5:

.ack1_0_6:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

.ack1_0_1:
  addi a0, a1, 1
  j .ack1_0_6

.ack1_0_3:
  addi a0, a0, -1
  li a1, 1
  call ack1_0
  j .ack1_0_5

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main17l0_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main17l0_1
  .type main17l0_1, @function
# leaf false
main17l0_1:
.main17l0_1_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 3
  li a1, 8
  call ack1_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/adder.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl make_adder1_0
  .type make_adder1_0, @function
# leaf true
make_adder1_0:
.make_adder1_0_0:
  addi sp, sp, -32
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, adder4_3
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl adder4_3
  .type adder4_3, @function
# leaf true
adder4_3:
.adder4_3_0:
  addi sp, sp, -16
  mv a1, s10
  lw a1, 8(a1)
  add a0, a1, a0
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main7l0_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main7l0_1
  .type main7l0_1, @function
# leaf false
main7l0_1:
.main7l0_1_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 3
  call make_adder1_0
  mv s10, a0
  ld a1, 0(a0)
  li a0, 7
  jalr a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/adder2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl make_adder1_0
  .type make_adder1_0, @function
# leaf true
make_adder1_0:
.make_adder1_0_0:
  addi sp, sp, -32
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, adder4_3
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl adder4_3
  .type adder4_3, @function
# leaf true
adder4_3:
.adder4_3_0:
  addi sp, sp, -16
  mv a1, s10
  lw a1, 8(a1)
  add a0, a1, a0
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main7l0_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main7l0_1
  .type main7l0_1, @function
# leaf false
main7l0_1:
.main7l0_1_0:
  addi sp, sp, -48
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  li a0, 2
  call make_adder1_0
  mv s0, a0
  li a0, 3
  call make_adder1_0
  mv s1, a0
  mv s10, s0
  ld a1, 0(s0)
  li a0, 10
  jalr a1
  mv s0, a0
  mv s10, s1
  ld a1, 0(s1)
  li a0, 20
  jalr a1
  add a0, s0, a0
  call minimbt_print_int
  mv a0, zero
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/bf.mbt
RuntimeError: unreachable
    at wasm://wasm/001c77fa:wasm-function[280]:0xc578
    at wasm://wasm/001c77fa:wasm-function[2723]:0x5d30f
    at wasm://wasm/001c77fa:wasm-function[2565]:0x5697a
    at wasm://wasm/001c77fa:wasm-function[2735]:0x5d7c3
    at wasm://wasm/001c77fa:wasm-function[2736]:0x5da61
    at wasm://wasm/001c77fa:wasm-function[2778]:0x6097b
    at wasm://wasm/001c77fa:wasm-function[1875]:0x26e52
    at wasm://wasm/001c77fa:wasm-function[2777]:0x6086c
    at wasm://wasm/001c77fa:wasm-function[2809]:0x61d87
    at wasm://wasm/001c77fa:wasm-function[2828]:0x63512
error: failed to run


Testing test/test_src/cls-bug.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  addi sp, sp, -16
  addi a0, a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main8l0_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main8l0_2
  .type main8l0_2, @function
# leaf false
main8l0_2:
.main8l0_2_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 456
  call g5_1
  mv s10, a0
  ld a1, 0(a0)
  li a0, 789
  jalr a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl g5_1
  .type g5_1, @function
# leaf true
g5_1:
.g5_1_0:
  addi sp, sp, -16
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a1, f1_0
  sd a1, 0(a0)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-bug2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl main12l0_1
  .type main12l0_1, @function
# leaf false
main12l0_1:
.main12l0_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 9
  call f1_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf false
f1_0:
.f1_0_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv s0, a0
  blt s0, zero, .f1_0_2

.f1_0_1:
  mv a0, s0
  call minimbt_print_int
  mv a0, zero
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a1, f1_0
  sd a1, 0(a0)
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  sd a0, 0(a1)
  slliw a0, zero, 3
  add a0, a1, a0
  ld a0, 0(a0)
  addi a1, s0, -1
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  jalr a2
  mv a0, zero

.f1_0_3:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

.f1_0_2:
  mv a0, zero
  j .f1_0_3

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main12l0_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-rec.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl T$x.10
  .type T$x.10, @function
# leaf true
T$x.10:
.T$x.10_0:
  addi sp, sp, -16
  li a0, 10
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main9_3
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main9_3
  .type main9_3, @function
# leaf false
main9_3:
.main9_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 12
  call f2_2
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f2_2
  .type f2_2, @function
# leaf false
f2_2:
.f2_2_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  bne a0, zero, .f2_2_2

.f2_2_1:
  mv a0, zero

.f2_2_3:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.f2_2_2:
  addi a0, a0, -1
  call f2_2
  la a1, x.1
  lw a1, 0(a1)
  add a0, a1, a0
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$x.10
  la t5, x.1
  sw a0, 0(t5)
  call T$start_6
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl x.1
  .type x.1, @object
x.1:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/cls-reg-bug.mbt
RuntimeError: unreachable
    at wasm://wasm/001c77fa:wasm-function[280]:0xc578
    at wasm://wasm/001c77fa:wasm-function[2723]:0x5d30f
    at wasm://wasm/001c77fa:wasm-function[2565]:0x5697a
    at wasm://wasm/001c77fa:wasm-function[2735]:0x5d7c3
    at wasm://wasm/001c77fa:wasm-function[2736]:0x5da61
    at wasm://wasm/001c77fa:wasm-function[2778]:0x6097b
    at wasm://wasm/001c77fa:wasm-function[1875]:0x26e52
    at wasm://wasm/001c77fa:wasm-function[2777]:0x6086c
    at wasm://wasm/001c77fa:wasm-function[2809]:0x61d87
    at wasm://wasm/001c77fa:wasm-function[2828]:0x63512
error: failed to run


Testing test/test_src/debug.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl main19l0_3
  .type main19l0_3, @function
# leaf true
main19l0_3:
.main19l0_3_0:
  addi sp, sp, 0
  mv a0, zero
  addi sp, sp, 0
  ret

  .p2align 2
  .text
  .globl g12_7
  .type g12_7, @function
# leaf true
g12_7:
.g12_7_0:
  addi sp, sp, -16
  mv a1, s10
  lw a0, 8(a1)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl useless1_0
  .type useless1_0, @function
# leaf true
useless1_0:
.useless1_0_0:
  addi sp, sp, -16
  li a0, 10
  addi a0, a0, -1
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_10
  .type T$start_10, @function
# leaf false
T$start_10:
.T$start_10_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main19l0_3
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f9_2
  .type f9_2, @function
# leaf false
f9_2:
.f9_2_4:
  addi sp, sp, -48
  sd ra, 0(sp)
  mv a1, a0

.f9_2_0:
  addi a1, s11, -16
  andi a2, a1, -8
  mv s11, a2
  la a1, g12_7
  sd a1, 0(a2)
  sd a0, 8(a2)
  li a1, 1
  li a3, 1
  beq a1, a3, .f9_2_1

.f9_2_2:
  mv s10, a2
  ld a1, 0(a2)
  li a0, 2
  jalr a1

.f9_2_3:
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

.f9_2_1:
  li a1, 1
  j .f9_2_4

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_10
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl dummy6_1
  .type dummy6_1, @function
# leaf true
dummy6_1:
.dummy6_1_0:
  addi sp, sp, -16
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/even-odd.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl T$t.10
  .type T$t.10, @function
# leaf true
T$t.10:
.T$t.10_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl odd6_7
  .type odd6_7, @function
# leaf false
odd6_7:
.odd6_7_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, s10
  blt a0, zero, .odd6_7_2

.odd6_7_1:
  beq a0, zero, .odd6_7_3

.odd6_7_4:
  addi a0, a0, -1
  call even3_4

.odd6_7_5:

.odd6_7_6:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.odd6_7_2:
  addi a0, a0, 1
  call even3_4
  j .odd6_7_6

.odd6_7_3:
  la a0, f.2
  lw a0, 0(a0)
  j .odd6_7_5

  .p2align 2
  .text
  .globl even3_4
  .type even3_4, @function
# leaf false
even3_4:
.even3_4_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  la a2, odd6_7
  sd a2, 0(a1)
  blt a0, zero, .even3_4_2

.even3_4_1:
  beq a0, zero, .even3_4_3

.even3_4_4:
  addi a0, a0, -1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1

.even3_4_5:

.even3_4_6:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.even3_4_2:
  addi a0, a0, 1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  j .even3_4_6

.even3_4_3:
  la a0, t.1
  lw a0, 0(a0)
  j .even3_4_5

  .p2align 2
  .text
  .globl T$start_10
  .type T$start_10, @function
# leaf false
T$start_10:
.T$start_10_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main21_5
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$t.10
  la t5, t.1
  sw a0, 0(t5)
  call T$f.22
  la t5, f.2
  sw a0, 0(t5)
  call T$start_10
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$f.22
  .type T$f.22, @function
# leaf true
T$f.22:
.T$f.22_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main21_5
  .type main21_5, @function
# leaf false
main21_5:
.main21_5_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 789
  call even3_4
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl t.1
  .type t.1, @object
t.1:
  .zero 4
  .p2align 2
  .bss
  .globl f.2
  .type f.2, @object
f.2:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/feature_test.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl main1l0_0
  .type main1l0_0, @function
# leaf false
main1l0_0:
.main1l0_0_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4611686018427387904
  fmv.d.x fa1, a0
  fadd.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4611686018427387904
  fmv.d.x fa1, a0
  fsub.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4611686018427387904
  fmv.d.x fa1, a0
  fmul.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4611686018427387904
  fmv.d.x fa1, a0
  fdiv.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4611686018427387904
  fmv.d.x fa1, a0
  fle.d a0, fa0, fa1
  beq a0, zero, .main1l0_0_2

.main1l0_0_1:
  li a0, 1
  call minimbt_print_int
  mv a0, zero

.main1l0_0_3:
  li a0, 4607182418800017408
  fmv.d.x fa0, a0
  li a0, 4607182418800017408
  fmv.d.x fa1, a0
  feq.d a0, fa0, fa1
  beq a0, zero, .main1l0_0_5

.main1l0_0_4:
  li a0, 1
  call minimbt_print_int
  mv a0, zero

.main1l0_0_6:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.main1l0_0_2:
  mv a0, zero
  call minimbt_print_int
  mv a0, zero
  j .main1l0_0_3

.main1l0_0_5:
  mv a0, zero
  call minimbt_print_int
  mv a0, zero
  j .main1l0_0_6

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main1l0_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/fib.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl main11l0_1
  .type main11l0_1, @function
# leaf false
main11l0_1:
.main11l0_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 30
  call fib1_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main11l0_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl fib1_0
  .type fib1_0, @function
# leaf false
fib1_0:
.fib1_0_0:
  addi sp, sp, -48
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv s0, a0
  li a0, 1
  blt a0, s0, .fib1_0_2

.fib1_0_1:
  mv a0, s0

.fib1_0_3:
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 48
  ret

.fib1_0_2:
  addi a0, s0, -1
  call fib1_0
  mv s1, a0
  addi a0, s0, -2
  call fib1_0
  add a0, s1, a0
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/float.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl main1l0_0
  .type main1l0_0, @function
# leaf false
main1l0_0:
.main1l0_0_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  li a0, 4623113902481840538
  fmv.d.x fa0, a0
  fneg.d fa0, fa0
  fabs.d fa0, fa0
  fsqrt.d fa0, fa0
  call minimbt_cos
  call minimbt_sin
  li a0, 4616752568008179712
  fmv.d.x fa1, a0
  fadd.d fa0, fa0, fa1
  li a0, 4619229547803233485
  fmv.d.x fa1, a0
  li a0, 4621199872640208077
  fmv.d.x fa2, a0
  fmul.d fa1, fa1, fa2
  li a0, 4608238818662014491
  fmv.d.x fa2, a0
  fdiv.d fa1, fa1, fa2
  fsub.d fa0, fa0, fa1
  li a0, 1000000
  fcvt.d.w fa1, a0
  fmul.d fa0, fa0, fa1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main1l0_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/funcomp.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl dbl10_1
  .type dbl10_1, @function
# leaf true
dbl10_1:
.dbl10_1_0:
  addi sp, sp, -16
  add a0, a0, a0
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl dec17_3
  .type dec17_3, @function
# leaf true
dec17_3:
.dec17_3_0:
  addi sp, sp, -16
  addi a0, a0, -1
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_12
  .type T$start_12, @function
# leaf false
T$start_12:
.T$start_12_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main21l0_4
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl composed6_6
  .type composed6_6, @function
# leaf false
composed6_6:
.composed6_6_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a1, s10
  ld a2, 8(a1)
  ld s0, 16(a1)
  mv s10, a2
  ld a1, 0(a2)
  jalr a1
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl main21l0_4
  .type main21l0_4, @function
# leaf false
main21l0_4:
.main21l0_4_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a1, dbl10_1
  sd a1, 0(a0)
  addi a1, s11, -8
  andi a2, a1, -8
  mv s11, a2
  la a1, dec17_3
  sd a1, 0(a2)
  mv a1, a2
  call compose1_0
  mv a1, a0
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a2, inc13_2
  sd a2, 0(a0)
  call compose1_0
  mv s10, a0
  ld a1, 0(a0)
  li a0, 123
  jalr a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl inc13_2
  .type inc13_2, @function
# leaf true
inc13_2:
.inc13_2_0:
  addi sp, sp, -16
  addi a0, a0, 1
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl compose1_0
  .type compose1_0, @function
# leaf true
compose1_0:
.compose1_0_0:
  addi sp, sp, -32
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, composed6_6
  sd a3, 0(a2)
  sd a0, 8(a2)
  sd a1, 16(a2)
  mv a0, a2
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_12
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/gcd.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl main9l0_1
  .type main9l0_1, @function
# leaf false
main9l0_1:
.main9l0_1_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  li a0, 21600
  li a1, 337500
  call gcd1_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main9l0_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl gcd1_0
  .type gcd1_0, @function
# leaf false
gcd1_0:
.gcd1_0_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a2, a0
  mv a0, a1
  beq a2, zero, .gcd1_0_1

.gcd1_0_2:
  blt a0, a2, .gcd1_0_4

.gcd1_0_3:
  sub a1, a0, a2
  mv a0, a2
  call gcd1_0

.gcd1_0_5:

.gcd1_0_6:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.gcd1_0_1:
  j .gcd1_0_6

.gcd1_0_4:
  sub a1, a2, a0
  call gcd1_0
  j .gcd1_0_5

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/id.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  addi sp, sp, -16
  addi a0, a0, 1
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main5l0_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main5l0_1
  .type main5l0_1, @function
# leaf false
main5l0_1:
.main5l0_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 1000
  call f1_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/inprod-loop.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl inprod1_0
  .type inprod1_0, @function
# leaf true
inprod1_0:
.inprod1_0_4:
  addi sp, sp, -96
  mv a3, a0
  mv a4, a1
  fmv.d fa1, fa0
  mv a5, a2

.inprod1_0_0:
  blt a5, zero, .inprod1_0_2

.inprod1_0_1:
  slliw a6, a5, 3
  add a3, a3, a6
  fld fa2, 0(a3)
  slliw a3, a5, 3
  add a3, a4, a3
  fld fa3, 0(a3)
  fmul.d fa2, fa2, fa3
  fadd.d fa1, fa1, fa2
  addi a3, a5, -1
  mv a4, a0
  mv a5, a1
  j .inprod1_0_4

.inprod1_0_2:

.inprod1_0_3:
  addi sp, sp, 96
  ret

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main17l0_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main17l0_1
  .type main17l0_1, @function
# leaf false
main17l0_1:
.main17l0_1_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  li a1, 4608218246714312622
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  fsd fa0, 8(a0)
  fsd fa0, 16(a0)
  addi a1, s11, -24
  andi a1, a1, -8
  mv s11, a1
  li a2, 4616820122002590269
  fmv.d.x fa0, a2
  fsd fa0, 0(a1)
  fsd fa0, 8(a1)
  fsd fa0, 16(a1)
  fmv.d.x fa0, zero
  li a2, 2
  call inprod1_0
  li a0, 4696837146684686336
  fmv.d.x fa1, a0
  fmul.d fa0, fa1, fa0
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/inprod-rec.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl inprod1_0
  .type inprod1_0, @function
# leaf false
inprod1_0:
.inprod1_0_0:
  addi sp, sp, -80
  fsd fs0, 0(sp)
  sd ra, 8(sp)
  mv a3, a0
  mv a4, a1
  mv a1, a2
  bge a1, zero, .inprod1_0_1

.inprod1_0_2:
  fmv.d.x fa0, zero

.inprod1_0_3:
  fld fs0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 80
  ret

.inprod1_0_1:
  slliw a0, a1, 3
  add a0, a3, a0
  fld fa0, 0(a0)
  slliw a0, a1, 3
  add a0, a4, a0
  fld fa1, 0(a0)
  fmul.d fs0, fa0, fa1
  addi a2, a1, -1
  mv a0, a3
  mv a1, a4
  call inprod1_0
  fadd.d fa0, fs0, fa0
  fld fs0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 80
  ret

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main15l0_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl main15l0_1
  .type main15l0_1, @function
# leaf false
main15l0_1:
.main15l0_1_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  li a1, 4608218246714312622
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  fsd fa0, 8(a0)
  fsd fa0, 16(a0)
  addi a1, s11, -24
  andi a1, a1, -8
  mv s11, a1
  li a2, 4616820122002590269
  fmv.d.x fa0, a2
  fsd fa0, 0(a1)
  fsd fa0, 8(a1)
  fsd fa0, 16(a1)
  li a2, 2
  call inprod1_0
  li a0, 4696837146684686336
  fmv.d.x fa1, a0
  fmul.d fa0, fa1, fa0
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/inprod.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl gety10_1
  .type gety10_1, @function
# leaf true
gety10_1:
.gety10_1_0:
  addi sp, sp, -16
  fld fa0, 8(a0)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_10
  .type T$start_10, @function
# leaf false
T$start_10:
.T$start_10_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main43l0_4
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl getx1_0
  .type getx1_0, @function
# leaf true
getx1_0:
.getx1_0_0:
  addi sp, sp, -16
  fld fa0, 0(a0)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl inprod28_3
  .type inprod28_3, @function
# leaf false
inprod28_3:
.inprod28_3_0:
  addi sp, sp, -64
  fsd fs1, 0(sp)
  fsd fs0, 8(sp)
  sd s1, 16(sp)
  sd s0, 24(sp)
  sd ra, 32(sp)
  mv s0, a0
  mv s1, a1
  mv a0, s0
  call getx1_0
  fmv.d fs0, fa0
  mv a0, s1
  call getx1_0
  fmul.d fs0, fs0, fa0
  mv a0, s0
  call gety10_1
  fmv.d fs1, fa0
  mv a0, s1
  call gety10_1
  fmul.d fa0, fs1, fa0
  fadd.d fs0, fs0, fa0
  mv a0, s0
  call getz19_2
  fmv.d fs1, fa0
  mv a0, s1
  call getz19_2
  fmul.d fa0, fs1, fa0
  fadd.d fa0, fs0, fa0
  fld fs1, 0(sp)
  fld fs0, 8(sp)
  ld s1, 16(sp)
  ld s0, 24(sp)
  ld ra, 32(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_10
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl getz19_2
  .type getz19_2, @function
# leaf true
getz19_2:
.getz19_2_0:
  addi sp, sp, -16
  fld fa0, 16(a0)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main43l0_4
  .type main43l0_4, @function
# leaf false
main43l0_4:
.main43l0_4_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  li a1, 4607182418800017408
  fmv.d.x fa0, a1
  fsd fa0, 0(a0)
  li a1, 4611686018427387904
  fmv.d.x fa0, a1
  fsd fa0, 8(a0)
  li a1, 4613937818241073152
  fmv.d.x fa0, a1
  fsd fa0, 16(a0)
  addi a1, s11, -24
  andi a1, a1, -8
  mv s11, a1
  li a2, 4616189618054758400
  fmv.d.x fa0, a2
  fsd fa0, 0(a1)
  li a2, 4617315517961601024
  fmv.d.x fa0, a2
  fsd fa0, 8(a1)
  li a2, 4618441417868443648
  fmv.d.x fa0, a2
  fsd fa0, 16(a1)
  call inprod28_3
  li a0, 4696837146684686336
  fmv.d.x fa1, a0
  fmul.d fa0, fa1, fa0
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/int_min.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main2_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main2_2
  .type main2_2, @function
# leaf false
main2_2:
.main2_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  la a0, int_min.1
  lw a0, 0(a0)
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$int_min.10
  la t5, int_min.1
  sw a0, 0(t5)
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$int_min.10
  .type T$int_min.10, @function
# leaf true
T$int_min.10:
.T$int_min.10_0:
  addi sp, sp, -16
  li a0, -2147483648
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl int_min.1
  .type int_min.1, @object
int_min.1:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-reg.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl h7_2
  .type h7_2, @function
# leaf true
h7_2:
.h7_2_0:
  addi sp, sp, -16
  li a0, 789
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl g4_1
  .type g4_1, @function
# leaf true
g4_1:
.g4_1_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_8
  .type T$start_8, @function
# leaf false
T$start_8:
.T$start_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main10l0_3
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main10l0_3
  .type main10l0_3, @function
# leaf false
main10l0_3:
.main10l0_3_0:
  addi sp, sp, -48
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv a0, zero
  call f1_0
  mv s0, a0
  mv a0, zero
  call g4_1
  mv s1, a0
  mv a0, zero
  call h7_2
  beq a0, zero, .main10l0_3_1

.main10l0_3_2:
  sub a0, s1, s0
  add a0, a0, s0
  add a0, a0, s1

.main10l0_3_3:
  call minimbt_print_int
  mv a0, zero
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 48
  ret

.main10l0_3_1:
  sub a0, s0, s1
  j .main10l0_3_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_8
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-reg2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl h7_2
  .type h7_2, @function
# leaf true
h7_2:
.h7_2_0:
  addi sp, sp, -16
  li a0, 789
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl g4_1
  .type g4_1, @function
# leaf true
g4_1:
.g4_1_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_8
  .type T$start_8, @function
# leaf false
T$start_8:
.T$start_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main10l0_3
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main10l0_3
  .type main10l0_3, @function
# leaf false
main10l0_3:
.main10l0_3_0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a0, zero
  call f1_0
  mv s0, a0
  bge zero, s0, .main10l0_3_1

.main10l0_3_2:
  mv a0, zero
  call h7_2
  sub a0, a0, s0
  add a0, a0, s0

.main10l0_3_3:
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.main10l0_3_1:
  mv a0, zero
  call g4_1
  add a0, a0, s0
  j .main10l0_3_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_8
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-stack.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl h7_2
  .type h7_2, @function
# leaf true
h7_2:
.h7_2_0:
  addi sp, sp, -16
  li a0, 789
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl g4_1
  .type g4_1, @function
# leaf true
g4_1:
.g4_1_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_8
  .type T$start_8, @function
# leaf false
T$start_8:
.T$start_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main10l0_3
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main10l0_3
  .type main10l0_3, @function
# leaf false
main10l0_3:
.main10l0_3_0:
  addi sp, sp, -48
  sd s1, 0(sp)
  sd s0, 8(sp)
  sd ra, 16(sp)
  mv a0, zero
  call f1_0
  mv s0, a0
  mv a0, zero
  call g4_1
  mv s1, a0
  mv a0, zero
  call h7_2
  beq a0, zero, .main10l0_3_1

.main10l0_3_2:
  addi a0, s1, 2
  add a0, a0, s0
  add a0, a0, s1

.main10l0_3_3:
  call minimbt_print_int
  mv a0, zero
  ld s1, 0(sp)
  ld s0, 8(sp)
  ld ra, 16(sp)
  addi sp, sp, 48
  ret

.main10l0_3_1:
  addi a0, s0, 1
  j .main10l0_3_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_8
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-stack2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main7l0_2
  .type main7l0_2, @function
# leaf false
main7l0_2:
.main7l0_2_0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a0, zero
  call f1_0
  mv s0, a0
  blt zero, s0, .main7l0_2_2

.main7l0_2_1:
  mv a0, zero
  call g4_1
  add a0, a0, s0

.main7l0_2_3:
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.main7l0_2_2:
  add a0, s0, s0
  j .main7l0_2_3

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main7l0_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl g4_1
  .type g4_1, @function
# leaf true
g4_1:
.g4_1_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/join-stack3.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  addi sp, sp, -16
  li a0, 123
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl h7_2
  .type h7_2, @function
# leaf true
h7_2:
.h7_2_0:
  addi sp, sp, -16
  li a0, 789
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl g4_1
  .type g4_1, @function
# leaf true
g4_1:
.g4_1_0:
  addi sp, sp, -16
  li a0, 456
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_8
  .type T$start_8, @function
# leaf false
T$start_8:
.T$start_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main10l0_3
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main10l0_3
  .type main10l0_3, @function
# leaf false
main10l0_3:
.main10l0_3_0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a0, zero
  call f1_0
  mv s0, a0
  blt zero, s0, .main10l0_3_2

.main10l0_3_1:
  mv a0, zero
  call g4_1

.main10l0_3_3:
  add a0, a0, s0
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.main10l0_3_2:
  mv a0, zero
  call h7_2
  j .main10l0_3_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_8
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/landins_knot.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl g18_2
  .type g18_2, @function
# leaf true
g18_2:
.g18_2_0:
  addi sp, sp, -32
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, h21_8
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$factorial.2810
  .type T$factorial.2810, @function
# leaf false
T$factorial.2810:
.T$factorial.2810_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  la a1, g18_2
  sd a1, 0(a0)
  call landins_knot4_1
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl landins_knot4_1
  .type landins_knot4_1, @function
# leaf false
landins_knot4_1:
.landins_knot4_1_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  la a2, dummy1_0
  sd a2, 0(a1)
  addi a2, s11, -8
  andi s0, a2, -8
  mv s11, s0
  sd a1, 0(s0)
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, aux9_5
  sd a2, 0(a1)
  sd s0, 8(a1)
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  jalr a2
  slliw a1, zero, 3
  add a1, s0, a1
  sd a0, 0(a1)
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl T$a.3316
  .type T$a.3316, @function
# leaf false
T$a.3316:
.T$a.3316_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  la a0, factorial.28
  ld a0, 0(a0)
  la a1, _32
  lw a1, 0(a1)
  mv s10, a0
  ld a2, 0(a0)
  mv a0, a1
  jalr a2
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl h21_8
  .type h21_8, @function
# leaf false
h21_8:
.h21_8_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv a1, s10
  mv s0, a0
  ld a1, 8(a1)
  beq s0, zero, .h21_8_1

.h21_8_2:
  addi a0, s0, -1
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  mulw a0, s0, a0

.h21_8_3:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

.h21_8_1:
  li a0, 1
  j .h21_8_3

  .p2align 2
  .text
  .globl aux9_5
  .type aux9_5, @function
# leaf false
aux9_5:
.aux9_5_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a1, s10
  ld a1, 8(a1)
  slliw a2, zero, 3
  add a1, a1, a2
  ld a1, 0(a1)
  mv s10, a1
  ld a1, 0(a1)
  jalr a1
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$_32_14
  .type T$_32_14, @function
# leaf true
T$_32_14:
.T$_32_14_0:
  addi sp, sp, -16
  li a0, 5
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f129_12
  .type f129_12, @function
# leaf false
f129_12:
.f129_12_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  la a0, factorial.28
  ld a0, 0(a0)
  mv s10, a0
  ld a1, 0(a0)
  li a0, 5
  jalr a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main37_19
  .type main37_19, @function
# leaf false
main37_19:
.main37_19_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call f129_12
  mv a0, zero
  li a0, 10
  call g34_18
  call minimbt_print_int
  mv a0, zero
  li a0, 31
  call g34_18
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl g34_18
  .type g34_18, @function
# leaf true
g34_18:
.g34_18_0:
  addi sp, sp, -16
  la a1, a.33
  lw a1, 0(a1)
  add a0, a0, a1
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_22
  .type T$start_22, @function
# leaf false
T$start_22:
.T$start_22_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main37_19
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl dummy1_0
  .type dummy1_0, @function
# leaf true
dummy1_0:
.dummy1_0_0:
  addi sp, sp, -16
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$factorial.2810
  la t5, factorial.28
  sd a0, 0(t5)
  call T$_32_14
  la t5, _32
  sw a0, 0(t5)
  call T$a.3316
  la t5, a.33
  sw a0, 0(t5)
  call T$start_22
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl _32
  .type _32, @object
_32:
  .zero 4
  .p2align 2
  .bss
  .globl a.33
  .type a.33, @object
a.33:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4
  .p2align 2
  .bss
  .globl factorial.28
  .type factorial.28, @object
factorial.28:
  .zero 8



Testing test/test_src/mandelbrot.mbt
RuntimeError: unreachable
    at wasm://wasm/001c77fa:wasm-function[280]:0xc578
    at wasm://wasm/001c77fa:wasm-function[2723]:0x5d30f
    at wasm://wasm/001c77fa:wasm-function[2565]:0x5697a
    at wasm://wasm/001c77fa:wasm-function[2735]:0x5d7c3
    at wasm://wasm/001c77fa:wasm-function[2736]:0x5da61
    at wasm://wasm/001c77fa:wasm-function[2778]:0x6097b
    at wasm://wasm/001c77fa:wasm-function[1875]:0x26e52
    at wasm://wasm/001c77fa:wasm-function[2777]:0x6086c
    at wasm://wasm/001c77fa:wasm-function[2809]:0x61d87
    at wasm://wasm/001c77fa:wasm-function[2828]:0x63512
error: failed to run


Testing test/test_src/matmul-flat.mbt
RuntimeError: unreachable
    at wasm://wasm/001c77fa:wasm-function[280]:0xc578
    at wasm://wasm/001c77fa:wasm-function[2723]:0x5d30f
    at wasm://wasm/001c77fa:wasm-function[2565]:0x5697a
    at wasm://wasm/001c77fa:wasm-function[2735]:0x5d7c3
    at wasm://wasm/001c77fa:wasm-function[2736]:0x5da61
    at wasm://wasm/001c77fa:wasm-function[2778]:0x6097b
    at wasm://wasm/001c77fa:wasm-function[1875]:0x26e52
    at wasm://wasm/001c77fa:wasm-function[2777]:0x6086c
    at wasm://wasm/001c77fa:wasm-function[2809]:0x61d87
    at wasm://wasm/001c77fa:wasm-function[2828]:0x63512
error: failed to run


Testing test/test_src/matmul.mbt
RuntimeError: unreachable
    at wasm://wasm/001c77fa:wasm-function[280]:0xc578
    at wasm://wasm/001c77fa:wasm-function[2723]:0x5d30f
    at wasm://wasm/001c77fa:wasm-function[2565]:0x5697a
    at wasm://wasm/001c77fa:wasm-function[2735]:0x5d7c3
    at wasm://wasm/001c77fa:wasm-function[2736]:0x5da61
    at wasm://wasm/001c77fa:wasm-function[2778]:0x6097b
    at wasm://wasm/001c77fa:wasm-function[1875]:0x26e52
    at wasm://wasm/001c77fa:wasm-function[2777]:0x6086c
    at wasm://wasm/001c77fa:wasm-function[2809]:0x61d87
    at wasm://wasm/001c77fa:wasm-function[2828]:0x63512
error: failed to run


Testing test/test_src/multiple-init.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl T$_11_10
  .type T$_11_10, @function
# leaf true
T$_11_10:
.T$_11_10_0:
  addi sp, sp, -16
  li a0, 1
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl init21_20
  .type init21_20, @function
# leaf true
init21_20:
.init21_20_0:
  addi sp, sp, -32
  la a0, len.3
  ld a0, 0(a0)
  li a1, 3
  slliw a2, zero, 2
  add a0, a0, a2
  sw a1, 0(a0)
  la a0, len2.13
  ld a0, 0(a0)
  li a1, 4
  slliw a2, zero, 2
  add a0, a0, a2
  sw a1, 0(a0)
  mv a0, zero
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$_1_0
  .type T$_1_0, @function
# leaf true
T$_1_0:
.T$_1_0_0:
  addi sp, sp, -16
  li a0, 1
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$_2_2
  .type T$_2_2, @function
# leaf true
T$_2_2:
.T$_2_2_0:
  addi sp, sp, 0
  mv a0, zero
  addi sp, sp, 0
  ret

  .p2align 2
  .text
  .globl main32_24
  .type main32_24, @function
# leaf false
main32_24:
.main32_24_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  la a0, len.3
  ld a0, 0(a0)
  slliw a1, zero, 2
  add a0, a0, a1
  lw a0, 0(a0)
  call minimbt_print_int
  mv a0, zero
  call minimbt_print_endline
  mv a0, zero
  la a0, len2.13
  ld a0, 0(a0)
  slliw a1, zero, 2
  add a0, a0, a1
  lw a0, 0(a0)
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$len.34
  .type T$len.34, @function
# leaf false
T$len.34:
.T$len.34_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  la a0, _1
  lw a0, 0(a0)
  la a1, _2
  lw a2, 0(a1)
  slliw a1, a0, 2
  sub a1, s11, a1
  andi s0, a1, -8
  mv s11, s0
  mv a1, a0
  mv a0, s0
  call memseti32
  mv a0, s0
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl T$len2.1314
  .type T$len2.1314, @function
# leaf false
T$len2.1314:
.T$len2.1314_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  la a0, _11
  lw a0, 0(a0)
  la a1, _12
  lw a2, 0(a1)
  slliw a1, a0, 2
  sub a1, s11, a1
  andi s0, a1, -8
  mv s11, s0
  mv a1, a0
  mv a0, s0
  call memseti32
  mv a0, s0
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl T$_20_18
  .type T$_20_18, @function
# leaf false
T$_20_18:
.T$_20_18_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call init14_16
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_26
  .type T$start_26, @function
# leaf false
T$start_26:
.T$start_26_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main32_24
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$_31_22
  .type T$_31_22, @function
# leaf false
T$_31_22:
.T$_31_22_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call init21_20
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$_10_8
  .type T$_10_8, @function
# leaf false
T$_10_8:
.T$_10_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call init4_6
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$_12_12
  .type T$_12_12, @function
# leaf true
T$_12_12:
.T$_12_12_0:
  addi sp, sp, 0
  mv a0, zero
  addi sp, sp, 0
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$_1_0
  la t5, _1
  sw a0, 0(t5)
  call T$_2_2
  la t5, _2
  sw a0, 0(t5)
  call T$len.34
  la t5, len.3
  sd a0, 0(t5)
  call T$_10_8
  call T$_11_10
  la t5, _11
  sw a0, 0(t5)
  call T$_12_12
  la t5, _12
  sw a0, 0(t5)
  call T$len2.1314
  la t5, len2.13
  sd a0, 0(t5)
  call T$_20_18
  call T$_31_22
  call T$start_26
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl init4_6
  .type init4_6, @function
# leaf true
init4_6:
.init4_6_0:
  addi sp, sp, -32
  la a0, len.3
  ld a0, 0(a0)
  li a1, 1
  slliw a2, zero, 2
  add a0, a0, a2
  sw a1, 0(a0)
  mv a0, zero
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl init14_16
  .type init14_16, @function
# leaf true
init14_16:
.init14_16_0:
  addi sp, sp, -32
  la a0, len2.13
  ld a0, 0(a0)
  li a1, 2
  slliw a2, zero, 2
  add a0, a0, a2
  sw a1, 0(a0)
  mv a0, zero
  addi sp, sp, 32
  ret

  .p2align 2
  .bss
  .globl _11
  .type _11, @object
_11:
  .zero 4
  .p2align 2
  .bss
  .globl _10
  .type _10, @object
_10:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4
  .p2align 2
  .bss
  .globl _1
  .type _1, @object
_1:
  .zero 4
  .p2align 2
  .bss
  .globl len.3
  .type len.3, @object
len.3:
  .zero 8
  .p2align 2
  .bss
  .globl _31
  .type _31, @object
_31:
  .zero 4
  .p2align 2
  .bss
  .globl _20
  .type _20, @object
_20:
  .zero 4
  .p2align 2
  .bss
  .globl _2
  .type _2, @object
_2:
  .zero 4
  .p2align 2
  .bss
  .globl _12
  .type _12, @object
_12:
  .zero 4
  .p2align 2
  .bss
  .globl len2.13
  .type len2.13, @object
len2.13:
  .zero 8



Testing test/test_src/non-tail-if.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl main1l0_0
  .type main1l0_0, @function
# leaf false
main1l0_0:
.main1l0_0_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  li a0, 4608218246714312622
  fmv.d.x fa0, a0
  fcvt.w.d a4, fa0, rtz
  li a0, 4616820122002590269
  fmv.d.x fa0, a0
  fcvt.w.d a2, fa0, rtz
  li a0, 4620569368692376207
  fmv.d.x fa0, a0
  fneg.d fa0, fa0
  fcvt.w.d a3, fa0, rtz
  blt a3, zero, .main1l0_0_2

.main1l0_0_1:
  mv a1, a4

.main1l0_0_3:
  blt zero, a4, .main1l0_0_5

.main1l0_0_4:
  mv a0, a2

.main1l0_0_6:
  add a0, a1, a0
  blt a2, zero, .main1l0_0_8

.main1l0_0_7:
  mv a1, a3

.main1l0_0_9:
  add a0, a0, a1
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

.main1l0_0_2:
  mv a1, a2
  j .main1l0_0_3

.main1l0_0_5:
  mv a0, a3
  j .main1l0_0_6

.main1l0_0_8:
  mv a1, a4
  j .main1l0_0_9

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main1l0_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/non-tail-if2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main1l0_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl main1l0_1
  .type main1l0_1, @function
# leaf false
main1l0_1:
.main1l0_1_0:
  addi sp, sp, -48
  sd s0, 0(sp)
  sd ra, 8(sp)
  addi a0, s11, -40
  andi s0, a0, -8
  mv s11, s0
  li a0, 3
  sw a0, 0(s0)
  sw a0, 4(s0)
  sw a0, 8(s0)
  sw a0, 12(s0)
  sw a0, 16(s0)
  sw a0, 20(s0)
  sw a0, 24(s0)
  sw a0, 28(s0)
  sw a0, 32(s0)
  sw a0, 36(s0)
  slliw a0, zero, 2
  add a0, s0, a0
  lw a0, 0(a0)
  li a1, 3
  bne a0, a1, .main1l0_1_2

.main1l0_1_1:
  call f2l1_0
  li a1, 1
  slliw a1, a1, 2
  add a1, s0, a1
  lw a1, 0(a1)
  add a0, a0, a1
  li a1, 67890
  add a0, a0, a1

.main1l0_1_3:
  call minimbt_print_int
  mv a0, zero
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 48
  ret

.main1l0_1_2:
  li a0, 7
  j .main1l0_1_3

  .p2align 2
  .text
  .globl f2l1_0
  .type f2l1_0, @function
# leaf true
f2l1_0:
.f2l1_0_0:
  addi sp, sp, -16
  li a0, 12345
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/print.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl main1l0_0
  .type main1l0_0, @function
# leaf false
main1l0_0:
.main1l0_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 123
  call minimbt_print_int
  mv a0, zero
  li a0, -456
  call minimbt_print_int
  mv a0, zero
  addi a0, zero, 789
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_2
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl T$start_2
  .type T$start_2, @function
# leaf false
T$start_2:
.T$start_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main1l0_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/quicksort-std.mbt
RuntimeError: unreachable
    at wasm://wasm/001c77fa:wasm-function[280]:0xc578
    at wasm://wasm/001c77fa:wasm-function[2723]:0x5d30f
    at wasm://wasm/001c77fa:wasm-function[2565]:0x5697a
    at wasm://wasm/001c77fa:wasm-function[2735]:0x5d7c3
    at wasm://wasm/001c77fa:wasm-function[2736]:0x5da61
    at wasm://wasm/001c77fa:wasm-function[2778]:0x6097b
    at wasm://wasm/001c77fa:wasm-function[1875]:0x26e52
    at wasm://wasm/001c77fa:wasm-function[2777]:0x6086c
    at wasm://wasm/001c77fa:wasm-function[2809]:0x61d87
    at wasm://wasm/001c77fa:wasm-function[2828]:0x63512
error: failed to run


Testing test/test_src/quicksort.mbt
RuntimeError: unreachable
    at wasm://wasm/001c77fa:wasm-function[280]:0xc578
    at wasm://wasm/001c77fa:wasm-function[2723]:0x5d30f
    at wasm://wasm/001c77fa:wasm-function[2565]:0x5697a
    at wasm://wasm/001c77fa:wasm-function[2735]:0x5d7c3
    at wasm://wasm/001c77fa:wasm-function[2736]:0x5da61
    at wasm://wasm/001c77fa:wasm-function[2778]:0x6097b
    at wasm://wasm/001c77fa:wasm-function[1875]:0x26e52
    at wasm://wasm/001c77fa:wasm-function[2777]:0x6086c
    at wasm://wasm/001c77fa:wasm-function[2809]:0x61d87
    at wasm://wasm/001c77fa:wasm-function[2828]:0x63512
error: failed to run


Testing test/test_src/read.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main1l0_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl main1l0_1
  .type main1l0_1, @function
# leaf false
main1l0_1:
.main1l0_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call f2l1_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl f2l1_0
  .type f2l1_0, @function
# leaf false
f2l1_0:
.f2l1_0_4:
  addi sp, sp, -32
  sd ra, 0(sp)

.f2l1_0_0:
  call minimbt_read_int
  li a1, -2147483648
  bne a0, a1, .f2l1_0_2

.f2l1_0_1:
  call minimbt_print_int
  mv a0, zero

.f2l1_0_3:
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

.f2l1_0_2:
  call minimbt_print_int
  mv a0, zero
  j .f2l1_0_4

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/shuffle.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl bar26_1
  .type bar26_1, @function
# leaf false
bar26_1:
.bar26_1_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  mv a6, a0
  mv a0, a1
  mv a7, a2
  mv a2, a3
  mv a3, a4
  mv a4, a5
  mv a1, a6
  mv a5, a7
  call foo1_0
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main39l0_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main39l0_2
  .type main39l0_2, @function
# leaf false
main39l0_2:
.main39l0_2_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  li a0, 1
  li a1, 2
  li a2, 3
  li a3, 4
  li a4, 5
  li a5, 6
  call bar26_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl foo1_0
  .type foo1_0, @function
# leaf false
foo1_0:
.foo1_0_0:
  addi sp, sp, -64
  sd s4, 0(sp)
  sd s3, 8(sp)
  sd s2, 16(sp)
  sd s1, 24(sp)
  sd s0, 32(sp)
  sd ra, 40(sp)
  mv s0, a1
  mv s1, a2
  mv s2, a3
  mv s3, a4
  mv s4, a5
  call minimbt_print_int
  mv a0, zero
  mv a0, s0
  call minimbt_print_int
  mv a0, zero
  mv a0, s1
  call minimbt_print_int
  mv a0, zero
  mv a0, s2
  call minimbt_print_int
  mv a0, zero
  mv a0, s3
  call minimbt_print_int
  mv a0, zero
  mv a0, s4
  call minimbt_print_int
  mv a0, zero
  mv a0, zero
  ld s4, 0(sp)
  ld s3, 8(sp)
  ld s2, 16(sp)
  ld s1, 24(sp)
  ld s0, 32(sp)
  ld ra, 40(sp)
  addi sp, sp, 64
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/spill.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  addi sp, sp, -320
  sd s10, 0(sp)
  sd s9, 8(sp)
  sd s8, 16(sp)
  sd s7, 24(sp)
  sd s6, 32(sp)
  sd s5, 40(sp)
  sd s4, 48(sp)
  sd s3, 56(sp)
  sd s2, 64(sp)
  sd s1, 72(sp)
  sd s0, 80(sp)
  add a4, a0, a1
  add a5, a0, a2
  add a6, a0, a3
  add a7, a1, a2
  add t0, a1, a3
  add t1, a2, a3
  add t2, a4, a5
  add t3, a4, a6
  add t4, a4, a7
  add s0, a4, t0
  add s1, a4, t1
  add s2, a5, a6
  add s3, a5, a7
  add s4, a5, t0
  add s5, a5, t1
  add s6, a6, a7
  add s7, a6, t0
  add s8, a6, t1
  add s9, a7, t0
  add s10, a7, t1
  add t5, t0, t1
  sw t5, 192(sp)
  add t5, t2, t3
  sw t5, 200(sp)
  add t5, t2, t4
  sw t5, 208(sp)
  add t5, t2, s0
  sw t5, 216(sp)
  add t5, t2, s1
  sw t5, 224(sp)
  add t5, t2, s2
  sw t5, 232(sp)
  add t5, t2, s3
  sw t5, 240(sp)
  add t5, t2, s4
  sw t5, 248(sp)
  add t5, t2, s5
  sw t5, 256(sp)
  add t5, t2, s6
  sw t5, 264(sp)
  add t5, t2, s7
  sw t5, 272(sp)
  add t5, t2, s8
  sw t5, 280(sp)
  add t5, t2, s9
  sw t5, 288(sp)
  add t5, t2, s10
  sw t5, 296(sp)
  lw t5, 192(sp)
  add t5, t2, t5
  sw t5, 304(sp)
  add a0, a0, a1
  add a0, a0, a2
  add a0, a0, a3
  add a0, a0, a4
  add a0, a0, a5
  add a0, a0, a6
  add a0, a0, a7
  add a0, a0, t0
  add a0, a0, t1
  add a0, a0, t2
  add a0, a0, t3
  add a0, a0, t4
  add a0, a0, s0
  add a0, a0, s1
  add a0, a0, s2
  add a0, a0, s3
  add a0, a0, s4
  add a0, a0, s5
  add a0, a0, s6
  add a0, a0, s7
  add a0, a0, s8
  add a0, a0, s9
  add a0, a0, s10
  lw t5, 192(sp)
  add a0, a0, t5
  lw t5, 200(sp)
  add a0, a0, t5
  lw t5, 208(sp)
  add a0, a0, t5
  lw t5, 216(sp)
  add a0, a0, t5
  lw t5, 224(sp)
  add a0, a0, t5
  lw t5, 232(sp)
  add a0, a0, t5
  lw t5, 240(sp)
  add a0, a0, t5
  lw t5, 248(sp)
  add a0, a0, t5
  lw t5, 256(sp)
  add a0, a0, t5
  lw t5, 264(sp)
  add a0, a0, t5
  lw t5, 272(sp)
  add a0, a0, t5
  lw t5, 280(sp)
  add a0, a0, t5
  lw t5, 288(sp)
  add a0, a0, t5
  lw t5, 296(sp)
  add a0, a0, t5
  lw t5, 304(sp)
  add a0, a0, t5
  neg a0, a0
  ld s10, 0(sp)
  ld s9, 8(sp)
  ld s8, 16(sp)
  ld s7, 24(sp)
  ld s6, 32(sp)
  ld s5, 40(sp)
  ld s4, 48(sp)
  ld s3, 56(sp)
  ld s2, 64(sp)
  ld s1, 72(sp)
  ld s0, 80(sp)
  addi sp, sp, 320
  ret

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main83l0_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl main83l0_1
  .type main83l0_1, @function
# leaf false
main83l0_1:
.main83l0_1_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  li a0, 1
  li a1, 2
  li a2, 3
  li a3, 4
  call f1_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/spill2.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl f1l0_0
  .type f1l0_0, @function
# leaf true
f1l0_0:
.f1l0_0_0:
  addi sp, sp, -16
  li a0, 12345
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_6
  .type T$start_6, @function
# leaf false
T$start_6:
.T$start_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main6l1_2
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main6l1_2
  .type main6l1_2, @function
# leaf false
main6l1_2:
.main6l1_2_0:
  addi sp, sp, -176
  sd s5, 0(sp)
  sd s4, 8(sp)
  sd s3, 16(sp)
  sd s2, 24(sp)
  sd s1, 32(sp)
  sd s0, 40(sp)
  sd ra, 48(sp)
  addi a0, s11, -40
  andi s0, a0, -8
  mv s11, s0
  li a0, 1
  sw a0, 0(s0)
  sw a0, 4(s0)
  sw a0, 8(s0)
  sw a0, 12(s0)
  sw a0, 16(s0)
  sw a0, 20(s0)
  sw a0, 24(s0)
  sw a0, 28(s0)
  sw a0, 32(s0)
  sw a0, 36(s0)
  call f1l0_0
  slliw a1, zero, 2
  add a1, s0, a1
  lw a1, 0(a1)
  add a2, a1, a1
  add a3, a2, a2
  add a4, a3, a3
  add a5, a4, a4
  add a6, a5, a5
  add a7, a6, a6
  add t0, a7, a7
  add t1, t0, t0
  add t2, t1, t1
  add t3, t2, t2
  add t4, t3, t3
  add s1, t4, t4
  add s2, s1, s1
  add s3, s2, s2
  add s4, s3, s3
  li s5, 1
  slliw s5, s5, 2
  add s0, s0, s5
  lw s0, 0(s0)
  beq s0, zero, .main6l1_2_1

.main6l1_2_2:
  add a1, a1, a2
  add a1, a1, a3
  add a1, a1, a4
  add a1, a1, a5
  add a1, a1, a6
  add a1, a1, a7
  add a1, a1, t0
  add a1, a1, t1
  add a1, a1, t2
  add a1, a1, t3
  add a1, a1, t4
  add a1, a1, s1
  add a1, a1, s2
  add a1, a1, s3
  add a1, a1, s4
  add a0, a1, a0

.main6l1_2_3:
  call minimbt_print_int
  mv a0, zero
  ld s5, 0(sp)
  ld s4, 8(sp)
  ld s3, 16(sp)
  ld s2, 24(sp)
  ld s1, 32(sp)
  ld s0, 40(sp)
  ld ra, 48(sp)
  addi sp, sp, 176
  ret

.main6l1_2_1:
  li a0, 67890
  call g2_1
  j .main6l1_2_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_6
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl g2_1
  .type g2_1, @function
# leaf true
g2_1:
.g2_1_0:
  addi sp, sp, -16
  addi a0, a0, 1
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/spill3.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl f1_0
  .type f1_0, @function
# leaf true
f1_0:
.f1_0_0:
  addi sp, sp, -304
  sd s10, 0(sp)
  sd s9, 8(sp)
  sd s8, 16(sp)
  sd s7, 24(sp)
  sd s6, 32(sp)
  sd s5, 40(sp)
  sd s4, 48(sp)
  sd s3, 56(sp)
  sd s2, 64(sp)
  sd s1, 72(sp)
  sd s0, 80(sp)
  addi a1, a0, 1
  addi a2, a1, 1
  addi a3, a2, 1
  addi a4, a3, 1
  addi a5, a4, 1
  addi a6, a5, 1
  addi a7, a6, 1
  addi t0, a7, 1
  addi t1, t0, 1
  addi t2, t1, 1
  addi t3, t2, 1
  addi t4, t3, 1
  addi s0, t4, 1
  addi s1, s0, 1
  addi s2, s1, 1
  addi s3, s2, 1
  addi s4, s3, 1
  addi s5, s4, 1
  add s6, s5, a1
  add s7, s6, a2
  add s8, s7, a3
  add s9, s8, a4
  add s10, s9, a5
  add t5, s10, a6
  sw t5, 192(sp)
  lw t5, 192(sp)
  add t5, t5, a7
  sw t5, 200(sp)
  lw t5, 200(sp)
  add t5, t5, t0
  sw t5, 208(sp)
  lw t5, 208(sp)
  add t5, t5, t1
  sw t5, 216(sp)
  lw t5, 216(sp)
  add t5, t5, t2
  sw t5, 224(sp)
  lw t5, 224(sp)
  add t5, t5, t3
  sw t5, 232(sp)
  lw t5, 232(sp)
  add t5, t5, t4
  sw t5, 240(sp)
  lw t5, 240(sp)
  add t5, t5, s0
  sw t5, 248(sp)
  lw t5, 248(sp)
  add t5, t5, s1
  sw t5, 256(sp)
  lw t5, 256(sp)
  add t5, t5, s2
  sw t5, 264(sp)
  lw t5, 264(sp)
  add t5, t5, s3
  sw t5, 272(sp)
  lw t5, 272(sp)
  add t5, t5, s4
  sw t5, 280(sp)
  lw t5, 280(sp)
  add t5, t5, a0
  sw t5, 288(sp)
  add a1, a1, a2
  add a1, a1, a3
  add a1, a1, a4
  add a1, a1, a5
  add a1, a1, a6
  add a1, a1, a7
  add a1, a1, t0
  add a1, a1, t1
  add a1, a1, t2
  add a1, a1, t3
  add a1, a1, t4
  add a1, a1, s0
  add a1, a1, s1
  add a1, a1, s2
  add a1, a1, s3
  add a1, a1, s4
  add a1, a1, s5
  add a1, a1, s6
  add a1, a1, s7
  add a1, a1, s8
  add a1, a1, s9
  add a1, a1, s10
  lw t5, 192(sp)
  add a1, a1, t5
  lw t5, 200(sp)
  add a1, a1, t5
  lw t5, 208(sp)
  add a1, a1, t5
  lw t5, 216(sp)
  add a1, a1, t5
  lw t5, 224(sp)
  add a1, a1, t5
  lw t5, 232(sp)
  add a1, a1, t5
  lw t5, 240(sp)
  add a1, a1, t5
  lw t5, 248(sp)
  add a1, a1, t5
  lw t5, 256(sp)
  add a1, a1, t5
  lw t5, 264(sp)
  add a1, a1, t5
  lw t5, 272(sp)
  add a1, a1, t5
  lw t5, 280(sp)
  add a1, a1, t5
  lw t5, 288(sp)
  add a1, a1, t5
  add a0, a1, a0
  ld s10, 0(sp)
  ld s9, 8(sp)
  ld s8, 16(sp)
  ld s7, 24(sp)
  ld s6, 32(sp)
  ld s5, 40(sp)
  ld s4, 48(sp)
  ld s3, 56(sp)
  ld s2, 64(sp)
  ld s1, 72(sp)
  ld s0, 80(sp)
  addi sp, sp, 304
  ret

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main93l0_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main93l0_1
  .type main93l0_1, @function
# leaf false
main93l0_1:
.main93l0_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a0, zero
  call f1_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/sum-tail.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl main10l0_1
  .type main10l0_1, @function
# leaf false
main10l0_1:
.main10l0_1_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  mv a0, zero
  li a1, 10000
  call sum1_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main10l0_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl sum1_0
  .type sum1_0, @function
# leaf true
sum1_0:
.sum1_0_4:
  addi sp, sp, -32
  mv a2, a0
  mv a3, a1

.sum1_0_0:
  bge zero, a3, .sum1_0_1

.sum1_0_2:
  add a2, a2, a3
  addi a3, a3, -1
  j .sum1_0_4

.sum1_0_1:

.sum1_0_3:
  addi sp, sp, 32
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



Testing test/test_src/sum.mbt
  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:
  
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 2
  .text
  .globl T$start_4
  .type T$start_4, @function
# leaf false
T$start_4:
.T$start_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main8l0_1
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -128
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  sd s11, 96(sp)
  la s11, large_heap_end
  mv s9, sp
  la sp, large_stack_end
  call T$start_4
  mv sp, s9
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  ld s11, 96(sp)
  addi sp, sp, 128
  ret

  .p2align 2
  .text
  .globl sum1_0
  .type sum1_0, @function
# leaf false
sum1_0:
.sum1_0_0:
  addi sp, sp, -32
  sd s0, 0(sp)
  sd ra, 8(sp)
  mv s0, a0
  blt zero, s0, .sum1_0_2

.sum1_0_1:
  mv a0, zero

.sum1_0_3:
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

.sum1_0_2:
  addi a0, s0, -1
  call sum1_0
  add a0, a0, s0
  ld s0, 0(sp)
  ld ra, 8(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main8l0_1
  .type main8l0_1, @function
# leaf false
main8l0_1:
.main8l0_1_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 10000
  call sum1_0
  call minimbt_print_int
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4




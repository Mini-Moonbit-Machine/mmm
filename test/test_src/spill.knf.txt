let rec f.1: Int = (a.3: Int, b.5: Int, c.7: Int, d.9: Int) {
  let e.10: Int = Add(a.3, b.5)
  let f.11: Int = Add(a.3, c.7)
  let g.12: Int = Add(a.3, d.9)
  let h.13: Int = Add(b.5, c.7)
  let i.14: Int = Add(b.5, d.9)
  let j.15: Int = Add(c.7, d.9)
  let k.16: Int = Add(e.10, f.11)
  let l.17: Int = Add(e.10, g.12)
  let m.18: Int = Add(e.10, h.13)
  let n.19: Int = Add(e.10, i.14)
  let o.20: Int = Add(e.10, j.15)
  let p.21: Int = Add(f.11, g.12)
  let q.22: Int = Add(f.11, h.13)
  let r.23: Int = Add(f.11, i.14)
  let s.24: Int = Add(f.11, j.15)
  let t.25: Int = Add(g.12, h.13)
  let u.26: Int = Add(g.12, i.14)
  let v.27: Int = Add(g.12, j.15)
  let w.28: Int = Add(h.13, i.14)
  let x.29: Int = Add(h.13, j.15)
  let y.30: Int = Add(i.14, j.15)
  let aa.31: Int = Add(k.16, l.17)
  let ab.32: Int = Add(k.16, m.18)
  let ac.33: Int = Add(k.16, n.19)
  let ad.34: Int = Add(k.16, o.20)
  let ae.35: Int = Add(k.16, p.21)
  let af.36: Int = Add(k.16, q.22)
  let ag.37: Int = Add(k.16, r.23)
  let ah.38: Int = Add(k.16, s.24)
  let ai.39: Int = Add(k.16, t.25)
  let aj.40: Int = Add(k.16, u.26)
  let ak.41: Int = Add(k.16, v.27)
  let al.42: Int = Add(k.16, w.28)
  let am.43: Int = Add(k.16, x.29)
  let an.44: Int = Add(k.16, y.30)
  let _45: Int = Add(a.3, b.5)
  let _46: Int = Add(_45, c.7)
  let _47: Int = Add(_46, d.9)
  let _48: Int = Add(_47, e.10)
  let _49: Int = Add(_48, f.11)
  let _50: Int = Add(_49, g.12)
  let _51: Int = Add(_50, h.13)
  let _52: Int = Add(_51, i.14)
  let _53: Int = Add(_52, j.15)
  let _54: Int = Add(_53, k.16)
  let _55: Int = Add(_54, l.17)
  let _56: Int = Add(_55, m.18)
  let _57: Int = Add(_56, n.19)
  let _58: Int = Add(_57, o.20)
  let _59: Int = Add(_58, p.21)
  let _60: Int = Add(_59, q.22)
  let _61: Int = Add(_60, r.23)
  let _62: Int = Add(_61, s.24)
  let _63: Int = Add(_62, t.25)
  let _64: Int = Add(_63, u.26)
  let _65: Int = Add(_64, v.27)
  let _66: Int = Add(_65, w.28)
  let _67: Int = Add(_66, x.29)
  let _68: Int = Add(_67, y.30)
  let _69: Int = Add(_68, aa.31)
  let _70: Int = Add(_69, ab.32)
  let _71: Int = Add(_70, ac.33)
  let _72: Int = Add(_71, ad.34)
  let _73: Int = Add(_72, ae.35)
  let _74: Int = Add(_73, af.36)
  let _75: Int = Add(_74, ag.37)
  let _76: Int = Add(_75, ah.38)
  let _77: Int = Add(_76, ai.39)
  let _78: Int = Add(_77, aj.40)
  let _79: Int = Add(_78, ak.41)
  let _80: Int = Add(_79, al.42)
  let _81: Int = Add(_80, am.43)
  let z.82: Int = Add(_81, an.44)
  Neg(z.82)
}
let rec main.83: Var({val: Some(Unit)}) = () {
  let _84: Int = Int(1)
  let _85: Int = Int(2)
  let _86: Int = Int(3)
  let _87: Int = Int(4)
  let _88: Int = Apply(f.1, [_84, _85, _86, _87, ])
  ExtApply(minimbt_print_int, [_88, ])
}
Apply(main.83, [])

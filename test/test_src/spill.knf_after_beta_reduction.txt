let rec main.79: Var({val: Some(Unit)}) = () {
  let _80: Int = Int(1)
  let _81: Int = Int(2)
  let _82: Int = Int(3)
  let _83: Int = Int(4)
  let e.85: Int = Add(_80, _81)
  let f.86: Int = Add(_80, _82)
  let g.87: Int = Add(_80, _83)
  let h.88: Int = Add(_81, _82)
  let i.89: Int = Add(_81, _83)
  let j.90: Int = Add(_82, _83)
  let k.91: Int = Add(e.85, f.86)
  let l.92: Int = Add(e.85, g.87)
  let m.93: Int = Add(e.85, h.88)
  let n.94: Int = Add(e.85, i.89)
  let o.95: Int = Add(e.85, j.90)
  let p.96: Int = Add(f.86, g.87)
  let q.97: Int = Add(f.86, h.88)
  let r.98: Int = Add(f.86, i.89)
  let s.99: Int = Add(f.86, j.90)
  let t.100: Int = Add(g.87, h.88)
  let u.101: Int = Add(g.87, i.89)
  let v.102: Int = Add(g.87, j.90)
  let w.103: Int = Add(h.88, i.89)
  let x.104: Int = Add(h.88, j.90)
  let y.105: Int = Add(i.89, j.90)
  let aa.106: Int = Add(k.91, l.92)
  let ab.107: Int = Add(k.91, m.93)
  let ac.108: Int = Add(k.91, n.94)
  let ad.109: Int = Add(k.91, o.95)
  let ae.110: Int = Add(k.91, p.96)
  let af.111: Int = Add(k.91, q.97)
  let ag.112: Int = Add(k.91, r.98)
  let ah.113: Int = Add(k.91, s.99)
  let ai.114: Int = Add(k.91, t.100)
  let aj.115: Int = Add(k.91, u.101)
  let ak.116: Int = Add(k.91, v.102)
  let al.117: Int = Add(k.91, w.103)
  let am.118: Int = Add(k.91, x.104)
  let an.119: Int = Add(k.91, y.105)
  let _120: Int = Add(_80, _81)
  let _121: Int = Add(_120, _82)
  let _122: Int = Add(_121, _83)
  let _123: Int = Add(_122, e.85)
  let _124: Int = Add(_123, f.86)
  let _125: Int = Add(_124, g.87)
  let _126: Int = Add(_125, h.88)
  let _127: Int = Add(_126, i.89)
  let _128: Int = Add(_127, j.90)
  let _129: Int = Add(_128, k.91)
  let _130: Int = Add(_129, l.92)
  let _131: Int = Add(_130, m.93)
  let _132: Int = Add(_131, n.94)
  let _133: Int = Add(_132, o.95)
  let _134: Int = Add(_133, p.96)
  let _135: Int = Add(_134, q.97)
  let _136: Int = Add(_135, r.98)
  let _137: Int = Add(_136, s.99)
  let _138: Int = Add(_137, t.100)
  let _139: Int = Add(_138, u.101)
  let _140: Int = Add(_139, v.102)
  let _141: Int = Add(_140, w.103)
  let _142: Int = Add(_141, x.104)
  let _143: Int = Add(_142, y.105)
  let _144: Int = Add(_143, aa.106)
  let _145: Int = Add(_144, ab.107)
  let _146: Int = Add(_145, ac.108)
  let _147: Int = Add(_146, ad.109)
  let _148: Int = Add(_147, ae.110)
  let _149: Int = Add(_148, af.111)
  let _150: Int = Add(_149, ag.112)
  let _151: Int = Add(_150, ah.113)
  let _152: Int = Add(_151, ai.114)
  let _153: Int = Add(_152, aj.115)
  let _154: Int = Add(_153, ak.116)
  let _155: Int = Add(_154, al.117)
  let _156: Int = Add(_155, am.118)
  let z.157: Int = Add(_156, an.119)
  let _84: Int = Neg(z.157)
  ExtApply(minimbt_print_int, [_84, ])
}
Apply(main.79, [])let rec main.79: Var({val: Some(Unit)}) = () {
  let _80: Int = Int(1)
  let _81: Int = Int(2)
  let _82: Int = Int(3)
  let _83: Int = Int(4)
  let e.85: Int = Add(_80, _81)
  let f.86: Int = Add(_80, _82)
  let g.87: Int = Add(_80, _83)
  let h.88: Int = Add(_81, _82)
  let i.89: Int = Add(_81, _83)
  let j.90: Int = Add(_82, _83)
  let k.91: Int = Add(e.85, f.86)
  let l.92: Int = Add(e.85, g.87)
  let m.93: Int = Add(e.85, h.88)
  let n.94: Int = Add(e.85, i.89)
  let o.95: Int = Add(e.85, j.90)
  let p.96: Int = Add(f.86, g.87)
  let q.97: Int = Add(f.86, h.88)
  let r.98: Int = Add(f.86, i.89)
  let s.99: Int = Add(f.86, j.90)
  let t.100: Int = Add(g.87, h.88)
  let u.101: Int = Add(g.87, i.89)
  let v.102: Int = Add(g.87, j.90)
  let w.103: Int = Add(h.88, i.89)
  let x.104: Int = Add(h.88, j.90)
  let y.105: Int = Add(i.89, j.90)
  let aa.106: Int = Add(k.91, l.92)
  let ab.107: Int = Add(k.91, m.93)
  let ac.108: Int = Add(k.91, n.94)
  let ad.109: Int = Add(k.91, o.95)
  let ae.110: Int = Add(k.91, p.96)
  let af.111: Int = Add(k.91, q.97)
  let ag.112: Int = Add(k.91, r.98)
  let ah.113: Int = Add(k.91, s.99)
  let ai.114: Int = Add(k.91, t.100)
  let aj.115: Int = Add(k.91, u.101)
  let ak.116: Int = Add(k.91, v.102)
  let al.117: Int = Add(k.91, w.103)
  let am.118: Int = Add(k.91, x.104)
  let an.119: Int = Add(k.91, y.105)
  let _120: Int = Add(_80, _81)
  let _121: Int = Add(_120, _82)
  let _122: Int = Add(_121, _83)
  let _123: Int = Add(_122, e.85)
  let _124: Int = Add(_123, f.86)
  let _125: Int = Add(_124, g.87)
  let _126: Int = Add(_125, h.88)
  let _127: Int = Add(_126, i.89)
  let _128: Int = Add(_127, j.90)
  let _129: Int = Add(_128, k.91)
  let _130: Int = Add(_129, l.92)
  let _131: Int = Add(_130, m.93)
  let _132: Int = Add(_131, n.94)
  let _133: Int = Add(_132, o.95)
  let _134: Int = Add(_133, p.96)
  let _135: Int = Add(_134, q.97)
  let _136: Int = Add(_135, r.98)
  let _137: Int = Add(_136, s.99)
  let _138: Int = Add(_137, t.100)
  let _139: Int = Add(_138, u.101)
  let _140: Int = Add(_139, v.102)
  let _141: Int = Add(_140, w.103)
  let _142: Int = Add(_141, x.104)
  let _143: Int = Add(_142, y.105)
  let _144: Int = Add(_143, aa.106)
  let _145: Int = Add(_144, ab.107)
  let _146: Int = Add(_145, ac.108)
  let _147: Int = Add(_146, ad.109)
  let _148: Int = Add(_147, ae.110)
  let _149: Int = Add(_148, af.111)
  let _150: Int = Add(_149, ag.112)
  let _151: Int = Add(_150, ah.113)
  let _152: Int = Add(_151, ai.114)
  let _153: Int = Add(_152, aj.115)
  let _154: Int = Add(_153, ak.116)
  let _155: Int = Add(_154, al.117)
  let _156: Int = Add(_155, am.118)
  let z.157: Int = Add(_156, an.119)
  let _84: Int = Neg(z.157)
  ExtApply(minimbt_print_int, [_84, ])
}
Apply(main.79, [])
let rec inprod1l0: Double = (v12.3: Array(Double), v24.5: Array(Double), acc6.7: Double, i8.9: Int) {
  let _10: Int = Int(0)
  if (_10 <= i8.9) then {
    let _11: Double = Get v12.3[i8.9]
    let _12: Double = Get v24.5[i8.9]
    let _13: Double = FMul(_11, _12)
    let _14: Double = FAdd(acc6.7, _13)
    let _15: Int = Int(1)
    let _16: Int = Sub(i8.9, _15)
    Apply(inprod1l0, [v12.3, v24.5, _14, _16, ])
  } else {
    Var(acc6.7)
  }
}
let rec main17l1: Var({val: Some(Unit)}) = () {
  let _18: Int = Int(3)
  let _19: Double = Double(1.23)
  let v1.20: Array(Double) = ExtApply(minimbt_create_float_array, [_18, _19, ])
  let _21: Int = Int(3)
  let _22: Double = Double(4.56)
  let v2.23: Array(Double) = ExtApply(minimbt_create_float_array, [_21, _22, ])
  let _24: Double = Double(1000000)
  let _25: Double = Double(0)
  let _26: Int = Int(2)
  let _27: Double = Apply(inprod1l0, [v1.20, v2.23, _25, _26, ])
  let _28: Double = FMul(_24, _27)
  let _29: Int = ExtApply(minimbt_truncate, [_28, ])
  ExtApply(minimbt_print_int, [_29, ])
}
Apply(main17l1, [])
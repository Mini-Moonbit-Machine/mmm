let rec main.49: Var({val: Some(Unit)}) = () {
  let _6: Int = Int(10)
  let _7: Int = Int(1)
  let z.8: Array(Int) = ExtApply(minimbt_create_array, [_6, _7, ])
  let x.9: Int = Int(12345)
  let y.10: Int = Int(67890)
  let _11: Int = Int(0)
  let z0.12: Int = Get z.8[_11]
  let z1.13: Int = Add(z0.12, z0.12)
  let z2.14: Int = Add(z1.13, z1.13)
  let z3.15: Int = Add(z2.14, z2.14)
  let z4.16: Int = Add(z3.15, z3.15)
  let z5.17: Int = Add(z4.16, z4.16)
  let z6.18: Int = Add(z5.17, z5.17)
  let z7.19: Int = Add(z6.18, z6.18)
  let z8.20: Int = Add(z7.19, z7.19)
  let z9.21: Int = Add(z8.20, z8.20)
  let z10.22: Int = Add(z9.21, z9.21)
  let z11.23: Int = Add(z10.22, z10.22)
  let z12.24: Int = Add(z11.23, z11.23)
  let z13.25: Int = Add(z12.24, z12.24)
  let z14.26: Int = Add(z13.25, z13.25)
  let z15.27: Int = Add(z14.26, z14.26)
  let _28: Int = Int(1)
  let _29: Int = Get z.8[_28]
  let _30: Int = Int(0)
  if (_29 == _30) then {
    let _48: Int = Int(1)
    let _46: Int = Add(y.10, _48)
    ExtApply(minimbt_print_int, [_46, ])
  } else {
    let _31: Int = Add(z0.12, z1.13)
    let _32: Int = Add(_31, z2.14)
    let _33: Int = Add(_32, z3.15)
    let _34: Int = Add(_33, z4.16)
    let _35: Int = Add(_34, z5.17)
    let _36: Int = Add(_35, z6.18)
    let _37: Int = Add(_36, z7.19)
    let _38: Int = Add(_37, z8.20)
    let _39: Int = Add(_38, z9.21)
    let _40: Int = Add(_39, z10.22)
    let _41: Int = Add(_40, z11.23)
    let _42: Int = Add(_41, z12.24)
    let _43: Int = Add(_42, z13.25)
    let _44: Int = Add(_43, z14.26)
    let _45: Int = Add(_44, z15.27)
    let _46: Int = Add(_45, x.9)
    ExtApply(minimbt_print_int, [_46, ])
  }
}
Apply(main.49, [])
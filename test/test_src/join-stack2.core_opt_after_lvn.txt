# name conventions used in the core ir:
# - functions: f<id>
# - blocks: b<id>
# - instructions: %<id>
# - memory: m<id>
# - free variables: ^<id>
# - function parameters: $f<pid>
# - block parameters: $b<bid>.<pid>
.core
.fn main.12 #f0 : fn() -> unit
.freevars ()
.entry b0 {
  .bb #b0 () {
    let %0: bool = le(123, 0)
    br %0 b1() b2()
  }
  .bb #b1 () {
    let %1: int32 = add(456, 123)
    let %2: unit = ext_call minimbt_print_int(%1)
    jump b3(%2)
  }
  .bb #b2 () {
    let %3: int32 = add(123, 123)
    let %4: unit = ext_call minimbt_print_int(%3)
    jump b3(%4)
  }
  .bb #b3 (unit) {
    return $b3.0
  }
}
.fn T$start #f2 : fn() -> unit
.freevars ()
.entry b0 {
  .bb #b0 () {
    let %0: unit = call f0()
    return %0
  }
}
.thunk ::0 start

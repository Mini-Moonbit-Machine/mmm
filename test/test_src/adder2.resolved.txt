let rec make_adder: (x: Int) -> (Int) -> Int {
  let rec adder: (y: Int) -> Int {
    Var("x") + Var("y")
  }
  Var(adder)
}
let rec main: () -> Var(None) {
  let add2: Var(None) = Apply(Var("make_adder"), [Int(2), ])
  let add3: Var(None) = Apply(Var("make_adder"), [Int(3), ])
  Apply(Var("print_int"), [Prim(App(Var("add2"), targs=None, [Int(10)]), App(Var("add3"), targs=None, [Int(20)]), Add, kind=None), ])
}
Unit

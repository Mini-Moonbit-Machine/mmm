let rec init_arr63.278l1: Unit = (i64.279: Int, _78: Int, mat.277: Array(Var({val: Some(Array(Double))}))) {
  let _280: Int = Int(0)
  if (_280 <= i64.279) then {
    let _281: Double = Double(0)
    let _282: Array(Double) = ExtApply(minimbt_create_float_array, [_78, _281, ])
    let _283: Unit = Put mat.277[i64.279] = _282
    let _284: Int = Int(1)
    let _285: Int = Sub(i64.279, _284)
    Apply(init_arr63.278l1, [_285, _78, mat.277, ])
  } else {
    Unit
  }
}
let rec init_arr63.290l2: Unit = (i64.291: Int, _81: Int, mat.289: Array(Var({val: Some(Array(Double))}))) {
  let _292: Int = Int(0)
  if (_292 <= i64.291) then {
    let _293: Double = Double(0)
    let _294: Array(Double) = ExtApply(minimbt_create_float_array, [_81, _293, ])
    let _295: Unit = Put mat.289[i64.291] = _294
    let _296: Int = Int(1)
    let _297: Int = Sub(i64.291, _296)
    Apply(init_arr63.290l2, [_297, _81, mat.289, ])
  } else {
    Unit
  }
}
let rec init_arr63.302l3: Unit = (i64.303: Int, _84: Int, mat.301: Array(Var({val: Some(Array(Double))}))) {
  let _304: Int = Int(0)
  if (_304 <= i64.303) then {
    let _305: Double = Double(0)
    let _306: Array(Double) = ExtApply(minimbt_create_float_array, [_84, _305, ])
    let _307: Unit = Put mat.301[i64.303] = _306
    let _308: Int = Int(1)
    let _309: Int = Sub(i64.303, _308)
    Apply(init_arr63.302l3, [_309, _84, mat.301, ])
  } else {
    Unit
  }
}
let rec loop322.319l6: Unit = (k23.320: Int, i15.314: Int, j19.317: Int, mat.277: Array(Var({val: Some(Array(Double))})), mat.289: Array(Var({val: Some(Array(Double))})), mat.301: Array(Var({val: Some(Array(Double))})), _322: Array(Double), _323: Array(Double), _325: Array(Double)) {
  let _321: Int = Int(0)
  if (_321 <= k23.320) then {
    let _324: Double = Get _323[j19.317]
    let _326: Double = Get _325[k23.320]
    let _327: Array(Double) = Get mat.289[k23.320]
    let _328: Double = Get _327[j19.317]
    let _329: Double = FMul(_326, _328)
    let _330: Double = FAdd(_324, _329)
    let _331: Unit = Put _322[j19.317] = _330
    let _332: Int = Int(1)
    let _333: Int = Sub(k23.320, _332)
    Apply(loop322.319l6, [_333, i15.314, j19.317, mat.277, mat.289, mat.301, _322, _323, _325, ])
  } else {
    Unit
  }
}
let rec loop218.316l5: Unit = (j19.317: Int, _159: Int, i15.314: Int, mat.277: Array(Var({val: Some(Array(Double))})), mat.289: Array(Var({val: Some(Array(Double))})), mat.301: Array(Var({val: Some(Array(Double))}))) {
  let _318: Int = Int(0)
  if (_318 <= j19.317) then {
    let _334: Int = Int(1)
    let _335: Int = Sub(_159, _334)
    let _349: Array(Double) = Get mat.301[i15.314]
    let _350: Array(Double) = Get mat.301[i15.314]
    let _351: Array(Double) = Get mat.277[i15.314]
    let _336: Unit = Apply(loop322.319l6, [_335, i15.314, j19.317, mat.277, mat.289, mat.301, _349, _350, _351, ])
    let _337: Int = Int(1)
    let _338: Int = Sub(j19.317, _337)
    Apply(loop218.316l5, [_338, _159, i15.314, mat.277, mat.289, mat.301, ])
  } else {
    Unit
  }
}
let rec loop114.313l4: Unit = (i15.314: Int, _159: Int, _160: Int, mat.277: Array(Var({val: Some(Array(Double))})), mat.289: Array(Var({val: Some(Array(Double))})), mat.301: Array(Var({val: Some(Array(Double))}))) {
  let _315: Int = Int(0)
  if (_315 <= i15.314) then {
    let _339: Int = Int(1)
    let _340: Int = Sub(_160, _339)
    let _341: Unit = Apply(loop218.316l5, [_340, _159, i15.314, mat.277, mat.289, mat.301, ])
    let _342: Int = Int(1)
    let _343: Int = Sub(i15.314, _342)
    Apply(loop114.313l4, [_343, _159, _160, mat.277, mat.289, mat.301, ])
  } else {
    Unit
  }
}
let rec main53l0: Var({val: Some(Unit)}) = () {
  let _54: Int = Int(0)
  let _55: Double = Double(0)
  let dummy.56: Array(Double) = ExtApply(minimbt_create_float_array, [_54, _55, ])
  let _77: Int = Int(2)
  let _78: Int = Int(3)
  let mat.277: Array(Var({val: Some(Array(Double))})) = ExtApply(minimbt_create_ptr_array, [_77, dummy.56, ])
  let _286: Int = Int(1)
  let _287: Int = Sub(_77, _286)
  let _288: Unit = Apply(init_arr63.278l1, [_287, _78, mat.277, ])
  let _80: Int = Int(3)
  let _81: Int = Int(2)
  let mat.289: Array(Var({val: Some(Array(Double))})) = ExtApply(minimbt_create_ptr_array, [_80, dummy.56, ])
  let _298: Int = Int(1)
  let _299: Int = Sub(_80, _298)
  let _300: Unit = Apply(init_arr63.290l2, [_299, _81, mat.289, ])
  let _83: Int = Int(2)
  let _84: Int = Int(2)
  let mat.301: Array(Var({val: Some(Array(Double))})) = ExtApply(minimbt_create_ptr_array, [_83, dummy.56, ])
  let _310: Int = Int(1)
  let _311: Int = Sub(_83, _310)
  let _312: Unit = Apply(init_arr63.302l3, [_311, _84, mat.301, ])
  let _86: Int = Int(0)
  let _87: Array(Double) = Get mat.277[_86]
  let _88: Int = Int(0)
  let _89: Double = Double(1)
  let _91: Unit = Put _87[_88] = _89
  let _92: Int = Int(0)
  let _93: Array(Double) = Get mat.277[_92]
  let _94: Int = Int(1)
  let _95: Double = Double(2)
  let _97: Unit = Put _93[_94] = _95
  let _98: Int = Int(0)
  let _99: Array(Double) = Get mat.277[_98]
  let _100: Int = Int(2)
  let _101: Double = Double(3)
  let _103: Unit = Put _99[_100] = _101
  let _104: Int = Int(1)
  let _105: Array(Double) = Get mat.277[_104]
  let _106: Int = Int(0)
  let _107: Double = Double(4)
  let _109: Unit = Put _105[_106] = _107
  let _110: Int = Int(1)
  let _111: Array(Double) = Get mat.277[_110]
  let _112: Int = Int(1)
  let _113: Double = Double(5)
  let _115: Unit = Put _111[_112] = _113
  let _116: Int = Int(1)
  let _117: Array(Double) = Get mat.277[_116]
  let _118: Int = Int(2)
  let _119: Double = Double(6)
  let _121: Unit = Put _117[_118] = _119
  let _122: Int = Int(0)
  let _123: Array(Double) = Get mat.289[_122]
  let _124: Int = Int(0)
  let _125: Double = Double(7)
  let _127: Unit = Put _123[_124] = _125
  let _128: Int = Int(0)
  let _129: Array(Double) = Get mat.289[_128]
  let _130: Int = Int(1)
  let _131: Double = Double(8)
  let _133: Unit = Put _129[_130] = _131
  let _134: Int = Int(1)
  let _135: Array(Double) = Get mat.289[_134]
  let _136: Int = Int(0)
  let _137: Double = Double(9)
  let _139: Unit = Put _135[_136] = _137
  let _140: Int = Int(1)
  let _141: Array(Double) = Get mat.289[_140]
  let _142: Int = Int(1)
  let _143: Double = Double(10)
  let _145: Unit = Put _141[_142] = _143
  let _146: Int = Int(2)
  let _147: Array(Double) = Get mat.289[_146]
  let _148: Int = Int(0)
  let _149: Double = Double(11)
  let _151: Unit = Put _147[_148] = _149
  let _152: Int = Int(2)
  let _153: Array(Double) = Get mat.289[_152]
  let _154: Int = Int(1)
  let _155: Double = Double(12)
  let _157: Unit = Put _153[_154] = _155
  let _158: Int = Int(2)
  let _159: Int = Int(3)
  let _160: Int = Int(2)
  let _344: Int = Int(1)
  let _345: Int = Sub(_158, _344)
  let _162: Unit = Apply(loop114.313l4, [_345, _159, _160, mat.277, mat.289, mat.301, ])
  let _163: Int = Int(0)
  let _164: Array(Double) = Get mat.301[_163]
  let _165: Int = Int(0)
  let _166: Double = Get _164[_165]
  let _167: Int = ExtApply(minimbt_truncate, [_166, ])
  let _169: Unit = ExtApply(minimbt_print_int, [_167, ])
  let _171: Unit = ExtApply(minimbt_print_endline, [])
  let _172: Int = Int(0)
  let _173: Array(Double) = Get mat.301[_172]
  let _174: Int = Int(1)
  let _175: Double = Get _173[_174]
  let _176: Int = ExtApply(minimbt_truncate, [_175, ])
  let _178: Unit = ExtApply(minimbt_print_int, [_176, ])
  let _180: Unit = ExtApply(minimbt_print_endline, [])
  let _181: Int = Int(1)
  let _182: Array(Double) = Get mat.301[_181]
  let _183: Int = Int(0)
  let _184: Double = Get _182[_183]
  let _185: Int = ExtApply(minimbt_truncate, [_184, ])
  let _187: Unit = ExtApply(minimbt_print_int, [_185, ])
  let _189: Unit = ExtApply(minimbt_print_endline, [])
  let _190: Int = Int(1)
  let _191: Array(Double) = Get mat.301[_190]
  let _192: Int = Int(1)
  let _193: Double = Get _191[_192]
  let _194: Int = ExtApply(minimbt_truncate, [_193, ])
  let _196: Unit = ExtApply(minimbt_print_int, [_194, ])
  Unit
}
Apply(main53l0, [])
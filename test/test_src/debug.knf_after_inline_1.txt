let rec f.9: Int = (x.11: Int) {
  let _15: Bool = Bool(true)
  let _18: Bool = Bool(true)
  if (_15 == _18) then {
    let _16: Int = Int(1)
    let _22: Bool = Bool(true)
    let _23: Bool = Bool(true)
    if (_22 == _23) then {
      let _24: Int = Int(1)
      let _26: Bool = Bool(true)
      let _27: Bool = Bool(true)
      if (_26 == _27) then {
        let _28: Int = Int(1)
        let rec g.29: Int = (y.30: Int) {
          Int(1)
        }
        let _31: Bool = Bool(true)
        let _32: Bool = Bool(true)
        if (_31 == _32) then {
          let _33: Int = Int(1)
          Apply(f.9, [_33, ])
        } else {
          let _34: Int = Int(2)
          Apply(g.29, [_34, ])
        }
      } else {
        let _35: Int = Int(2)
        Int(1)
      }
    } else {
      let _25: Int = Int(2)
      Int(1)
    }
  } else {
    let _17: Int = Int(2)
    Var(x.11)
  }
}
let rec main.19: Var({val: Some(Unit)}) = () {
  Unit
}
Apply(main.19, [])

// [Asm] pre_assigned_registers: Self(fref=f6) -> v0, Insn(iref=%0) -> v2
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v2]
// [Asm] live_set: [v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v2 is X
// [Asm] defs: []
// [Asm] live_set: [v2]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [v2]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of T$start_6"];
// [Asm]   r0 [label="t0", color=blue];
// [Asm]   r5 [label="t4", color=blue];
// [Asm]   r3 [label="t2", color=blue];
// [Asm]   r2 [label="t1", color=blue];
// [Asm]   r9 [label="a4", color=blue];
// [Asm]   r6 [label="a1", color=blue];
// [Asm]   r13 [label="v2 ← a0", color=green];
// [Asm]   r4 [label="t3", color=blue];
// [Asm]   r1 [label="a0", color=blue];
// [Asm]   r11 [label="a6", color=blue];
// [Asm]   r7 [label="a2", color=blue];
// [Asm]   r10 [label="a5", color=blue];
// [Asm]   r12 [label="a7", color=blue];
// [Asm]   r8 [label="a3", color=blue];
// [Asm]   r1 -- r2;
// [Asm]   r1 -- r8;
// [Asm]   r1 -- r5;
// [Asm]   r1 -- r9;
// [Asm]   r0 -- r1;
// [Asm]   r1 -- r3;
// [Asm]   r1 -- r4;
// [Asm]   r1 -- r11;
// [Asm]   r1 -- r7;
// [Asm]   r1 -- r12;
// [Asm]   r1 -- r6;
// [Asm]   r1 -- r10;
// [Asm]   comment = "0:t0-> 1:a0-> 2:t1-> 3:t2-> 4:t3-> 5:t4-> 6:a1-> 7:a2-> 8:a3-> 9:a4-> 10:a5-> 11:a6-> 12:a7-> 13:v2"
// [Asm]   comment = "v2<-a0;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of T$start_6"];
// [Asm]   r0 [label="ft0", color=blue];
// [Asm]   r3 [label="ft3", color=blue];
// [Asm]   r9 [label="ft9", color=blue];
// [Asm]   r6 [label="ft6", color=blue];
// [Asm]   r13 [label="fa2", color=blue];
// [Asm]   r4 [label="ft4", color=blue];
// [Asm]   r1 [label="ft1", color=blue];
// [Asm]   r11 [label="fa0", color=blue];
// [Asm]   r7 [label="ft7", color=blue];
// [Asm]   r10 [label="ft10", color=blue];
// [Asm]   r14 [label="fa3", color=blue];
// [Asm]   r8 [label="ft8", color=blue];
// [Asm]   r5 [label="ft5", color=blue];
// [Asm]   r15 [label="fa4", color=blue];
// [Asm]   r2 [label="ft2", color=blue];
// [Asm]   r16 [label="fa5", color=blue];
// [Asm]   r18 [label="fa7", color=blue];
// [Asm]   r17 [label="fa6", color=blue];
// [Asm]   r12 [label="fa1", color=blue];
// [Asm]   comment = "0:ft0-> 1:ft1-> 2:ft2-> 3:ft3-> 4:ft4-> 5:ft5-> 6:ft6-> 7:ft7-> 8:ft8-> 9:ft9-> 10:ft10-> 11:fa0-> 12:fa1-> 13:fa2-> 14:fa3-> 15:fa4-> 16:fa5-> 17:fa6-> 18:fa7"
// [Asm]   comment = ""
// [Asm] }
// [Asm] 
// [Asm] subst   call main39_1 ->   call main39_1
// [Asm] subst   ret ->   ret
// [Asm] pre_assigned_registers: Insn(iref=%3) -> v7, Insn(iref=%7) -> v11, Self(fref=f0) -> v0, Insn(iref=%2) -> v6, Mem(fref=f0, mref=m0) -> v3, Insn(iref=%9) -> v13, Insn(iref=%8) -> v12, Insn(iref=%1) -> v5, Insn(iref=%10) -> v14, Insn(iref=%11) -> v15, Insn(iref=%6) -> v10, FnParam(fref=f0, fpref=$f.0) -> v2, Insn(iref=%5) -> v9, Insn(iref=%0) -> v4, Insn(iref=%4) -> v8
// [Asm] defs: []
// [Asm] live_set: [a0, s11]
// [Asm] move_origin: []
// [Asm] defs: [v2]
// [Asm] live_set: [s11, v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v2 is X
// [Asm] defs: [v4]
// [Asm] live_set: [v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: v4 is X
// [Asm] defs: [v5]
// [Asm] live_set: [v5, v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: v5 is X
// [Asm] defs: [v6]
// [Asm] live_set: [v5, v4, v6, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: v6 is X
// [Asm] defs: [v7]
// [Asm] live_set: [v5, v7, v4, v6, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: v7 is X
// [Asm] defs: [v8]
// [Asm] live_set: [v5, v8, v7, v4, v6, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: v8 is X
// [Asm] defs: [v9]
// [Asm] live_set: [v5, v8, v7, v4, v6, s11, v9, v2]
// [Asm] move_origin: []
// [Asm] defined: v9 is X
// [Asm] defs: [v10]
// [Asm] live_set: [v5, v10, v8, v7, v4, v6, s11, v9, v2]
// [Asm] move_origin: []
// [Asm] defined: v10 is X
// [Asm] defs: [v11]
// [Asm] live_set: [v11, v5, v10, v8, v7, v4, v6, s11, v9, v2]
// [Asm] move_origin: []
// [Asm] defined: v11 is X
// [Asm] defs: [v12]
// [Asm] live_set: [v11, v5, v10, v8, v7, v4, v6, v12, s11, v9, v2]
// [Asm] move_origin: []
// [Asm] defined: v12 is X
// [Asm] defs: [v13]
// [Asm] live_set: [v11, v5, v10, v13, v8, v7, v4, v6, v12, s11, v9]
// [Asm] move_origin: []
// [Asm] defined: v13 is X
// [Asm] defs: [v19]
// [Asm] live_set: [v11, v5, v10, v13, v8, v7, v19, v4, v6, v12, v9]
// [Asm] move_origin: []
// [Asm] defined: v19 is X
// [Asm] defs: [v3]
// [Asm] live_set: [v11, v5, v10, v13, v8, v7, v4, v6, v12, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v3 is X
// [Asm] defs: [s11]
// [Asm] live_set: [v11, v5, v10, v13, v8, v7, v4, v6, v12, v9, v3]
// [Asm] move_origin: [v3]
// [Asm] defined: s11 is X
// [Asm] defs: [v21]
// [Asm] live_set: [v11, v5, v10, v21, v13, v8, v7, v4, v6, v12, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v21 is X
// [Asm] defs: []
// [Asm] live_set: [v11, v5, v10, v13, v8, v7, v4, v6, v12, v9, v3]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v11, v5, v10, v13, v8, v7, v6, v12, v9, v3]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v11, v10, v13, v8, v7, v6, v12, v9, v3]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v11, v10, v13, v8, v7, v12, v9, v3]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v11, v10, v13, v8, v12, v9, v3]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v11, v10, v13, v12, v9, v3]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v11, v12, v10, v13, v3]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v11, v12, v13, v3]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v12, v13, v3]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v13, v3]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v3]
// [Asm] move_origin: []
// [Asm] defs: [s10]
// [Asm] live_set: [v3]
// [Asm] move_origin: [v3]
// [Asm] defined: s10 is X
// [Asm] defs: [v16]
// [Asm] live_set: [v16]
// [Asm] move_origin: []
// [Asm] defined: v16 is X
// [Asm] defs: []
// [Asm] live_set: [v16]
// [Asm] move_origin: []
// [Asm] defs: [v17]
// [Asm] live_set: [v16, v17]
// [Asm] move_origin: []
// [Asm] defined: v17 is X
// [Asm] defs: [a0]
// [Asm] live_set: [v16, a0]
// [Asm] move_origin: [v17]
// [Asm] defined: a0 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v15]
// [Asm] live_set: [v15]
// [Asm] move_origin: [a0]
// [Asm] defined: v15 is X
// [Asm] defs: []
// [Asm] live_set: [v15]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [v15]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of h1_0"];
// [Asm]   r0 [label="v2 ← a0", color=green];
// [Asm]   r20 [label="t1", color=blue];
// [Asm]   r23 [label="t4", color=blue];
// [Asm]   r3 [label="v5 ← a2", color=green];
// [Asm]   r9 [label="v11 ← t0", color=green];
// [Asm]   r26 [label="a3", color=blue];
// [Asm]   r27 [label="a4", color=blue];
// [Asm]   r6 [label="v8 ← a5", color=green];
// [Asm]   r13 [label="v3 ← t2", color=green];
// [Asm]   r4 [label="v6 ← a3", color=green];
// [Asm]   r29 [label="a6", color=blue];
// [Asm]   r1 [label="s11", color=blue];
// [Asm]   r28 [label="a5", color=blue];
// [Asm]   r11 [label="v13 ← a0", color=green];
// [Asm]   r7 [label="v9 ← a6", color=green];
// [Asm]   r10 [label="v12 ← t1", color=green];
// [Asm]   r22 [label="t3", color=blue];
// [Asm]   r14 [label="v21 ← t3", color=green];
// [Asm]   r8 [label="v10 ← a7", color=green];
// [Asm]   r30 [label="a7", color=blue];
// [Asm]   r5 [label="v7 ← a4", color=green];
// [Asm]   r15 [label="s10", color=blue];
// [Asm]   r24 [label="a1", color=blue];
// [Asm]   r25 [label="a2", color=blue];
// [Asm]   r2 [label="v4 ← a1", color=green];
// [Asm]   r16 [label="v16 ← a1", color=green];
// [Asm]   r18 [label="a0", color=blue];
// [Asm]   r19 [label="t0", color=blue];
// [Asm]   r31 [label="v15 ← a0", color=green];
// [Asm]   r21 [label="t2", color=blue];
// [Asm]   r17 [label="v17 ← a0", color=green];
// [Asm]   r12 [label="v19 ← t2", color=green];
// [Asm]   r18 -- r23;
// [Asm]   r5 -- r8;
// [Asm]   r5 -- r10;
// [Asm]   r3 -- r6;
// [Asm]   r1 -- r4;
// [Asm]   r11 -- r14;
// [Asm]   r1 -- r7;
// [Asm]   r18 -- r25;
// [Asm]   r1 -- r10;
// [Asm]   r10 -- r13;
// [Asm]   r2 -- r10;
// [Asm]   r3 -- r9;
// [Asm]   r3 -- r11;
// [Asm]   r18 -- r27;
// [Asm]   r18 -- r21;
// [Asm]   r2 -- r7;
// [Asm]   r3 -- r5;
// [Asm]   r16 -- r17;
// [Asm]   r8 -- r12;
// [Asm]   r0 -- r6;
// [Asm]   r9 -- r14;
// [Asm]   r18 -- r28;
// [Asm]   r3 -- r8;
// [Asm]   r6 -- r13;
// [Asm]   r1 -- r9;
// [Asm]   r2 -- r6;
// [Asm]   r5 -- r6;
// [Asm]   r18 -- r26;
// [Asm]   r3 -- r4;
// [Asm]   r11 -- r13;
// [Asm]   r0 -- r2;
// [Asm]   r10 -- r12;
// [Asm]   r0 -- r9;
// [Asm]   r3 -- r13;
// [Asm]   r7 -- r10;
// [Asm]   r6 -- r10;
// [Asm]   r9 -- r12;
// [Asm]   r2 -- r12;
// [Asm]   r18 -- r30;
// [Asm]   r2 -- r8;
// [Asm]   r3 -- r10;
// [Asm]   r1 -- r2;
// [Asm]   r4 -- r12;
// [Asm]   r2 -- r5;
// [Asm]   r0 -- r1;
// [Asm]   r2 -- r13;
// [Asm]   r0 -- r10;
// [Asm]   r1 -- r11;
// [Asm]   r5 -- r7;
// [Asm]   r4 -- r8;
// [Asm]   r9 -- r10;
// [Asm]   r5 -- r14;
// [Asm]   r18 -- r20;
// [Asm]   r8 -- r11;
// [Asm]   r3 -- r7;
// [Asm]   r1 -- r6;
// [Asm]   r1 -- r5;
// [Asm]   r0 -- r4;
// [Asm]   r8 -- r14;
// [Asm]   r7 -- r8;
// [Asm]   r4 -- r14;
// [Asm]   r4 -- r9;
// [Asm]   r18 -- r24;
// [Asm]   r6 -- r7;
// [Asm]   r6 -- r9;
// [Asm]   r4 -- r13;
// [Asm]   r6 -- r11;
// [Asm]   r4 -- r5;
// [Asm]   r1 -- r8;
// [Asm]   r2 -- r4;
// [Asm]   r6 -- r14;
// [Asm]   r18 -- r29;
// [Asm]   r8 -- r9;
// [Asm]   r3 -- r12;
// [Asm]   r5 -- r13;
// [Asm]   r7 -- r13;
// [Asm]   r11 -- r12;
// [Asm]   r2 -- r11;
// [Asm]   r18 -- r22;
// [Asm]   r7 -- r9;
// [Asm]   r5 -- r11;
// [Asm]   r6 -- r12;
// [Asm]   r16 -- r18;
// [Asm]   r6 -- r8;
// [Asm]   r9 -- r11;
// [Asm]   r4 -- r11;
// [Asm]   r18 -- r19;
// [Asm]   r8 -- r13;
// [Asm]   r2 -- r14;
// [Asm]   r5 -- r9;
// [Asm]   r0 -- r3;
// [Asm]   r0 -- r8;
// [Asm]   r13 -- r14;
// [Asm]   r10 -- r11;
// [Asm]   r7 -- r11;
// [Asm]   r0 -- r5;
// [Asm]   r3 -- r14;
// [Asm]   r8 -- r10;
// [Asm]   r4 -- r7;
// [Asm]   r2 -- r9;
// [Asm]   r4 -- r6;
// [Asm]   r4 -- r10;
// [Asm]   r1 -- r3;
// [Asm]   r7 -- r12;
// [Asm]   r9 -- r13;
// [Asm]   r0 -- r7;
// [Asm]   r2 -- r3;
// [Asm]   r7 -- r14;
// [Asm]   r10 -- r14;
// [Asm]   r5 -- r12;
// [Asm]   comment = "0:v2-> 1:s11-> 2:v4-> 3:v5-> 4:v6-> 5:v7-> 6:v8-> 7:v9-> 8:v10-> 9:v11-> 10:v12-> 11:v13-> 12:v19-> 13:v3-> 14:v21-> 15:s10-> 16:v16-> 17:v17-> 18:a0-> 19:t0-> 20:t1-> 21:t2-> 22:t3-> 23:t4-> 24:a1-> 25:a2-> 26:a3-> 27:a4-> 28:a5-> 29:a6-> 30:a7-> 31:v15"
// [Asm]   comment = "v2<-a0;v5<-a2;v11<-t0;v8<-a5;v3<-t2;v6<-a3;v13<-a0;v9<-a6;v12<-t1;v21<-t3;v10<-a7;v7<-a4;v4<-a1;v16<-a1;v15<-a0;v17<-a0;v19<-t2;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of h1_0"];
// [Asm]   r0 [label="ft0", color=blue];
// [Asm]   r3 [label="ft3", color=blue];
// [Asm]   r9 [label="ft9", color=blue];
// [Asm]   r6 [label="ft6", color=blue];
// [Asm]   r13 [label="fa2", color=blue];
// [Asm]   r4 [label="ft4", color=blue];
// [Asm]   r1 [label="ft1", color=blue];
// [Asm]   r11 [label="fa0", color=blue];
// [Asm]   r7 [label="ft7", color=blue];
// [Asm]   r10 [label="ft10", color=blue];
// [Asm]   r14 [label="fa3", color=blue];
// [Asm]   r8 [label="ft8", color=blue];
// [Asm]   r5 [label="ft5", color=blue];
// [Asm]   r15 [label="fa4", color=blue];
// [Asm]   r2 [label="ft2", color=blue];
// [Asm]   r16 [label="fa5", color=blue];
// [Asm]   r18 [label="fa7", color=blue];
// [Asm]   r17 [label="fa6", color=blue];
// [Asm]   r12 [label="fa1", color=blue];
// [Asm]   comment = "0:ft0-> 1:ft1-> 2:ft2-> 3:ft3-> 4:ft4-> 5:ft5-> 6:ft6-> 7:ft7-> 8:ft8-> 9:ft9-> 10:ft10-> 11:fa0-> 12:fa1-> 13:fa2-> 14:fa3-> 15:fa4-> 16:fa5-> 17:fa6-> 18:fa7"
// [Asm]   comment = ""
// [Asm] }
// [Asm] 
// [Asm] subst   lw v4, 0(v2) ->   lw a1, 0(a0)
// [Asm] subst   lw v5, 4(v2) ->   lw a2, 4(a0)
// [Asm] subst   lw v6, 8(v2) ->   lw a3, 8(a0)
// [Asm] subst   lw v7, 12(v2) ->   lw a4, 12(a0)
// [Asm] subst   lw v8, 16(v2) ->   lw a5, 16(a0)
// [Asm] subst   lw v9, 20(v2) ->   lw a6, 20(a0)
// [Asm] subst   lw v10, 24(v2) ->   lw a7, 24(a0)
// [Asm] subst   lw v11, 28(v2) ->   lw t0, 28(a0)
// [Asm] subst   lw v12, 32(v2) ->   lw t1, 32(a0)
// [Asm] subst   lw v13, 36(v2) ->   lw a0, 36(a0)
// [Asm] subst   addi v19, s11, -88 ->   addi t2, s11, -88
// [Asm] subst   andi v3, v19, -8 ->   andi t2, t2, -8
// [Asm] subst   mv s11, v3 ->   mv s11, t2
// [Asm] subst   la v21, g24_3 ->   la t3, g24_3
// [Asm] subst   sd v21, 0(v3) ->   sd t3, 0(t2)
// [Asm] subst   sd v4, 8(v3) ->   sd a1, 8(t2)
// [Asm] subst   sd v5, 16(v3) ->   sd a2, 16(t2)
// [Asm] subst   sd v6, 24(v3) ->   sd a3, 24(t2)
// [Asm] subst   sd v7, 32(v3) ->   sd a4, 32(t2)
// [Asm] subst   sd v8, 40(v3) ->   sd a5, 40(t2)
// [Asm] subst   sd v9, 48(v3) ->   sd a6, 48(t2)
// [Asm] subst   sd v10, 56(v3) ->   sd a7, 56(t2)
// [Asm] subst   sd v11, 64(v3) ->   sd t0, 64(t2)
// [Asm] subst   sd v12, 72(v3) ->   sd t1, 72(t2)
// [Asm] subst   sd v13, 80(v3) ->   sd a0, 80(t2)
// [Asm] subst   mv s10, v3 ->   mv s10, t2
// [Asm] subst   ld v16, 0(v3) ->   ld a1, 0(t2)
// [Asm] subst   li v17, 1 ->   li a0, 1
// [Asm] subst   jalr v16 ->   jalr a1
// [Asm] subst   ret ->   ret
// [Asm] pre_assigned_registers: Insn(iref=%1) -> v4, Mem(fref=f1, mref=m0) -> v2, Self(fref=f1) -> v0, Insn(iref=%0) -> v3, Insn(iref=%2) -> v5
// [Asm] defs: []
// [Asm] live_set: [s11, zero]
// [Asm] move_origin: []
// [Asm] defs: [v8]
// [Asm] live_set: [zero, v8]
// [Asm] move_origin: []
// [Asm] defined: v8 is X
// [Asm] defs: [v2]
// [Asm] live_set: [zero, v2]
// [Asm] move_origin: []
// [Asm] defined: v2 is X
// [Asm] defs: [s11]
// [Asm] live_set: [zero, v2]
// [Asm] move_origin: [v2]
// [Asm] defined: s11 is X
// [Asm] defs: [v10]
// [Asm] live_set: [v10, zero, v2]
// [Asm] move_origin: []
// [Asm] defined: v10 is X
// [Asm] defs: []
// [Asm] live_set: [zero, v2]
// [Asm] move_origin: []
// [Asm] defs: [v11]
// [Asm] live_set: [v11, zero, v2]
// [Asm] move_origin: []
// [Asm] defined: v11 is X
// [Asm] defs: []
// [Asm] live_set: [zero, v2]
// [Asm] move_origin: []
// [Asm] defs: [v12]
// [Asm] live_set: [v12, zero, v2]
// [Asm] move_origin: []
// [Asm] defined: v12 is X
// [Asm] defs: []
// [Asm] live_set: [zero, v2]
// [Asm] move_origin: []
// [Asm] defs: [v13]
// [Asm] live_set: [zero, v13, v2]
// [Asm] move_origin: []
// [Asm] defined: v13 is X
// [Asm] defs: []
// [Asm] live_set: [zero, v2]
// [Asm] move_origin: []
// [Asm] defs: [v14]
// [Asm] live_set: [v14, zero, v2]
// [Asm] move_origin: []
// [Asm] defined: v14 is X
// [Asm] defs: []
// [Asm] live_set: [zero, v2]
// [Asm] move_origin: []
// [Asm] defs: [v15]
// [Asm] live_set: [v15, zero, v2]
// [Asm] move_origin: []
// [Asm] defined: v15 is X
// [Asm] defs: []
// [Asm] live_set: [zero, v2]
// [Asm] move_origin: []
// [Asm] defs: [v16]
// [Asm] live_set: [v16, zero, v2]
// [Asm] move_origin: []
// [Asm] defined: v16 is X
// [Asm] defs: []
// [Asm] live_set: [zero, v2]
// [Asm] move_origin: []
// [Asm] defs: [v17]
// [Asm] live_set: [v17, zero, v2]
// [Asm] move_origin: []
// [Asm] defined: v17 is X
// [Asm] defs: []
// [Asm] live_set: [zero, v2]
// [Asm] move_origin: []
// [Asm] defs: [v18]
// [Asm] live_set: [v18, zero, v2]
// [Asm] move_origin: []
// [Asm] defined: v18 is X
// [Asm] defs: []
// [Asm] live_set: [zero, v2]
// [Asm] move_origin: []
// [Asm] defs: [v19]
// [Asm] live_set: [v19, zero, v2]
// [Asm] move_origin: []
// [Asm] defined: v19 is X
// [Asm] defs: []
// [Asm] live_set: [zero, v2]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [zero, v2]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [zero, a0]
// [Asm] move_origin: [v2]
// [Asm] defined: a0 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [zero, a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v4]
// [Asm] live_set: [v4, zero]
// [Asm] move_origin: [a0]
// [Asm] defined: v4 is X
// [Asm] defs: []
// [Asm] live_set: [v4, zero]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v4, zero]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [zero, a0]
// [Asm] move_origin: [v4]
// [Asm] defined: a0 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [zero, a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v5]
// [Asm] live_set: [zero]
// [Asm] move_origin: [a0]
// [Asm] defined: v5 is X
// [Asm] defs: []
// [Asm] live_set: [zero]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [zero]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of main39_1"];
// [Asm]   r0 [label="v8 ← a0", color=green];
// [Asm]   r20 [label="a1", color=blue];
// [Asm]   r23 [label="a4", color=blue];
// [Asm]   r3 [label="s11", color=blue];
// [Asm]   r9 [label="v15 ← a1", color=green];
// [Asm]   r26 [label="a7", color=blue];
// [Asm]   r27 [label="v4 ← a0", color=green];
// [Asm]   r6 [label="v12 ← a1", color=green];
// [Asm]   r13 [label="v19 ← a1", color=green];
// [Asm]   r4 [label="v10 ← a1", color=green];
// [Asm]   r1 [label="zero", color=blue];
// [Asm]   r28 [label="v5 ← a0", color=green];
// [Asm]   r11 [label="v17 ← a1", color=green];
// [Asm]   r7 [label="v13 ← a1", color=green];
// [Asm]   r10 [label="v16 ← a1", color=green];
// [Asm]   r22 [label="a3", color=blue];
// [Asm]   r14 [label="a0", color=blue];
// [Asm]   r8 [label="v14 ← a1", color=green];
// [Asm]   r5 [label="v11 ← a1", color=green];
// [Asm]   r24 [label="a5", color=blue];
// [Asm]   r15 [label="t0", color=blue];
// [Asm]   r25 [label="a6", color=blue];
// [Asm]   r2 [label="v2 ← a0", color=green];
// [Asm]   r16 [label="t1", color=blue];
// [Asm]   r18 [label="t3", color=blue];
// [Asm]   r19 [label="t4", color=blue];
// [Asm]   r17 [label="t2", color=blue];
// [Asm]   r21 [label="a2", color=blue];
// [Asm]   r12 [label="v18 ← a1", color=green];
// [Asm]   r1 -- r9;
// [Asm]   r14 -- r19;
// [Asm]   r2 -- r6;
// [Asm]   r14 -- r20;
// [Asm]   r1 -- r12;
// [Asm]   r1 -- r26;
// [Asm]   r14 -- r18;
// [Asm]   r14 -- r17;
// [Asm]   r14 -- r16;
// [Asm]   r1 -- r8;
// [Asm]   r14 -- r26;
// [Asm]   r1 -- r21;
// [Asm]   r2 -- r4;
// [Asm]   r14 -- r25;
// [Asm]   r14 -- r21;
// [Asm]   r1 -- r23;
// [Asm]   r1 -- r4;
// [Asm]   r2 -- r12;
// [Asm]   r1 -- r7;
// [Asm]   r2 -- r8;
// [Asm]   r1 -- r18;
// [Asm]   r14 -- r23;
// [Asm]   r1 -- r19;
// [Asm]   r1 -- r22;
// [Asm]   r1 -- r25;
// [Asm]   r1 -- r10;
// [Asm]   r1 -- r27;
// [Asm]   r1 -- r2;
// [Asm]   r2 -- r5;
// [Asm]   r2 -- r10;
// [Asm]   r0 -- r1;
// [Asm]   r2 -- r13;
// [Asm]   r1 -- r15;
// [Asm]   r1 -- r13;
// [Asm]   r1 -- r11;
// [Asm]   r1 -- r17;
// [Asm]   r1 -- r20;
// [Asm]   r2 -- r7;
// [Asm]   r2 -- r11;
// [Asm]   r14 -- r24;
// [Asm]   r1 -- r16;
// [Asm]   r1 -- r6;
// [Asm]   r1 -- r5;
// [Asm]   r2 -- r9;
// [Asm]   r1 -- r14;
// [Asm]   r1 -- r3;
// [Asm]   r14 -- r15;
// [Asm]   r14 -- r22;
// [Asm]   r1 -- r28;
// [Asm]   r1 -- r24;
// [Asm]   comment = "0:v8-> 1:zero-> 2:v2-> 4:v10-> 5:v11-> 6:v12-> 7:v13-> 8:v14-> 9:v15-> 10:v16-> 11:v17-> 12:v18-> 13:v19-> 3:s11-> 14:a0-> 15:t0-> 16:t1-> 17:t2-> 18:t3-> 19:t4-> 20:a1-> 21:a2-> 22:a3-> 23:a4-> 24:a5-> 25:a6-> 26:a7-> 27:v4-> 28:v5"
// [Asm]   comment = "v8<-a0;v15<-a1;v4<-a0;v12<-a1;v19<-a1;v10<-a1;v5<-a0;v17<-a1;v13<-a1;v16<-a1;v14<-a1;v11<-a1;v2<-a0;v18<-a1;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of main39_1"];
// [Asm]   r0 [label="ft0", color=blue];
// [Asm]   r3 [label="ft3", color=blue];
// [Asm]   r9 [label="ft9", color=blue];
// [Asm]   r6 [label="ft6", color=blue];
// [Asm]   r13 [label="fa2", color=blue];
// [Asm]   r4 [label="ft4", color=blue];
// [Asm]   r1 [label="ft1", color=blue];
// [Asm]   r11 [label="fa0", color=blue];
// [Asm]   r7 [label="ft7", color=blue];
// [Asm]   r10 [label="ft10", color=blue];
// [Asm]   r14 [label="fa3", color=blue];
// [Asm]   r8 [label="ft8", color=blue];
// [Asm]   r5 [label="ft5", color=blue];
// [Asm]   r15 [label="fa4", color=blue];
// [Asm]   r2 [label="ft2", color=blue];
// [Asm]   r16 [label="fa5", color=blue];
// [Asm]   r18 [label="fa7", color=blue];
// [Asm]   r17 [label="fa6", color=blue];
// [Asm]   r12 [label="fa1", color=blue];
// [Asm]   comment = "0:ft0-> 1:ft1-> 2:ft2-> 3:ft3-> 4:ft4-> 5:ft5-> 6:ft6-> 7:ft7-> 8:ft8-> 9:ft9-> 10:ft10-> 11:fa0-> 12:fa1-> 13:fa2-> 14:fa3-> 15:fa4-> 16:fa5-> 17:fa6-> 18:fa7"
// [Asm]   comment = ""
// [Asm] }
// [Asm] 
// [Asm] subst   addi v8, s11, -40 ->   addi a0, s11, -40
// [Asm] subst   andi v2, v8, -8 ->   andi a0, a0, -8
// [Asm] subst   mv s11, v2 ->   mv s11, a0
// [Asm] subst   li v10, 1 ->   li a1, 1
// [Asm] subst   sw v10, 0(v2) ->   sw a1, 0(a0)
// [Asm] subst   li v11, 2 ->   li a1, 2
// [Asm] subst   sw v11, 4(v2) ->   sw a1, 4(a0)
// [Asm] subst   li v12, 3 ->   li a1, 3
// [Asm] subst   sw v12, 8(v2) ->   sw a1, 8(a0)
// [Asm] subst   li v13, 4 ->   li a1, 4
// [Asm] subst   sw v13, 12(v2) ->   sw a1, 12(a0)
// [Asm] subst   li v14, 5 ->   li a1, 5
// [Asm] subst   sw v14, 16(v2) ->   sw a1, 16(a0)
// [Asm] subst   li v15, 6 ->   li a1, 6
// [Asm] subst   sw v15, 20(v2) ->   sw a1, 20(a0)
// [Asm] subst   li v16, 7 ->   li a1, 7
// [Asm] subst   sw v16, 24(v2) ->   sw a1, 24(a0)
// [Asm] subst   li v17, 8 ->   li a1, 8
// [Asm] subst   sw v17, 28(v2) ->   sw a1, 28(a0)
// [Asm] subst   li v18, 9 ->   li a1, 9
// [Asm] subst   sw v18, 32(v2) ->   sw a1, 32(a0)
// [Asm] subst   li v19, 10 ->   li a1, 10
// [Asm] subst   sw v19, 36(v2) ->   sw a1, 36(a0)
// [Asm] subst   call h1_0 ->   call h1_0
// [Asm] subst   call minimbt_print_int ->   call minimbt_print_int
// [Asm] subst   mv a0, zero ->   mv a0, zero
// [Asm] subst   ret ->   ret
// [Asm] pre_assigned_registers: FreeVar(fvref=^5) -> v7, BlockParam(bref=b3, bpref=$b.0) -> v25, Insn(iref=%9) -> v22, FreeVar(fvref=^1) -> v3, FreeVar(fvref=^2) -> v4, Insn(iref=%8) -> v21, Insn(iref=%10) -> v23, FreeVar(fvref=^4) -> v6, FreeVar(fvref=^10) -> v12, FnParam(fref=f3, fpref=$f.0) -> v2, FreeVar(fvref=^7) -> v9, Insn(iref=%5) -> v18, Self(fref=f3) -> v0, Insn(iref=%0) -> v13, Insn(iref=%4) -> v17, FreeVar(fvref=^6) -> v8, Insn(iref=%3) -> v16, FreeVar(fvref=^8) -> v10, Insn(iref=%7) -> v20, Insn(iref=%2) -> v15, Insn(iref=%1) -> v14, Insn(iref=%11) -> v24, FreeVar(fvref=^3) -> v5, Insn(iref=%6) -> v19, FreeVar(fvref=^9) -> v11
// [Asm] skipping Op(ty=Bool, op=Le, args=[FnParam(fref=f3, fpref=$f.0), Int32(val=0)])
// [Asm] defs: [v25]
// [Asm] live_set: [v25]
// [Asm] move_origin: [v21]
// [Asm] defined: v25 is X
// [Asm] defs: []
// [Asm] live_set: [v25]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [zero, a0, s10]
// [Asm] move_origin: []
// [Asm] defs: [v0]
// [Asm] live_set: [zero, a0, v0]
// [Asm] move_origin: [s10]
// [Asm] defined: v0 is X
// [Asm] defs: [v2]
// [Asm] live_set: [zero, v0, v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v2 is X
// [Asm] defs: [v3]
// [Asm] live_set: [v3, zero, v0, v2]
// [Asm] move_origin: []
// [Asm] defined: v3 is X
// [Asm] defs: [v4]
// [Asm] live_set: [v3, zero, v0, v4, v2]
// [Asm] move_origin: []
// [Asm] defined: v4 is X
// [Asm] defs: [v5]
// [Asm] live_set: [v3, v5, zero, v0, v4, v2]
// [Asm] move_origin: []
// [Asm] defined: v5 is X
// [Asm] defs: [v6]
// [Asm] live_set: [v3, v5, zero, v0, v4, v6, v2]
// [Asm] move_origin: []
// [Asm] defined: v6 is X
// [Asm] defs: [v7]
// [Asm] live_set: [v3, v5, zero, v7, v0, v4, v6, v2]
// [Asm] move_origin: []
// [Asm] defined: v7 is X
// [Asm] defs: [v8]
// [Asm] live_set: [v3, v5, zero, v8, v7, v0, v4, v6, v2]
// [Asm] move_origin: []
// [Asm] defined: v8 is X
// [Asm] defs: [v9]
// [Asm] live_set: [v3, v5, zero, v8, v7, v0, v4, v6, v9, v2]
// [Asm] move_origin: []
// [Asm] defined: v9 is X
// [Asm] defs: [v10]
// [Asm] live_set: [v3, v5, v10, zero, v8, v7, v0, v4, v6, v9, v2]
// [Asm] move_origin: []
// [Asm] defined: v10 is X
// [Asm] defs: [v11]
// [Asm] live_set: [v3, v11, v5, v10, zero, v8, v7, v0, v4, v6, v9, v2]
// [Asm] move_origin: []
// [Asm] defined: v11 is X
// [Asm] defs: [v12]
// [Asm] live_set: [v3, v11, v5, v10, zero, v8, v7, v0, v4, v6, v12, v9, v2]
// [Asm] move_origin: []
// [Asm] defined: v12 is X
// [Asm] defs: [v13]
// [Asm] live_set: [v11, v5, v10, zero, v13, v8, v7, v0, v6, v12, v9, v2]
// [Asm] move_origin: []
// [Asm] defined: v13 is X
// [Asm] defs: [v14]
// [Asm] live_set: [v11, v14, v10, zero, v8, v7, v0, v6, v12, v9, v2]
// [Asm] move_origin: []
// [Asm] defined: v14 is X
// [Asm] defs: [v15]
// [Asm] live_set: [v11, v10, zero, v8, v7, v0, v12, v15, v9, v2]
// [Asm] move_origin: []
// [Asm] defined: v15 is X
// [Asm] defs: [v16]
// [Asm] live_set: [v11, v16, v10, zero, v8, v0, v12, v9, v2]
// [Asm] move_origin: []
// [Asm] defined: v16 is X
// [Asm] defs: [v17]
// [Asm] live_set: [v11, v10, zero, v0, v17, v12, v9, v2]
// [Asm] move_origin: []
// [Asm] defined: v17 is X
// [Asm] defs: [v18]
// [Asm] live_set: [v11, v18, v10, zero, v0, v12, v2]
// [Asm] move_origin: []
// [Asm] defined: v18 is X
// [Asm] defs: [v19]
// [Asm] live_set: [v0, v19, v11, v12, zero, v2]
// [Asm] move_origin: []
// [Asm] defined: v19 is X
// [Asm] defs: [v20]
// [Asm] live_set: [v0, v12, zero, v20, v2]
// [Asm] move_origin: []
// [Asm] defined: v20 is X
// [Asm] defs: [v21]
// [Asm] live_set: [v0, v21, zero, v2]
// [Asm] move_origin: []
// [Asm] defined: v21 is X
// [Asm] defs: []
// [Asm] live_set: [v0, v21, v2]
// [Asm] move_origin: []
// [Asm] defs: [v23]
// [Asm] live_set: [v0, v23]
// [Asm] move_origin: []
// [Asm] defined: v23 is X
// [Asm] defs: [s10]
// [Asm] live_set: [v0, v23]
// [Asm] move_origin: [v0]
// [Asm] defined: s10 is X
// [Asm] defs: [v26]
// [Asm] live_set: [v26, v23]
// [Asm] move_origin: []
// [Asm] defined: v26 is X
// [Asm] defs: []
// [Asm] live_set: [v26, v23]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [a0, v26]
// [Asm] move_origin: [v23]
// [Asm] defined: a0 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v24]
// [Asm] live_set: [v24]
// [Asm] move_origin: [a0]
// [Asm] defined: v24 is X
// [Asm] defs: []
// [Asm] live_set: [v24]
// [Asm] move_origin: []
// [Asm] defs: [v25]
// [Asm] live_set: [v25]
// [Asm] move_origin: [v24]
// [Asm] defined: v25 is X
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [v25]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of g24_3"];
// [Asm]   r0 [label="v25 ← a0", color=green];
// [Asm]   r38 [label="a7", color=blue];
// [Asm]   r33 [label="a2", color=blue];
// [Asm]   r9 [label="v7 ← a6", color=green];
// [Asm]   r26 [label="v26 ← a1", color=green];
// [Asm]   r6 [label="v4 ← a3", color=green];
// [Asm]   r13 [label="v11 ← t2", color=green];
// [Asm]   r4 [label="v2 ← a0", color=green];
// [Asm]   r29 [label="t2", color=blue];
// [Asm]   r35 [label="a4", color=blue];
// [Asm]   r7 [label="v5 ← a4", color=green];
// [Asm]   r10 [label="v8 ← a7", color=green];
// [Asm]   r8 [label="v6 ← a5", color=green];
// [Asm]   r5 [label="v3 ← a2", color=green];
// [Asm]   r36 [label="a5", color=blue];
// [Asm]   r24 [label="v23 ← a0", color=green];
// [Asm]   r15 [label="v13 ← a2", color=green];
// [Asm]   r32 [label="a1", color=blue];
// [Asm]   r31 [label="t4", color=blue];
// [Asm]   r39 [label="v24 ← a0", color=green];
// [Asm]   r17 [label="v15 ← a2", color=green];
// [Asm]   r12 [label="v10 ← t1", color=green];
// [Asm]   r37 [label="a6", color=blue];
// [Asm]   r20 [label="v18 ← a2", color=green];
// [Asm]   r23 [label="v21 ← a2", color=green];
// [Asm]   r3 [label="a0", color=blue];
// [Asm]   r27 [label="t0", color=blue];
// [Asm]   r1 [label="v0 ← a1", color=green];
// [Asm]   r28 [label="t1", color=blue];
// [Asm]   r11 [label="v9 ← t0", color=green];
// [Asm]   r34 [label="a3", color=blue];
// [Asm]   r22 [label="v20 ← a2", color=green];
// [Asm]   r14 [label="v12 ← t3", color=green];
// [Asm]   r30 [label="t3", color=blue];
// [Asm]   r25 [label="s10", color=blue];
// [Asm]   r2 [label="zero", color=blue];
// [Asm]   r16 [label="v14 ← a2", color=green];
// [Asm]   r18 [label="v16 ← a2", color=green];
// [Asm]   r19 [label="v17 ← a2", color=green];
// [Asm]   r21 [label="v19 ← a2", color=green];
// [Asm]   r2 -- r20;
// [Asm]   r14 -- r20;
// [Asm]   r1 -- r12;
// [Asm]   r2 -- r15;
// [Asm]   r14 -- r16;
// [Asm]   r5 -- r8;
// [Asm]   r5 -- r10;
// [Asm]   r11 -- r14;
// [Asm]   r1 -- r4;
// [Asm]   r1 -- r7;
// [Asm]   r1 -- r18;
// [Asm]   r1 -- r19;
// [Asm]   r1 -- r10;
// [Asm]   r10 -- r13;
// [Asm]   r2 -- r10;
// [Asm]   r3 -- r32;
// [Asm]   r1 -- r17;
// [Asm]   r1 -- r20;
// [Asm]   r2 -- r16;
// [Asm]   r3 -- r37;
// [Asm]   r9 -- r17;
// [Asm]   r2 -- r7;
// [Asm]   r11 -- r18;
// [Asm]   r1 -- r16;
// [Asm]   r4 -- r22;
// [Asm]   r3 -- r26;
// [Asm]   r3 -- r31;
// [Asm]   r3 -- r34;
// [Asm]   r12 -- r19;
// [Asm]   r11 -- r19;
// [Asm]   r8 -- r12;
// [Asm]   r9 -- r14;
// [Asm]   r4 -- r21;
// [Asm]   r6 -- r13;
// [Asm]   r1 -- r9;
// [Asm]   r14 -- r19;
// [Asm]   r2 -- r6;
// [Asm]   r5 -- r6;
// [Asm]   r3 -- r30;
// [Asm]   r8 -- r16;
// [Asm]   r11 -- r13;
// [Asm]   r10 -- r18;
// [Asm]   r10 -- r12;
// [Asm]   r1 -- r21;
// [Asm]   r6 -- r10;
// [Asm]   r7 -- r10;
// [Asm]   r9 -- r12;
// [Asm]   r2 -- r12;
// [Asm]   r2 -- r8;
// [Asm]   r1 -- r2;
// [Asm]   r4 -- r12;
// [Asm]   r2 -- r5;
// [Asm]   r3 -- r33;
// [Asm]   r3 -- r27;
// [Asm]   r2 -- r13;
// [Asm]   r13 -- r18;
// [Asm]   r1 -- r11;
// [Asm]   r5 -- r7;
// [Asm]   r4 -- r8;
// [Asm]   r9 -- r10;
// [Asm]   r11 -- r15;
// [Asm]   r5 -- r14;
// [Asm]   r8 -- r11;
// [Asm]   r1 -- r6;
// [Asm]   r2 -- r22;
// [Asm]   r3 -- r35;
// [Asm]   r1 -- r5;
// [Asm]   r13 -- r21;
// [Asm]   r8 -- r14;
// [Asm]   r7 -- r8;
// [Asm]   r24 -- r25;
// [Asm]   r4 -- r14;
// [Asm]   r14 -- r15;
// [Asm]   r4 -- r9;
// [Asm]   r14 -- r22;
// [Asm]   r2 -- r23;
// [Asm]   r10 -- r17;
// [Asm]   r6 -- r7;
// [Asm]   r6 -- r9;
// [Asm]   r4 -- r13;
// [Asm]   r4 -- r16;
// [Asm]   r6 -- r11;
// [Asm]   r13 -- r15;
// [Asm]   r4 -- r5;
// [Asm]   r14 -- r18;
// [Asm]   r14 -- r17;
// [Asm]   r11 -- r17;
// [Asm]   r1 -- r8;
// [Asm]   r4 -- r23;
// [Asm]   r2 -- r4;
// [Asm]   r3 -- r38;
// [Asm]   r9 -- r15;
// [Asm]   r2 -- r18;
// [Asm]   r6 -- r14;
// [Asm]   r1 -- r23;
// [Asm]   r12 -- r15;
// [Asm]   r8 -- r9;
// [Asm]   r11 -- r16;
// [Asm]   r5 -- r13;
// [Asm]   r1 -- r22;
// [Asm]   r7 -- r13;
// [Asm]   r13 -- r16;
// [Asm]   r11 -- r12;
// [Asm]   r1 -- r15;
// [Asm]   r1 -- r13;
// [Asm]   r4 -- r20;
// [Asm]   r3 -- r28;
// [Asm]   r4 -- r18;
// [Asm]   r2 -- r11;
// [Asm]   r7 -- r9;
// [Asm]   r5 -- r11;
// [Asm]   r6 -- r12;
// [Asm]   r13 -- r20;
// [Asm]   r24 -- r26;
// [Asm]   r13 -- r19;
// [Asm]   r10 -- r16;
// [Asm]   r6 -- r8;
// [Asm]   r12 -- r20;
// [Asm]   r9 -- r11;
// [Asm]   r4 -- r15;
// [Asm]   r4 -- r11;
// [Asm]   r12 -- r13;
// [Asm]   r8 -- r13;
// [Asm]   r2 -- r14;
// [Asm]   r5 -- r9;
// [Asm]   r8 -- r15;
// [Asm]   r7 -- r15;
// [Asm]   r14 -- r21;
// [Asm]   r13 -- r14;
// [Asm]   r10 -- r15;
// [Asm]   r10 -- r11;
// [Asm]   r3 -- r29;
// [Asm]   r7 -- r11;
// [Asm]   r13 -- r17;
// [Asm]   r2 -- r21;
// [Asm]   r8 -- r10;
// [Asm]   r2 -- r17;
// [Asm]   r4 -- r7;
// [Asm]   r9 -- r16;
// [Asm]   r3 -- r36;
// [Asm]   r12 -- r14;
// [Asm]   r12 -- r16;
// [Asm]   r4 -- r17;
// [Asm]   r12 -- r17;
// [Asm]   r2 -- r9;
// [Asm]   r4 -- r10;
// [Asm]   r4 -- r6;
// [Asm]   r1 -- r14;
// [Asm]   r1 -- r3;
// [Asm]   r2 -- r19;
// [Asm]   r7 -- r12;
// [Asm]   r9 -- r13;
// [Asm]   r7 -- r14;
// [Asm]   r12 -- r18;
// [Asm]   r4 -- r19;
// [Asm]   r1 -- r24;
// [Asm]   r10 -- r14;
// [Asm]   r5 -- r12;
// [Asm]   comment = "0:v25-> 1:v0-> 2:zero-> 4:v2-> 5:v3-> 6:v4-> 7:v5-> 8:v6-> 9:v7-> 10:v8-> 11:v9-> 12:v10-> 13:v11-> 14:v12-> 15:v13-> 16:v14-> 17:v15-> 18:v16-> 19:v17-> 20:v18-> 21:v19-> 22:v20-> 23:v21-> 3:a0-> 24:v23-> 26:v26-> 25:s10-> 27:t0-> 28:t1-> 29:t2-> 30:t3-> 31:t4-> 32:a1-> 33:a2-> 34:a3-> 35:a4-> 36:a5-> 37:a6-> 38:a7-> 39:v24"
// [Asm]   comment = "v25<-a0;v7<-a6;v26<-a1;v4<-a3;v11<-t2;v2<-a0;v5<-a4;v8<-a7;v6<-a5;v3<-a2;v23<-a0;v13<-a2;v24<-a0;v15<-a2;v10<-t1;v18<-a2;v21<-a2;v0<-a1;v9<-t0;v20<-a2;v12<-t3;v14<-a2;v16<-a2;v17<-a2;v19<-a2;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of g24_3"];
// [Asm]   r0 [label="ft0", color=blue];
// [Asm]   r3 [label="ft3", color=blue];
// [Asm]   r9 [label="ft9", color=blue];
// [Asm]   r6 [label="ft6", color=blue];
// [Asm]   r13 [label="fa2", color=blue];
// [Asm]   r4 [label="ft4", color=blue];
// [Asm]   r1 [label="ft1", color=blue];
// [Asm]   r11 [label="fa0", color=blue];
// [Asm]   r7 [label="ft7", color=blue];
// [Asm]   r10 [label="ft10", color=blue];
// [Asm]   r14 [label="fa3", color=blue];
// [Asm]   r8 [label="ft8", color=blue];
// [Asm]   r5 [label="ft5", color=blue];
// [Asm]   r15 [label="fa4", color=blue];
// [Asm]   r2 [label="ft2", color=blue];
// [Asm]   r16 [label="fa5", color=blue];
// [Asm]   r18 [label="fa7", color=blue];
// [Asm]   r17 [label="fa6", color=blue];
// [Asm]   r12 [label="fa1", color=blue];
// [Asm]   comment = "0:ft0-> 1:ft1-> 2:ft2-> 3:ft3-> 4:ft4-> 5:ft5-> 6:ft6-> 7:ft7-> 8:ft8-> 9:ft9-> 10:ft10-> 11:fa0-> 12:fa1-> 13:fa2-> 14:fa3-> 15:fa4-> 16:fa5-> 17:fa6-> 18:fa7"
// [Asm]   comment = ""
// [Asm] }
// [Asm] 
// [Asm] subst   mv v25, v21 ->   mv a0, a2
// [Asm] subst   j .g24_3_3 ->   j .g24_3_3
// [Asm] subst   mv v0, s10 ->   mv a1, s10
// [Asm] subst   lw v3, 8(v0) ->   lw a2, 8(a1)
// [Asm] subst   lw v4, 16(v0) ->   lw a3, 16(a1)
// [Asm] subst   lw v5, 24(v0) ->   lw a4, 24(a1)
// [Asm] subst   lw v6, 32(v0) ->   lw a5, 32(a1)
// [Asm] subst   lw v7, 40(v0) ->   lw a6, 40(a1)
// [Asm] subst   lw v8, 48(v0) ->   lw a7, 48(a1)
// [Asm] subst   lw v9, 56(v0) ->   lw t0, 56(a1)
// [Asm] subst   lw v10, 64(v0) ->   lw t1, 64(a1)
// [Asm] subst   lw v11, 72(v0) ->   lw t2, 72(a1)
// [Asm] subst   lw v12, 80(v0) ->   lw t3, 80(a1)
// [Asm] subst   add v13, v3, v4 ->   add a2, a2, a3
// [Asm] subst   add v14, v13, v5 ->   add a2, a2, a4
// [Asm] subst   add v15, v14, v6 ->   add a2, a2, a5
// [Asm] subst   add v16, v15, v7 ->   add a2, a2, a6
// [Asm] subst   add v17, v16, v8 ->   add a2, a2, a7
// [Asm] subst   add v18, v17, v9 ->   add a2, a2, t0
// [Asm] subst   add v19, v18, v10 ->   add a2, a2, t1
// [Asm] subst   add v20, v19, v11 ->   add a2, a2, t2
// [Asm] subst   add v21, v20, v12 ->   add a2, a2, t3
// [Asm] subst   blt zero, v2, .g24_3_2 ->   blt zero, a0, .g24_3_2
// [Asm] subst   neg v23, v2 ->   neg a0, a0
// [Asm] subst   mv s10, v0 ->   mv s10, a1
// [Asm] subst   ld v26, 0(v0) ->   ld a1, 0(a1)
// [Asm] subst   jalr v26 ->   jalr a1
// [Asm] subst   ret ->   ret
// [Asm] before colored: # leaf false
// [Asm] T$start_6:
// [Asm] # block info: defs: [t1, ft0, ft1, a1, fa1, fa2, ft6, a4, fa6, a6, ft5, ft10, ft7, ft4, ft9, a5, a0, fa4, ft2, a2, a3, ft8, t3, a7, fa7, t0, fa5, fa3, ft3, fa0, t4, t2, v2], uses: [a0, v2], upward_exposed: [], params_defs: []
// [Asm] # live_in: [], live_out: []
// [Asm] # block parameters: []
// [Asm] .T$start_6_0:
// [Asm]   # save_ctx1  # live: []
// [Asm]   # save_ctx2  # live: []
// [Asm]   call main39_1  # live: [a0]
// [Asm]   mv v2, a0  # live: [v2]
// [Asm]   # restore_ctx2  # live: [v2]
// [Asm] # control
// [Asm]   mv a0, v2  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # leaf false
// [Asm] main39_1:
// [Asm] # block info: defs: [t1, v14, v16, v13, ft0, ft1, a1, s11, v12, fa1, fa2, ft6, a4, fa6, v8, a6, v19, ft10, ft5, v4, ft7, v11, ft4, v5, v10, ft9, a5, a0, fa4, ft2, a2, v17, a3, ft8, t3, a7, fa7, t0, fa5, v18, fa3, ft3, fa0, t4, t2, v15, v2], uses: [v11, v14, v16, v10, v13, a0, v17, s11, v12, v18, zero, v8, v19, v4, v15, v2], upward_exposed: [s11, zero], params_defs: []
// [Asm] # live_in: [s11, zero], live_out: []
// [Asm] # block parameters: []
// [Asm] .main39_1_0:
// [Asm]   # save_ctx1  # live: [s11, zero]
// [Asm]   addi v8, s11, -40  # live: [zero, v8]
// [Asm]   andi v2, v8, -8  # live: [zero, v2]
// [Asm]   mv s11, v2  # live: [zero, v2]
// [Asm]   li v10, 1  # live: [v10, zero, v2]
// [Asm]   sw v10, 0(v2)  # live: [zero, v2]
// [Asm]   li v11, 2  # live: [v11, zero, v2]
// [Asm]   sw v11, 4(v2)  # live: [zero, v2]
// [Asm]   li v12, 3  # live: [v12, zero, v2]
// [Asm]   sw v12, 8(v2)  # live: [zero, v2]
// [Asm]   li v13, 4  # live: [zero, v13, v2]
// [Asm]   sw v13, 12(v2)  # live: [zero, v2]
// [Asm]   li v14, 5  # live: [v14, zero, v2]
// [Asm]   sw v14, 16(v2)  # live: [zero, v2]
// [Asm]   li v15, 6  # live: [v15, zero, v2]
// [Asm]   sw v15, 20(v2)  # live: [zero, v2]
// [Asm]   li v16, 7  # live: [v16, zero, v2]
// [Asm]   sw v16, 24(v2)  # live: [zero, v2]
// [Asm]   li v17, 8  # live: [v17, zero, v2]
// [Asm]   sw v17, 28(v2)  # live: [zero, v2]
// [Asm]   li v18, 9  # live: [v18, zero, v2]
// [Asm]   sw v18, 32(v2)  # live: [zero, v2]
// [Asm]   li v19, 10  # live: [v19, zero, v2]
// [Asm]   sw v19, 36(v2)  # live: [zero, v2]
// [Asm]   # save_ctx2  # live: [zero, v2]
// [Asm]   mv a0, v2  # live: [zero, a0]
// [Asm]   call h1_0  # live: [zero, a0]
// [Asm]   mv v4, a0  # live: [v4, zero]
// [Asm]   # restore_ctx2  # live: [v4, zero]
// [Asm]   # save_ctx2  # live: [v4, zero]
// [Asm]   mv a0, v4  # live: [zero, a0]
// [Asm]   call minimbt_print_int  # live: [zero, a0]
// [Asm]   mv v5, a0  # live: [zero]
// [Asm]   # restore_ctx2  # live: [zero]
// [Asm] # control
// [Asm]   mv a0, zero  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # leaf false
// [Asm] h1_0:
// [Asm] # block info: defs: [v3, t1, v16, v13, v7, ft0, ft1, a1, s11, v12, fa1, fa2, ft6, a4, fa6, v8, a6, v19, ft5, ft10, v4, v6, ft7, v11, ft4, v5, v10, v21, ft9, a5, a0, fa4, ft2, a2, v17, a3, v9, s10, ft8, t3, a7, fa7, t0, fa5, fa3, ft3, fa0, t4, t2, v15, v2], uses: [v3, v11, v5, v16, v10, v21, v13, a0, v7, v17, s11, v12, v9, v8, v19, v4, v6, v15, v2], upward_exposed: [s11, a0], params_defs: []
// [Asm] # live_in: [s11, a0], live_out: []
// [Asm] # block parameters: []
// [Asm] .h1_0_0:
// [Asm]   # save_ctx1  # live: [a0, s11]
// [Asm]   mv v2, a0  # live: [s11, v2]
// [Asm]   lw v4, 0(v2)  # live: [v4, s11, v2]
// [Asm]   lw v5, 4(v2)  # live: [v5, v4, s11, v2]
// [Asm]   lw v6, 8(v2)  # live: [v5, v4, v6, s11, v2]
// [Asm]   lw v7, 12(v2)  # live: [v5, v7, v4, v6, s11, v2]
// [Asm]   lw v8, 16(v2)  # live: [v5, v8, v7, v4, v6, s11, v2]
// [Asm]   lw v9, 20(v2)  # live: [v5, v8, v7, v4, v6, s11, v9, v2]
// [Asm]   lw v10, 24(v2)  # live: [v5, v10, v8, v7, v4, v6, s11, v9, v2]
// [Asm]   lw v11, 28(v2)  # live: [v11, v5, v10, v8, v7, v4, v6, s11, v9, v2]
// [Asm]   lw v12, 32(v2)  # live: [v11, v5, v10, v8, v7, v4, v6, v12, s11, v9, v2]
// [Asm]   lw v13, 36(v2)  # live: [v11, v5, v10, v13, v8, v7, v4, v6, v12, s11, v9]
// [Asm]   addi v19, s11, -88  # live: [v11, v5, v10, v13, v8, v7, v19, v4, v6, v12, v9]
// [Asm]   andi v3, v19, -8  # live: [v11, v5, v10, v13, v8, v7, v4, v6, v12, v9, v3]
// [Asm]   mv s11, v3  # live: [v11, v5, v10, v13, v8, v7, v4, v6, v12, v9, v3]
// [Asm]   la v21, g24_3  # live: [v11, v5, v10, v21, v13, v8, v7, v4, v6, v12, v9, v3]
// [Asm]   sd v21, 0(v3)  # live: [v11, v5, v10, v13, v8, v7, v4, v6, v12, v9, v3]
// [Asm]   sd v4, 8(v3)  # live: [v11, v5, v10, v13, v8, v7, v6, v12, v9, v3]
// [Asm]   sd v5, 16(v3)  # live: [v11, v10, v13, v8, v7, v6, v12, v9, v3]
// [Asm]   sd v6, 24(v3)  # live: [v11, v10, v13, v8, v7, v12, v9, v3]
// [Asm]   sd v7, 32(v3)  # live: [v11, v10, v13, v8, v12, v9, v3]
// [Asm]   sd v8, 40(v3)  # live: [v11, v10, v13, v12, v9, v3]
// [Asm]   sd v9, 48(v3)  # live: [v11, v12, v10, v13, v3]
// [Asm]   sd v10, 56(v3)  # live: [v11, v12, v13, v3]
// [Asm]   sd v11, 64(v3)  # live: [v12, v13, v3]
// [Asm]   sd v12, 72(v3)  # live: [v13, v3]
// [Asm]   sd v13, 80(v3)  # live: [v3]
// [Asm]   mv s10, v3  # live: [v3]
// [Asm]   ld v16, 0(v3)  # live: [v16]
// [Asm]   # save_ctx2  # live: [v16]
// [Asm]   li v17, 1  # live: [v16, v17]
// [Asm]   mv a0, v17  # live: [v16, a0]
// [Asm]   jalr v16  # live: [a0]
// [Asm]   mv v15, a0  # live: [v15]
// [Asm]   # restore_ctx2  # live: [v15]
// [Asm] # control
// [Asm]   mv a0, v15  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # leaf false
// [Asm] g24_3:
// [Asm] # block info: defs: [v3, v11, v5, v14, v16, v10, v21, v13, v7, v0, v17, v12, v9, v18, v20, v8, v19, v4, v6, v15, v2], uses: [v2, v11, v5, v14, v16, v10, v13, a0, v7, v0, v17, v12, s10, v9, v18, zero, v20, v8, v19, v4, v6, v15, v3], upward_exposed: [s10, a0, zero], params_defs: []
// [Asm] # live_in: [s10, a0, zero], live_out: [v0, v21, v2]
// [Asm] # block parameters: []
// [Asm] .g24_3_0:
// [Asm]   # save_ctx1  # live: [zero, a0, s10]
// [Asm]   mv v0, s10  # live: [zero, a0, v0]
// [Asm]   mv v2, a0  # live: [zero, v0, v2]
// [Asm]   lw v3, 8(v0)  # live: [v3, zero, v0, v2]
// [Asm]   lw v4, 16(v0)  # live: [v3, zero, v0, v4, v2]
// [Asm]   lw v5, 24(v0)  # live: [v3, v5, zero, v0, v4, v2]
// [Asm]   lw v6, 32(v0)  # live: [v3, v5, zero, v0, v4, v6, v2]
// [Asm]   lw v7, 40(v0)  # live: [v3, v5, zero, v7, v0, v4, v6, v2]
// [Asm]   lw v8, 48(v0)  # live: [v3, v5, zero, v8, v7, v0, v4, v6, v2]
// [Asm]   lw v9, 56(v0)  # live: [v3, v5, zero, v8, v7, v0, v4, v6, v9, v2]
// [Asm]   lw v10, 64(v0)  # live: [v3, v5, v10, zero, v8, v7, v0, v4, v6, v9, v2]
// [Asm]   lw v11, 72(v0)  # live: [v3, v11, v5, v10, zero, v8, v7, v0, v4, v6, v9, v2]
// [Asm]   lw v12, 80(v0)  # live: [v3, v11, v5, v10, zero, v8, v7, v0, v4, v6, v12, v9, v2]
// [Asm]   add v13, v3, v4  # live: [v11, v5, v10, zero, v13, v8, v7, v0, v6, v12, v9, v2]
// [Asm]   add v14, v13, v5  # live: [v11, v14, v10, zero, v8, v7, v0, v6, v12, v9, v2]
// [Asm]   add v15, v14, v6  # live: [v11, v10, zero, v8, v7, v0, v12, v15, v9, v2]
// [Asm]   add v16, v15, v7  # live: [v11, v16, v10, zero, v8, v0, v12, v9, v2]
// [Asm]   add v17, v16, v8  # live: [v11, v10, zero, v0, v17, v12, v9, v2]
// [Asm]   add v18, v17, v9  # live: [v11, v18, v10, zero, v0, v12, v2]
// [Asm]   add v19, v18, v10  # live: [v0, v19, v11, v12, zero, v2]
// [Asm]   add v20, v19, v11  # live: [v0, v12, zero, v20, v2]
// [Asm]   add v21, v20, v12  # live: [v0, v21, zero, v2]
// [Asm] # control
// [Asm]   blt zero, v2, .g24_3_2  # live: [v0, v21, v2]
// [Asm] 
// [Asm] # block info: defs: [v25, t1, v26, ft0, ft1, a1, fa1, fa2, ft6, a4, fa6, a6, ft5, ft10, ft7, ft4, ft9, a5, a0, fa4, ft2, a2, a3, v24, s10, ft8, t3, a7, fa7, t0, fa5, fa3, v23, ft3, fa0, t4, t2], uses: [v2, v0, v24, a0, v26, v23], upward_exposed: [v0, v2], params_defs: []
// [Asm] # live_in: [v0, v2], live_out: [v25]
// [Asm] # block parameters: []
// [Asm] .g24_3_1:
// [Asm]   neg v23, v2  # live: [v0, v23]
// [Asm]   mv s10, v0  # live: [v0, v23]
// [Asm]   ld v26, 0(v0)  # live: [v26, v23]
// [Asm]   # save_ctx2  # live: [v26, v23]
// [Asm]   mv a0, v23  # live: [a0, v26]
// [Asm]   jalr v26  # live: [a0]
// [Asm]   mv v24, a0  # live: [v24]
// [Asm]   # restore_ctx2  # live: [v24]
// [Asm] # control
// [Asm]   mv v25, v24  # live: [v25]
// [Asm] 
// [Asm] # block info: defs: [a0], uses: [v25, a0], upward_exposed: [v25], params_defs: [v25]
// [Asm] # live_in: [v25], live_out: []
// [Asm] # block parameters: [v25]
// [Asm] .g24_3_3:
// [Asm] # control
// [Asm]   mv a0, v25  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # block info: defs: [v25], uses: [v21], upward_exposed: [v21], params_defs: []
// [Asm] # live_in: [v21], live_out: [v25]
// [Asm] # block parameters: []
// [Asm] .g24_3_2:
// [Asm] # control
// [Asm]   mv v25, v21  # live: [v25]
// [Asm]   j .g24_3_3  # live: [v25]
// [Asm] 
// [Asm] # leaf false
// [Asm] minimbt_main:
// [Asm] # block info: defs: [t1, ft0, ft1, a1, s11, ra, fa1, fa2, ft6, a4, fa6, a6, ft5, ft10, s0, ft7, ft4, ft9, a5, a0, fa4, ft2, a2, sp, a3, ft8, a7, t3, fa7, t0, fa5, fa3, ft3, fa0, t4, t2], uses: [sp, s0, ra, s11, a0], upward_exposed: [s0, ra, s11], params_defs: []
// [Asm] # live_in: [s0, ra, s11], live_out: []
// [Asm] # block parameters: []
// [Asm] .minimbt_main_b0:
// [Asm]   addi sp, sp, -32  # live: [s0, ra, s11]
// [Asm]   sd ra, 0(sp)  # live: [s0, s11]
// [Asm]   sd s0, 8(sp)  # live: [s11]
// [Asm]   sd s11, 16(sp)  # live: []
// [Asm]   la s11, large_heap_end  # live: []
// [Asm]   mv s0, sp  # live: [s0]
// [Asm]   la sp, large_stack_end  # live: [s0]
// [Asm]   call T$start_6  # live: [s0, a0]
// [Asm]   mv sp, s0  # live: [a0]
// [Asm]   ld ra, 0(sp)  # live: [a0]
// [Asm]   ld s0, 8(sp)  # live: [a0]
// [Asm]   ld s11, 16(sp)  # live: [a0]
// [Asm]   addi sp, sp, 32  # live: [a0]
// [Asm] # control
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] start:
// [Asm]   .zero 4
// [Asm] 
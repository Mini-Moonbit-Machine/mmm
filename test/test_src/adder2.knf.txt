let rec make_adder1: Fun([Int], Int) = (x2.3: Int) {
  let rec adder4: Int = (y5.6: Int) {
    Add(x2.3, y5.6)
  }
  Var(adder4)
}
let rec main7: Var({val: Some(Unit)}) = () {
  let _8: Int = Int(2)
  let add2.9: Fun([Int], Int) = Apply(make_adder1, [_8, ])
  let _10: Int = Int(3)
  let add3.11: Fun([Int], Int) = Apply(make_adder1, [_10, ])
  let _12: Int = Int(10)
  let _13: Int = Apply(add2.9, [_12, ])
  let _14: Int = Int(20)
  let _15: Int = Apply(add3.11, [_14, ])
  let _16: Int = Add(_13, _15)
  ExtApply(minimbt_print_int, [_16, ])
}
Apply(main7, [])

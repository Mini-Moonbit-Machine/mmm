let rec loop3.1: Unit = (i.3: Int, j.5: Int, k.7: Int, a.9: Array(Array(Double)), b.11: Array(Array(Double)), c.13: Array(Array(Double))) {
  let _14: Int = Int(0)
  if (_14 <= k.7) then {
    let _15: Array(Double) = Get c.13[i.3]
    let _16: Array(Double) = Get c.13[i.3]
    let _17: Double = Get _16[j.5]
    let _18: Array(Double) = Get a.9[i.3]
    let _19: Double = Get _18[k.7]
    let _20: Array(Double) = Get b.11[k.7]
    let _21: Double = Get _20[j.5]
    let _22: Double = FMul(_19, _21)
    let _23: Double = FAdd(_17, _22)
    let _25: Unit = Put _15[j.5] = _23
    let _26: Int = Int(1)
    let _27: Int = Sub(k.7, _26)
    Apply(loop3.1, [i.3, j.5, _27, a.9, b.11, c.13, ])
  } else {
    Unit
  }
}
let rec loop2.28: Unit = (i.30: Int, m.32: Int, j.34: Int, a.36: Array(Array(Double)), b.38: Array(Array(Double)), c.40: Array(Array(Double))) {
  let _41: Int = Int(0)
  if (_41 <= j.34) then {
    let _42: Int = Int(1)
    let _43: Int = Sub(m.32, _42)
    let _45: Unit = Apply(loop3.1, [i.30, j.34, _43, a.36, b.38, c.40, ])
    let _46: Int = Int(1)
    let _47: Int = Sub(j.34, _46)
    Apply(loop2.28, [i.30, m.32, _47, a.36, b.38, c.40, ])
  } else {
    Unit
  }
}
let rec loop1.48: Unit = (i.50: Int, m.52: Int, n.54: Int, a.56: Array(Array(Double)), b.58: Array(Array(Double)), c.60: Array(Array(Double))) {
  let _61: Int = Int(0)
  if (_61 <= i.50) then {
    let _62: Int = Int(1)
    let _63: Int = Sub(n.54, _62)
    let _65: Unit = Apply(loop2.28, [i.50, m.52, _63, a.56, b.58, c.60, ])
    let _66: Int = Int(1)
    let _67: Int = Sub(i.50, _66)
    Apply(loop1.48, [_67, m.52, n.54, a.56, b.58, c.60, ])
  } else {
    Unit
  }
}
let rec mul.68: Unit = (l.70: Int, m.72: Int, n.74: Int, a.76: Array(Array(Double)), b.78: Array(Array(Double)), c.80: Array(Array(Double))) {
  let _81: Int = Int(1)
  let _82: Int = Sub(l.70, _81)
  let _84: Unit = Apply(loop1.48, [_82, m.72, n.74, a.76, b.78, c.80, ])
  Unit
}
let rec main.85: Unit = () {
  let _86: Int = Int(0)
  let _87: Double = Double(0)
  let dummy.88: Array(Double) = ExtApply(minimbt_create_float_array, [_86, _87, ])
  let rec init_arr.89: Unit = (i.91: Int, n.93: Int, mat.95: Array(Array(Double))) {
    let _96: Int = Int(0)
    if (_96 <= i.91) then {
      let _97: Double = Double(0)
      let _98: Array(Double) = ExtApply(minimbt_create_float_array, [n.93, _97, ])
      let _100: Unit = Put mat.95[i.91] = _98
      let _101: Int = Int(1)
      let _102: Int = Sub(i.91, _101)
      Apply(init_arr.89, [_102, n.93, mat.95, ])
    } else {
      Unit
    }
  }
  let rec make_arr.103: Array(Array(Double)) = (m.105: Int, n.107: Int, dummy.109: Array(Double)) {
    let mat.110: Array(Array(Double)) = ExtApply(minimbt_create_ptr_array, [m.105, dummy.109, ])
    let _111: Int = Int(1)
    let _112: Int = Sub(m.105, _111)
    let _114: Unit = Apply(init_arr.89, [_112, n.107, mat.110, ])
    Var(mat.110)
  }
  let _115: Int = Int(2)
  let _116: Int = Int(3)
  let a.117: Array(Array(Double)) = Apply(make_arr.103, [_115, _116, dummy.88, ])
  let _118: Int = Int(3)
  let _119: Int = Int(2)
  let b.120: Array(Array(Double)) = Apply(make_arr.103, [_118, _119, dummy.88, ])
  let _121: Int = Int(2)
  let _122: Int = Int(2)
  let c.123: Array(Array(Double)) = Apply(make_arr.103, [_121, _122, dummy.88, ])
  let _124: Int = Int(0)
  let _125: Array(Double) = Get a.117[_124]
  let _126: Int = Int(0)
  let _127: Double = Double(1)
  let _129: Unit = Put _125[_126] = _127
  let _130: Int = Int(0)
  let _131: Array(Double) = Get a.117[_130]
  let _132: Int = Int(1)
  let _133: Double = Double(2)
  let _135: Unit = Put _131[_132] = _133
  let _136: Int = Int(0)
  let _137: Array(Double) = Get a.117[_136]
  let _138: Int = Int(2)
  let _139: Double = Double(3)
  let _141: Unit = Put _137[_138] = _139
  let _142: Int = Int(1)
  let _143: Array(Double) = Get a.117[_142]
  let _144: Int = Int(0)
  let _145: Double = Double(4)
  let _147: Unit = Put _143[_144] = _145
  let _148: Int = Int(1)
  let _149: Array(Double) = Get a.117[_148]
  let _150: Int = Int(1)
  let _151: Double = Double(5)
  let _153: Unit = Put _149[_150] = _151
  let _154: Int = Int(1)
  let _155: Array(Double) = Get a.117[_154]
  let _156: Int = Int(2)
  let _157: Double = Double(6)
  let _159: Unit = Put _155[_156] = _157
  let _160: Int = Int(0)
  let _161: Array(Double) = Get b.120[_160]
  let _162: Int = Int(0)
  let _163: Double = Double(7)
  let _165: Unit = Put _161[_162] = _163
  let _166: Int = Int(0)
  let _167: Array(Double) = Get b.120[_166]
  let _168: Int = Int(1)
  let _169: Double = Double(8)
  let _171: Unit = Put _167[_168] = _169
  let _172: Int = Int(1)
  let _173: Array(Double) = Get b.120[_172]
  let _174: Int = Int(0)
  let _175: Double = Double(9)
  let _177: Unit = Put _173[_174] = _175
  let _178: Int = Int(1)
  let _179: Array(Double) = Get b.120[_178]
  let _180: Int = Int(1)
  let _181: Double = Double(10)
  let _183: Unit = Put _179[_180] = _181
  let _184: Int = Int(2)
  let _185: Array(Double) = Get b.120[_184]
  let _186: Int = Int(0)
  let _187: Double = Double(11)
  let _189: Unit = Put _185[_186] = _187
  let _190: Int = Int(2)
  let _191: Array(Double) = Get b.120[_190]
  let _192: Int = Int(1)
  let _193: Double = Double(12)
  let _195: Unit = Put _191[_192] = _193
  let _196: Int = Int(2)
  let _197: Int = Int(3)
  let _198: Int = Int(2)
  let _200: Unit = Apply(mul.68, [_196, _197, _198, a.117, b.120, c.123, ])
  let _201: Int = Int(0)
  let _202: Array(Double) = Get c.123[_201]
  let _203: Int = Int(0)
  let _204: Double = Get _202[_203]
  let _205: Int = ExtApply(minimbt_truncate, [_204, ])
  let _207: Unit = ExtApply(minimbt_print_int, [_205, ])
  let _209: Unit = ExtApply(minimbt_print_endline, [])
  let _210: Int = Int(0)
  let _211: Array(Double) = Get c.123[_210]
  let _212: Int = Int(1)
  let _213: Double = Get _211[_212]
  let _214: Int = ExtApply(minimbt_truncate, [_213, ])
  let _216: Unit = ExtApply(minimbt_print_int, [_214, ])
  let _218: Unit = ExtApply(minimbt_print_endline, [])
  let _219: Int = Int(1)
  let _220: Array(Double) = Get c.123[_219]
  let _221: Int = Int(0)
  let _222: Double = Get _220[_221]
  let _223: Int = ExtApply(minimbt_truncate, [_222, ])
  let _225: Unit = ExtApply(minimbt_print_int, [_223, ])
  let _227: Unit = ExtApply(minimbt_print_endline, [])
  let _228: Int = Int(1)
  let _229: Array(Double) = Get c.123[_228]
  let _230: Int = Int(1)
  let _231: Double = Get _229[_230]
  let _232: Int = ExtApply(minimbt_truncate, [_231, ])
  let _234: Unit = ExtApply(minimbt_print_int, [_232, ])
  Unit
}
Apply(main.85, [])

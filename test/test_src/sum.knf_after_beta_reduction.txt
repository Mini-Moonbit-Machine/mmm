let rec sum.1: Int = (x.2: Int) {
  let _3: Int = Int(0)
  if (x.2 <= _3) then {
    Int(0)
  } else {
    let _4: Int = Int(1)
    let _5: Int = Sub(x.2, _4)
    let _6: Int = Apply(sum.1, [_5, ])
    Add(_6, x.2)
  }
}
let rec main.7: Var({val: Some(Unit)}) = () {
  let _8: Int = Int(10000)
  let _9: Int = Apply(sum.1, [_8, ])
  ExtApply(minimbt_print_int, [_9, ])
}
Apply(main.7, [])let rec sum.1: Int = (x.2: Int) {
  let _3: Int = Int(0)
  if (x.2 <= _3) then {
    Int(0)
  } else {
    let _4: Int = Int(1)
    let _5: Int = Sub(x.2, _4)
    let _6: Int = Apply(sum.1, [_5, ])
    Add(_6, x.2)
  }
}
let rec main.7: Var({val: Some(Unit)}) = () {
  let _8: Int = Int(10000)
  let _9: Int = Apply(sum.1, [_8, ])
  ExtApply(minimbt_print_int, [_9, ])
}
Apply(main.7, [])
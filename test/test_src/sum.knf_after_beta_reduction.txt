let rec sum1: Int = (x2.3: Int) {
  let _4: Int = Int(0)
  if (x2.3 <= _4) then {
    Int(0)
  } else {
    let _5: Int = Int(1)
    let _6: Int = Sub(x2.3, _5)
    let _11: Int = Int(0)
    let _7: Int = if (_6 <= _11) then {
      Int(0)
    } else {
      let _12: Int = Int(1)
      let _13: Int = Sub(_6, _12)
      let _14: Int = Apply(sum1, [_13, ])
      Add(_14, _6)
    }
    Add(_7, x2.3)
  }
}
let rec main8: Var({val: Some(Unit)}) = () {
  let _9: Int = Int(10000)
  let _15: Int = Int(0)
  let _10: Int = if (_9 <= _15) then {
    Int(0)
  } else {
    let _16: Int = Int(1)
    let _17: Int = Sub(_9, _16)
    let _18: Int = Apply(sum1, [_17, ])
    Add(_18, _9)
  }
  ExtApply(minimbt_print_int, [_10, ])
}
Apply(main8, [])
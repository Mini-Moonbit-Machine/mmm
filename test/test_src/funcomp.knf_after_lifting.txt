let rec composed6l1: Int = (x7.8: Int, f2.3: Fun([Int], Int), g4.5: Fun([Int], Int)) {
  let _9: Int = Apply(f2.3, [x7.8, ])
  Apply(g4.5, [_9, ])
}
let rec compose1l0: Fun([Int], Int) = (f2.3: Fun([Int], Int), g4.5: Fun([Int], Int)) {
  let rec composed6l1c0: Int = (x7.8: Int) {
    Apply(composed6l1, [x7.8, f2.3, g4.5, ])
  }
  Var(composed6l1c0)
}
let rec dbl10l1: Int = (x11.12: Int) {
  Add(x11.12, x11.12)
}
let rec inc13l2: Int = (x14.15: Int) {
  let _16: Int = Int(1)
  Add(x14.15, _16)
}
let rec dec17l3: Int = (x18.19: Int) {
  let _20: Int = Int(1)
  Sub(x18.19, _20)
}
let rec main21l4: Var({val: Some(Unit)}) = () {
  let rec dbl10l1c0: Int = (x11.12: Int) {
    Apply(dbl10l1, [x11.12, ])
  }
  let rec dec17l3c0: Int = (x18.19: Int) {
    Apply(dec17l3, [x18.19, ])
  }
  let _22: Fun([Int], Int) = Apply(compose1l0, [dbl10l1c0, dec17l3c0, ])
  let rec inc13l2c0: Int = (x14.15: Int) {
    Apply(inc13l2, [x14.15, ])
  }
  let h.23: Fun([Int], Int) = Apply(compose1l0, [inc13l2c0, _22, ])
  let _24: Int = Int(123)
  let _25: Int = Apply(h.23, [_24, ])
  ExtApply(minimbt_print_int, [_25, ])
}
Apply(main21l4, [])
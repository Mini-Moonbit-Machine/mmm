let rec dbl10l0: Int = (x11.12: Int) {
  Add(x11.12, x11.12)
}
let rec inc13l1: Int = (x14.15: Int) {
  let _16: Int = Int(1)
  Add(x14.15, _16)
}
let rec dec17l2: Int = (x18.19: Int) {
  let _20: Int = Int(1)
  Sub(x18.19, _20)
}
let rec composed6.26l4: Int = (x7.27: Int) {
  let _28: Int = Apply(dbl10l0, [x7.27, ])
  Apply(dec17l2, [_28, ])
}
let rec composed6.29l4: Int = (x7.30: Int, _22: Fun([Int], Int)) {
  let _31: Int = Apply(inc13l1, [x7.30, ])
  Apply(_22, [_31, ])
}
let rec main21l3: Var({val: Some(Unit)}) = () {
  let rec composed6.26l4c0: Int = (x7.27: Int) {
    Apply(composed6.26l4, [x7.27, ])
  }
  let _22: Fun([Int], Int) = Var(composed6.26l4c0)
  let rec composed6.29l4c0: Int = (x7.30: Int) {
    Apply(composed6.29l4, [x7.30, _22, ])
  }
  let h.23: Fun([Int], Int) = Var(composed6.29l4c0)
  let _24: Int = Int(123)
  let _25: Int = Apply(h.23, [_24, ])
  ExtApply(minimbt_print_int, [_25, ])
}
Apply(main21l3, [])
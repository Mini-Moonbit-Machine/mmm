// [Asm] LoweringOrder: [0]
// [Asm] LoweringOrder: [[]]
// [Asm] LoweringOrder: HashMap::of([(b0, 0)])
// [Asm] LoweringOrder: [b0]
// [Asm] LoweringOrder: HashMap::of([(b0, 0)])
// [Asm] pre_assigned_registers: Self(fref=f0) -> v0, Insn(iref=%0) -> v2
// [Asm] succs: []
// [Asm] critical edges for b0: []
// [Asm] critical color seq for b0: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] defs: [v3]
// [Asm] live_set: [v3]
// [Asm] defined: v3 is X
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move: a0 <- v3
// [Asm] defined: a0 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, t0, t1, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [a0]
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v2]
// [Asm] live_set: [v2]
// [Asm] move: v2 <- a0
// [Asm] defined: v2 is X
// [Asm] defs: []
// [Asm] live_set: [v2]
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move: a0 <- v2
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] Label("main.185") clobbered_x: @hashset.of([a0])
// [Asm] Label("main.185") clobbered_f: @hashset.of([])
// [Asm] subst   li v3, 1617 ->   li a0, 1617
// [Asm] subst   call minimbt_print_int ->   call minimbt_print_int
// [Asm] subst   ret ->   ret
// [Asm] LoweringOrder: [0]
// [Asm] LoweringOrder: [[]]
// [Asm] LoweringOrder: HashMap::of([(b0, 0)])
// [Asm] LoweringOrder: [b0]
// [Asm] LoweringOrder: HashMap::of([(b0, 0)])
// [Asm] pre_assigned_registers: Self(fref=f2) -> v0, Insn(iref=%0) -> v2
// [Asm] before colored: # leaf false
// [Asm] main.185:
// [Asm] # block info: defs: [v2, t1, ft0, ft1, a1, fa1, fa2, ft6, a4, fa6, a6, ft5, ft10, ft7, ft4, ft9, a5, a0, fa4, ft2, a2, a3, ft8, t3, a7, fa7, t0, fa5, fa3, ft3, fa0, t4, t2, v3], uses: [v2, a0, v3], upward_exposed: [], params_defs: []
// [Asm] # live_in: [], live_out: []
// [Asm] # block parameters: []
// [Asm] .main.185_0:
// [Asm]   # save_ctx1  # live: []
// [Asm]   # save_ctx2  # live: []
// [Asm]   li v3, 1617  # live: [v3]
// [Asm]   mv a0, v3  # live: [a0]
// [Asm]   call minimbt_print_int  # live: [a0]
// [Asm]   mv v2, a0  # live: [v2]
// [Asm]   # restore_ctx2  # live: [v2]
// [Asm] # control
// [Asm]   mv a0, v2  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # leaf false
// [Asm] minimbt_main:
// [Asm] # block info: defs: [t1, ft0, ft1, a1, s11, ra, fa1, fa2, ft6, a4, fa6, a6, ft5, ft10, ft7, ft4, ft9, a5, a0, fa4, ft2, a2, sp, a3, ft8, a7, t3, fa7, t0, fa5, fa3, ft3, fa0, t4, t2], uses: [sp, ra, s11, a0], upward_exposed: [ra, s11], params_defs: []
// [Asm] # live_in: [ra, s11], live_out: []
// [Asm] # block parameters: []
// [Asm] .minimbt_main_b0:
// [Asm]   addi sp, sp, -16  # live: [s11, ra]
// [Asm]   sd ra, 0(sp)  # live: [s11]
// [Asm]   sd s11, 8(sp)  # live: []
// [Asm]   la s11, large_heap_end  # live: []
// [Asm]   call main.185  # live: [a0]
// [Asm]   ld ra, 0(sp)  # live: [a0]
// [Asm]   ld s11, 8(sp)  # live: [a0]
// [Asm]   addi sp, sp, 16  # live: [a0]
// [Asm] # control
// [Asm]   ret  # live: []
// [Asm] 
// [Asm]   .p2align 2
// [Asm]   .bss
// [Asm] start:
// [Asm]   .zero 4
// [Asm] 
// [Main]   .option arch, +xtheadba, +xtheadfmemidx, +xtheadmemidx
// [Main]   .p2align 4
// [Main]   .bss
// [Main]   .type large_heap, @object
// [Main] large_heap:
// [Main]   .zero 1610612736
// [Main] large_heap_end:
// [Main] 
// [Main]   .p2align 4
// [Main]   .bss
// [Main]   .type large_stack, @object
// [Main] large_stack:
// [Main]   .zero 268435456
// [Main] large_stack_end:
// [Main] 
// [Main] __begin_text:
// [Main]   .p2align 2
// [Main]   .text
// [Main]   .globl main.185
// [Main]   .type main.185, @function
// [Main] # leaf false
// [Main] main.185:
// [Main] .main.185_0:
// [Main]   addi sp, sp, -16
// [Main]   sd ra, 0(sp)
// [Main]   li a0, 1617
// [Main]   call minimbt_print_int
// [Main]   ld ra, 0(sp)
// [Main]   addi sp, sp, 16
// [Main]   ret
// [Main] 
// [Main]   .p2align 2
// [Main]   .text
// [Main]   .globl minimbt_main
// [Main]   .type minimbt_main, @function
// [Main] # leaf false
// [Main] minimbt_main:
// [Main] .minimbt_main_b0:
// [Main]   addi sp, sp, -16
// [Main]   sd ra, 0(sp)
// [Main]   sd s11, 8(sp)
// [Main]   la s11, large_heap_end
// [Main]   call main.185
// [Main]   ld ra, 0(sp)
// [Main]   ld s11, 8(sp)
// [Main]   addi sp, sp, 16
// [Main]   ret
// [Main] 
// [Main] __end_text:
// [Main]   .p2align 2
// [Main]   .bss
// [Main]   .globl start
// [Main]   .type start, @object
// [Main] start:
// [Main]   .zero 4
// [Main] 
// [Main] 
// [Typer] check: LetRec({tyvars: [], name: ("f", Int), args: [("x0", Int)], body: Let(("x1", Var(None)), Prim(Var("x0"), Int(1), Add, kind=None), Let(("x2", Var(None)), Prim(Var("x1"), Int(1), Add, kind=None), Let(("x3", Var(None)), Prim(Var("x2"), Int(1), Add, kind=None), Let(("x4", Var(None)), Prim(Var("x3"), Int(1), Add, kind=None), Let(("x5", Var(None)), Prim(Var("x4"), Int(1), Add, kind=None), Let(("x6", Var(None)), Prim(Var("x5"), Int(1), Add, kind=None), Let(("x7", Var(None)), Prim(Var("x6"), Int(1), Add, kind=None), Let(("x8", Var(None)), Prim(Var("x7"), Int(1), Add, kind=None), Let(("x9", Var(None)), Prim(Var("x8"), Int(1), Add, kind=None), Let(("x10", Var(None)), Prim(Var("x9"), Int(1), Add, kind=None), Let(("x11", Var(None)), Prim(Var("x10"), Int(1), Add, kind=None), Let(("x12", Var(None)), Prim(Var("x11"), Int(1), Add, kind=None), Let(("x13", Var(None)), Prim(Var("x12"), Int(1), Add, kind=None), Let(("x14", Var(None)), Prim(Var("x13"), Int(1), Add, kind=None), Let(("x15", Var(None)), Prim(Var("x14"), Int(1), Add, kind=None), Let(("x16", Var(None)), Prim(Var("x15"), Int(1), Add, kind=None), Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))))))))))))))))))))))))))))))))))))}, LetRec({tyvars: [], name: ("main", Var(None)), args: [], body: App(Var("print_int"), [App(Var("f"), [Int(0)])])}, Unit)) against Unit
// [Typer] typevars: []
// [Typer] check: Let(("x1", Var(None)), Prim(Var("x0"), Int(1), Add, kind=None), Let(("x2", Var(None)), Prim(Var("x1"), Int(1), Add, kind=None), Let(("x3", Var(None)), Prim(Var("x2"), Int(1), Add, kind=None), Let(("x4", Var(None)), Prim(Var("x3"), Int(1), Add, kind=None), Let(("x5", Var(None)), Prim(Var("x4"), Int(1), Add, kind=None), Let(("x6", Var(None)), Prim(Var("x5"), Int(1), Add, kind=None), Let(("x7", Var(None)), Prim(Var("x6"), Int(1), Add, kind=None), Let(("x8", Var(None)), Prim(Var("x7"), Int(1), Add, kind=None), Let(("x9", Var(None)), Prim(Var("x8"), Int(1), Add, kind=None), Let(("x10", Var(None)), Prim(Var("x9"), Int(1), Add, kind=None), Let(("x11", Var(None)), Prim(Var("x10"), Int(1), Add, kind=None), Let(("x12", Var(None)), Prim(Var("x11"), Int(1), Add, kind=None), Let(("x13", Var(None)), Prim(Var("x12"), Int(1), Add, kind=None), Let(("x14", Var(None)), Prim(Var("x13"), Int(1), Add, kind=None), Let(("x15", Var(None)), Prim(Var("x14"), Int(1), Add, kind=None), Let(("x16", Var(None)), Prim(Var("x15"), Int(1), Add, kind=None), Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))))))))))))))))))))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x0"), Int(1), Add, kind=None)
// [Typer] infer: Var("x0")
// [Typer] inst: TypeScheme(([], Int))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x2", Var(None)), Prim(Var("x1"), Int(1), Add, kind=None), Let(("x3", Var(None)), Prim(Var("x2"), Int(1), Add, kind=None), Let(("x4", Var(None)), Prim(Var("x3"), Int(1), Add, kind=None), Let(("x5", Var(None)), Prim(Var("x4"), Int(1), Add, kind=None), Let(("x6", Var(None)), Prim(Var("x5"), Int(1), Add, kind=None), Let(("x7", Var(None)), Prim(Var("x6"), Int(1), Add, kind=None), Let(("x8", Var(None)), Prim(Var("x7"), Int(1), Add, kind=None), Let(("x9", Var(None)), Prim(Var("x8"), Int(1), Add, kind=None), Let(("x10", Var(None)), Prim(Var("x9"), Int(1), Add, kind=None), Let(("x11", Var(None)), Prim(Var("x10"), Int(1), Add, kind=None), Let(("x12", Var(None)), Prim(Var("x11"), Int(1), Add, kind=None), Let(("x13", Var(None)), Prim(Var("x12"), Int(1), Add, kind=None), Let(("x14", Var(None)), Prim(Var("x13"), Int(1), Add, kind=None), Let(("x15", Var(None)), Prim(Var("x14"), Int(1), Add, kind=None), Let(("x16", Var(None)), Prim(Var("x15"), Int(1), Add, kind=None), Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))))))))))))))))))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x1"), Int(1), Add, kind=None)
// [Typer] infer: Var("x1")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x3", Var(None)), Prim(Var("x2"), Int(1), Add, kind=None), Let(("x4", Var(None)), Prim(Var("x3"), Int(1), Add, kind=None), Let(("x5", Var(None)), Prim(Var("x4"), Int(1), Add, kind=None), Let(("x6", Var(None)), Prim(Var("x5"), Int(1), Add, kind=None), Let(("x7", Var(None)), Prim(Var("x6"), Int(1), Add, kind=None), Let(("x8", Var(None)), Prim(Var("x7"), Int(1), Add, kind=None), Let(("x9", Var(None)), Prim(Var("x8"), Int(1), Add, kind=None), Let(("x10", Var(None)), Prim(Var("x9"), Int(1), Add, kind=None), Let(("x11", Var(None)), Prim(Var("x10"), Int(1), Add, kind=None), Let(("x12", Var(None)), Prim(Var("x11"), Int(1), Add, kind=None), Let(("x13", Var(None)), Prim(Var("x12"), Int(1), Add, kind=None), Let(("x14", Var(None)), Prim(Var("x13"), Int(1), Add, kind=None), Let(("x15", Var(None)), Prim(Var("x14"), Int(1), Add, kind=None), Let(("x16", Var(None)), Prim(Var("x15"), Int(1), Add, kind=None), Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))))))))))))))))))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x2"), Int(1), Add, kind=None)
// [Typer] infer: Var("x2")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x4", Var(None)), Prim(Var("x3"), Int(1), Add, kind=None), Let(("x5", Var(None)), Prim(Var("x4"), Int(1), Add, kind=None), Let(("x6", Var(None)), Prim(Var("x5"), Int(1), Add, kind=None), Let(("x7", Var(None)), Prim(Var("x6"), Int(1), Add, kind=None), Let(("x8", Var(None)), Prim(Var("x7"), Int(1), Add, kind=None), Let(("x9", Var(None)), Prim(Var("x8"), Int(1), Add, kind=None), Let(("x10", Var(None)), Prim(Var("x9"), Int(1), Add, kind=None), Let(("x11", Var(None)), Prim(Var("x10"), Int(1), Add, kind=None), Let(("x12", Var(None)), Prim(Var("x11"), Int(1), Add, kind=None), Let(("x13", Var(None)), Prim(Var("x12"), Int(1), Add, kind=None), Let(("x14", Var(None)), Prim(Var("x13"), Int(1), Add, kind=None), Let(("x15", Var(None)), Prim(Var("x14"), Int(1), Add, kind=None), Let(("x16", Var(None)), Prim(Var("x15"), Int(1), Add, kind=None), Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))))))))))))))))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x3"), Int(1), Add, kind=None)
// [Typer] infer: Var("x3")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x5", Var(None)), Prim(Var("x4"), Int(1), Add, kind=None), Let(("x6", Var(None)), Prim(Var("x5"), Int(1), Add, kind=None), Let(("x7", Var(None)), Prim(Var("x6"), Int(1), Add, kind=None), Let(("x8", Var(None)), Prim(Var("x7"), Int(1), Add, kind=None), Let(("x9", Var(None)), Prim(Var("x8"), Int(1), Add, kind=None), Let(("x10", Var(None)), Prim(Var("x9"), Int(1), Add, kind=None), Let(("x11", Var(None)), Prim(Var("x10"), Int(1), Add, kind=None), Let(("x12", Var(None)), Prim(Var("x11"), Int(1), Add, kind=None), Let(("x13", Var(None)), Prim(Var("x12"), Int(1), Add, kind=None), Let(("x14", Var(None)), Prim(Var("x13"), Int(1), Add, kind=None), Let(("x15", Var(None)), Prim(Var("x14"), Int(1), Add, kind=None), Let(("x16", Var(None)), Prim(Var("x15"), Int(1), Add, kind=None), Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))))))))))))))))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x4"), Int(1), Add, kind=None)
// [Typer] infer: Var("x4")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x6", Var(None)), Prim(Var("x5"), Int(1), Add, kind=None), Let(("x7", Var(None)), Prim(Var("x6"), Int(1), Add, kind=None), Let(("x8", Var(None)), Prim(Var("x7"), Int(1), Add, kind=None), Let(("x9", Var(None)), Prim(Var("x8"), Int(1), Add, kind=None), Let(("x10", Var(None)), Prim(Var("x9"), Int(1), Add, kind=None), Let(("x11", Var(None)), Prim(Var("x10"), Int(1), Add, kind=None), Let(("x12", Var(None)), Prim(Var("x11"), Int(1), Add, kind=None), Let(("x13", Var(None)), Prim(Var("x12"), Int(1), Add, kind=None), Let(("x14", Var(None)), Prim(Var("x13"), Int(1), Add, kind=None), Let(("x15", Var(None)), Prim(Var("x14"), Int(1), Add, kind=None), Let(("x16", Var(None)), Prim(Var("x15"), Int(1), Add, kind=None), Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))))))))))))))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x5"), Int(1), Add, kind=None)
// [Typer] infer: Var("x5")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x7", Var(None)), Prim(Var("x6"), Int(1), Add, kind=None), Let(("x8", Var(None)), Prim(Var("x7"), Int(1), Add, kind=None), Let(("x9", Var(None)), Prim(Var("x8"), Int(1), Add, kind=None), Let(("x10", Var(None)), Prim(Var("x9"), Int(1), Add, kind=None), Let(("x11", Var(None)), Prim(Var("x10"), Int(1), Add, kind=None), Let(("x12", Var(None)), Prim(Var("x11"), Int(1), Add, kind=None), Let(("x13", Var(None)), Prim(Var("x12"), Int(1), Add, kind=None), Let(("x14", Var(None)), Prim(Var("x13"), Int(1), Add, kind=None), Let(("x15", Var(None)), Prim(Var("x14"), Int(1), Add, kind=None), Let(("x16", Var(None)), Prim(Var("x15"), Int(1), Add, kind=None), Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))))))))))))))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x6"), Int(1), Add, kind=None)
// [Typer] infer: Var("x6")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x8", Var(None)), Prim(Var("x7"), Int(1), Add, kind=None), Let(("x9", Var(None)), Prim(Var("x8"), Int(1), Add, kind=None), Let(("x10", Var(None)), Prim(Var("x9"), Int(1), Add, kind=None), Let(("x11", Var(None)), Prim(Var("x10"), Int(1), Add, kind=None), Let(("x12", Var(None)), Prim(Var("x11"), Int(1), Add, kind=None), Let(("x13", Var(None)), Prim(Var("x12"), Int(1), Add, kind=None), Let(("x14", Var(None)), Prim(Var("x13"), Int(1), Add, kind=None), Let(("x15", Var(None)), Prim(Var("x14"), Int(1), Add, kind=None), Let(("x16", Var(None)), Prim(Var("x15"), Int(1), Add, kind=None), Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))))))))))))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x7"), Int(1), Add, kind=None)
// [Typer] infer: Var("x7")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x9", Var(None)), Prim(Var("x8"), Int(1), Add, kind=None), Let(("x10", Var(None)), Prim(Var("x9"), Int(1), Add, kind=None), Let(("x11", Var(None)), Prim(Var("x10"), Int(1), Add, kind=None), Let(("x12", Var(None)), Prim(Var("x11"), Int(1), Add, kind=None), Let(("x13", Var(None)), Prim(Var("x12"), Int(1), Add, kind=None), Let(("x14", Var(None)), Prim(Var("x13"), Int(1), Add, kind=None), Let(("x15", Var(None)), Prim(Var("x14"), Int(1), Add, kind=None), Let(("x16", Var(None)), Prim(Var("x15"), Int(1), Add, kind=None), Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))))))))))))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x8"), Int(1), Add, kind=None)
// [Typer] infer: Var("x8")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x10", Var(None)), Prim(Var("x9"), Int(1), Add, kind=None), Let(("x11", Var(None)), Prim(Var("x10"), Int(1), Add, kind=None), Let(("x12", Var(None)), Prim(Var("x11"), Int(1), Add, kind=None), Let(("x13", Var(None)), Prim(Var("x12"), Int(1), Add, kind=None), Let(("x14", Var(None)), Prim(Var("x13"), Int(1), Add, kind=None), Let(("x15", Var(None)), Prim(Var("x14"), Int(1), Add, kind=None), Let(("x16", Var(None)), Prim(Var("x15"), Int(1), Add, kind=None), Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))))))))))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x9"), Int(1), Add, kind=None)
// [Typer] infer: Var("x9")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x11", Var(None)), Prim(Var("x10"), Int(1), Add, kind=None), Let(("x12", Var(None)), Prim(Var("x11"), Int(1), Add, kind=None), Let(("x13", Var(None)), Prim(Var("x12"), Int(1), Add, kind=None), Let(("x14", Var(None)), Prim(Var("x13"), Int(1), Add, kind=None), Let(("x15", Var(None)), Prim(Var("x14"), Int(1), Add, kind=None), Let(("x16", Var(None)), Prim(Var("x15"), Int(1), Add, kind=None), Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))))))))))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x10"), Int(1), Add, kind=None)
// [Typer] infer: Var("x10")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x12", Var(None)), Prim(Var("x11"), Int(1), Add, kind=None), Let(("x13", Var(None)), Prim(Var("x12"), Int(1), Add, kind=None), Let(("x14", Var(None)), Prim(Var("x13"), Int(1), Add, kind=None), Let(("x15", Var(None)), Prim(Var("x14"), Int(1), Add, kind=None), Let(("x16", Var(None)), Prim(Var("x15"), Int(1), Add, kind=None), Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))))))))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x11"), Int(1), Add, kind=None)
// [Typer] infer: Var("x11")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x13", Var(None)), Prim(Var("x12"), Int(1), Add, kind=None), Let(("x14", Var(None)), Prim(Var("x13"), Int(1), Add, kind=None), Let(("x15", Var(None)), Prim(Var("x14"), Int(1), Add, kind=None), Let(("x16", Var(None)), Prim(Var("x15"), Int(1), Add, kind=None), Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))))))))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x12"), Int(1), Add, kind=None)
// [Typer] infer: Var("x12")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x14", Var(None)), Prim(Var("x13"), Int(1), Add, kind=None), Let(("x15", Var(None)), Prim(Var("x14"), Int(1), Add, kind=None), Let(("x16", Var(None)), Prim(Var("x15"), Int(1), Add, kind=None), Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))))))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x13"), Int(1), Add, kind=None)
// [Typer] infer: Var("x13")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x15", Var(None)), Prim(Var("x14"), Int(1), Add, kind=None), Let(("x16", Var(None)), Prim(Var("x15"), Int(1), Add, kind=None), Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))))))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x14"), Int(1), Add, kind=None)
// [Typer] infer: Var("x14")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x16", Var(None)), Prim(Var("x15"), Int(1), Add, kind=None), Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x15"), Int(1), Add, kind=None)
// [Typer] infer: Var("x15")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x17", Var(None)), Prim(Var("x16"), Int(1), Add, kind=None), Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x16"), Int(1), Add, kind=None)
// [Typer] infer: Var("x16")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x18", Var(None)), Prim(Var("x17"), Int(1), Add, kind=None), Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x17"), Int(1), Add, kind=None)
// [Typer] infer: Var("x17")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Int(1)
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x19", Var(None)), Prim(Var("x18"), Var("x1"), Add, kind=None), Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x18"), Var("x1"), Add, kind=None)
// [Typer] infer: Var("x18")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x1")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x20", Var(None)), Prim(Var("x19"), Var("x2"), Add, kind=None), Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x19"), Var("x2"), Add, kind=None)
// [Typer] infer: Var("x19")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x2")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x21", Var(None)), Prim(Var("x20"), Var("x3"), Add, kind=None), Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))))))))))))))))) against Int
// [Typer] infer: Prim(Var("x20"), Var("x3"), Add, kind=None)
// [Typer] infer: Var("x20")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x3")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x22", Var(None)), Prim(Var("x21"), Var("x4"), Add, kind=None), Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))))))))))))))) against Int
// [Typer] infer: Prim(Var("x21"), Var("x4"), Add, kind=None)
// [Typer] infer: Var("x21")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x4")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x23", Var(None)), Prim(Var("x22"), Var("x5"), Add, kind=None), Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))))))))))))))) against Int
// [Typer] infer: Prim(Var("x22"), Var("x5"), Add, kind=None)
// [Typer] infer: Var("x22")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x5")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x24", Var(None)), Prim(Var("x23"), Var("x6"), Add, kind=None), Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))))))))))))) against Int
// [Typer] infer: Prim(Var("x23"), Var("x6"), Add, kind=None)
// [Typer] infer: Var("x23")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x6")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x25", Var(None)), Prim(Var("x24"), Var("x7"), Add, kind=None), Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))))))))))))) against Int
// [Typer] infer: Prim(Var("x24"), Var("x7"), Add, kind=None)
// [Typer] infer: Var("x24")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x7")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x26", Var(None)), Prim(Var("x25"), Var("x8"), Add, kind=None), Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))))))))))) against Int
// [Typer] infer: Prim(Var("x25"), Var("x8"), Add, kind=None)
// [Typer] infer: Var("x25")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x8")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x27", Var(None)), Prim(Var("x26"), Var("x9"), Add, kind=None), Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))))))))))) against Int
// [Typer] infer: Prim(Var("x26"), Var("x9"), Add, kind=None)
// [Typer] infer: Var("x26")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x9")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x28", Var(None)), Prim(Var("x27"), Var("x10"), Add, kind=None), Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))))))))) against Int
// [Typer] infer: Prim(Var("x27"), Var("x10"), Add, kind=None)
// [Typer] infer: Var("x27")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x10")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x29", Var(None)), Prim(Var("x28"), Var("x11"), Add, kind=None), Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))))))))) against Int
// [Typer] infer: Prim(Var("x28"), Var("x11"), Add, kind=None)
// [Typer] infer: Var("x28")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x11")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x30", Var(None)), Prim(Var("x29"), Var("x12"), Add, kind=None), Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))))))) against Int
// [Typer] infer: Prim(Var("x29"), Var("x12"), Add, kind=None)
// [Typer] infer: Var("x29")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x12")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x31", Var(None)), Prim(Var("x30"), Var("x13"), Add, kind=None), Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))))))) against Int
// [Typer] infer: Prim(Var("x30"), Var("x13"), Add, kind=None)
// [Typer] infer: Var("x30")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x13")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x32", Var(None)), Prim(Var("x31"), Var("x14"), Add, kind=None), Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))))) against Int
// [Typer] infer: Prim(Var("x31"), Var("x14"), Add, kind=None)
// [Typer] infer: Var("x31")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x14")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x33", Var(None)), Prim(Var("x32"), Var("x15"), Add, kind=None), Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))))) against Int
// [Typer] infer: Prim(Var("x32"), Var("x15"), Add, kind=None)
// [Typer] infer: Var("x32")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x15")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x34", Var(None)), Prim(Var("x33"), Var("x16"), Add, kind=None), Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)))) against Int
// [Typer] infer: Prim(Var("x33"), Var("x16"), Add, kind=None)
// [Typer] infer: Var("x33")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x16")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x35", Var(None)), Prim(Var("x34"), Var("x17"), Add, kind=None), Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None))) against Int
// [Typer] infer: Prim(Var("x34"), Var("x17"), Add, kind=None)
// [Typer] infer: Var("x34")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x17")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Let(("x36", Var(None)), Prim(Var("x35"), Var("x0"), Add, kind=None), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None)) against Int
// [Typer] infer: Prim(Var("x35"), Var("x0"), Add, kind=None)
// [Typer] infer: Var("x35")
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] infer: Var("x0")
// [Typer] inst: TypeScheme(([], Int))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] unify: Var(None) and Int
// [Typer] union: Var(None) and Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None), Var("x0"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None), Var("x36"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None), Var("x35"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None), Var("x34"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None), Var("x33"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None), Var("x32"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None), Var("x31"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None), Var("x30"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None), Var("x29"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None), Var("x28"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None), Var("x27"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None), Var("x26"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None), Var("x25"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None), Var("x24"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None), Var("x23"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None), Var("x22"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None), Var("x21"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None), Var("x20"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None), Var("x19"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None), Var("x18"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None), Var("x17"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None), Var("x16"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None), Var("x15"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None), Var("x14"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None), Var("x13"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None), Var("x12"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None), Var("x11"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None), Var("x10"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None), Var("x9"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None), Var("x8"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None), Var("x7"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None), Var("x6"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None), Var("x5"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None), Var("x4"), Add, kind=None) against Int
// [Typer] check: Prim(Prim(Var("x1"), Var("x2"), Add, kind=None), Var("x3"), Add, kind=None) against Int
// [Typer] check: Prim(Var("x1"), Var("x2"), Add, kind=None) against Int
// [Typer] check: Var("x1") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x2") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x3") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x4") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x5") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x6") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x7") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x8") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x9") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x10") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x11") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x12") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x13") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x14") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x15") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x16") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x17") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x18") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x19") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x20") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x21") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x22") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x23") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x24") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x25") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x26") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x27") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x28") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x29") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x30") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x31") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x32") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x33") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x34") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x35") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x36") against Int
// [Typer] inst: TypeScheme(([], Var(Int)))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: Var("x0") against Int
// [Typer] inst: TypeScheme(([], Int))
// [Typer] inst result: Int
// [Typer] unify: Int and Int
// [Typer] check: LetRec({tyvars: [], name: ("main", Var(None)), args: [], body: App(Var("print_int"), [App(Var("f"), [Int(0)])])}, Unit) against Unit
// [Typer] typevars: []
// [Typer] infer: App(Var("print_int"), [App(Var("f"), [Int(0)])])
// [Typer] infer: Var("print_int")
// [Typer] inst: TypeScheme(([], (Int) -> Unit))
// [Typer] inst result: (Int) -> Unit
// [Typer] check: App(Var("f"), [Int(0)]) against Int
// [Typer] infer: Int(0)
// [Typer] check: Var("f") against (Int) -> Int
// [Typer] inst: TypeScheme(([], (Int) -> Int))
// [Typer] inst result: (Int) -> Int
// [Typer] unify: (Int) -> Int and (Int) -> Int
// [Typer] unify: Int and Int
// [Typer] unify: Int and Int
// [Typer] unify: Unit and Var(None)
// [Typer] union: Unit and Var(None)
// [Typer] check: Unit against Unit
// [KnfOpt] freq: {f.1: Once, main.93: Once}
// [KnfOpt] Knf inline Some(f)
// [KnfOpt] freq: {main.93: Once}
// [KnfOpt] freq: {main.93: Once}
// [KnfOpt] Numbers of let rec: 1 1 0
// [KnfOpt] Tuple freq: {_95: MayEscape}
// [Parser] flags: []
// [CoreOpt] Call frequnce: FnCallFreq({f0: Once, f2: Once})
// [CoreOpt] allow_inline: false %0 main.185 false true true true true
// [CoreOpt] allow_inline: false %0 main.185 false true true true true
// [CoreOpt] allow_inline: false %0 main.185 false true true true true
// [CoreOpt] allow_inline: false %0 main.185 false true true true true
// [CoreOpt] allow_inline: false %0 main.185 false true true true true
// [CoreOpt] allow_inline: false %0 main.185 false true true true true

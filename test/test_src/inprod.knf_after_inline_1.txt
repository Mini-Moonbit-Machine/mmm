let rec main.43: Unit = () {
  let _44: Double = Double(1000000)
  let _45: Double = Double(1)
  let _46: Double = Double(2)
  let _47: Double = Double(3)
  let _48: (Double, Double, Double) = Tuple([_45, _46, _47, ])
  let _49: Double = Double(4)
  let _50: Double = Double(5)
  let _51: Double = Double(6)
  let _52: (Double, Double, Double) = Tuple([_49, _50, _51, ])
  let (x.75: Double, _76: Double, _77: Double) = _48
  let (x.79: Double, _80: Double, _81: Double) = _52
  let _82: Double = FMul(x.75, x.79)
  let (_84: Double, y.85: Double, _86: Double) = _48
  let (_88: Double, y.89: Double, _90: Double) = _52
  let _91: Double = FMul(y.85, y.89)
  let _92: Double = FAdd(_82, _91)
  let (_94: Double, _95: Double, z.96: Double) = _48
  let (_98: Double, _99: Double, z.100: Double) = _52
  let _101: Double = FMul(z.96, z.100)
  let _53: Double = FAdd(_92, _101)
  let _54: Double = FMul(_44, _53)
  let _55: Int = ExtApply(minimbt_truncate, [_54, ])
  ExtApply(minimbt_print_int, [_55, ])
}
Apply(main.43, [])

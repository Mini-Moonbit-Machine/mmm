let rec f.2l1: Var({val: Some(Unit)}) = () {
  let x.3: Int = ExtApply(minimbt_read_int, [])
  let _4: Int = Int(-2147483648)
  if (x.3 == _4) then {
    ExtApply(minimbt_print_int, [x.3, ])
  } else {
    let _5: Unit = ExtApply(minimbt_print_int, [x.3, ])
    let x.6: Int = ExtApply(minimbt_read_int, [])
    let _7: Int = Int(-2147483648)
    if (x.6 == _7) then {
      ExtApply(minimbt_print_int, [x.6, ])
    } else {
      let _8: Unit = ExtApply(minimbt_print_int, [x.6, ])
      Apply(f.2l1, [])
    }
  }
}
let rec main.1l0: Var({val: Some(Unit)}) = () {
  let x.9: Int = ExtApply(minimbt_read_int, [])
  let _10: Int = Int(-2147483648)
  if (x.9 == _10) then {
    ExtApply(minimbt_print_int, [x.9, ])
  } else {
    let _11: Unit = ExtApply(minimbt_print_int, [x.9, ])
    Apply(f.2l1, [])
  }
}
Apply(main.1l0, [])
let rec f1l0: Unit = (n2.3: Int) {
  let _4: Int = Int(0)
  if (_4 <= n2.3) then {
    let t1.5: Unit = ExtApply(minimbt_print_int, [n2.3, ])
    let _6: Int = Int(1)
    let rec f1l0c0: Unit = (n2.3: Int) {
      Apply(f1l0, [n2.3, ])
    }
    let a.7: Array(Fun([Int], Unit)) = ExtApply(minimbt_create_ptr_array, [_6, f1l0c0, ])
    let _8: Int = Int(0)
    let a0.9: Fun([Int], Unit) = Get a.7[_8]
    let _10: Int = Int(1)
    let _11: Int = Sub(n2.3, _10)
    Apply(a0.9, [_11, ])
  } else {
    Unit
  }
}
let rec main12l1: Var({val: Some(Unit)}) = () {
  let _13: Int = Int(9)
  Apply(f1l0, [_13, ])
}
Apply(main12l1, [])
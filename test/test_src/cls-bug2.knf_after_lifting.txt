let rec f.1l0: Unit = (n.2: Int) {
  let _3: Int = Int(0)
  if (_3 <= n.2) then {
    let t1.4: Unit = ExtApply(minimbt_print_int, [n.2, ])
    let _5: Int = Int(1)
    let rec f.1l0c0: Unit = (n.2: Int) {
      Apply(f.1l0, [n.2, ])
    }
    let a.6: Array(Fun([Int], Unit)) = ExtApply(minimbt_create_ptr_array, [_5, f.1l0c0, ])
    let _7: Int = Int(0)
    let a0.8: Fun([Int], Unit) = Get a.6[_7]
    let _9: Int = Int(1)
    let _10: Int = Sub(n.2, _9)
    Apply(a0.8, [_10, ])
  } else {
    Unit
  }
}
let rec main.11l1: Var({val: Some(Unit)}) = () {
  let _12: Int = Int(9)
  Apply(f.1l0, [_12, ])
}
Apply(main.11l1, [])
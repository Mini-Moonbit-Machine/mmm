let rec f.85: Int = (a.2: Int, b.3: Int, c.4: Int, d.5: Int) {
  let e.6: Int = Add(a.2, b.3)
  let f.7: Int = Add(a.2, c.4)
  let g.8: Int = Add(a.2, d.5)
  let h.9: Int = Add(b.3, c.4)
  let i.10: Int = Add(b.3, d.5)
  let j.11: Int = Add(c.4, d.5)
  let k.12: Int = Add(e.6, f.7)
  let l.13: Int = Add(e.6, g.8)
  let m.14: Int = Add(e.6, h.9)
  let n.15: Int = Add(e.6, i.10)
  let o.16: Int = Add(e.6, j.11)
  let p.17: Int = Add(f.7, g.8)
  let q.18: Int = Add(f.7, h.9)
  let r.19: Int = Add(f.7, i.10)
  let s.20: Int = Add(f.7, j.11)
  let t.21: Int = Add(g.8, h.9)
  let u.22: Int = Add(g.8, i.10)
  let v.23: Int = Add(g.8, j.11)
  let w.24: Int = Add(h.9, i.10)
  let x.25: Int = Add(h.9, j.11)
  let y.26: Int = Add(i.10, j.11)
  let aa.27: Int = Add(k.12, l.13)
  let ab.28: Int = Add(k.12, m.14)
  let ac.29: Int = Add(k.12, n.15)
  let ad.30: Int = Add(k.12, o.16)
  let ae.31: Int = Add(k.12, p.17)
  let af.32: Int = Add(k.12, q.18)
  let ag.33: Int = Add(k.12, r.19)
  let ah.34: Int = Add(k.12, s.20)
  let ai.35: Int = Add(k.12, t.21)
  let aj.36: Int = Add(k.12, u.22)
  let ak.37: Int = Add(k.12, v.23)
  let al.38: Int = Add(k.12, w.24)
  let am.39: Int = Add(k.12, x.25)
  let an.40: Int = Add(k.12, y.26)
  let _41: Int = Add(a.2, b.3)
  let _42: Int = Add(_41, c.4)
  let _43: Int = Add(_42, d.5)
  let _44: Int = Add(_43, e.6)
  let _45: Int = Add(_44, f.7)
  let _46: Int = Add(_45, g.8)
  let _47: Int = Add(_46, h.9)
  let _48: Int = Add(_47, i.10)
  let _49: Int = Add(_48, j.11)
  let _50: Int = Add(_49, k.12)
  let _51: Int = Add(_50, l.13)
  let _52: Int = Add(_51, m.14)
  let _53: Int = Add(_52, n.15)
  let _54: Int = Add(_53, o.16)
  let _55: Int = Add(_54, p.17)
  let _56: Int = Add(_55, q.18)
  let _57: Int = Add(_56, r.19)
  let _58: Int = Add(_57, s.20)
  let _59: Int = Add(_58, t.21)
  let _60: Int = Add(_59, u.22)
  let _61: Int = Add(_60, v.23)
  let _62: Int = Add(_61, w.24)
  let _63: Int = Add(_62, x.25)
  let _64: Int = Add(_63, y.26)
  let _65: Int = Add(_64, aa.27)
  let _66: Int = Add(_65, ab.28)
  let _67: Int = Add(_66, ac.29)
  let _68: Int = Add(_67, ad.30)
  let _69: Int = Add(_68, ae.31)
  let _70: Int = Add(_69, af.32)
  let _71: Int = Add(_70, ag.33)
  let _72: Int = Add(_71, ah.34)
  let _73: Int = Add(_72, ai.35)
  let _74: Int = Add(_73, aj.36)
  let _75: Int = Add(_74, ak.37)
  let _76: Int = Add(_75, al.38)
  let _77: Int = Add(_76, am.39)
  let z.78: Int = Add(_77, an.40)
  Neg(z.78)
}
let rec main.86: Var({val: Some(Unit)}) = () {
  let _80: Int = Int(1)
  let _81: Int = Int(2)
  let _82: Int = Int(3)
  let _83: Int = Int(4)
  let _84: Int = Apply(f.85, [_80, _81, _82, _83, ])
  ExtApply(minimbt_print_int, [_84, ])
}
Apply(main.86, [])
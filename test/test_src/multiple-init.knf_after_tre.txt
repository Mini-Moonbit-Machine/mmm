let _1: Int = Int(1)
let _2: Int = Int(0)
let len.3: Array(Int) = ExtApply(minimbt_create_array, [_1, _2, ])
let rec init.4: Var({val: Some(Unit)}) = () {
  let _5: Int = Int(0)
  let _6: Int = Int(1)
  let _7: Unit = Put len.3[_5] = _6
  Unit
}
let _8: Var({val: Some(Unit)}) = Apply(init.4, [])
let _9: Int = Int(1)
let _10: Int = Int(0)
let len2.11: Array(Int) = ExtApply(minimbt_create_array, [_9, _10, ])
let rec init.12: Var({val: Some(Unit)}) = () {
  let _13: Int = Int(0)
  let _14: Int = Int(2)
  let _15: Unit = Put len2.11[_13] = _14
  Unit
}
let _16: Var({val: Some(Unit)}) = Apply(init.12, [])
let rec init.17: Var({val: Some(Unit)}) = () {
  let _18: Int = Int(0)
  let _19: Int = Int(3)
  let _20: Unit = Put len.3[_18] = _19
  let _21: Int = Int(0)
  let _22: Int = Int(4)
  let _23: Unit = Put len2.11[_21] = _22
  Unit
}
let _24: Var({val: Some(Unit)}) = Apply(init.17, [])
let rec main.25: Var({val: Some(Unit)}) = () {
  let _26: Int = Int(0)
  let _27: Int = Get len.3[_26]
  let _28: Unit = ExtApply(minimbt_print_int, [_27, ])
  let _29: Unit = ExtApply(minimbt_print_endline, [])
  let _30: Int = Int(0)
  let _31: Int = Get len2.11[_30]
  let _32: Unit = ExtApply(minimbt_print_int, [_31, ])
  Unit
}
Apply(main.25, [])
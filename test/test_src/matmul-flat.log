// [Asm] pre_assigned_registers: FnParam(fref=f12, fpref=$f.1) -> v3, FnParam(fref=f12, fpref=$f.0) -> v2, FnParam(fref=f12, fpref=$f.2) -> v4, Insn(iref=%2) -> v9, Self(fref=f12) -> v0, FreeVar(fvref=^1) -> v5, Insn(iref=%1) -> v8, Mem(fref=f12, mref=m0) -> v6, Insn(iref=%0) -> v7
// [Asm] defs: []
// [Asm] live_set: [a0, a2, a1, s11, s10]
// [Asm] move_origin: []
// [Asm] defs: [v0]
// [Asm] live_set: [a0, v0, a2, a1, s11]
// [Asm] move_origin: [s10]
// [Asm] defined: v0 is X
// [Asm] defs: [v2]
// [Asm] live_set: [v0, a2, a1, s11, v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v2 is X
// [Asm] defs: [v3]
// [Asm] live_set: [v3, v0, a2, s11, v2]
// [Asm] move_origin: [a1]
// [Asm] defined: v3 is X
// [Asm] defs: [v4]
// [Asm] live_set: [v3, v0, v4, s11, v2]
// [Asm] move_origin: [a2]
// [Asm] defined: v4 is X
// [Asm] defs: [v5]
// [Asm] live_set: [v3, v5, v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: v5 is X
// [Asm] defs: [v13]
// [Asm] live_set: [v3, v5, v13, v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: v13 is X
// [Asm] defs: [v14]
// [Asm] live_set: [v3, v5, v14, v4, v2]
// [Asm] move_origin: []
// [Asm] defined: v14 is X
// [Asm] defs: [v6]
// [Asm] live_set: [v3, v5, v4, v6, v2]
// [Asm] move_origin: []
// [Asm] defined: v6 is X
// [Asm] defs: [s11]
// [Asm] live_set: [v3, v5, v4, v6, v2]
// [Asm] move_origin: [v6]
// [Asm] defined: s11 is X
// [Asm] defs: [a1]
// [Asm] live_set: [v3, v5, v4, v6, a1, v2]
// [Asm] move_origin: [v2]
// [Asm] defined: a1 is X
// [Asm] defs: [a0]
// [Asm] live_set: [v3, v5, a0, v4, v6, a1, v2]
// [Asm] move_origin: [v6]
// [Asm] defined: a0 is X
// [Asm] defs: [a2]
// [Asm] live_set: [v3, v5, a0, a2, v6, a1, v2]
// [Asm] move_origin: [v4]
// [Asm] defined: a2 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [v2, v6, v5, v3]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v8]
// [Asm] live_set: [v8, v6, v5, v3]
// [Asm] move_origin: []
// [Asm] defined: v8 is X
// [Asm] defs: [s10]
// [Asm] live_set: [v8, v6, v5, v3]
// [Asm] move_origin: [v5]
// [Asm] defined: s10 is X
// [Asm] defs: [v10]
// [Asm] live_set: [v8, v6, v10, v3]
// [Asm] move_origin: []
// [Asm] defined: v10 is X
// [Asm] defs: []
// [Asm] live_set: [v8, v6, v10, v3]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [v6, v10, a0, v3]
// [Asm] move_origin: [v8]
// [Asm] defined: a0 is X
// [Asm] defs: [a1]
// [Asm] live_set: [v6, a1, v10, a0]
// [Asm] move_origin: [v3]
// [Asm] defined: a1 is X
// [Asm] defs: [a2]
// [Asm] live_set: [a2, v6, a1, v10, a0]
// [Asm] move_origin: [v6]
// [Asm] defined: a2 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [v6, a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v9]
// [Asm] live_set: [v6]
// [Asm] move_origin: [a0]
// [Asm] defined: v9 is X
// [Asm] defs: []
// [Asm] live_set: [v6]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [v6]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of make_arr103_12"];
// [Asm]   r0 [label="v0 ← a3", color=green];
// [Asm]   r20 [label="a6", color=blue];
// [Asm]   r23 [label="s10", color=blue];
// [Asm]   r3 [label="a1", color=blue];
// [Asm]   r9 [label="v13 ← a0", color=green];
// [Asm]   r6 [label="v3 ← s1", color=green];
// [Asm]   r13 [label="t1", color=blue];
// [Asm]   r4 [label="s11", color=blue];
// [Asm]   r1 [label="a0", color=blue];
// [Asm]   r11 [label="v6 ← s3", color=green];
// [Asm]   r7 [label="v4 ← a2", color=green];
// [Asm]   r10 [label="v14 ← a0", color=green];
// [Asm]   r22 [label="v8 ← a0", color=green];
// [Asm]   r14 [label="t2", color=blue];
// [Asm]   r8 [label="v5 ← s2", color=green];
// [Asm]   r5 [label="v2 ← s0", color=green];
// [Asm]   r15 [label="t3", color=blue];
// [Asm]   r24 [label="v10 ← a3", color=green];
// [Asm]   r25 [label="v9 ← a0", color=green];
// [Asm]   r2 [label="a2", color=blue];
// [Asm]   r16 [label="t4", color=blue];
// [Asm]   r18 [label="a4", color=blue];
// [Asm]   r19 [label="a5", color=blue];
// [Asm]   r17 [label="a3", color=blue];
// [Asm]   r21 [label="a7", color=blue];
// [Asm]   r12 [label="t0", color=blue];
// [Asm]   r6 -- r21;
// [Asm]   r5 -- r21;
// [Asm]   r1 -- r12;
// [Asm]   r5 -- r8;
// [Asm]   r5 -- r10;
// [Asm]   r3 -- r6;
// [Asm]   r11 -- r14;
// [Asm]   r5 -- r17;
// [Asm]   r1 -- r7;
// [Asm]   r1 -- r18;
// [Asm]   r1 -- r19;
// [Asm]   r5 -- r18;
// [Asm]   r3 -- r11;
// [Asm]   r1 -- r17;
// [Asm]   r1 -- r20;
// [Asm]   r3 -- r24;
// [Asm]   r11 -- r24;
// [Asm]   r11 -- r18;
// [Asm]   r1 -- r16;
// [Asm]   r3 -- r5;
// [Asm]   r11 -- r19;
// [Asm]   r8 -- r12;
// [Asm]   r0 -- r6;
// [Asm]   r3 -- r8;
// [Asm]   r6 -- r13;
// [Asm]   r2 -- r6;
// [Asm]   r5 -- r6;
// [Asm]   r8 -- r17;
// [Asm]   r8 -- r16;
// [Asm]   r11 -- r13;
// [Asm]   r0 -- r2;
// [Asm]   r1 -- r21;
// [Asm]   r6 -- r18;
// [Asm]   r6 -- r10;
// [Asm]   r7 -- r10;
// [Asm]   r2 -- r8;
// [Asm]   r1 -- r2;
// [Asm]   r2 -- r5;
// [Asm]   r0 -- r1;
// [Asm]   r1 -- r11;
// [Asm]   r5 -- r7;
// [Asm]   r8 -- r22;
// [Asm]   r8 -- r21;
// [Asm]   r4 -- r8;
// [Asm]   r11 -- r15;
// [Asm]   r5 -- r14;
// [Asm]   r8 -- r11;
// [Asm]   r3 -- r7;
// [Asm]   r1 -- r6;
// [Asm]   r1 -- r5;
// [Asm]   r0 -- r4;
// [Asm]   r6 -- r23;
// [Asm]   r2 -- r24;
// [Asm]   r8 -- r14;
// [Asm]   r7 -- r8;
// [Asm]   r4 -- r9;
// [Asm]   r11 -- r25;
// [Asm]   r6 -- r7;
// [Asm]   r6 -- r9;
// [Asm]   r6 -- r11;
// [Asm]   r4 -- r5;
// [Asm]   r11 -- r20;
// [Asm]   r6 -- r15;
// [Asm]   r11 -- r17;
// [Asm]   r1 -- r8;
// [Asm]   r5 -- r20;
// [Asm]   r6 -- r14;
// [Asm]   r8 -- r19;
// [Asm]   r8 -- r9;
// [Asm]   r11 -- r16;
// [Asm]   r5 -- r13;
// [Asm]   r11 -- r12;
// [Asm]   r5 -- r19;
// [Asm]   r1 -- r15;
// [Asm]   r11 -- r23;
// [Asm]   r1 -- r13;
// [Asm]   r6 -- r16;
// [Asm]   r11 -- r22;
// [Asm]   r2 -- r11;
// [Asm]   r6 -- r22;
// [Asm]   r7 -- r9;
// [Asm]   r5 -- r16;
// [Asm]   r8 -- r20;
// [Asm]   r5 -- r11;
// [Asm]   r6 -- r12;
// [Asm]   r22 -- r24;
// [Asm]   r6 -- r24;
// [Asm]   r6 -- r20;
// [Asm]   r6 -- r8;
// [Asm]   r6 -- r19;
// [Asm]   r8 -- r13;
// [Asm]   r5 -- r9;
// [Asm]   r0 -- r3;
// [Asm]   r8 -- r15;
// [Asm]   r8 -- r18;
// [Asm]   r22 -- r23;
// [Asm]   r7 -- r11;
// [Asm]   r0 -- r5;
// [Asm]   r6 -- r17;
// [Asm]   r8 -- r10;
// [Asm]   r4 -- r7;
// [Asm]   r4 -- r6;
// [Asm]   r1 -- r14;
// [Asm]   r1 -- r3;
// [Asm]   r0 -- r7;
// [Asm]   r2 -- r3;
// [Asm]   r11 -- r21;
// [Asm]   r5 -- r15;
// [Asm]   r1 -- r24;
// [Asm]   r5 -- r12;
// [Asm]   comment = "0:v0-> 1:a0-> 2:a2-> 3:a1-> 5:v2-> 6:v3-> 7:v4-> 8:v5-> 11:v6-> 4:s11-> 9:v13-> 12:t0-> 13:t1-> 14:t2-> 15:t3-> 16:t4-> 17:a3-> 18:a4-> 19:a5-> 20:a6-> 21:a7-> 24:v10-> 10:v14-> 22:v8-> 23:s10-> 25:v9"
// [Asm]   comment = "v0<-a3;v13<-a0;v3<-s1;v6<-s3;v4<-a2;v14<-a0;v8<-a0;v5<-s2;v2<-s0;v10<-a3;v9<-a0;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of make_arr103_12"];
// [Asm]   r0 [label="ft0", color=blue];
// [Asm]   r3 [label="ft3", color=blue];
// [Asm]   r9 [label="ft9", color=blue];
// [Asm]   r6 [label="ft6", color=blue];
// [Asm]   r13 [label="fa2", color=blue];
// [Asm]   r4 [label="ft4", color=blue];
// [Asm]   r1 [label="ft1", color=blue];
// [Asm]   r11 [label="fa0", color=blue];
// [Asm]   r7 [label="ft7", color=blue];
// [Asm]   r10 [label="ft10", color=blue];
// [Asm]   r14 [label="fa3", color=blue];
// [Asm]   r8 [label="ft8", color=blue];
// [Asm]   r5 [label="ft5", color=blue];
// [Asm]   r15 [label="fa4", color=blue];
// [Asm]   r2 [label="ft2", color=blue];
// [Asm]   r16 [label="fa5", color=blue];
// [Asm]   r18 [label="fa7", color=blue];
// [Asm]   r17 [label="fa6", color=blue];
// [Asm]   r12 [label="fa1", color=blue];
// [Asm]   comment = "0:ft0-> 1:ft1-> 2:ft2-> 3:ft3-> 4:ft4-> 5:ft5-> 6:ft6-> 7:ft7-> 8:ft8-> 9:ft9-> 10:ft10-> 11:fa0-> 12:fa1-> 13:fa2-> 14:fa3-> 15:fa4-> 16:fa5-> 17:fa6-> 18:fa7"
// [Asm]   comment = ""
// [Asm] }
// [Asm] 
// [Asm] subst   mv v0, s10 ->   mv a3, s10
// [Asm] subst   mv v2, a0 ->   mv s0, a0
// [Asm] subst   mv v3, a1 ->   mv s1, a1
// [Asm] subst   ld v5, 8(v0) ->   ld s2, 8(a3)
// [Asm] subst   slliw v13, v2, 3 ->   slliw a0, s0, 3
// [Asm] subst   sub v14, s11, v13 ->   sub a0, s11, a0
// [Asm] subst   andi v6, v14, -8 ->   andi s3, a0, -8
// [Asm] subst   mv s11, v6 ->   mv s11, s3
// [Asm] subst   mv a1, v2 ->   mv a1, s0
// [Asm] subst   mv a0, v6 ->   mv a0, s3
// [Asm] subst   call memseti64 ->   call memseti64
// [Asm] subst   addi v8, v2, -1 ->   addi a0, s0, -1
// [Asm] subst   mv s10, v5 ->   mv s10, s2
// [Asm] subst   ld v10, 0(v5) ->   ld a3, 0(s2)
// [Asm] subst   mv a1, v3 ->   mv a1, s1
// [Asm] subst   mv a2, v6 ->   mv a2, s3
// [Asm] subst   jalr v10 ->   jalr a3
// [Asm] subst   mv a0, v6 ->   mv a0, s3
// [Asm] subst   ret ->   ret
// [Asm] pre_assigned_registers: Insn(iref=%15) -> v20, Insn(iref=%41) -> v46, Insn(iref=%33) -> v38, Insn(iref=%8) -> v13, Insn(iref=%10) -> v15, Insn(iref=%27) -> v32, Insn(iref=%14) -> v19, Insn(iref=%25) -> v30, Insn(iref=%39) -> v44, Insn(iref=%4) -> v9, Mem(fref=f4, mref=m2) -> v4, Insn(iref=%49) -> v54, Insn(iref=%42) -> fv47, Insn(iref=%44) -> v49, Insn(iref=%32) -> fv37, Insn(iref=%1) -> v6, Insn(iref=%11) -> v16, Insn(iref=%26) -> v31, Insn(iref=%6) -> v11, Mem(fref=f4, mref=m0) -> v2, Insn(iref=%31) -> v36, Insn(iref=%35) -> v40, Insn(iref=%28) -> v33, Insn(iref=%38) -> v43, Insn(iref=%46) -> v51, Insn(iref=%9) -> v14, Insn(iref=%16) -> v21, Insn(iref=%24) -> v29, Insn(iref=%37) -> fv42, Insn(iref=%45) -> v50, Insn(iref=%29) -> v34, Insn(iref=%5) -> v10, Insn(iref=%47) -> fv52, Insn(iref=%19) -> v24, Insn(iref=%0) -> v5, Insn(iref=%3) -> v8, Insn(iref=%18) -> v23, Insn(iref=%13) -> v18, Insn(iref=%7) -> v12, Insn(iref=%22) -> v27, Insn(iref=%17) -> v22, Insn(iref=%23) -> v28, Insn(iref=%48) -> v53, Insn(iref=%2) -> v7, Insn(iref=%20) -> v25, Insn(iref=%43) -> v48, Insn(iref=%30) -> v35, Mem(fref=f4, mref=m1) -> v3, Self(fref=f4) -> v0, Insn(iref=%21) -> v26, Insn(iref=%34) -> v39, Insn(iref=%36) -> v41, Insn(iref=%40) -> v45, Insn(iref=%12) -> v17
// [Asm] defs: []
// [Asm] live_set: [zero, s11]
// [Asm] move_origin: []
// [Asm] defs: [v132]
// [Asm] live_set: [zero, v132]
// [Asm] move_origin: []
// [Asm] defined: v132 is X
// [Asm] defs: [v2]
// [Asm] live_set: [zero, v2]
// [Asm] move_origin: []
// [Asm] defined: v2 is X
// [Asm] defs: [s11]
// [Asm] live_set: [zero, s11, v2]
// [Asm] move_origin: [v2]
// [Asm] defined: s11 is X
// [Asm] defs: [fv134]
// [Asm] live_set: [zero, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: fv134 is F
// [Asm] defs: [v129]
// [Asm] live_set: [zero, v129, v2]
// [Asm] move_origin: []
// [Asm] defined: v129 is X
// [Asm] defs: [v3]
// [Asm] live_set: [v3, zero, v2]
// [Asm] move_origin: []
// [Asm] defined: v3 is X
// [Asm] defs: [s11]
// [Asm] live_set: [v3, zero, s11, v2]
// [Asm] move_origin: [v3]
// [Asm] defined: s11 is X
// [Asm] defs: [v131]
// [Asm] live_set: [v3, zero, s11, v131, v2]
// [Asm] move_origin: []
// [Asm] defined: v131 is X
// [Asm] defs: []
// [Asm] live_set: [v3, zero, s11, v2]
// [Asm] move_origin: []
// [Asm] defs: [v126]
// [Asm] live_set: [v3, zero, v126, v2]
// [Asm] move_origin: []
// [Asm] defined: v126 is X
// [Asm] defs: [v4]
// [Asm] live_set: [v3, zero, v4, v2]
// [Asm] move_origin: []
// [Asm] defined: v4 is X
// [Asm] defs: [s11]
// [Asm] live_set: [v3, zero, v4, v2]
// [Asm] move_origin: [v4]
// [Asm] defined: s11 is X
// [Asm] defs: [v128]
// [Asm] live_set: [v3, zero, v4, v128, v2]
// [Asm] move_origin: []
// [Asm] defined: v128 is X
// [Asm] defs: []
// [Asm] live_set: [v3, zero, v4, v2]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [zero, v4, v2]
// [Asm] move_origin: []
// [Asm] defs: [s10]
// [Asm] live_set: [zero, v4, v2]
// [Asm] move_origin: [v4]
// [Asm] defined: s10 is X
// [Asm] defs: [v122]
// [Asm] live_set: [zero, v4, v122, v2]
// [Asm] move_origin: []
// [Asm] defined: v122 is X
// [Asm] defs: []
// [Asm] live_set: [zero, v4, v122, v2]
// [Asm] move_origin: []
// [Asm] defs: [v123]
// [Asm] live_set: [zero, v123, v4, v122, v2]
// [Asm] move_origin: []
// [Asm] defined: v123 is X
// [Asm] defs: [a0]
// [Asm] live_set: [zero, a0, v4, v122, v2]
// [Asm] move_origin: [v123]
// [Asm] defined: a0 is X
// [Asm] defs: [v124]
// [Asm] live_set: [v124, zero, a0, v4, v122, v2]
// [Asm] move_origin: []
// [Asm] defined: v124 is X
// [Asm] defs: [a1]
// [Asm] live_set: [zero, a0, v4, a1, v122, v2]
// [Asm] move_origin: [v124]
// [Asm] defined: a1 is X
// [Asm] defs: [a2]
// [Asm] live_set: [zero, a0, v4, a2, a1, v122, v2]
// [Asm] move_origin: [v2]
// [Asm] defined: a2 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [zero, a0, v4, v2]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v8]
// [Asm] live_set: [zero, v8, v4, v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v8 is X
// [Asm] defs: []
// [Asm] live_set: [zero, v8, v4, v2]
// [Asm] move_origin: []
// [Asm] defs: [s10]
// [Asm] live_set: [zero, v8, v4, v2]
// [Asm] move_origin: [v4]
// [Asm] defined: s10 is X
// [Asm] defs: [v118]
// [Asm] live_set: [v118, zero, v8, v4, v2]
// [Asm] move_origin: []
// [Asm] defined: v118 is X
// [Asm] defs: []
// [Asm] live_set: [v118, zero, v8, v4, v2]
// [Asm] move_origin: []
// [Asm] defs: [v119]
// [Asm] live_set: [v118, zero, v119, v8, v4, v2]
// [Asm] move_origin: []
// [Asm] defined: v119 is X
// [Asm] defs: [a0]
// [Asm] live_set: [v118, zero, a0, v8, v4, v2]
// [Asm] move_origin: [v119]
// [Asm] defined: a0 is X
// [Asm] defs: [v120]
// [Asm] live_set: [v118, zero, a0, v120, v8, v4, v2]
// [Asm] move_origin: []
// [Asm] defined: v120 is X
// [Asm] defs: [a1]
// [Asm] live_set: [v118, zero, a0, v8, v4, a1, v2]
// [Asm] move_origin: [v120]
// [Asm] defined: a1 is X
// [Asm] defs: [a2]
// [Asm] live_set: [v118, zero, a0, v8, v4, a2, a1, v2]
// [Asm] move_origin: [v2]
// [Asm] defined: a2 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [zero, a0, v8, v4, v2]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v9]
// [Asm] live_set: [zero, v8, v4, v9, v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v9 is X
// [Asm] defs: []
// [Asm] live_set: [zero, v8, v4, v9, v2]
// [Asm] move_origin: []
// [Asm] defs: [s10]
// [Asm] live_set: [zero, v8, v4, v9, v2]
// [Asm] move_origin: [v4]
// [Asm] defined: s10 is X
// [Asm] defs: [v114]
// [Asm] live_set: [zero, v8, v114, v9, v2]
// [Asm] move_origin: []
// [Asm] defined: v114 is X
// [Asm] defs: []
// [Asm] live_set: [zero, v8, v114, v9, v2]
// [Asm] move_origin: []
// [Asm] defs: [v115]
// [Asm] live_set: [v115, zero, v8, v114, v9, v2]
// [Asm] move_origin: []
// [Asm] defined: v115 is X
// [Asm] defs: [a0]
// [Asm] live_set: [zero, a0, v8, v114, v9, v2]
// [Asm] move_origin: [v115]
// [Asm] defined: a0 is X
// [Asm] defs: [v116]
// [Asm] live_set: [v116, zero, a0, v8, v114, v9, v2]
// [Asm] move_origin: []
// [Asm] defined: v116 is X
// [Asm] defs: [a1]
// [Asm] live_set: [zero, a0, v8, v114, a1, v9, v2]
// [Asm] move_origin: [v116]
// [Asm] defined: a1 is X
// [Asm] defs: [a2]
// [Asm] live_set: [zero, a0, v8, a2, v114, a1, v9]
// [Asm] move_origin: [v2]
// [Asm] defined: a2 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [zero, a0, v8, v9]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v10]
// [Asm] live_set: [v10, zero, v8, v9]
// [Asm] move_origin: [a0]
// [Asm] defined: v10 is X
// [Asm] defs: []
// [Asm] live_set: [v10, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defs: [v11]
// [Asm] live_set: [v11, v10, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defined: v11 is X
// [Asm] defs: [v111]
// [Asm] live_set: [v11, v10, zero, v8, v111, v9]
// [Asm] move_origin: []
// [Asm] defined: v111 is X
// [Asm] defs: [fv112]
// [Asm] live_set: [v11, v10, zero, fv112, v8, v9]
// [Asm] move_origin: []
// [Asm] defined: fv112 is F
// [Asm] defs: []
// [Asm] live_set: [v10, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defs: [v13]
// [Asm] live_set: [v10, zero, v13, v8, v9]
// [Asm] move_origin: []
// [Asm] defined: v13 is X
// [Asm] defs: [v108]
// [Asm] live_set: [v10, zero, v13, v8, v108, v9]
// [Asm] move_origin: []
// [Asm] defined: v108 is X
// [Asm] defs: [fv109]
// [Asm] live_set: [v10, zero, v13, v8, fv109, v9]
// [Asm] move_origin: []
// [Asm] defined: fv109 is F
// [Asm] defs: []
// [Asm] live_set: [v10, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defs: [v15]
// [Asm] live_set: [v10, zero, v8, v15, v9]
// [Asm] move_origin: []
// [Asm] defined: v15 is X
// [Asm] defs: [v105]
// [Asm] live_set: [v10, zero, v8, v105, v15, v9]
// [Asm] move_origin: []
// [Asm] defined: v105 is X
// [Asm] defs: [fv106]
// [Asm] live_set: [v10, zero, v8, fv106, v15, v9]
// [Asm] move_origin: []
// [Asm] defined: fv106 is F
// [Asm] defs: []
// [Asm] live_set: [v10, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defs: [v17]
// [Asm] live_set: [v10, zero, v8, v17, v9]
// [Asm] move_origin: []
// [Asm] defined: v17 is X
// [Asm] defs: [v102]
// [Asm] live_set: [v10, zero, v8, v17, v102, v9]
// [Asm] move_origin: []
// [Asm] defined: v102 is X
// [Asm] defs: [fv103]
// [Asm] live_set: [v10, zero, v8, v17, fv103, v9]
// [Asm] move_origin: []
// [Asm] defined: fv103 is F
// [Asm] defs: []
// [Asm] live_set: [v10, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defs: [v19]
// [Asm] live_set: [v10, zero, v8, v19, v9]
// [Asm] move_origin: []
// [Asm] defined: v19 is X
// [Asm] defs: [v99]
// [Asm] live_set: [v10, v99, zero, v8, v19, v9]
// [Asm] move_origin: []
// [Asm] defined: v99 is X
// [Asm] defs: [fv100]
// [Asm] live_set: [v10, zero, v8, fv100, v19, v9]
// [Asm] move_origin: []
// [Asm] defined: fv100 is F
// [Asm] defs: []
// [Asm] live_set: [v10, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defs: [v21]
// [Asm] live_set: [v10, v21, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defined: v21 is X
// [Asm] defs: [v96]
// [Asm] live_set: [v10, v21, v96, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defined: v96 is X
// [Asm] defs: [fv97]
// [Asm] live_set: [v10, v21, fv97, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defined: fv97 is F
// [Asm] defs: []
// [Asm] live_set: [v10, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defs: [v23]
// [Asm] live_set: [v10, zero, v23, v8, v9]
// [Asm] move_origin: []
// [Asm] defined: v23 is X
// [Asm] defs: [v93]
// [Asm] live_set: [v10, zero, v23, v8, v9, v93]
// [Asm] move_origin: []
// [Asm] defined: v93 is X
// [Asm] defs: [fv94]
// [Asm] live_set: [v10, fv94, zero, v23, v8, v9]
// [Asm] move_origin: []
// [Asm] defined: fv94 is F
// [Asm] defs: []
// [Asm] live_set: [v10, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defs: [v25]
// [Asm] live_set: [v25, v10, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defined: v25 is X
// [Asm] defs: [v90]
// [Asm] live_set: [v25, v10, zero, v8, v90, v9]
// [Asm] move_origin: []
// [Asm] defined: v90 is X
// [Asm] defs: [fv91]
// [Asm] live_set: [v25, fv91, v10, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defined: fv91 is F
// [Asm] defs: []
// [Asm] live_set: [v10, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defs: [v27]
// [Asm] live_set: [v10, zero, v27, v8, v9]
// [Asm] move_origin: []
// [Asm] defined: v27 is X
// [Asm] defs: [v87]
// [Asm] live_set: [v87, v10, zero, v27, v8, v9]
// [Asm] move_origin: []
// [Asm] defined: v87 is X
// [Asm] defs: [fv88]
// [Asm] live_set: [v10, zero, v27, v8, v9, fv88]
// [Asm] move_origin: []
// [Asm] defined: fv88 is F
// [Asm] defs: []
// [Asm] live_set: [v10, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defs: [v29]
// [Asm] live_set: [v10, zero, v29, v8, v9]
// [Asm] move_origin: []
// [Asm] defined: v29 is X
// [Asm] defs: [v84]
// [Asm] live_set: [v10, zero, v29, v8, v84, v9]
// [Asm] move_origin: []
// [Asm] defined: v84 is X
// [Asm] defs: [fv85]
// [Asm] live_set: [v10, zero, v29, v8, fv85, v9]
// [Asm] move_origin: []
// [Asm] defined: fv85 is F
// [Asm] defs: []
// [Asm] live_set: [v10, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defs: [v31]
// [Asm] live_set: [v10, zero, v8, v31, v9]
// [Asm] move_origin: []
// [Asm] defined: v31 is X
// [Asm] defs: [v81]
// [Asm] live_set: [v10, zero, v8, v81, v31, v9]
// [Asm] move_origin: []
// [Asm] defined: v81 is X
// [Asm] defs: [fv82]
// [Asm] live_set: [v10, zero, v8, fv82, v31, v9]
// [Asm] move_origin: []
// [Asm] defined: fv82 is F
// [Asm] defs: []
// [Asm] live_set: [v10, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defs: [v33]
// [Asm] live_set: [v10, zero, v8, v9, v33]
// [Asm] move_origin: []
// [Asm] defined: v33 is X
// [Asm] defs: [v78]
// [Asm] live_set: [v10, zero, v78, v8, v9, v33]
// [Asm] move_origin: []
// [Asm] defined: v78 is X
// [Asm] defs: [fv79]
// [Asm] live_set: [fv79, v10, zero, v8, v9, v33]
// [Asm] move_origin: []
// [Asm] defined: fv79 is F
// [Asm] defs: []
// [Asm] live_set: [v10, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v10, zero, v8, v9]
// [Asm] move_origin: []
// [Asm] defs: [v74]
// [Asm] live_set: [v10, zero, v8, v74, v9]
// [Asm] move_origin: []
// [Asm] defined: v74 is X
// [Asm] defs: [a0]
// [Asm] live_set: [v10, zero, a0, v8, v9]
// [Asm] move_origin: [v74]
// [Asm] defined: a0 is X
// [Asm] defs: [v75]
// [Asm] live_set: [v10, v75, zero, a0, v8, v9]
// [Asm] move_origin: []
// [Asm] defined: v75 is X
// [Asm] defs: [a1]
// [Asm] live_set: [v10, zero, a0, v8, a1, v9]
// [Asm] move_origin: [v75]
// [Asm] defined: a1 is X
// [Asm] defs: [v76]
// [Asm] live_set: [v10, zero, a0, v8, a1, v9, v76]
// [Asm] move_origin: []
// [Asm] defined: v76 is X
// [Asm] defs: [a2]
// [Asm] live_set: [v10, zero, a0, v8, a2, a1, v9]
// [Asm] move_origin: [v76]
// [Asm] defined: a2 is X
// [Asm] defs: [a3]
// [Asm] live_set: [v10, zero, a0, a2, a1, a3, v9]
// [Asm] move_origin: [v8]
// [Asm] defined: a3 is X
// [Asm] defs: [a4]
// [Asm] live_set: [v10, zero, a0, a4, a2, a1, a3]
// [Asm] move_origin: [v9]
// [Asm] defined: a4 is X
// [Asm] defs: [a5]
// [Asm] live_set: [v10, a5, zero, a0, a4, a2, a1, a3]
// [Asm] move_origin: [v10]
// [Asm] defined: a5 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [v10, zero, a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v35]
// [Asm] live_set: [v10, zero]
// [Asm] move_origin: [a0]
// [Asm] defined: v35 is X
// [Asm] defs: []
// [Asm] live_set: [v10, zero]
// [Asm] move_origin: []
// [Asm] defs: [v36]
// [Asm] live_set: [v10, zero, v36]
// [Asm] move_origin: []
// [Asm] defined: v36 is X
// [Asm] defs: [fv37]
// [Asm] live_set: [fv37, v10, zero]
// [Asm] move_origin: []
// [Asm] defined: fv37 is F
// [Asm] defs: [v38]
// [Asm] live_set: [v38, v10, zero]
// [Asm] move_origin: []
// [Asm] defined: v38 is X
// [Asm] defs: []
// [Asm] live_set: [v38, v10, zero]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [v10, zero, a0]
// [Asm] move_origin: [v38]
// [Asm] defined: a0 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [v10, zero, a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v39]
// [Asm] live_set: [v10, zero]
// [Asm] move_origin: [a0]
// [Asm] defined: v39 is X
// [Asm] defs: []
// [Asm] live_set: [v10, zero]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v10, zero]
// [Asm] move_origin: []
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [v10, zero, a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v40]
// [Asm] live_set: [v10, zero]
// [Asm] move_origin: [a0]
// [Asm] defined: v40 is X
// [Asm] defs: []
// [Asm] live_set: [v10, zero]
// [Asm] move_origin: []
// [Asm] defs: [v41]
// [Asm] live_set: [v41, v10, zero]
// [Asm] move_origin: []
// [Asm] defined: v41 is X
// [Asm] defs: [fv42]
// [Asm] live_set: [v10, zero, fv42]
// [Asm] move_origin: []
// [Asm] defined: fv42 is F
// [Asm] defs: [v43]
// [Asm] live_set: [v43, v10, zero]
// [Asm] move_origin: []
// [Asm] defined: v43 is X
// [Asm] defs: []
// [Asm] live_set: [v43, v10, zero]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [v10, zero, a0]
// [Asm] move_origin: [v43]
// [Asm] defined: a0 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [v10, zero, a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v44]
// [Asm] live_set: [v10, zero]
// [Asm] move_origin: [a0]
// [Asm] defined: v44 is X
// [Asm] defs: []
// [Asm] live_set: [v10, zero]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v10, zero]
// [Asm] move_origin: []
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [v10, zero, a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v45]
// [Asm] live_set: [v10, zero]
// [Asm] move_origin: [a0]
// [Asm] defined: v45 is X
// [Asm] defs: []
// [Asm] live_set: [v10, zero]
// [Asm] move_origin: []
// [Asm] defs: [v46]
// [Asm] live_set: [v46, v10, zero]
// [Asm] move_origin: []
// [Asm] defined: v46 is X
// [Asm] defs: [fv47]
// [Asm] live_set: [v10, fv47, zero]
// [Asm] move_origin: []
// [Asm] defined: fv47 is F
// [Asm] defs: [v48]
// [Asm] live_set: [v10, v48, zero]
// [Asm] move_origin: []
// [Asm] defined: v48 is X
// [Asm] defs: []
// [Asm] live_set: [v10, v48, zero]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [v10, zero, a0]
// [Asm] move_origin: [v48]
// [Asm] defined: a0 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [v10, zero, a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v49]
// [Asm] live_set: [v10, zero]
// [Asm] move_origin: [a0]
// [Asm] defined: v49 is X
// [Asm] defs: []
// [Asm] live_set: [v10, zero]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v10, zero]
// [Asm] move_origin: []
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [v10, zero, a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v50]
// [Asm] live_set: [v10, zero]
// [Asm] move_origin: [a0]
// [Asm] defined: v50 is X
// [Asm] defs: []
// [Asm] live_set: [v10, zero]
// [Asm] move_origin: []
// [Asm] defs: [v51]
// [Asm] live_set: [zero, v51]
// [Asm] move_origin: []
// [Asm] defined: v51 is X
// [Asm] defs: [fv52]
// [Asm] live_set: [fv52, zero]
// [Asm] move_origin: []
// [Asm] defined: fv52 is F
// [Asm] defs: [v53]
// [Asm] live_set: [v53, zero]
// [Asm] move_origin: []
// [Asm] defined: v53 is X
// [Asm] defs: []
// [Asm] live_set: [v53, zero]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [zero, a0]
// [Asm] move_origin: [v53]
// [Asm] defined: a0 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [zero, a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v54]
// [Asm] live_set: [zero]
// [Asm] move_origin: [a0]
// [Asm] defined: v54 is X
// [Asm] defs: []
// [Asm] live_set: [zero]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [zero]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of main85_4"];
// [Asm]   r0 [label="v132 ← a0", color=green];
// [Asm]   r46 [label="v21 ← a0", color=green];
// [Asm]   r33 [label="v115 ← a0", color=green];
// [Asm]   r76 [label="v51 ← a0", color=green];
// [Asm]   r59 [label="v78 ← a1", color=green];
// [Asm]   r9 [label="v128 ← a1", color=green];
// [Asm]   r26 [label="a7", color=blue];
// [Asm]   r44 [label="v19 ← a0", color=green];
// [Asm]   r53 [label="v87 ← a1", color=green];
// [Asm]   r56 [label="v31 ← a0", color=green];
// [Asm]   r10 [label="s10", color=blue];
// [Asm]   r5 [label="v3 ← a0", color=green];
// [Asm]   r54 [label="v29 ← a0", color=green];
// [Asm]   r24 [label="a5", color=blue];
// [Asm]   r43 [label="v102 ← a1", color=green];
// [Asm]   r31 [label="v9 ← s3", color=green];
// [Asm]   r39 [label="v108 ← a1", color=green];
// [Asm]   r17 [label="t0", color=blue];
// [Asm]   r52 [label="v27 ← a0", color=green];
// [Asm]   r65 [label="v38 ← a0", color=green];
// [Asm]   r20 [label="t3", color=blue];
// [Asm]   r61 [label="v75 ← a1", color=green];
// [Asm]   r23 [label="a4", color=blue];
// [Asm]   r3 [label="s11", color=blue];
// [Asm]   r67 [label="v40 ← a0", color=green];
// [Asm]   r75 [label="v50 ← a0", color=green];
// [Asm]   r77 [label="v53 ← a0", color=green];
// [Asm]   r27 [label="v8 ← s2", color=green];
// [Asm]   r62 [label="v76 ← a2", color=green];
// [Asm]   r40 [label="v15 ← a0", color=green];
// [Asm]   r11 [label="v122 ← a3", color=green];
// [Asm]   r58 [label="v33 ← a0", color=green];
// [Asm]   r34 [label="v116 ← a1", color=green];
// [Asm]   r14 [label="v124 ← a1", color=green];
// [Asm]   r51 [label="v90 ← a1", color=green];
// [Asm]   r78 [label="v54 ← a0", color=green];
// [Asm]   r55 [label="v84 ← a1", color=green];
// [Asm]   r16 [label="a2", color=blue];
// [Asm]   r21 [label="t4", color=blue];
// [Asm]   r60 [label="v74 ← a0", color=green];
// [Asm]   r73 [label="v48 ← a0", color=green];
// [Asm]   r38 [label="v13 ← a0", color=green];
// [Asm]   r72 [label="v46 ← a0", color=green];
// [Asm]   r47 [label="v96 ← a1", color=green];
// [Asm]   r6 [label="v131 ← a1", color=green];
// [Asm]   r13 [label="a0", color=blue];
// [Asm]   r42 [label="v17 ← a0", color=green];
// [Asm]   r4 [label="v129 ← a0", color=green];
// [Asm]   r29 [label="v119 ← a0", color=green];
// [Asm]   r35 [label="v10 ← s0", color=green];
// [Asm]   r7 [label="v126 ← a1", color=green];
// [Asm]   r64 [label="v36 ← a0", color=green];
// [Asm]   r8 [label="v4 ← s1", color=green];
// [Asm]   r36 [label="v11 ← a0", color=green];
// [Asm]   r66 [label="v39 ← a0", color=green];
// [Asm]   r32 [label="v114 ← a3", color=green];
// [Asm]   r15 [label="a1", color=blue];
// [Asm]   r49 [label="v93 ← a1", color=green];
// [Asm]   r57 [label="v81 ← a1", color=green];
// [Asm]   r74 [label="v49 ← a0", color=green];
// [Asm]   r68 [label="v41 ← a0", color=green];
// [Asm]   r70 [label="v44 ← a0", color=green];
// [Asm]   r48 [label="v23 ← a0", color=green];
// [Asm]   r12 [label="v123 ← a0", color=green];
// [Asm]   r37 [label="v111 ← a1", color=green];
// [Asm]   r1 [label="zero", color=blue];
// [Asm]   r41 [label="v105 ← a1", color=green];
// [Asm]   r28 [label="v118 ← a3", color=green];
// [Asm]   r71 [label="v45 ← a0", color=green];
// [Asm]   r22 [label="a3", color=blue];
// [Asm]   r69 [label="v43 ← a0", color=green];
// [Asm]   r50 [label="v25 ← a0", color=green];
// [Asm]   r30 [label="v120 ← a1", color=green];
// [Asm]   r45 [label="v99 ← a1", color=green];
// [Asm]   r25 [label="a6", color=blue];
// [Asm]   r63 [label="v35 ← a0", color=green];
// [Asm]   r2 [label="v2 ← s0", color=green];
// [Asm]   r18 [label="t1", color=blue];
// [Asm]   r19 [label="t2", color=blue];
// [Asm]   r8 -- r31;
// [Asm]   r2 -- r32;
// [Asm]   r2 -- r31;
// [Asm]   r27 -- r57;
// [Asm]   r35 -- r58;
// [Asm]   r1 -- r26;
// [Asm]   r1 -- r30;
// [Asm]   r35 -- r49;
// [Asm]   r1 -- r57;
// [Asm]   r35 -- r59;
// [Asm]   r13 -- r32;
// [Asm]   r11 -- r14;
// [Asm]   r3 -- r6;
// [Asm]   r15 -- r31;
// [Asm]   r31 -- r45;
// [Asm]   r27 -- r36;
// [Asm]   r27 -- r51;
// [Asm]   r35 -- r61;
// [Asm]   r35 -- r42;
// [Asm]   r17 -- r35;
// [Asm]   r28 -- r30;
// [Asm]   r1 -- r45;
// [Asm]   r23 -- r35;
// [Asm]   r13 -- r31;
// [Asm]   r1 -- r52;
// [Asm]   r27 -- r28;
// [Asm]   r2 -- r7;
// [Asm]   r1 -- r16;
// [Asm]   r1 -- r33;
// [Asm]   r27 -- r34;
// [Asm]   r18 -- r35;
// [Asm]   r35 -- r70;
// [Asm]   r3 -- r5;
// [Asm]   r35 -- r66;
// [Asm]   r1 -- r68;
// [Asm]   r1 -- r50;
// [Asm]   r8 -- r12;
// [Asm]   r2 -- r34;
// [Asm]   r31 -- r35;
// [Asm]   r8 -- r24;
// [Asm]   r1 -- r9;
// [Asm]   r2 -- r25;
// [Asm]   r26 -- r27;
// [Asm]   r13 -- r30;
// [Asm]   r2 -- r6;
// [Asm]   r5 -- r6;
// [Asm]   r8 -- r16;
// [Asm]   r1 -- r48;
// [Asm]   r31 -- r55;
// [Asm]   r1 -- r64;
// [Asm]   r11 -- r13;
// [Asm]   r56 -- r57;
// [Asm]   r1 -- r77;
// [Asm]   r35 -- r38;
// [Asm]   r1 -- r40;
// [Asm]   r27 -- r50;
// [Asm]   r22 -- r27;
// [Asm]   r2 -- r12;
// [Asm]   r8 -- r23;
// [Asm]   r10 -- r31;
// [Asm]   r27 -- r54;
// [Asm]   r1 -- r2;
// [Asm]   r20 -- r27;
// [Asm]   r2 -- r5;
// [Asm]   r2 -- r13;
// [Asm]   r0 -- r1;
// [Asm]   r1 -- r51;
// [Asm]   r23 -- r24;
// [Asm]   r35 -- r71;
// [Asm]   r27 -- r46;
// [Asm]   r1 -- r11;
// [Asm]   r31 -- r58;
// [Asm]   r35 -- r52;
// [Asm]   r32 -- r34;
// [Asm]   r35 -- r37;
// [Asm]   r15 -- r23;
// [Asm]   r11 -- r15;
// [Asm]   r1 -- r41;
// [Asm]   r1 -- r38;
// [Asm]   r13 -- r35;
// [Asm]   r2 -- r22;
// [Asm]   r27 -- r35;
// [Asm]   r1 -- r5;
// [Asm]   r17 -- r31;
// [Asm]   r1 -- r35;
// [Asm]   r16 -- r24;
// [Asm]   r17 -- r27;
// [Asm]   r27 -- r45;
// [Asm]   r8 -- r30;
// [Asm]   r27 -- r31;
// [Asm]   r27 -- r62;
// [Asm]   r27 -- r40;
// [Asm]   r27 -- r42;
// [Asm]   r13 -- r15;
// [Asm]   r31 -- r60;
// [Asm]   r2 -- r26;
// [Asm]   r27 -- r60;
// [Asm]   r35 -- r67;
// [Asm]   r1 -- r43;
// [Asm]   r1 -- r8;
// [Asm]   r2 -- r4;
// [Asm]   r1 -- r75;
// [Asm]   r27 -- r41;
// [Asm]   r1 -- r34;
// [Asm]   r1 -- r47;
// [Asm]   r8 -- r27;
// [Asm]   r1 -- r55;
// [Asm]   r16 -- r32;
// [Asm]   r27 -- r48;
// [Asm]   r8 -- r9;
// [Asm]   r11 -- r16;
// [Asm]   r1 -- r22;
// [Asm]   r15 -- r35;
// [Asm]   r13 -- r16;
// [Asm]   r11 -- r12;
// [Asm]   r31 -- r41;
// [Asm]   r1 -- r13;
// [Asm]   r27 -- r53;
// [Asm]   r35 -- r51;
// [Asm]   r2 -- r11;
// [Asm]   r31 -- r42;
// [Asm]   r8 -- r20;
// [Asm]   r8 -- r25;
// [Asm]   r35 -- r41;
// [Asm]   r20 -- r35;
// [Asm]   r13 -- r19;
// [Asm]   r35 -- r69;
// [Asm]   r35 -- r50;
// [Asm]   r27 -- r43;
// [Asm]   r22 -- r35;
// [Asm]   r31 -- r46;
// [Asm]   r31 -- r40;
// [Asm]   r35 -- r43;
// [Asm]   r27 -- r38;
// [Asm]   r31 -- r37;
// [Asm]   r2 -- r14;
// [Asm]   r32 -- r33;
// [Asm]   r5 -- r9;
// [Asm]   r25 -- r35;
// [Asm]   r8 -- r15;
// [Asm]   r13 -- r23;
// [Asm]   r27 -- r47;
// [Asm]   r31 -- r44;
// [Asm]   r48 -- r49;
// [Asm]   r1 -- r29;
// [Asm]   r16 -- r35;
// [Asm]   r13 -- r14;
// [Asm]   r8 -- r18;
// [Asm]   r1 -- r72;
// [Asm]   r25 -- r31;
// [Asm]   r35 -- r46;
// [Asm]   r1 -- r25;
// [Asm]   r13 -- r17;
// [Asm]   r31 -- r62;
// [Asm]   r35 -- r75;
// [Asm]   r1 -- r61;
// [Asm]   r2 -- r17;
// [Asm]   r15 -- r24;
// [Asm]   r2 -- r30;
// [Asm]   r8 -- r26;
// [Asm]   r27 -- r33;
// [Asm]   r31 -- r56;
// [Asm]   r35 -- r45;
// [Asm]   r31 -- r33;
// [Asm]   r26 -- r31;
// [Asm]   r2 -- r9;
// [Asm]   r2 -- r27;
// [Asm]   r1 -- r54;
// [Asm]   r27 -- r52;
// [Asm]   r31 -- r47;
// [Asm]   r1 -- r24;
// [Asm]   r1 -- r42;
// [Asm]   r2 -- r20;
// [Asm]   r1 -- r76;
// [Asm]   r31 -- r59;
// [Asm]   r23 -- r31;
// [Asm]   r21 -- r35;
// [Asm]   r27 -- r59;
// [Asm]   r35 -- r48;
// [Asm]   r1 -- r12;
// [Asm]   r1 -- r71;
// [Asm]   r1 -- r37;
// [Asm]   r2 -- r15;
// [Asm]   r5 -- r8;
// [Asm]   r13 -- r61;
// [Asm]   r27 -- r44;
// [Asm]   r27 -- r29;
// [Asm]   r1 -- r4;
// [Asm]   r27 -- r55;
// [Asm]   r1 -- r7;
// [Asm]   r1 -- r18;
// [Asm]   r27 -- r49;
// [Asm]   r1 -- r56;
// [Asm]   r1 -- r19;
// [Asm]   r1 -- r10;
// [Asm]   r1 -- r63;
// [Asm]   r2 -- r10;
// [Asm]   r27 -- r32;
// [Asm]   r1 -- r69;
// [Asm]   r31 -- r36;
// [Asm]   r19 -- r31;
// [Asm]   r18 -- r27;
// [Asm]   r44 -- r45;
// [Asm]   r1 -- r17;
// [Asm]   r22 -- r31;
// [Asm]   r1 -- r20;
// [Asm]   r2 -- r16;
// [Asm]   r42 -- r43;
// [Asm]   r13 -- r28;
// [Asm]   r27 -- r39;
// [Asm]   r1 -- r62;
// [Asm]   r31 -- r50;
// [Asm]   r31 -- r39;
// [Asm]   r1 -- r67;
// [Asm]   r27 -- r30;
// [Asm]   r35 -- r74;
// [Asm]   r1 -- r70;
// [Asm]   r1 -- r46;
// [Asm]   r1 -- r31;
// [Asm]   r35 -- r39;
// [Asm]   r15 -- r62;
// [Asm]   r31 -- r51;
// [Asm]   r35 -- r47;
// [Asm]   r2 -- r33;
// [Asm]   r24 -- r31;
// [Asm]   r8 -- r17;
// [Asm]   r50 -- r51;
// [Asm]   r54 -- r55;
// [Asm]   r35 -- r44;
// [Asm]   r19 -- r27;
// [Asm]   r1 -- r21;
// [Asm]   r35 -- r68;
// [Asm]   r35 -- r55;
// [Asm]   r58 -- r59;
// [Asm]   r21 -- r27;
// [Asm]   r35 -- r57;
// [Asm]   r2 -- r8;
// [Asm]   r24 -- r27;
// [Asm]   r1 -- r27;
// [Asm]   r28 -- r29;
// [Asm]   r13 -- r18;
// [Asm]   r8 -- r29;
// [Asm]   r8 -- r22;
// [Asm]   r5 -- r7;
// [Asm]   r8 -- r21;
// [Asm]   r35 -- r64;
// [Asm]   r13 -- r22;
// [Asm]   r8 -- r11;
// [Asm]   r1 -- r49;
// [Asm]   r18 -- r31;
// [Asm]   r1 -- r44;
// [Asm]   r1 -- r6;
// [Asm]   r31 -- r34;
// [Asm]   r2 -- r24;
// [Asm]   r8 -- r14;
// [Asm]   r13 -- r21;
// [Asm]   r15 -- r28;
// [Asm]   r16 -- r23;
// [Asm]   r31 -- r53;
// [Asm]   r2 -- r23;
// [Asm]   r16 -- r27;
// [Asm]   r16 -- r22;
// [Asm]   r27 -- r37;
// [Asm]   r35 -- r72;
// [Asm]   r36 -- r37;
// [Asm]   r35 -- r36;
// [Asm]   r13 -- r24;
// [Asm]   r16 -- r31;
// [Asm]   r1 -- r58;
// [Asm]   r20 -- r31;
// [Asm]   r2 -- r18;
// [Asm]   r31 -- r61;
// [Asm]   r1 -- r23;
// [Asm]   r35 -- r60;
// [Asm]   r1 -- r53;
// [Asm]   r15 -- r22;
// [Asm]   r8 -- r19;
// [Asm]   r25 -- r27;
// [Asm]   r13 -- r26;
// [Asm]   r46 -- r47;
// [Asm]   r1 -- r32;
// [Asm]   r31 -- r48;
// [Asm]   r35 -- r53;
// [Asm]   r1 -- r78;
// [Asm]   r35 -- r73;
// [Asm]   r1 -- r15;
// [Asm]   r1 -- r60;
// [Asm]   r27 -- r61;
// [Asm]   r31 -- r38;
// [Asm]   r19 -- r35;
// [Asm]   r10 -- r27;
// [Asm]   r31 -- r57;
// [Asm]   r1 -- r65;
// [Asm]   r23 -- r27;
// [Asm]   r1 -- r66;
// [Asm]   r16 -- r28;
// [Asm]   r15 -- r27;
// [Asm]   r13 -- r25;
// [Asm]   r31 -- r52;
// [Asm]   r13 -- r20;
// [Asm]   r22 -- r24;
// [Asm]   r35 -- r62;
// [Asm]   r1 -- r28;
// [Asm]   r1 -- r39;
// [Asm]   r15 -- r32;
// [Asm]   r8 -- r28;
// [Asm]   r35 -- r56;
// [Asm]   r2 -- r28;
// [Asm]   r2 -- r29;
// [Asm]   r27 -- r56;
// [Asm]   r26 -- r35;
// [Asm]   r13 -- r34;
// [Asm]   r21 -- r31;
// [Asm]   r8 -- r13;
// [Asm]   r31 -- r54;
// [Asm]   r35 -- r65;
// [Asm]   r1 -- r59;
// [Asm]   r27 -- r58;
// [Asm]   r1 -- r74;
// [Asm]   r22 -- r23;
// [Asm]   r24 -- r35;
// [Asm]   r2 -- r21;
// [Asm]   r35 -- r40;
// [Asm]   r31 -- r49;
// [Asm]   r40 -- r41;
// [Asm]   r13 -- r62;
// [Asm]   r35 -- r54;
// [Asm]   r35 -- r63;
// [Asm]   r1 -- r73;
// [Asm]   r31 -- r32;
// [Asm]   r38 -- r39;
// [Asm]   r1 -- r36;
// [Asm]   r1 -- r14;
// [Asm]   r31 -- r43;
// [Asm]   r2 -- r19;
// [Asm]   r1 -- r3;
// [Asm]   r15 -- r16;
// [Asm]   r2 -- r3;
// [Asm]   r13 -- r27;
// [Asm]   r52 -- r53;
// [Asm]   comment = "0:v132-> 1:zero-> 2:v2-> 3:s11-> 5:v3-> 6:v131-> 7:v126-> 8:v4-> 9:v128-> 11:v122-> 12:v123-> 13:a0-> 14:v124-> 15:a1-> 16:a2-> 22:a3-> 23:a4-> 24:a5-> 27:v8-> 31:v9-> 35:v10-> 17:t0-> 18:t1-> 19:t2-> 20:t3-> 21:t4-> 25:a6-> 26:a7-> 28:v118-> 32:v114-> 30:v120-> 34:v116-> 62:v76-> 29:v119-> 33:v115-> 61:v75-> 10:s10-> 36:v11-> 37:v111-> 38:v13-> 39:v108-> 40:v15-> 41:v105-> 42:v17-> 43:v102-> 44:v19-> 45:v99-> 46:v21-> 47:v96-> 48:v23-> 49:v93-> 50:v25-> 51:v90-> 52:v27-> 53:v87-> 54:v29-> 55:v84-> 56:v31-> 57:v81-> 58:v33-> 59:v78-> 60:v74-> 4:v129-> 63:v35-> 64:v36-> 65:v38-> 66:v39-> 67:v40-> 68:v41-> 69:v43-> 70:v44-> 71:v45-> 72:v46-> 73:v48-> 74:v49-> 75:v50-> 76:v51-> 77:v53-> 78:v54"
// [Asm]   comment = "v132<-a0;v21<-a0;v115<-a0;v51<-a0;v78<-a1;v128<-a1;v19<-a0;v87<-a1;v31<-a0;v3<-a0;v29<-a0;v102<-a1;v9<-s3;v108<-a1;v27<-a0;v38<-a0;v75<-a1;v40<-a0;v50<-a0;v53<-a0;v8<-s2;v76<-a2;v15<-a0;v122<-a3;v33<-a0;v116<-a1;v124<-a1;v90<-a1;v54<-a0;v84<-a1;v74<-a0;v48<-a0;v13<-a0;v46<-a0;v96<-a1;v131<-a1;v17<-a0;v129<-a0;v119<-a0;v10<-s0;v126<-a1;v36<-a0;v4<-s1;v11<-a0;v39<-a0;v114<-a3;v93<-a1;v81<-a1;v49<-a0;v41<-a0;v44<-a0;v23<-a0;v123<-a0;v111<-a1;v105<-a1;v118<-a3;v45<-a0;v43<-a0;v25<-a0;v120<-a1;v99<-a1;v35<-a0;v2<-s0;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of main85_4"];
// [Asm]   r0 [label="fv134 ← fa0", color=green];
// [Asm]   r33 [label="fv42 ← fa0", color=green];
// [Asm]   r9 [label="ft8", color=blue];
// [Asm]   r26 [label="fv94 ← fa0", color=green];
// [Asm]   r6 [label="ft5", color=blue];
// [Asm]   r13 [label="fa1", color=blue];
// [Asm]   r4 [label="ft3", color=blue];
// [Asm]   r29 [label="fv85 ← fa0", color=green];
// [Asm]   r35 [label="fv52 ← fa0", color=green];
// [Asm]   r7 [label="ft6", color=blue];
// [Asm]   r10 [label="ft9", color=blue];
// [Asm]   r8 [label="ft7", color=blue];
// [Asm]   r5 [label="ft4", color=blue];
// [Asm]   r24 [label="fv100 ← fa0", color=green];
// [Asm]   r15 [label="fa3", color=blue];
// [Asm]   r32 [label="fv37 ← fa0", color=green];
// [Asm]   r31 [label="fv79 ← fa0", color=green];
// [Asm]   r17 [label="fa5", color=blue];
// [Asm]   r12 [label="fa0", color=blue];
// [Asm]   r20 [label="fv112 ← fa0", color=green];
// [Asm]   r23 [label="fv103 ← fa0", color=green];
// [Asm]   r3 [label="ft2", color=blue];
// [Asm]   r27 [label="fv91 ← fa0", color=green];
// [Asm]   r1 [label="ft0", color=blue];
// [Asm]   r28 [label="fv88 ← fa0", color=green];
// [Asm]   r11 [label="ft10", color=blue];
// [Asm]   r34 [label="fv47 ← fa0", color=green];
// [Asm]   r22 [label="fv106 ← fa0", color=green];
// [Asm]   r14 [label="fa2", color=blue];
// [Asm]   r30 [label="fv82 ← fa0", color=green];
// [Asm]   r25 [label="fv97 ← fa0", color=green];
// [Asm]   r2 [label="ft1", color=blue];
// [Asm]   r16 [label="fa4", color=blue];
// [Asm]   r18 [label="fa6", color=blue];
// [Asm]   r19 [label="fa7", color=blue];
// [Asm]   r21 [label="fv109 ← fa0", color=green];
// [Asm]   comment = "0:fv134-> 1:ft0-> 2:ft1-> 3:ft2-> 4:ft3-> 5:ft4-> 6:ft5-> 7:ft6-> 8:ft7-> 9:ft8-> 10:ft9-> 11:ft10-> 12:fa0-> 13:fa1-> 14:fa2-> 15:fa3-> 16:fa4-> 17:fa5-> 18:fa6-> 19:fa7-> 20:fv112-> 21:fv109-> 22:fv106-> 23:fv103-> 24:fv100-> 25:fv97-> 26:fv94-> 27:fv91-> 28:fv88-> 29:fv85-> 30:fv82-> 31:fv79-> 32:fv37-> 33:fv42-> 34:fv47-> 35:fv52"
// [Asm]   comment = "fv134<-fa0;fv42<-fa0;fv94<-fa0;fv85<-fa0;fv52<-fa0;fv100<-fa0;fv37<-fa0;fv79<-fa0;fv112<-fa0;fv103<-fa0;fv91<-fa0;fv88<-fa0;fv47<-fa0;fv106<-fa0;fv82<-fa0;fv97<-fa0;fv109<-fa0;"
// [Asm] }
// [Asm] 
// [Asm] subst   addi v132, s11, 0 ->   addi a0, s11, 0
// [Asm] subst   andi v2, v132, -8 ->   andi s0, a0, -8
// [Asm] subst   mv s11, v2 ->   mv s11, s0
// [Asm] subst   fmv.d.x fv134, zero ->   fmv.d.x fa0, zero
// [Asm] subst   addi v129, s11, -8 ->   addi a0, s11, -8
// [Asm] subst   andi v3, v129, -8 ->   andi a0, a0, -8
// [Asm] subst   mv s11, v3 ->   mv s11, a0
// [Asm] subst   la v131, init_arr89_10 ->   la a1, init_arr89_10
// [Asm] subst   sd v131, 0(v3) ->   sd a1, 0(a0)
// [Asm] subst   addi v126, s11, -16 ->   addi a1, s11, -16
// [Asm] subst   andi v4, v126, -8 ->   andi s1, a1, -8
// [Asm] subst   mv s11, v4 ->   mv s11, s1
// [Asm] subst   la v128, make_arr103_12 ->   la a1, make_arr103_12
// [Asm] subst   sd v128, 0(v4) ->   sd a1, 0(s1)
// [Asm] subst   sd v3, 8(v4) ->   sd a0, 8(s1)
// [Asm] subst   mv s10, v4 ->   mv s10, s1
// [Asm] subst   ld v122, 0(v4) ->   ld a3, 0(s1)
// [Asm] subst   li v123, 2 ->   li a0, 2
// [Asm] subst   li v124, 3 ->   li a1, 3
// [Asm] subst   mv a2, v2 ->   mv a2, s0
// [Asm] subst   jalr v122 ->   jalr a3
// [Asm] subst   mv v8, a0 ->   mv s2, a0
// [Asm] subst   mv s10, v4 ->   mv s10, s1
// [Asm] subst   ld v118, 0(v4) ->   ld a3, 0(s1)
// [Asm] subst   li v119, 3 ->   li a0, 3
// [Asm] subst   li v120, 2 ->   li a1, 2
// [Asm] subst   mv a2, v2 ->   mv a2, s0
// [Asm] subst   jalr v118 ->   jalr a3
// [Asm] subst   mv v9, a0 ->   mv s3, a0
// [Asm] subst   mv s10, v4 ->   mv s10, s1
// [Asm] subst   ld v114, 0(v4) ->   ld a3, 0(s1)
// [Asm] subst   li v115, 2 ->   li a0, 2
// [Asm] subst   li v116, 2 ->   li a1, 2
// [Asm] subst   mv a2, v2 ->   mv a2, s0
// [Asm] subst   jalr v114 ->   jalr a3
// [Asm] subst   mv v10, a0 ->   mv s0, a0
// [Asm] subst   ld v11, 0(v8) ->   ld a0, 0(s2)
// [Asm] subst   li v111, 4607182418800017408 ->   li a1, 4607182418800017408
// [Asm] subst   fmv.d.x fv112, v111 ->   fmv.d.x fa0, a1
// [Asm] subst   fsd fv112, 0(v11) ->   fsd fa0, 0(a0)
// [Asm] subst   ld v13, 0(v8) ->   ld a0, 0(s2)
// [Asm] subst   li v108, 4611686018427387904 ->   li a1, 4611686018427387904
// [Asm] subst   fmv.d.x fv109, v108 ->   fmv.d.x fa0, a1
// [Asm] subst   fsd fv109, 8(v13) ->   fsd fa0, 8(a0)
// [Asm] subst   ld v15, 0(v8) ->   ld a0, 0(s2)
// [Asm] subst   li v105, 4613937818241073152 ->   li a1, 4613937818241073152
// [Asm] subst   fmv.d.x fv106, v105 ->   fmv.d.x fa0, a1
// [Asm] subst   fsd fv106, 16(v15) ->   fsd fa0, 16(a0)
// [Asm] subst   ld v17, 8(v8) ->   ld a0, 8(s2)
// [Asm] subst   li v102, 4616189618054758400 ->   li a1, 4616189618054758400
// [Asm] subst   fmv.d.x fv103, v102 ->   fmv.d.x fa0, a1
// [Asm] subst   fsd fv103, 0(v17) ->   fsd fa0, 0(a0)
// [Asm] subst   ld v19, 8(v8) ->   ld a0, 8(s2)
// [Asm] subst   li v99, 4617315517961601024 ->   li a1, 4617315517961601024
// [Asm] subst   fmv.d.x fv100, v99 ->   fmv.d.x fa0, a1
// [Asm] subst   fsd fv100, 8(v19) ->   fsd fa0, 8(a0)
// [Asm] subst   ld v21, 8(v8) ->   ld a0, 8(s2)
// [Asm] subst   li v96, 4618441417868443648 ->   li a1, 4618441417868443648
// [Asm] subst   fmv.d.x fv97, v96 ->   fmv.d.x fa0, a1
// [Asm] subst   fsd fv97, 16(v21) ->   fsd fa0, 16(a0)
// [Asm] subst   ld v23, 0(v9) ->   ld a0, 0(s3)
// [Asm] subst   li v93, 4619567317775286272 ->   li a1, 4619567317775286272
// [Asm] subst   fmv.d.x fv94, v93 ->   fmv.d.x fa0, a1
// [Asm] subst   fsd fv94, 0(v23) ->   fsd fa0, 0(a0)
// [Asm] subst   ld v25, 0(v9) ->   ld a0, 0(s3)
// [Asm] subst   li v90, 4620693217682128896 ->   li a1, 4620693217682128896
// [Asm] subst   fmv.d.x fv91, v90 ->   fmv.d.x fa0, a1
// [Asm] subst   fsd fv91, 8(v25) ->   fsd fa0, 8(a0)
// [Asm] subst   ld v27, 8(v9) ->   ld a0, 8(s3)
// [Asm] subst   li v87, 4621256167635550208 ->   li a1, 4621256167635550208
// [Asm] subst   fmv.d.x fv88, v87 ->   fmv.d.x fa0, a1
// [Asm] subst   fsd fv88, 0(v27) ->   fsd fa0, 0(a0)
// [Asm] subst   ld v29, 8(v9) ->   ld a0, 8(s3)
// [Asm] subst   li v84, 4621819117588971520 ->   li a1, 4621819117588971520
// [Asm] subst   fmv.d.x fv85, v84 ->   fmv.d.x fa0, a1
// [Asm] subst   fsd fv85, 8(v29) ->   fsd fa0, 8(a0)
// [Asm] subst   ld v31, 16(v9) ->   ld a0, 16(s3)
// [Asm] subst   li v81, 4622382067542392832 ->   li a1, 4622382067542392832
// [Asm] subst   fmv.d.x fv82, v81 ->   fmv.d.x fa0, a1
// [Asm] subst   fsd fv82, 0(v31) ->   fsd fa0, 0(a0)
// [Asm] subst   ld v33, 16(v9) ->   ld a0, 16(s3)
// [Asm] subst   li v78, 4622945017495814144 ->   li a1, 4622945017495814144
// [Asm] subst   fmv.d.x fv79, v78 ->   fmv.d.x fa0, a1
// [Asm] subst   fsd fv79, 8(v33) ->   fsd fa0, 8(a0)
// [Asm] subst   li v74, 2 ->   li a0, 2
// [Asm] subst   li v75, 3 ->   li a1, 3
// [Asm] subst   li v76, 2 ->   li a2, 2
// [Asm] subst   mv a3, v8 ->   mv a3, s2
// [Asm] subst   mv a4, v9 ->   mv a4, s3
// [Asm] subst   mv a5, v10 ->   mv a5, s0
// [Asm] subst   call mul68_3 ->   call mul68_3
// [Asm] subst   ld v36, 0(v10) ->   ld a0, 0(s0)
// [Asm] subst   fld fv37, 0(v36) ->   fld fa0, 0(a0)
// [Asm] subst   fcvt.w.d v38, fv37, rtz ->   fcvt.w.d a0, fa0, rtz
// [Asm] subst   call minimbt_print_int ->   call minimbt_print_int
// [Asm] subst   call minimbt_print_endline ->   call minimbt_print_endline
// [Asm] subst   ld v41, 0(v10) ->   ld a0, 0(s0)
// [Asm] subst   fld fv42, 8(v41) ->   fld fa0, 8(a0)
// [Asm] subst   fcvt.w.d v43, fv42, rtz ->   fcvt.w.d a0, fa0, rtz
// [Asm] subst   call minimbt_print_int ->   call minimbt_print_int
// [Asm] subst   call minimbt_print_endline ->   call minimbt_print_endline
// [Asm] subst   ld v46, 8(v10) ->   ld a0, 8(s0)
// [Asm] subst   fld fv47, 0(v46) ->   fld fa0, 0(a0)
// [Asm] subst   fcvt.w.d v48, fv47, rtz ->   fcvt.w.d a0, fa0, rtz
// [Asm] subst   call minimbt_print_int ->   call minimbt_print_int
// [Asm] subst   call minimbt_print_endline ->   call minimbt_print_endline
// [Asm] subst   ld v51, 8(v10) ->   ld a0, 8(s0)
// [Asm] subst   fld fv52, 8(v51) ->   fld fa0, 8(a0)
// [Asm] subst   fcvt.w.d v53, fv52, rtz ->   fcvt.w.d a0, fa0, rtz
// [Asm] subst   call minimbt_print_int ->   call minimbt_print_int
// [Asm] subst   mv a0, zero ->   mv a0, zero
// [Asm] subst   ret ->   ret
// [Asm] pre_assigned_registers: Insn(iref=%3) -> v11, FnParam(fref=f1, fpref=$f.1) -> v3, FnParam(fref=f1, fpref=$f.0) -> v2, FnParam(fref=f1, fpref=$f.2) -> v4, FnParam(fref=f1, fpref=$f.4) -> v6, FnParam(fref=f1, fpref=$f.3) -> v5, BlockParam(bref=b3, bpref=$b.0) -> v13, Insn(iref=%2) -> v10, Insn(iref=%1) -> v9, FnParam(fref=f1, fpref=$f.5) -> v7, Self(fref=f1) -> v0, Insn(iref=%0) -> v8, Insn(iref=%4) -> v12
// [Asm] skipping Op(ty=Bool, op=Le, args=[Int32(val=0), FnParam(fref=f1, fpref=$f.2)])
// [Asm] defs: [v13]
// [Asm] live_set: [v13]
// [Asm] move_origin: [zero]
// [Asm] defined: v13 is X
// [Asm] defs: []
// [Asm] live_set: [v13]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [v13]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [a5, zero, a0, a4, a2, a1, a3]
// [Asm] move_origin: []
// [Asm] defs: [v2]
// [Asm] live_set: [a5, zero, a4, a2, a1, a3, v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v2 is X
// [Asm] defs: [v3]
// [Asm] live_set: [v2, a5, zero, a4, a2, a3, v3]
// [Asm] move_origin: [a1]
// [Asm] defined: v3 is X
// [Asm] defs: [v4]
// [Asm] live_set: [v2, a5, zero, a4, v4, a3, v3]
// [Asm] move_origin: [a2]
// [Asm] defined: v4 is X
// [Asm] defs: [v5]
// [Asm] live_set: [v2, v5, a5, zero, a4, v4, v3]
// [Asm] move_origin: [a3]
// [Asm] defined: v5 is X
// [Asm] defs: [v6]
// [Asm] live_set: [v2, v5, a5, zero, v4, v6, v3]
// [Asm] move_origin: [a4]
// [Asm] defined: v6 is X
// [Asm] defs: [v7]
// [Asm] live_set: [v2, v5, zero, v7, v4, v6, v3]
// [Asm] move_origin: [a5]
// [Asm] defined: v7 is X
// [Asm] defs: []
// [Asm] live_set: [v2, v5, zero, v7, v4, v6, v3]
// [Asm] move_origin: []
// [Asm] defs: [v9]
// [Asm] live_set: [v2, v5, v7, v4, v6, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v9 is X
// [Asm] defs: []
// [Asm] live_set: [v2, v5, v7, v4, v6, v9, v3]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [v2, v5, a0, v7, v4, v6, v9, v3]
// [Asm] move_origin: [v2]
// [Asm] defined: a0 is X
// [Asm] defs: [a1]
// [Asm] live_set: [v2, v5, a0, v7, v4, a1, v6, v9, v3]
// [Asm] move_origin: [v4]
// [Asm] defined: a1 is X
// [Asm] defs: [a2]
// [Asm] live_set: [v2, v5, a0, v7, v4, a2, a1, v6, v3]
// [Asm] move_origin: [v9]
// [Asm] defined: a2 is X
// [Asm] defs: [a3]
// [Asm] live_set: [v2, v5, a0, v7, v4, a2, a1, v6, a3, v3]
// [Asm] move_origin: [v5]
// [Asm] defined: a3 is X
// [Asm] defs: [a4]
// [Asm] live_set: [v2, v5, a0, a4, v7, v4, a2, a1, v6, a3, v3]
// [Asm] move_origin: [v6]
// [Asm] defined: a4 is X
// [Asm] defs: [a5]
// [Asm] live_set: [v2, v5, a5, a0, a4, v7, v4, a2, a1, v6, a3, v3]
// [Asm] move_origin: [v7]
// [Asm] defined: a5 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [v2, v5, a0, v7, v4, v6, v3]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v10]
// [Asm] live_set: [v3, v2, v4, v6, v5, v7]
// [Asm] move_origin: [a0]
// [Asm] defined: v10 is X
// [Asm] defs: []
// [Asm] live_set: [v3, v2, v4, v6, v5, v7]
// [Asm] move_origin: []
// [Asm] defs: [v11]
// [Asm] live_set: [v3, v2, v11, v5, v6, v7]
// [Asm] move_origin: []
// [Asm] defined: v11 is X
// [Asm] defs: []
// [Asm] live_set: [v3, v2, v11, v5, v6, v7]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [v3, v11, v6, v5, a0, v7]
// [Asm] move_origin: [v2]
// [Asm] defined: a0 is X
// [Asm] defs: [a1]
// [Asm] live_set: [v11, a1, v6, v5, a0, v7]
// [Asm] move_origin: [v3]
// [Asm] defined: a1 is X
// [Asm] defs: [a2]
// [Asm] live_set: [a2, a1, v6, v5, a0, v7]
// [Asm] move_origin: [v11]
// [Asm] defined: a2 is X
// [Asm] defs: [a3]
// [Asm] live_set: [a2, a1, v6, a3, a0, v7]
// [Asm] move_origin: [v5]
// [Asm] defined: a3 is X
// [Asm] defs: [a4]
// [Asm] live_set: [a2, a1, a3, a0, a4, v7]
// [Asm] move_origin: [v6]
// [Asm] defined: a4 is X
// [Asm] defs: [a5]
// [Asm] live_set: [a2, a1, a3, a5, a0, a4]
// [Asm] move_origin: [v7]
// [Asm] defined: a5 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v12]
// [Asm] live_set: [v12]
// [Asm] move_origin: [a0]
// [Asm] defined: v12 is X
// [Asm] defs: []
// [Asm] live_set: [v12]
// [Asm] move_origin: []
// [Asm] defs: [v13]
// [Asm] live_set: [v13]
// [Asm] move_origin: [v12]
// [Asm] defined: v13 is X
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of loop228_1"];
// [Asm]   r0 [label="v13 ← a0", color=green];
// [Asm]   r20 [label="a6", color=blue];
// [Asm]   r23 [label="v11 ← a2", color=green];
// [Asm]   r3 [label="a5", color=blue];
// [Asm]   r9 [label="v3 ← s1", color=green];
// [Asm]   r6 [label="a2", color=blue];
// [Asm]   r13 [label="v7 ← s5", color=green];
// [Asm]   r4 [label="zero", color=blue];
// [Asm]   r1 [label="a0", color=blue];
// [Asm]   r11 [label="v5 ← s3", color=green];
// [Asm]   r7 [label="a1", color=blue];
// [Asm]   r10 [label="v4 ← s2", color=green];
// [Asm]   r22 [label="v10 ← a0", color=green];
// [Asm]   r14 [label="v9 ← a2", color=green];
// [Asm]   r8 [label="a3", color=blue];
// [Asm]   r5 [label="a4", color=blue];
// [Asm]   r24 [label="v12 ← a0", color=green];
// [Asm]   r15 [label="t0", color=blue];
// [Asm]   r2 [label="v2 ← s0", color=green];
// [Asm]   r16 [label="t1", color=blue];
// [Asm]   r18 [label="t3", color=blue];
// [Asm]   r19 [label="t4", color=blue];
// [Asm]   r17 [label="t2", color=blue];
// [Asm]   r21 [label="a7", color=blue];
// [Asm]   r12 [label="v6 ← s4", color=green];
// [Asm]   r2 -- r20;
// [Asm]   r1 -- r12;
// [Asm]   r2 -- r15;
// [Asm]   r5 -- r8;
// [Asm]   r5 -- r10;
// [Asm]   r3 -- r6;
// [Asm]   r11 -- r14;
// [Asm]   r1 -- r7;
// [Asm]   r1 -- r18;
// [Asm]   r1 -- r19;
// [Asm]   r1 -- r10;
// [Asm]   r10 -- r13;
// [Asm]   r2 -- r10;
// [Asm]   r10 -- r19;
// [Asm]   r3 -- r9;
// [Asm]   r3 -- r11;
// [Asm]   r1 -- r17;
// [Asm]   r1 -- r20;
// [Asm]   r2 -- r16;
// [Asm]   r9 -- r17;
// [Asm]   r2 -- r7;
// [Asm]   r11 -- r18;
// [Asm]   r1 -- r16;
// [Asm]   r3 -- r5;
// [Asm]   r12 -- r19;
// [Asm]   r11 -- r19;
// [Asm]   r9 -- r18;
// [Asm]   r8 -- r12;
// [Asm]   r9 -- r14;
// [Asm]   r3 -- r8;
// [Asm]   r6 -- r13;
// [Asm]   r1 -- r9;
// [Asm]   r2 -- r6;
// [Asm]   r10 -- r20;
// [Asm]   r5 -- r6;
// [Asm]   r11 -- r13;
// [Asm]   r10 -- r18;
// [Asm]   r10 -- r12;
// [Asm]   r1 -- r21;
// [Asm]   r3 -- r13;
// [Asm]   r6 -- r10;
// [Asm]   r7 -- r10;
// [Asm]   r9 -- r23;
// [Asm]   r9 -- r12;
// [Asm]   r2 -- r12;
// [Asm]   r2 -- r8;
// [Asm]   r3 -- r10;
// [Asm]   r4 -- r12;
// [Asm]   r1 -- r2;
// [Asm]   r10 -- r22;
// [Asm]   r2 -- r5;
// [Asm]   r9 -- r20;
// [Asm]   r2 -- r13;
// [Asm]   r13 -- r18;
// [Asm]   r1 -- r11;
// [Asm]   r5 -- r7;
// [Asm]   r9 -- r10;
// [Asm]   r12 -- r23;
// [Asm]   r11 -- r15;
// [Asm]   r13 -- r22;
// [Asm]   r8 -- r11;
// [Asm]   r1 -- r6;
// [Asm]   r3 -- r7;
// [Asm]   r2 -- r22;
// [Asm]   r12 -- r21;
// [Asm]   r1 -- r5;
// [Asm]   r13 -- r21;
// [Asm]   r7 -- r8;
// [Asm]   r4 -- r9;
// [Asm]   r2 -- r23;
// [Asm]   r10 -- r17;
// [Asm]   r6 -- r7;
// [Asm]   r6 -- r9;
// [Asm]   r4 -- r13;
// [Asm]   r6 -- r11;
// [Asm]   r13 -- r15;
// [Asm]   r11 -- r20;
// [Asm]   r11 -- r17;
// [Asm]   r1 -- r8;
// [Asm]   r2 -- r4;
// [Asm]   r9 -- r15;
// [Asm]   r2 -- r18;
// [Asm]   r1 -- r23;
// [Asm]   r12 -- r15;
// [Asm]   r8 -- r9;
// [Asm]   r11 -- r16;
// [Asm]   r3 -- r12;
// [Asm]   r5 -- r13;
// [Asm]   r7 -- r13;
// [Asm]   r13 -- r16;
// [Asm]   r11 -- r12;
// [Asm]   r1 -- r15;
// [Asm]   r1 -- r13;
// [Asm]   r11 -- r23;
// [Asm]   r11 -- r22;
// [Asm]   r2 -- r11;
// [Asm]   r7 -- r9;
// [Asm]   r5 -- r11;
// [Asm]   r6 -- r12;
// [Asm]   r13 -- r20;
// [Asm]   r13 -- r19;
// [Asm]   r10 -- r16;
// [Asm]   r6 -- r8;
// [Asm]   r9 -- r22;
// [Asm]   r12 -- r20;
// [Asm]   r9 -- r11;
// [Asm]   r4 -- r11;
// [Asm]   r12 -- r13;
// [Asm]   r8 -- r13;
// [Asm]   r2 -- r14;
// [Asm]   r5 -- r9;
// [Asm]   r13 -- r23;
// [Asm]   r13 -- r14;
// [Asm]   r10 -- r15;
// [Asm]   r12 -- r22;
// [Asm]   r10 -- r11;
// [Asm]   r7 -- r11;
// [Asm]   r13 -- r17;
// [Asm]   r2 -- r21;
// [Asm]   r8 -- r10;
// [Asm]   r2 -- r17;
// [Asm]   r9 -- r16;
// [Asm]   r12 -- r14;
// [Asm]   r12 -- r16;
// [Asm]   r9 -- r19;
// [Asm]   r12 -- r17;
// [Asm]   r7 -- r23;
// [Asm]   r2 -- r9;
// [Asm]   r4 -- r10;
// [Asm]   r1 -- r14;
// [Asm]   r2 -- r19;
// [Asm]   r1 -- r3;
// [Asm]   r9 -- r13;
// [Asm]   r7 -- r12;
// [Asm]   r2 -- r3;
// [Asm]   r7 -- r14;
// [Asm]   r10 -- r21;
// [Asm]   r11 -- r21;
// [Asm]   r12 -- r18;
// [Asm]   r9 -- r21;
// [Asm]   r10 -- r14;
// [Asm]   r5 -- r12;
// [Asm]   comment = "0:v13-> 1:a0-> 2:v2-> 3:a5-> 5:a4-> 6:a2-> 7:a1-> 8:a3-> 9:v3-> 10:v4-> 11:v5-> 12:v6-> 13:v7-> 14:v9-> 15:t0-> 16:t1-> 17:t2-> 18:t3-> 19:t4-> 20:a6-> 21:a7-> 23:v11-> 4:zero-> 22:v10-> 24:v12"
// [Asm]   comment = "v13<-a0;v11<-a2;v3<-s1;v7<-s5;v5<-s3;v4<-s2;v10<-a0;v9<-a2;v12<-a0;v2<-s0;v6<-s4;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of loop228_1"];
// [Asm]   r0 [label="ft0", color=blue];
// [Asm]   r3 [label="ft3", color=blue];
// [Asm]   r9 [label="ft9", color=blue];
// [Asm]   r6 [label="ft6", color=blue];
// [Asm]   r13 [label="fa2", color=blue];
// [Asm]   r4 [label="ft4", color=blue];
// [Asm]   r1 [label="ft1", color=blue];
// [Asm]   r11 [label="fa0", color=blue];
// [Asm]   r7 [label="ft7", color=blue];
// [Asm]   r10 [label="ft10", color=blue];
// [Asm]   r14 [label="fa3", color=blue];
// [Asm]   r8 [label="ft8", color=blue];
// [Asm]   r5 [label="ft5", color=blue];
// [Asm]   r15 [label="fa4", color=blue];
// [Asm]   r2 [label="ft2", color=blue];
// [Asm]   r16 [label="fa5", color=blue];
// [Asm]   r18 [label="fa7", color=blue];
// [Asm]   r17 [label="fa6", color=blue];
// [Asm]   r12 [label="fa1", color=blue];
// [Asm]   comment = "0:ft0-> 1:ft1-> 2:ft2-> 3:ft3-> 4:ft4-> 5:ft5-> 6:ft6-> 7:ft7-> 8:ft8-> 9:ft9-> 10:ft10-> 11:fa0-> 12:fa1-> 13:fa2-> 14:fa3-> 15:fa4-> 16:fa5-> 17:fa6-> 18:fa7"
// [Asm]   comment = ""
// [Asm] }
// [Asm] 
// [Asm] subst   mv v13, zero ->   mv a0, zero
// [Asm] subst   j .loop228_1_3 ->   j .loop228_1_3
// [Asm] subst   ret ->   ret
// [Asm] subst   mv v2, a0 ->   mv s0, a0
// [Asm] subst   mv v3, a1 ->   mv s1, a1
// [Asm] subst   mv v4, a2 ->   mv s2, a2
// [Asm] subst   mv v5, a3 ->   mv s3, a3
// [Asm] subst   mv v6, a4 ->   mv s4, a4
// [Asm] subst   mv v7, a5 ->   mv s5, a5
// [Asm] subst   blt v4, zero, .loop228_1_2 ->   blt s2, zero, .loop228_1_2
// [Asm] subst   addi v9, v3, -1 ->   addi a2, s1, -1
// [Asm] subst   mv a0, v2 ->   mv a0, s0
// [Asm] subst   mv a1, v4 ->   mv a1, s2
// [Asm] subst   mv a3, v5 ->   mv a3, s3
// [Asm] subst   mv a4, v6 ->   mv a4, s4
// [Asm] subst   mv a5, v7 ->   mv a5, s5
// [Asm] subst   call loop31_0 ->   call loop31_0
// [Asm] subst   addi v11, v4, -1 ->   addi a2, s2, -1
// [Asm] subst   mv a0, v2 ->   mv a0, s0
// [Asm] subst   mv a1, v3 ->   mv a1, s1
// [Asm] subst   mv a3, v5 ->   mv a3, s3
// [Asm] subst   mv a4, v6 ->   mv a4, s4
// [Asm] subst   mv a5, v7 ->   mv a5, s5
// [Asm] subst   call loop228_1 ->   call loop228_1
// [Asm] pre_assigned_registers: FnParam(fref=f10, fpref=$f.2) -> v4, Insn(iref=%3) -> v9, Mem(fref=f10, mref=m0) -> v5, FnParam(fref=f10, fpref=$f.0) -> v2, FnParam(fref=f10, fpref=$f.1) -> v3, BlockParam(bref=b3, bpref=$b.0) -> v11, Insn(iref=%2) -> v8, Insn(iref=%1) -> v7, Self(fref=f10) -> v0, Insn(iref=%0) -> v6, Insn(iref=%4) -> v10
// [Asm] skipping Op(ty=Bool, op=Le, args=[Int32(val=0), FnParam(fref=f10, fpref=$f.0)])
// [Asm] defs: [v17]
// [Asm] live_set: [v3, zero, v0, v4, v17, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: v17 is X
// [Asm] defs: [v18]
// [Asm] live_set: [v3, v18, zero, v0, v4, v2]
// [Asm] move_origin: []
// [Asm] defined: v18 is X
// [Asm] defs: [v5]
// [Asm] live_set: [v3, v5, zero, v0, v4, v2]
// [Asm] move_origin: []
// [Asm] defined: v5 is X
// [Asm] defs: [s11]
// [Asm] live_set: [v3, v5, zero, v0, v4, v2]
// [Asm] move_origin: [v5]
// [Asm] defined: s11 is X
// [Asm] defs: [fv20]
// [Asm] live_set: [v3, v5, fv20, v0, v4, v2]
// [Asm] move_origin: []
// [Asm] defined: fv20 is F
// [Asm] defs: [a1]
// [Asm] live_set: [v3, v5, fv20, v0, v4, a1, v2]
// [Asm] move_origin: [v3]
// [Asm] defined: a1 is X
// [Asm] defs: [a0]
// [Asm] live_set: [v3, v5, a0, fv20, v0, v4, a1, v2]
// [Asm] move_origin: [v5]
// [Asm] defined: a0 is X
// [Asm] defs: [fa0]
// [Asm] live_set: [v3, v5, a0, fa0, v0, v4, a1, v2]
// [Asm] move_origin: [fv20]
// [Asm] defined: fa0 is F
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [v2, v0, v4, v5, v3]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v15]
// [Asm] live_set: [v2, v0, v4, v5, v15, v3]
// [Asm] move_origin: []
// [Asm] defined: v15 is X
// [Asm] defs: [v16]
// [Asm] live_set: [v2, v0, v4, v5, v16, v3]
// [Asm] move_origin: []
// [Asm] defined: v16 is X
// [Asm] defs: []
// [Asm] live_set: [v2, v0, v4, v3]
// [Asm] move_origin: []
// [Asm] defs: [v9]
// [Asm] live_set: [v0, v4, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v9 is X
// [Asm] defs: [s10]
// [Asm] live_set: [v0, v4, v9, v3]
// [Asm] move_origin: [v0]
// [Asm] defined: s10 is X
// [Asm] defs: [v12]
// [Asm] live_set: [v4, v12, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v12 is X
// [Asm] defs: []
// [Asm] live_set: [v4, v12, v9, v3]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [v4, v12, a0, v3]
// [Asm] move_origin: [v9]
// [Asm] defined: a0 is X
// [Asm] defs: [a1]
// [Asm] live_set: [v4, a1, v12, a0]
// [Asm] move_origin: [v3]
// [Asm] defined: a1 is X
// [Asm] defs: [a2]
// [Asm] live_set: [a2, a1, v12, a0]
// [Asm] move_origin: [v4]
// [Asm] defined: a2 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v10]
// [Asm] live_set: [v10]
// [Asm] move_origin: [a0]
// [Asm] defined: v10 is X
// [Asm] defs: []
// [Asm] live_set: [v10]
// [Asm] move_origin: []
// [Asm] defs: [v11]
// [Asm] live_set: [v11]
// [Asm] move_origin: [v10]
// [Asm] defined: v11 is X
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [v11]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] defs: [v11]
// [Asm] live_set: [v11]
// [Asm] move_origin: [zero]
// [Asm] defined: v11 is X
// [Asm] defs: []
// [Asm] live_set: [v11]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [zero, a0, a2, a1, s11, s10]
// [Asm] move_origin: []
// [Asm] defs: [v0]
// [Asm] live_set: [zero, a0, v0, a2, a1, s11]
// [Asm] move_origin: [s10]
// [Asm] defined: v0 is X
// [Asm] defs: [v2]
// [Asm] live_set: [zero, v0, a2, a1, s11, v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v2 is X
// [Asm] defs: [v3]
// [Asm] live_set: [v2, zero, v0, a2, s11, v3]
// [Asm] move_origin: [a1]
// [Asm] defined: v3 is X
// [Asm] defs: [v4]
// [Asm] live_set: [v2, zero, v0, v4, s11, v3]
// [Asm] move_origin: [a2]
// [Asm] defined: v4 is X
// [Asm] defs: []
// [Asm] live_set: [v3, v0, v4, s11, zero, v2]
// [Asm] move_origin: []
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of init_arr89_10"];
// [Asm]   r0 [label="v17 ← a0", color=green];
// [Asm]   r20 [label="a6", color=blue];
// [Asm]   r23 [label="v16 ← a0", color=green];
// [Asm]   r3 [label="v0 ← s1", color=green];
// [Asm]   r9 [label="a1", color=blue];
// [Asm]   r26 [label="v12 ← a3", color=green];
// [Asm]   r27 [label="v10 ← a0", color=green];
// [Asm]   r6 [label="v2 ← s3", color=green];
// [Asm]   r13 [label="t2", color=blue];
// [Asm]   r4 [label="v4 ← s2", color=green];
// [Asm]   r1 [label="v3 ← s0", color=green];
// [Asm]   r28 [label="v11 ← a0", color=green];
// [Asm]   r11 [label="t0", color=blue];
// [Asm]   r7 [label="v18 ← a0", color=green];
// [Asm]   r10 [label="a0", color=blue];
// [Asm]   r22 [label="v15 ← a0", color=green];
// [Asm]   r14 [label="t3", color=blue];
// [Asm]   r8 [label="v5 ← s4", color=green];
// [Asm]   r5 [label="s11", color=blue];
// [Asm]   r24 [label="v9 ← a0", color=green];
// [Asm]   r15 [label="t4", color=blue];
// [Asm]   r25 [label="s10", color=blue];
// [Asm]   r2 [label="zero", color=blue];
// [Asm]   r16 [label="a2", color=blue];
// [Asm]   r18 [label="a4", color=blue];
// [Asm]   r19 [label="a5", color=blue];
// [Asm]   r17 [label="a3", color=blue];
// [Asm]   r21 [label="a7", color=blue];
// [Asm]   r12 [label="t1", color=blue];
// [Asm]   r6 -- r21;
// [Asm]   r1 -- r12;
// [Asm]   r1 -- r26;
// [Asm]   r3 -- r15;
// [Asm]   r3 -- r16;
// [Asm]   r10 -- r26;
// [Asm]   r3 -- r6;
// [Asm]   r1 -- r4;
// [Asm]   r1 -- r7;
// [Asm]   r1 -- r18;
// [Asm]   r1 -- r19;
// [Asm]   r1 -- r10;
// [Asm]   r10 -- r13;
// [Asm]   r10 -- r19;
// [Asm]   r3 -- r9;
// [Asm]   r3 -- r11;
// [Asm]   r1 -- r17;
// [Asm]   r9 -- r26;
// [Asm]   r1 -- r20;
// [Asm]   r3 -- r24;
// [Asm]   r2 -- r7;
// [Asm]   r1 -- r16;
// [Asm]   r4 -- r22;
// [Asm]   r3 -- r18;
// [Asm]   r3 -- r5;
// [Asm]   r8 -- r12;
// [Asm]   r0 -- r6;
// [Asm]   r4 -- r21;
// [Asm]   r3 -- r8;
// [Asm]   r6 -- r13;
// [Asm]   r1 -- r9;
// [Asm]   r10 -- r20;
// [Asm]   r2 -- r6;
// [Asm]   r5 -- r6;
// [Asm]   r8 -- r17;
// [Asm]   r3 -- r4;
// [Asm]   r8 -- r16;
// [Asm]   r10 -- r18;
// [Asm]   r0 -- r2;
// [Asm]   r1 -- r21;
// [Asm]   r10 -- r12;
// [Asm]   r3 -- r13;
// [Asm]   r6 -- r18;
// [Asm]   r6 -- r10;
// [Asm]   r2 -- r8;
// [Asm]   r8 -- r23;
// [Asm]   r3 -- r10;
// [Asm]   r4 -- r12;
// [Asm]   r1 -- r2;
// [Asm]   r2 -- r5;
// [Asm]   r0 -- r1;
// [Asm]   r1 -- r11;
// [Asm]   r3 -- r17;
// [Asm]   r4 -- r25;
// [Asm]   r8 -- r22;
// [Asm]   r4 -- r8;
// [Asm]   r8 -- r21;
// [Asm]   r9 -- r10;
// [Asm]   r8 -- r11;
// [Asm]   r3 -- r7;
// [Asm]   r1 -- r6;
// [Asm]   r1 -- r5;
// [Asm]   r0 -- r4;
// [Asm]   r6 -- r23;
// [Asm]   r8 -- r14;
// [Asm]   r24 -- r25;
// [Asm]   r4 -- r14;
// [Asm]   r4 -- r9;
// [Asm]   r10 -- r17;
// [Asm]   r6 -- r7;
// [Asm]   r6 -- r9;
// [Asm]   r4 -- r13;
// [Asm]   r3 -- r19;
// [Asm]   r4 -- r16;
// [Asm]   r6 -- r11;
// [Asm]   r4 -- r24;
// [Asm]   r4 -- r5;
// [Asm]   r6 -- r15;
// [Asm]   r1 -- r8;
// [Asm]   r4 -- r23;
// [Asm]   r2 -- r4;
// [Asm]   r6 -- r14;
// [Asm]   r1 -- r23;
// [Asm]   r8 -- r19;
// [Asm]   r8 -- r9;
// [Asm]   r3 -- r12;
// [Asm]   r1 -- r22;
// [Asm]   r1 -- r15;
// [Asm]   r1 -- r13;
// [Asm]   r4 -- r20;
// [Asm]   r6 -- r16;
// [Asm]   r4 -- r18;
// [Asm]   r6 -- r22;
// [Asm]   r16 -- r26;
// [Asm]   r8 -- r20;
// [Asm]   r6 -- r12;
// [Asm]   r24 -- r26;
// [Asm]   r6 -- r20;
// [Asm]   r10 -- r16;
// [Asm]   r3 -- r22;
// [Asm]   r6 -- r8;
// [Asm]   r6 -- r19;
// [Asm]   r4 -- r15;
// [Asm]   r4 -- r11;
// [Asm]   r8 -- r13;
// [Asm]   r3 -- r21;
// [Asm]   r8 -- r15;
// [Asm]   r0 -- r3;
// [Asm]   r10 -- r15;
// [Asm]   r8 -- r18;
// [Asm]   r10 -- r11;
// [Asm]   r3 -- r20;
// [Asm]   r0 -- r5;
// [Asm]   r1 -- r25;
// [Asm]   r6 -- r17;
// [Asm]   r3 -- r14;
// [Asm]   r8 -- r10;
// [Asm]   r4 -- r7;
// [Asm]   r9 -- r16;
// [Asm]   r4 -- r17;
// [Asm]   r4 -- r10;
// [Asm]   r1 -- r14;
// [Asm]   r4 -- r6;
// [Asm]   r1 -- r3;
// [Asm]   r4 -- r26;
// [Asm]   r2 -- r3;
// [Asm]   r3 -- r23;
// [Asm]   r10 -- r21;
// [Asm]   r4 -- r19;
// [Asm]   r1 -- r24;
// [Asm]   r10 -- r14;
// [Asm]   comment = "0:v17-> 1:v3-> 2:zero-> 3:v0-> 4:v4-> 5:s11-> 6:v2-> 7:v18-> 8:v5-> 9:a1-> 10:a0-> 16:a2-> 11:t0-> 12:t1-> 13:t2-> 14:t3-> 15:t4-> 17:a3-> 18:a4-> 19:a5-> 20:a6-> 21:a7-> 22:v15-> 23:v16-> 26:v12-> 24:v9-> 25:s10-> 27:v10-> 28:v11"
// [Asm]   comment = "v17<-a0;v16<-a0;v0<-s1;v12<-a3;v10<-a0;v2<-s3;v4<-s2;v3<-s0;v11<-a0;v18<-a0;v15<-a0;v5<-s4;v9<-a0;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of init_arr89_10"];
// [Asm]   r0 [label="fv20 ← fa0", color=green];
// [Asm]   r3 [label="ft1", color=blue];
// [Asm]   r9 [label="ft7", color=blue];
// [Asm]   r6 [label="ft4", color=blue];
// [Asm]   r13 [label="fa1", color=blue];
// [Asm]   r4 [label="ft2", color=blue];
// [Asm]   r1 [label="fa0", color=blue];
// [Asm]   r11 [label="ft9", color=blue];
// [Asm]   r7 [label="ft5", color=blue];
// [Asm]   r10 [label="ft8", color=blue];
// [Asm]   r14 [label="fa2", color=blue];
// [Asm]   r8 [label="ft6", color=blue];
// [Asm]   r5 [label="ft3", color=blue];
// [Asm]   r15 [label="fa3", color=blue];
// [Asm]   r2 [label="ft0", color=blue];
// [Asm]   r16 [label="fa4", color=blue];
// [Asm]   r18 [label="fa6", color=blue];
// [Asm]   r19 [label="fa7", color=blue];
// [Asm]   r17 [label="fa5", color=blue];
// [Asm]   r12 [label="ft10", color=blue];
// [Asm]   comment = "0:fv20-> 1:fa0-> 2:ft0-> 3:ft1-> 4:ft2-> 5:ft3-> 6:ft4-> 7:ft5-> 8:ft6-> 9:ft7-> 10:ft8-> 11:ft9-> 12:ft10-> 13:fa1-> 14:fa2-> 15:fa3-> 16:fa4-> 17:fa5-> 18:fa6-> 19:fa7"
// [Asm]   comment = "fv20<-fa0;"
// [Asm] }
// [Asm] 
// [Asm] subst   slliw v17, v3, 3 ->   slliw a0, s0, 3
// [Asm] subst   sub v18, s11, v17 ->   sub a0, s11, a0
// [Asm] subst   andi v5, v18, -8 ->   andi s4, a0, -8
// [Asm] subst   mv s11, v5 ->   mv s11, s4
// [Asm] subst   fmv.d.x fv20, zero ->   fmv.d.x fa0, zero
// [Asm] subst   mv a1, v3 ->   mv a1, s0
// [Asm] subst   mv a0, v5 ->   mv a0, s4
// [Asm] subst   call memsetf64 ->   call memsetf64
// [Asm] subst   slliw v15, v2, 3 ->   slliw a0, s3, 3
// [Asm] subst   add v16, v4, v15 ->   add a0, s2, a0
// [Asm] subst   sd v5, 0(v16) ->   sd s4, 0(a0)
// [Asm] subst   addi v9, v2, -1 ->   addi a0, s3, -1
// [Asm] subst   mv s10, v0 ->   mv s10, s1
// [Asm] subst   ld v12, 0(v0) ->   ld a3, 0(s1)
// [Asm] subst   mv a1, v3 ->   mv a1, s0
// [Asm] subst   mv a2, v4 ->   mv a2, s2
// [Asm] subst   jalr v12 ->   jalr a3
// [Asm] subst   ret ->   ret
// [Asm] subst   mv v11, zero ->   mv a0, zero
// [Asm] subst   j .init_arr89_10_3 ->   j .init_arr89_10_3
// [Asm] subst   mv v0, s10 ->   mv s1, s10
// [Asm] subst   mv v2, a0 ->   mv s3, a0
// [Asm] subst   mv v3, a1 ->   mv s0, a1
// [Asm] subst   mv v4, a2 ->   mv s2, a2
// [Asm] subst   blt v2, zero, .init_arr89_10_2 ->   blt s3, zero, .init_arr89_10_2
// [Asm] pre_assigned_registers: FnParam(fref=f2, fpref=$f.3) -> v5, Insn(iref=%4) -> v12, FnParam(fref=f2, fpref=$f.5) -> v7, Insn(iref=%3) -> v11, FnParam(fref=f2, fpref=$f.4) -> v6, BlockParam(bref=b3, bpref=$b.0) -> v13, Insn(iref=%2) -> v10, FnParam(fref=f2, fpref=$f.1) -> v3, Self(fref=f2) -> v0, Insn(iref=%1) -> v9, FnParam(fref=f2, fpref=$f.0) -> v2, Insn(iref=%0) -> v8, FnParam(fref=f2, fpref=$f.2) -> v4
// [Asm] skipping Op(ty=Bool, op=Le, args=[Int32(val=0), FnParam(fref=f2, fpref=$f.0)])
// [Asm] defs: []
// [Asm] live_set: [a5, zero, a0, a4, a2, a1, a3]
// [Asm] move_origin: []
// [Asm] defs: [v2]
// [Asm] live_set: [a5, zero, a4, a2, a1, a3, v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v2 is X
// [Asm] defs: [v3]
// [Asm] live_set: [v3, a5, zero, a4, a2, a3, v2]
// [Asm] move_origin: [a1]
// [Asm] defined: v3 is X
// [Asm] defs: [v4]
// [Asm] live_set: [v3, a5, zero, a4, v4, a3, v2]
// [Asm] move_origin: [a2]
// [Asm] defined: v4 is X
// [Asm] defs: [v5]
// [Asm] live_set: [v3, v5, a5, zero, a4, v4, v2]
// [Asm] move_origin: [a3]
// [Asm] defined: v5 is X
// [Asm] defs: [v6]
// [Asm] live_set: [v3, v5, a5, zero, v4, v6, v2]
// [Asm] move_origin: [a4]
// [Asm] defined: v6 is X
// [Asm] defs: [v7]
// [Asm] live_set: [v3, v5, zero, v7, v4, v6, v2]
// [Asm] move_origin: [a5]
// [Asm] defined: v7 is X
// [Asm] defs: []
// [Asm] live_set: [v3, v5, zero, v7, v4, v6, v2]
// [Asm] move_origin: []
// [Asm] defs: [v9]
// [Asm] live_set: [v2, v5, v7, v4, v6, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v9 is X
// [Asm] defs: []
// [Asm] live_set: [v2, v5, v7, v4, v6, v9, v3]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [v2, v5, a0, v7, v4, v6, v9, v3]
// [Asm] move_origin: [v2]
// [Asm] defined: a0 is X
// [Asm] defs: [a1]
// [Asm] live_set: [v2, v5, a0, v7, v4, a1, v6, v9, v3]
// [Asm] move_origin: [v3]
// [Asm] defined: a1 is X
// [Asm] defs: [a2]
// [Asm] live_set: [v2, v5, a0, v7, v4, a2, a1, v6, v3]
// [Asm] move_origin: [v9]
// [Asm] defined: a2 is X
// [Asm] defs: [a3]
// [Asm] live_set: [v2, v5, a0, v7, v4, a2, a1, v6, a3, v3]
// [Asm] move_origin: [v5]
// [Asm] defined: a3 is X
// [Asm] defs: [a4]
// [Asm] live_set: [v2, v5, a0, a4, v7, v4, a2, a1, v6, a3, v3]
// [Asm] move_origin: [v6]
// [Asm] defined: a4 is X
// [Asm] defs: [a5]
// [Asm] live_set: [v2, v5, a5, a0, a4, v7, v4, a2, a1, v6, a3, v3]
// [Asm] move_origin: [v7]
// [Asm] defined: a5 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [v2, v5, a0, v7, v4, v6, v3]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v10]
// [Asm] live_set: [v3, v2, v4, v6, v5, v7]
// [Asm] move_origin: [a0]
// [Asm] defined: v10 is X
// [Asm] defs: []
// [Asm] live_set: [v3, v2, v4, v6, v5, v7]
// [Asm] move_origin: []
// [Asm] defs: [v11]
// [Asm] live_set: [v3, v11, v4, v5, v6, v7]
// [Asm] move_origin: []
// [Asm] defined: v11 is X
// [Asm] defs: []
// [Asm] live_set: [v3, v11, v4, v5, v6, v7]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [v3, v4, v6, v5, a0, v7]
// [Asm] move_origin: [v11]
// [Asm] defined: a0 is X
// [Asm] defs: [a1]
// [Asm] live_set: [v4, a1, v6, v5, a0, v7]
// [Asm] move_origin: [v3]
// [Asm] defined: a1 is X
// [Asm] defs: [a2]
// [Asm] live_set: [a2, a1, v6, v5, a0, v7]
// [Asm] move_origin: [v4]
// [Asm] defined: a2 is X
// [Asm] defs: [a3]
// [Asm] live_set: [a2, a1, v6, a3, a0, v7]
// [Asm] move_origin: [v5]
// [Asm] defined: a3 is X
// [Asm] defs: [a4]
// [Asm] live_set: [a2, a1, a3, a0, a4, v7]
// [Asm] move_origin: [v6]
// [Asm] defined: a4 is X
// [Asm] defs: [a5]
// [Asm] live_set: [a2, a1, a3, a5, a0, a4]
// [Asm] move_origin: [v7]
// [Asm] defined: a5 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v12]
// [Asm] live_set: [v12]
// [Asm] move_origin: [a0]
// [Asm] defined: v12 is X
// [Asm] defs: []
// [Asm] live_set: [v12]
// [Asm] move_origin: []
// [Asm] defs: [v13]
// [Asm] live_set: [v13]
// [Asm] move_origin: [v12]
// [Asm] defined: v13 is X
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [v13]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] defs: [v13]
// [Asm] live_set: [v13]
// [Asm] move_origin: [zero]
// [Asm] defined: v13 is X
// [Asm] defs: []
// [Asm] live_set: [v13]
// [Asm] move_origin: []
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of loop148_2"];
// [Asm]   r0 [label="v2 ← s0", color=green];
// [Asm]   r20 [label="a7", color=blue];
// [Asm]   r23 [label="v12 ← a0", color=green];
// [Asm]   r3 [label="a4", color=blue];
// [Asm]   r9 [label="v5 ← s3", color=green];
// [Asm]   r6 [label="a3", color=blue];
// [Asm]   r13 [label="a0", color=blue];
// [Asm]   r4 [label="a2", color=blue];
// [Asm]   r1 [label="a5", color=blue];
// [Asm]   r11 [label="v7 ← s5", color=green];
// [Asm]   r7 [label="v3 ← s1", color=green];
// [Asm]   r10 [label="v6 ← s4", color=green];
// [Asm]   r22 [label="v11 ← a0", color=green];
// [Asm]   r14 [label="t0", color=blue];
// [Asm]   r8 [label="v4 ← s2", color=green];
// [Asm]   r5 [label="a1", color=blue];
// [Asm]   r15 [label="t1", color=blue];
// [Asm]   r24 [label="v13 ← a0", color=green];
// [Asm]   r2 [label="zero", color=blue];
// [Asm]   r16 [label="t2", color=blue];
// [Asm]   r18 [label="t4", color=blue];
// [Asm]   r19 [label="a6", color=blue];
// [Asm]   r17 [label="t3", color=blue];
// [Asm]   r21 [label="v10 ← a0", color=green];
// [Asm]   r12 [label="v9 ← a2", color=green];
// [Asm]   r0 -- r13;
// [Asm]   r7 -- r21;
// [Asm]   r5 -- r8;
// [Asm]   r5 -- r10;
// [Asm]   r3 -- r6;
// [Asm]   r1 -- r4;
// [Asm]   r11 -- r14;
// [Asm]   r0 -- r17;
// [Asm]   r1 -- r7;
// [Asm]   r1 -- r10;
// [Asm]   r10 -- r13;
// [Asm]   r2 -- r10;
// [Asm]   r10 -- r19;
// [Asm]   r3 -- r9;
// [Asm]   r3 -- r11;
// [Asm]   r9 -- r17;
// [Asm]   r2 -- r7;
// [Asm]   r11 -- r18;
// [Asm]   r0 -- r16;
// [Asm]   r3 -- r5;
// [Asm]   r11 -- r19;
// [Asm]   r9 -- r18;
// [Asm]   r8 -- r12;
// [Asm]   r0 -- r6;
// [Asm]   r9 -- r14;
// [Asm]   r3 -- r8;
// [Asm]   r6 -- r13;
// [Asm]   r1 -- r9;
// [Asm]   r10 -- r20;
// [Asm]   r5 -- r6;
// [Asm]   r8 -- r17;
// [Asm]   r3 -- r4;
// [Asm]   r8 -- r16;
// [Asm]   r11 -- r13;
// [Asm]   r10 -- r18;
// [Asm]   r0 -- r2;
// [Asm]   r10 -- r12;
// [Asm]   r0 -- r9;
// [Asm]   r3 -- r13;
// [Asm]   r6 -- r10;
// [Asm]   r7 -- r10;
// [Asm]   r9 -- r12;
// [Asm]   r2 -- r8;
// [Asm]   r3 -- r10;
// [Asm]   r10 -- r22;
// [Asm]   r0 -- r1;
// [Asm]   r9 -- r20;
// [Asm]   r0 -- r10;
// [Asm]   r13 -- r18;
// [Asm]   r1 -- r11;
// [Asm]   r5 -- r7;
// [Asm]   r8 -- r22;
// [Asm]   r8 -- r21;
// [Asm]   r4 -- r8;
// [Asm]   r9 -- r10;
// [Asm]   r11 -- r15;
// [Asm]   r0 -- r11;
// [Asm]   r8 -- r11;
// [Asm]   r3 -- r7;
// [Asm]   r1 -- r6;
// [Asm]   r1 -- r5;
// [Asm]   r0 -- r4;
// [Asm]   r8 -- r14;
// [Asm]   r7 -- r8;
// [Asm]   r4 -- r9;
// [Asm]   r0 -- r18;
// [Asm]   r10 -- r17;
// [Asm]   r6 -- r7;
// [Asm]   r6 -- r9;
// [Asm]   r4 -- r13;
// [Asm]   r0 -- r15;
// [Asm]   r6 -- r11;
// [Asm]   r13 -- r15;
// [Asm]   r4 -- r5;
// [Asm]   r11 -- r20;
// [Asm]   r11 -- r17;
// [Asm]   r1 -- r8;
// [Asm]   r9 -- r15;
// [Asm]   r8 -- r19;
// [Asm]   r8 -- r9;
// [Asm]   r11 -- r16;
// [Asm]   r5 -- r13;
// [Asm]   r7 -- r13;
// [Asm]   r0 -- r14;
// [Asm]   r7 -- r20;
// [Asm]   r13 -- r16;
// [Asm]   r11 -- r12;
// [Asm]   r0 -- r21;
// [Asm]   r1 -- r13;
// [Asm]   r11 -- r22;
// [Asm]   r2 -- r11;
// [Asm]   r7 -- r9;
// [Asm]   r5 -- r11;
// [Asm]   r8 -- r20;
// [Asm]   r0 -- r19;
// [Asm]   r13 -- r20;
// [Asm]   r13 -- r19;
// [Asm]   r10 -- r16;
// [Asm]   r6 -- r8;
// [Asm]   r7 -- r17;
// [Asm]   r9 -- r22;
// [Asm]   r7 -- r22;
// [Asm]   r9 -- r11;
// [Asm]   r4 -- r11;
// [Asm]   r7 -- r19;
// [Asm]   r12 -- r13;
// [Asm]   r8 -- r13;
// [Asm]   r5 -- r9;
// [Asm]   r0 -- r3;
// [Asm]   r8 -- r15;
// [Asm]   r0 -- r8;
// [Asm]   r7 -- r15;
// [Asm]   r10 -- r15;
// [Asm]   r13 -- r14;
// [Asm]   r8 -- r18;
// [Asm]   r10 -- r11;
// [Asm]   r7 -- r11;
// [Asm]   r0 -- r5;
// [Asm]   r13 -- r17;
// [Asm]   r8 -- r10;
// [Asm]   r4 -- r7;
// [Asm]   r9 -- r16;
// [Asm]   r0 -- r12;
// [Asm]   r9 -- r19;
// [Asm]   r7 -- r16;
// [Asm]   r7 -- r18;
// [Asm]   r2 -- r9;
// [Asm]   r4 -- r6;
// [Asm]   r4 -- r10;
// [Asm]   r1 -- r3;
// [Asm]   r0 -- r7;
// [Asm]   r7 -- r12;
// [Asm]   r9 -- r13;
// [Asm]   r0 -- r20;
// [Asm]   r7 -- r14;
// [Asm]   r10 -- r21;
// [Asm]   r11 -- r21;
// [Asm]   r9 -- r21;
// [Asm]   r10 -- r14;
// [Asm]   r5 -- r12;
// [Asm]   comment = "0:v2-> 1:a5-> 3:a4-> 4:a2-> 5:a1-> 6:a3-> 7:v3-> 8:v4-> 9:v5-> 10:v6-> 11:v7-> 13:a0-> 12:v9-> 14:t0-> 15:t1-> 16:t2-> 17:t3-> 18:t4-> 19:a6-> 20:a7-> 2:zero-> 21:v10-> 22:v11-> 23:v12-> 24:v13"
// [Asm]   comment = "v2<-s0;v12<-a0;v5<-s3;v7<-s5;v3<-s1;v6<-s4;v11<-a0;v4<-s2;v13<-a0;v10<-a0;v9<-a2;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of loop148_2"];
// [Asm]   r0 [label="ft0", color=blue];
// [Asm]   r3 [label="ft3", color=blue];
// [Asm]   r9 [label="ft9", color=blue];
// [Asm]   r6 [label="ft6", color=blue];
// [Asm]   r13 [label="fa2", color=blue];
// [Asm]   r4 [label="ft4", color=blue];
// [Asm]   r1 [label="ft1", color=blue];
// [Asm]   r11 [label="fa0", color=blue];
// [Asm]   r7 [label="ft7", color=blue];
// [Asm]   r10 [label="ft10", color=blue];
// [Asm]   r14 [label="fa3", color=blue];
// [Asm]   r8 [label="ft8", color=blue];
// [Asm]   r5 [label="ft5", color=blue];
// [Asm]   r15 [label="fa4", color=blue];
// [Asm]   r2 [label="ft2", color=blue];
// [Asm]   r16 [label="fa5", color=blue];
// [Asm]   r18 [label="fa7", color=blue];
// [Asm]   r17 [label="fa6", color=blue];
// [Asm]   r12 [label="fa1", color=blue];
// [Asm]   comment = "0:ft0-> 1:ft1-> 2:ft2-> 3:ft3-> 4:ft4-> 5:ft5-> 6:ft6-> 7:ft7-> 8:ft8-> 9:ft9-> 10:ft10-> 11:fa0-> 12:fa1-> 13:fa2-> 14:fa3-> 15:fa4-> 16:fa5-> 17:fa6-> 18:fa7"
// [Asm]   comment = ""
// [Asm] }
// [Asm] 
// [Asm] subst   mv v2, a0 ->   mv s0, a0
// [Asm] subst   mv v3, a1 ->   mv s1, a1
// [Asm] subst   mv v4, a2 ->   mv s2, a2
// [Asm] subst   mv v5, a3 ->   mv s3, a3
// [Asm] subst   mv v6, a4 ->   mv s4, a4
// [Asm] subst   mv v7, a5 ->   mv s5, a5
// [Asm] subst   blt v2, zero, .loop148_2_2 ->   blt s0, zero, .loop148_2_2
// [Asm] subst   addi v9, v4, -1 ->   addi a2, s2, -1
// [Asm] subst   mv a0, v2 ->   mv a0, s0
// [Asm] subst   mv a1, v3 ->   mv a1, s1
// [Asm] subst   mv a3, v5 ->   mv a3, s3
// [Asm] subst   mv a4, v6 ->   mv a4, s4
// [Asm] subst   mv a5, v7 ->   mv a5, s5
// [Asm] subst   call loop228_1 ->   call loop228_1
// [Asm] subst   addi v11, v2, -1 ->   addi a0, s0, -1
// [Asm] subst   mv a1, v3 ->   mv a1, s1
// [Asm] subst   mv a2, v4 ->   mv a2, s2
// [Asm] subst   mv a3, v5 ->   mv a3, s3
// [Asm] subst   mv a4, v6 ->   mv a4, s4
// [Asm] subst   mv a5, v7 ->   mv a5, s5
// [Asm] subst   call loop148_2 ->   call loop148_2
// [Asm] subst   ret ->   ret
// [Asm] subst   mv v13, zero ->   mv a0, zero
// [Asm] subst   j .loop148_2_3 ->   j .loop148_2_3
// [Asm] pre_assigned_registers: FnParam(fref=f3, fpref=$f.2) -> v4, FnParam(fref=f3, fpref=$f.4) -> v6, FnParam(fref=f3, fpref=$f.1) -> v3, Insn(iref=%1) -> v9, FnParam(fref=f3, fpref=$f.3) -> v5, FnParam(fref=f3, fpref=$f.0) -> v2, FnParam(fref=f3, fpref=$f.5) -> v7, Self(fref=f3) -> v0, Insn(iref=%0) -> v8
// [Asm] defs: []
// [Asm] live_set: [a5, zero, a0, a4, a2, a1, a3]
// [Asm] move_origin: []
// [Asm] defs: [v2]
// [Asm] live_set: [a5, zero, a4, a2, a1, a3, v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v2 is X
// [Asm] defs: [v3]
// [Asm] live_set: [v2, a5, zero, a4, a2, a3, v3]
// [Asm] move_origin: [a1]
// [Asm] defined: v3 is X
// [Asm] defs: [v4]
// [Asm] live_set: [v2, a5, zero, a4, v4, a3, v3]
// [Asm] move_origin: [a2]
// [Asm] defined: v4 is X
// [Asm] defs: [v5]
// [Asm] live_set: [v2, v5, a5, zero, a4, v4, v3]
// [Asm] move_origin: [a3]
// [Asm] defined: v5 is X
// [Asm] defs: [v6]
// [Asm] live_set: [v2, v5, a5, zero, v4, v6, v3]
// [Asm] move_origin: [a4]
// [Asm] defined: v6 is X
// [Asm] defs: [v7]
// [Asm] live_set: [v2, v5, zero, v7, v4, v6, v3]
// [Asm] move_origin: [a5]
// [Asm] defined: v7 is X
// [Asm] defs: [v8]
// [Asm] live_set: [v5, zero, v7, v8, v4, v6, v3]
// [Asm] move_origin: []
// [Asm] defined: v8 is X
// [Asm] defs: []
// [Asm] live_set: [v5, zero, v7, v8, v4, v6, v3]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [v5, zero, a0, v7, v4, v6, v3]
// [Asm] move_origin: [v8]
// [Asm] defined: a0 is X
// [Asm] defs: [a1]
// [Asm] live_set: [v5, zero, a0, v7, v4, a1, v6]
// [Asm] move_origin: [v3]
// [Asm] defined: a1 is X
// [Asm] defs: [a2]
// [Asm] live_set: [v5, zero, a0, v7, a2, a1, v6]
// [Asm] move_origin: [v4]
// [Asm] defined: a2 is X
// [Asm] defs: [a3]
// [Asm] live_set: [zero, a0, v7, a2, a1, v6, a3]
// [Asm] move_origin: [v5]
// [Asm] defined: a3 is X
// [Asm] defs: [a4]
// [Asm] live_set: [zero, a0, a4, v7, a2, a1, a3]
// [Asm] move_origin: [v6]
// [Asm] defined: a4 is X
// [Asm] defs: [a5]
// [Asm] live_set: [a5, zero, a0, a4, a2, a1, a3]
// [Asm] move_origin: [v7]
// [Asm] defined: a5 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [zero, a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v9]
// [Asm] live_set: [zero]
// [Asm] move_origin: [a0]
// [Asm] defined: v9 is X
// [Asm] defs: []
// [Asm] live_set: [zero]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [zero]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of mul68_3"];
// [Asm]   r0 [label="v2 ← a0", color=green];
// [Asm]   r20 [label="a7", color=blue];
// [Asm]   r3 [label="a4", color=blue];
// [Asm]   r9 [label="v5 ← a3", color=green];
// [Asm]   r6 [label="a3", color=blue];
// [Asm]   r13 [label="a0", color=blue];
// [Asm]   r4 [label="a2", color=blue];
// [Asm]   r1 [label="a5", color=blue];
// [Asm]   r11 [label="v7 ← a5", color=green];
// [Asm]   r7 [label="v3 ← a1", color=green];
// [Asm]   r10 [label="v6 ← a4", color=green];
// [Asm]   r14 [label="t0", color=blue];
// [Asm]   r8 [label="v4 ← a2", color=green];
// [Asm]   r5 [label="a1", color=blue];
// [Asm]   r15 [label="t1", color=blue];
// [Asm]   r2 [label="zero", color=blue];
// [Asm]   r16 [label="t2", color=blue];
// [Asm]   r18 [label="t4", color=blue];
// [Asm]   r19 [label="a6", color=blue];
// [Asm]   r21 [label="v9 ← a0", color=green];
// [Asm]   r17 [label="t3", color=blue];
// [Asm]   r12 [label="v8 ← a0", color=green];
// [Asm]   r6 -- r7;
// [Asm]   r4 -- r13;
// [Asm]   r6 -- r11;
// [Asm]   r13 -- r15;
// [Asm]   r4 -- r5;
// [Asm]   r2 -- r15;
// [Asm]   r1 -- r8;
// [Asm]   r5 -- r8;
// [Asm]   r2 -- r4;
// [Asm]   r5 -- r10;
// [Asm]   r2 -- r18;
// [Asm]   r1 -- r4;
// [Asm]   r3 -- r6;
// [Asm]   r1 -- r7;
// [Asm]   r8 -- r9;
// [Asm]   r5 -- r13;
// [Asm]   r1 -- r10;
// [Asm]   r7 -- r13;
// [Asm]   r10 -- r13;
// [Asm]   r2 -- r10;
// [Asm]   r13 -- r16;
// [Asm]   r11 -- r12;
// [Asm]   r3 -- r9;
// [Asm]   r3 -- r11;
// [Asm]   r1 -- r13;
// [Asm]   r2 -- r16;
// [Asm]   r2 -- r7;
// [Asm]   r2 -- r11;
// [Asm]   r7 -- r9;
// [Asm]   r5 -- r11;
// [Asm]   r3 -- r5;
// [Asm]   r13 -- r20;
// [Asm]   r13 -- r19;
// [Asm]   r8 -- r12;
// [Asm]   r6 -- r8;
// [Asm]   r0 -- r6;
// [Asm]   r3 -- r8;
// [Asm]   r6 -- r13;
// [Asm]   r1 -- r9;
// [Asm]   r9 -- r11;
// [Asm]   r2 -- r6;
// [Asm]   r5 -- r6;
// [Asm]   r4 -- r11;
// [Asm]   r3 -- r4;
// [Asm]   r11 -- r13;
// [Asm]   r8 -- r13;
// [Asm]   r2 -- r14;
// [Asm]   r5 -- r9;
// [Asm]   r0 -- r2;
// [Asm]   r0 -- r3;
// [Asm]   r10 -- r12;
// [Asm]   r0 -- r9;
// [Asm]   r0 -- r8;
// [Asm]   r3 -- r13;
// [Asm]   r7 -- r10;
// [Asm]   r6 -- r10;
// [Asm]   r9 -- r12;
// [Asm]   r13 -- r14;
// [Asm]   r2 -- r12;
// [Asm]   r10 -- r11;
// [Asm]   r2 -- r8;
// [Asm]   r7 -- r11;
// [Asm]   r0 -- r5;
// [Asm]   r13 -- r17;
// [Asm]   r2 -- r21;
// [Asm]   r1 -- r2;
// [Asm]   r2 -- r5;
// [Asm]   r2 -- r13;
// [Asm]   r0 -- r1;
// [Asm]   r8 -- r10;
// [Asm]   r2 -- r17;
// [Asm]   r0 -- r10;
// [Asm]   r13 -- r18;
// [Asm]   r4 -- r7;
// [Asm]   r9 -- r10;
// [Asm]   r0 -- r11;
// [Asm]   r8 -- r11;
// [Asm]   r3 -- r7;
// [Asm]   r1 -- r6;
// [Asm]   r1 -- r5;
// [Asm]   r2 -- r9;
// [Asm]   r0 -- r4;
// [Asm]   r4 -- r6;
// [Asm]   r4 -- r10;
// [Asm]   r1 -- r3;
// [Asm]   r7 -- r8;
// [Asm]   r2 -- r19;
// [Asm]   r9 -- r13;
// [Asm]   r0 -- r7;
// [Asm]   r7 -- r12;
// [Asm]   r2 -- r3;
// [Asm]   r4 -- r9;
// [Asm]   r2 -- r20;
// [Asm]   comment = "0:v2-> 1:a5-> 2:zero-> 3:a4-> 4:a2-> 5:a1-> 6:a3-> 7:v3-> 8:v4-> 9:v5-> 10:v6-> 11:v7-> 13:a0-> 12:v8-> 14:t0-> 15:t1-> 16:t2-> 17:t3-> 18:t4-> 19:a6-> 20:a7-> 21:v9"
// [Asm]   comment = "v2<-a0;v5<-a3;v7<-a5;v3<-a1;v6<-a4;v4<-a2;v9<-a0;v8<-a0;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of mul68_3"];
// [Asm]   r0 [label="ft0", color=blue];
// [Asm]   r3 [label="ft3", color=blue];
// [Asm]   r9 [label="ft9", color=blue];
// [Asm]   r6 [label="ft6", color=blue];
// [Asm]   r13 [label="fa2", color=blue];
// [Asm]   r4 [label="ft4", color=blue];
// [Asm]   r1 [label="ft1", color=blue];
// [Asm]   r11 [label="fa0", color=blue];
// [Asm]   r7 [label="ft7", color=blue];
// [Asm]   r10 [label="ft10", color=blue];
// [Asm]   r14 [label="fa3", color=blue];
// [Asm]   r8 [label="ft8", color=blue];
// [Asm]   r5 [label="ft5", color=blue];
// [Asm]   r15 [label="fa4", color=blue];
// [Asm]   r2 [label="ft2", color=blue];
// [Asm]   r16 [label="fa5", color=blue];
// [Asm]   r18 [label="fa7", color=blue];
// [Asm]   r17 [label="fa6", color=blue];
// [Asm]   r12 [label="fa1", color=blue];
// [Asm]   comment = "0:ft0-> 1:ft1-> 2:ft2-> 3:ft3-> 4:ft4-> 5:ft5-> 6:ft6-> 7:ft7-> 8:ft8-> 9:ft9-> 10:ft10-> 11:fa0-> 12:fa1-> 13:fa2-> 14:fa3-> 15:fa4-> 16:fa5-> 17:fa6-> 18:fa7"
// [Asm]   comment = ""
// [Asm] }
// [Asm] 
// [Asm] subst   addi v8, v2, -1 ->   addi a0, a0, -1
// [Asm] subst   call loop148_2 ->   call loop148_2
// [Asm] subst   mv a0, zero ->   mv a0, zero
// [Asm] subst   ret ->   ret
// [Asm] pre_assigned_registers: Self(fref=f14) -> v0, Insn(iref=%0) -> v2
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v2]
// [Asm] live_set: [v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v2 is X
// [Asm] defs: []
// [Asm] live_set: [v2]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [v2]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of T$start_14"];
// [Asm]   r0 [label="t0", color=blue];
// [Asm]   r5 [label="t4", color=blue];
// [Asm]   r3 [label="t2", color=blue];
// [Asm]   r2 [label="t1", color=blue];
// [Asm]   r9 [label="a4", color=blue];
// [Asm]   r6 [label="a1", color=blue];
// [Asm]   r13 [label="v2 ← a0", color=green];
// [Asm]   r4 [label="t3", color=blue];
// [Asm]   r1 [label="a0", color=blue];
// [Asm]   r11 [label="a6", color=blue];
// [Asm]   r7 [label="a2", color=blue];
// [Asm]   r10 [label="a5", color=blue];
// [Asm]   r12 [label="a7", color=blue];
// [Asm]   r8 [label="a3", color=blue];
// [Asm]   r1 -- r2;
// [Asm]   r1 -- r8;
// [Asm]   r1 -- r5;
// [Asm]   r1 -- r9;
// [Asm]   r0 -- r1;
// [Asm]   r1 -- r3;
// [Asm]   r1 -- r4;
// [Asm]   r1 -- r11;
// [Asm]   r1 -- r7;
// [Asm]   r1 -- r12;
// [Asm]   r1 -- r6;
// [Asm]   r1 -- r10;
// [Asm]   comment = "0:t0-> 1:a0-> 2:t1-> 3:t2-> 4:t3-> 5:t4-> 6:a1-> 7:a2-> 8:a3-> 9:a4-> 10:a5-> 11:a6-> 12:a7-> 13:v2"
// [Asm]   comment = "v2<-a0;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of T$start_14"];
// [Asm]   r0 [label="ft0", color=blue];
// [Asm]   r3 [label="ft3", color=blue];
// [Asm]   r9 [label="ft9", color=blue];
// [Asm]   r6 [label="ft6", color=blue];
// [Asm]   r13 [label="fa2", color=blue];
// [Asm]   r4 [label="ft4", color=blue];
// [Asm]   r1 [label="ft1", color=blue];
// [Asm]   r11 [label="fa0", color=blue];
// [Asm]   r7 [label="ft7", color=blue];
// [Asm]   r10 [label="ft10", color=blue];
// [Asm]   r14 [label="fa3", color=blue];
// [Asm]   r8 [label="ft8", color=blue];
// [Asm]   r5 [label="ft5", color=blue];
// [Asm]   r15 [label="fa4", color=blue];
// [Asm]   r2 [label="ft2", color=blue];
// [Asm]   r16 [label="fa5", color=blue];
// [Asm]   r18 [label="fa7", color=blue];
// [Asm]   r17 [label="fa6", color=blue];
// [Asm]   r12 [label="fa1", color=blue];
// [Asm]   comment = "0:ft0-> 1:ft1-> 2:ft2-> 3:ft3-> 4:ft4-> 5:ft5-> 6:ft6-> 7:ft7-> 8:ft8-> 9:ft9-> 10:ft10-> 11:fa0-> 12:fa1-> 13:fa2-> 14:fa3-> 15:fa4-> 16:fa5-> 17:fa6-> 18:fa7"
// [Asm]   comment = ""
// [Asm] }
// [Asm] 
// [Asm] subst   call main85_4 ->   call main85_4
// [Asm] subst   ret ->   ret
// [Asm] pre_assigned_registers: Self(fref=f0) -> v0, FnParam(fref=f0, fpref=$f.5) -> v7, BlockParam(bref=b3, bpref=$b.0) -> v21, Insn(iref=%9) -> fv17, Insn(iref=%8) -> fv16, Insn(iref=%10) -> v18, FnParam(fref=f0, fpref=$f.3) -> v5, FnParam(fref=f0, fpref=$f.0) -> v2, Insn(iref=%5) -> fv13, Insn(iref=%0) -> v8, Insn(iref=%4) -> v12, Insn(iref=%3) -> fv11, FnParam(fref=f0, fpref=$f.1) -> v3, FnParam(fref=f0, fpref=$f.2) -> v4, Insn(iref=%7) -> fv15, Insn(iref=%2) -> v10, FnParam(fref=f0, fpref=$f.4) -> v6, Insn(iref=%1) -> v9, Insn(iref=%11) -> v19, Insn(iref=%6) -> v14, Insn(iref=%12) -> v20
// [Asm] skipping Op(ty=Double, op=Mul, args=[Insn(iref=%5), Insn(iref=%7)])
// [Asm] skipping Op(ty=Bool, op=Le, args=[Int32(val=0), FnParam(fref=f0, fpref=$f.2)])
// [Asm] defs: []
// [Asm] live_set: [a5, zero, a0, a4, a2, a1, a3]
// [Asm] move_origin: []
// [Asm] defs: [v2]
// [Asm] live_set: [a5, zero, a4, a2, a1, a3, v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v2 is X
// [Asm] defs: [v3]
// [Asm] live_set: [v3, a5, zero, a4, a2, a3, v2]
// [Asm] move_origin: [a1]
// [Asm] defined: v3 is X
// [Asm] defs: [v4]
// [Asm] live_set: [v3, a5, zero, a4, v4, a3, v2]
// [Asm] move_origin: [a2]
// [Asm] defined: v4 is X
// [Asm] defs: [v5]
// [Asm] live_set: [v3, v5, a5, zero, a4, v4, v2]
// [Asm] move_origin: [a3]
// [Asm] defined: v5 is X
// [Asm] defs: [v6]
// [Asm] live_set: [v3, v5, a5, zero, v4, v6, v2]
// [Asm] move_origin: [a4]
// [Asm] defined: v6 is X
// [Asm] defs: [v7]
// [Asm] live_set: [v3, v5, zero, v7, v4, v6, v2]
// [Asm] move_origin: [a5]
// [Asm] defined: v7 is X
// [Asm] defs: []
// [Asm] live_set: [v3, v5, zero, v7, v4, v6, v2]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [v21]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] defs: [v21]
// [Asm] live_set: [v21]
// [Asm] move_origin: [zero]
// [Asm] defined: v21 is X
// [Asm] defs: []
// [Asm] live_set: [v21]
// [Asm] move_origin: []
// [Asm] defs: [v45]
// [Asm] live_set: [v2, v5, v7, v45, v4, v6, v3]
// [Asm] move_origin: []
// [Asm] defined: v45 is X
// [Asm] defs: [v46]
// [Asm] live_set: [v2, v5, v46, v7, v4, v6, v3]
// [Asm] move_origin: []
// [Asm] defined: v46 is X
// [Asm] defs: [v9]
// [Asm] live_set: [v2, v5, v7, v4, v6, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v9 is X
// [Asm] defs: [v42]
// [Asm] live_set: [v2, v5, v42, v7, v4, v6, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v42 is X
// [Asm] defs: [v43]
// [Asm] live_set: [v2, v5, v7, v4, v6, v43, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v43 is X
// [Asm] defs: [v10]
// [Asm] live_set: [v2, v5, v10, v7, v4, v6, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v10 is X
// [Asm] defs: [v39]
// [Asm] live_set: [v2, v5, v10, v7, v4, v6, v9, v39, v3]
// [Asm] move_origin: []
// [Asm] defined: v39 is X
// [Asm] defs: [v40]
// [Asm] live_set: [v2, v40, v5, v7, v4, v6, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v40 is X
// [Asm] defs: [fv11]
// [Asm] live_set: [v2, v5, fv11, v7, v4, v6, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: fv11 is F
// [Asm] defs: [v36]
// [Asm] live_set: [v2, v5, fv11, v7, v36, v4, v6, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v36 is X
// [Asm] defs: [v37]
// [Asm] live_set: [v2, v5, fv11, v7, v4, v37, v6, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v37 is X
// [Asm] defs: [v12]
// [Asm] live_set: [v2, v5, fv11, v7, v4, v6, v12, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v12 is X
// [Asm] defs: [v33]
// [Asm] live_set: [v2, v5, fv11, v7, v4, v6, v12, v9, v33, v3]
// [Asm] move_origin: []
// [Asm] defined: v33 is X
// [Asm] defs: [v34]
// [Asm] live_set: [v2, v5, fv11, v7, v4, v6, v9, v34, v3]
// [Asm] move_origin: []
// [Asm] defined: v34 is X
// [Asm] defs: [fv13]
// [Asm] live_set: [v2, v5, fv11, v7, fv13, v4, v6, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: fv13 is F
// [Asm] defs: [v30]
// [Asm] live_set: [v2, v5, fv11, v30, v7, fv13, v4, v6, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v30 is X
// [Asm] defs: [v31]
// [Asm] live_set: [v2, v5, fv11, v7, fv13, v4, v6, v31, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v31 is X
// [Asm] defs: [v14]
// [Asm] live_set: [v2, v5, v14, fv11, v7, fv13, v4, v6, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v14 is X
// [Asm] defs: [v27]
// [Asm] live_set: [v2, v5, v14, fv11, v27, v7, fv13, v4, v6, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v27 is X
// [Asm] defs: [v28]
// [Asm] live_set: [v2, v5, fv11, v7, fv13, v4, v6, v28, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v28 is X
// [Asm] defs: [fv15]
// [Asm] live_set: [v2, v5, fv11, v7, fv13, v4, v6, fv15, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: fv15 is F
// [Asm] defs: [fv17]
// [Asm] live_set: [v2, v5, v7, v4, v6, fv17, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: fv17 is F
// [Asm] defs: [v24]
// [Asm] live_set: [v2, v5, v7, v4, v6, v24, fv17, v9, v3]
// [Asm] move_origin: []
// [Asm] defined: v24 is X
// [Asm] defs: [v25]
// [Asm] live_set: [v2, v25, v5, v7, v4, v6, fv17, v3]
// [Asm] move_origin: []
// [Asm] defined: v25 is X
// [Asm] defs: []
// [Asm] live_set: [v3, v2, v4, v6, v5, v7]
// [Asm] move_origin: []
// [Asm] defs: [v19]
// [Asm] live_set: [v3, v2, v19, v5, v6, v7]
// [Asm] move_origin: []
// [Asm] defined: v19 is X
// [Asm] defs: []
// [Asm] live_set: [v3, v2, v19, v5, v6, v7]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [v3, v19, v6, v5, a0, v7]
// [Asm] move_origin: [v2]
// [Asm] defined: a0 is X
// [Asm] defs: [a1]
// [Asm] live_set: [v19, a1, v6, v5, a0, v7]
// [Asm] move_origin: [v3]
// [Asm] defined: a1 is X
// [Asm] defs: [a2]
// [Asm] live_set: [a2, a1, v6, v5, a0, v7]
// [Asm] move_origin: [v19]
// [Asm] defined: a2 is X
// [Asm] defs: [a3]
// [Asm] live_set: [a2, a1, v6, a3, a0, v7]
// [Asm] move_origin: [v5]
// [Asm] defined: a3 is X
// [Asm] defs: [a4]
// [Asm] live_set: [a2, a1, a3, a0, a4, v7]
// [Asm] move_origin: [v6]
// [Asm] defined: a4 is X
// [Asm] defs: [a5]
// [Asm] live_set: [a2, a1, a3, a5, a0, a4]
// [Asm] move_origin: [v7]
// [Asm] defined: a5 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v20]
// [Asm] live_set: [v20]
// [Asm] move_origin: [a0]
// [Asm] defined: v20 is X
// [Asm] defs: []
// [Asm] live_set: [v20]
// [Asm] move_origin: []
// [Asm] defs: [v21]
// [Asm] live_set: [v21]
// [Asm] move_origin: [v20]
// [Asm] defined: v21 is X
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of loop31_0"];
// [Asm]   r0 [label="v2 ← a0", color=green];
// [Asm]   r38 [label="t3", color=blue];
// [Asm]   r33 [label="v25 ← a6", color=green];
// [Asm]   r9 [label="v5 ← a3", color=green];
// [Asm]   r26 [label="v34 ← a7", color=green];
// [Asm]   r6 [label="a3", color=blue];
// [Asm]   r13 [label="v21 ← a0", color=green];
// [Asm]   r42 [label="v20 ← a0", color=green];
// [Asm]   r4 [label="a2", color=blue];
// [Asm]   r29 [label="v14 ← a7", color=green];
// [Asm]   r35 [label="t0", color=blue];
// [Asm]   r7 [label="v3 ← a1", color=green];
// [Asm]   r10 [label="v6 ← a4", color=green];
// [Asm]   r8 [label="v4 ← a2", color=green];
// [Asm]   r5 [label="a1", color=blue];
// [Asm]   r36 [label="t1", color=blue];
// [Asm]   r32 [label="v24 ← a7", color=green];
// [Asm]   r24 [label="v12 ← a7", color=green];
// [Asm]   r15 [label="v46 ← a6", color=green];
// [Asm]   r31 [label="v28 ← a7", color=green];
// [Asm]   r39 [label="t4", color=blue];
// [Asm]   r17 [label="v42 ← a7", color=green];
// [Asm]   r12 [label="a0", color=blue];
// [Asm]   r37 [label="t2", color=blue];
// [Asm]   r20 [label="v39 ← t0", color=green];
// [Asm]   r23 [label="v37 ← a7", color=green];
// [Asm]   r3 [label="a4", color=blue];
// [Asm]   r27 [label="v30 ← a7", color=green];
// [Asm]   r40 [label="a6", color=blue];
// [Asm]   r1 [label="a5", color=blue];
// [Asm]   r41 [label="a7", color=blue];
// [Asm]   r28 [label="v31 ← a7", color=green];
// [Asm]   r11 [label="v7 ← a5", color=green];
// [Asm]   r34 [label="v19 ← a2", color=green];
// [Asm]   r22 [label="v36 ← a7", color=green];
// [Asm]   r14 [label="v45 ← a6", color=green];
// [Asm]   r30 [label="v27 ← t0", color=green];
// [Asm]   r25 [label="v33 ← t0", color=green];
// [Asm]   r2 [label="zero", color=blue];
// [Asm]   r16 [label="v9 ← a6", color=green];
// [Asm]   r18 [label="v43 ← a7", color=green];
// [Asm]   r19 [label="v10 ← a7", color=green];
// [Asm]   r21 [label="v40 ← a7", color=green];
// [Asm]   r8 -- r31;
// [Asm]   r16 -- r20;
// [Asm]   r0 -- r32;
// [Asm]   r5 -- r10;
// [Asm]   r11 -- r14;
// [Asm]   r3 -- r6;
// [Asm]   r7 -- r25;
// [Asm]   r0 -- r28;
// [Asm]   r3 -- r9;
// [Asm]   r3 -- r11;
// [Asm]   r9 -- r26;
// [Asm]   r0 -- r23;
// [Asm]   r9 -- r17;
// [Asm]   r11 -- r18;
// [Asm]   r2 -- r7;
// [Asm]   r0 -- r16;
// [Asm]   r7 -- r27;
// [Asm]   r7 -- r32;
// [Asm]   r3 -- r5;
// [Asm]   r11 -- r19;
// [Asm]   r9 -- r14;
// [Asm]   r0 -- r6;
// [Asm]   r3 -- r8;
// [Asm]   r8 -- r24;
// [Asm]   r1 -- r9;
// [Asm]   r16 -- r29;
// [Asm]   r5 -- r6;
// [Asm]   r0 -- r26;
// [Asm]   r8 -- r16;
// [Asm]   r10 -- r18;
// [Asm]   r10 -- r12;
// [Asm]   r0 -- r9;
// [Asm]   r10 -- r33;
// [Asm]   r9 -- r23;
// [Asm]   r9 -- r12;
// [Asm]   r8 -- r23;
// [Asm]   r10 -- r31;
// [Asm]   r10 -- r22;
// [Asm]   r0 -- r1;
// [Asm]   r9 -- r20;
// [Asm]   r0 -- r10;
// [Asm]   r11 -- r15;
// [Asm]   r16 -- r21;
// [Asm]   r1 -- r5;
// [Asm]   r8 -- r32;
// [Asm]   r0 -- r4;
// [Asm]   r24 -- r25;
// [Asm]   r16 -- r24;
// [Asm]   r8 -- r30;
// [Asm]   r0 -- r18;
// [Asm]   r0 -- r15;
// [Asm]   r7 -- r29;
// [Asm]   r16 -- r30;
// [Asm]   r11 -- r20;
// [Asm]   r1 -- r8;
// [Asm]   r7 -- r24;
// [Asm]   r8 -- r27;
// [Asm]   r29 -- r30;
// [Asm]   r16 -- r32;
// [Asm]   r12 -- r34;
// [Asm]   r0 -- r34;
// [Asm]   r8 -- r9;
// [Asm]   r11 -- r16;
// [Asm]   r7 -- r20;
// [Asm]   r0 -- r14;
// [Asm]   r11 -- r12;
// [Asm]   r11 -- r23;
// [Asm]   r10 -- r29;
// [Asm]   r9 -- r30;
// [Asm]   r11 -- r22;
// [Asm]   r2 -- r11;
// [Asm]   r8 -- r20;
// [Asm]   r5 -- r11;
// [Asm]   r8 -- r25;
// [Asm]   r0 -- r19;
// [Asm]   r16 -- r18;
// [Asm]   r10 -- r16;
// [Asm]   r0 -- r31;
// [Asm]   r7 -- r17;
// [Asm]   r7 -- r22;
// [Asm]   r9 -- r11;
// [Asm]   r12 -- r41;
// [Asm]   r7 -- r19;
// [Asm]   r5 -- r9;
// [Asm]   r0 -- r3;
// [Asm]   r8 -- r15;
// [Asm]   r7 -- r15;
// [Asm]   r10 -- r15;
// [Asm]   r9 -- r24;
// [Asm]   r8 -- r18;
// [Asm]   r10 -- r11;
// [Asm]   r0 -- r29;
// [Asm]   r0 -- r5;
// [Asm]   r8 -- r10;
// [Asm]   r11 -- r34;
// [Asm]   r4 -- r7;
// [Asm]   r8 -- r26;
// [Asm]   r7 -- r16;
// [Asm]   r7 -- r18;
// [Asm]   r2 -- r9;
// [Asm]   r10 -- r32;
// [Asm]   r4 -- r10;
// [Asm]   r4 -- r6;
// [Asm]   r0 -- r30;
// [Asm]   r7 -- r12;
// [Asm]   r11 -- r28;
// [Asm]   r0 -- r20;
// [Asm]   r7 -- r14;
// [Asm]   r11 -- r29;
// [Asm]   r9 -- r21;
// [Asm]   r5 -- r12;
// [Asm]   r12 -- r35;
// [Asm]   r9 -- r25;
// [Asm]   r16 -- r25;
// [Asm]   r7 -- r21;
// [Asm]   r1 -- r12;
// [Asm]   r9 -- r27;
// [Asm]   r10 -- r26;
// [Asm]   r1 -- r4;
// [Asm]   r0 -- r17;
// [Asm]   r1 -- r7;
// [Asm]   r1 -- r10;
// [Asm]   r0 -- r25;
// [Asm]   r10 -- r19;
// [Asm]   r2 -- r10;
// [Asm]   r11 -- r31;
// [Asm]   r11 -- r32;
// [Asm]   r9 -- r31;
// [Asm]   r0 -- r22;
// [Asm]   r11 -- r24;
// [Asm]   r16 -- r17;
// [Asm]   r9 -- r18;
// [Asm]   r7 -- r34;
// [Asm]   r10 -- r20;
// [Asm]   r8 -- r17;
// [Asm]   r3 -- r4;
// [Asm]   r0 -- r2;
// [Asm]   r9 -- r28;
// [Asm]   r7 -- r10;
// [Asm]   r6 -- r10;
// [Asm]   r12 -- r40;
// [Asm]   r2 -- r8;
// [Asm]   r4 -- r12;
// [Asm]   r8 -- r29;
// [Asm]   r10 -- r30;
// [Asm]   r8 -- r22;
// [Asm]   r8 -- r21;
// [Asm]   r9 -- r10;
// [Asm]   r0 -- r11;
// [Asm]   r8 -- r11;
// [Asm]   r10 -- r25;
// [Asm]   r3 -- r7;
// [Asm]   r1 -- r6;
// [Asm]   r8 -- r14;
// [Asm]   r7 -- r8;
// [Asm]   r11 -- r30;
// [Asm]   r16 -- r23;
// [Asm]   r4 -- r9;
// [Asm]   r16 -- r22;
// [Asm]   r16 -- r27;
// [Asm]   r11 -- r25;
// [Asm]   r5 -- r34;
// [Asm]   r10 -- r17;
// [Asm]   r6 -- r7;
// [Asm]   r16 -- r31;
// [Asm]   r6 -- r11;
// [Asm]   r4 -- r5;
// [Asm]   r11 -- r17;
// [Asm]   r12 -- r38;
// [Asm]   r9 -- r15;
// [Asm]   r0 -- r24;
// [Asm]   r9 -- r29;
// [Asm]   r12 -- r36;
// [Asm]   r8 -- r19;
// [Asm]   r7 -- r26;
// [Asm]   r3 -- r12;
// [Asm]   r16 -- r19;
// [Asm]   r0 -- r21;
// [Asm]   r7 -- r30;
// [Asm]   r10 -- r27;
// [Asm]   r8 -- r33;
// [Asm]   r16 -- r26;
// [Asm]   r7 -- r9;
// [Asm]   r16 -- r28;
// [Asm]   r10 -- r34;
// [Asm]   r6 -- r12;
// [Asm]   r7 -- r28;
// [Asm]   r6 -- r8;
// [Asm]   r8 -- r28;
// [Asm]   r9 -- r22;
// [Asm]   r11 -- r33;
// [Asm]   r10 -- r28;
// [Asm]   r4 -- r11;
// [Asm]   r9 -- r34;
// [Asm]   r0 -- r33;
// [Asm]   r0 -- r8;
// [Asm]   r9 -- r33;
// [Asm]   r7 -- r33;
// [Asm]   r10 -- r23;
// [Asm]   r7 -- r11;
// [Asm]   r12 -- r39;
// [Asm]   r11 -- r26;
// [Asm]   r12 -- r37;
// [Asm]   r9 -- r16;
// [Asm]   r7 -- r31;
// [Asm]   r9 -- r32;
// [Asm]   r9 -- r19;
// [Asm]   r11 -- r27;
// [Asm]   r7 -- r23;
// [Asm]   r1 -- r3;
// [Asm]   r0 -- r7;
// [Asm]   r0 -- r27;
// [Asm]   r10 -- r21;
// [Asm]   r10 -- r24;
// [Asm]   r11 -- r21;
// [Asm]   r19 -- r20;
// [Asm]   r10 -- r14;
// [Asm]   comment = "0:v2-> 1:a5-> 3:a4-> 4:a2-> 5:a1-> 6:a3-> 7:v3-> 9:v5-> 10:v6-> 11:v7-> 12:a0-> 8:v4-> 34:v19-> 2:zero-> 14:v45-> 15:v46-> 16:v9-> 17:v42-> 18:v43-> 19:v10-> 20:v39-> 21:v40-> 22:v36-> 23:v37-> 24:v12-> 25:v33-> 26:v34-> 27:v30-> 28:v31-> 29:v14-> 30:v27-> 31:v28-> 32:v24-> 33:v25-> 35:t0-> 36:t1-> 37:t2-> 38:t3-> 39:t4-> 40:a6-> 41:a7-> 13:v21-> 42:v20"
// [Asm]   comment = "v2<-a0;v25<-a6;v5<-a3;v34<-a7;v21<-a0;v20<-a0;v14<-a7;v3<-a1;v6<-a4;v4<-a2;v24<-a7;v12<-a7;v46<-a6;v28<-a7;v42<-a7;v39<-t0;v37<-a7;v30<-a7;v31<-a7;v7<-a5;v19<-a2;v36<-a7;v45<-a6;v27<-t0;v33<-t0;v9<-a6;v43<-a7;v10<-a7;v40<-a7;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of loop31_0"];
// [Asm]   r0 [label="fv11 ← fa0", color=green];
// [Asm]   r20 [label="fa5", color=blue];
// [Asm]   r3 [label="fv17 ← fa0", color=green];
// [Asm]   r9 [label="ft5", color=blue];
// [Asm]   r6 [label="ft2", color=blue];
// [Asm]   r13 [label="ft9", color=blue];
// [Asm]   r4 [label="ft0", color=blue];
// [Asm]   r1 [label="fv13 ← fa1", color=green];
// [Asm]   r11 [label="ft7", color=blue];
// [Asm]   r7 [label="ft3", color=blue];
// [Asm]   r10 [label="ft6", color=blue];
// [Asm]   r22 [label="fa7", color=blue];
// [Asm]   r14 [label="ft10", color=blue];
// [Asm]   r8 [label="ft4", color=blue];
// [Asm]   r5 [label="ft1", color=blue];
// [Asm]   r15 [label="fa0", color=blue];
// [Asm]   r2 [label="fv15 ← fa2", color=green];
// [Asm]   r16 [label="fa1", color=blue];
// [Asm]   r18 [label="fa3", color=blue];
// [Asm]   r19 [label="fa4", color=blue];
// [Asm]   r21 [label="fa6", color=blue];
// [Asm]   r17 [label="fa2", color=blue];
// [Asm]   r12 [label="ft8", color=blue];
// [Asm]   r1 -- r2;
// [Asm]   r0 -- r1;
// [Asm]   r0 -- r2;
// [Asm]   comment = "0:fv11-> 1:fv13-> 2:fv15-> 3:fv17-> 4:ft0-> 5:ft1-> 6:ft2-> 7:ft3-> 8:ft4-> 9:ft5-> 10:ft6-> 11:ft7-> 12:ft8-> 13:ft9-> 14:ft10-> 15:fa0-> 16:fa1-> 17:fa2-> 18:fa3-> 19:fa4-> 20:fa5-> 21:fa6-> 22:fa7"
// [Asm]   comment = "fv11<-fa0;fv17<-fa0;fv13<-fa1;fv15<-fa2;"
// [Asm] }
// [Asm] 
// [Asm] subst   blt v4, zero, .loop31_0_2 ->   blt a2, zero, .loop31_0_2
// [Asm] subst   ret ->   ret
// [Asm] subst   mv v21, zero ->   mv a0, zero
// [Asm] subst   j .loop31_0_3 ->   j .loop31_0_3
// [Asm] subst   slliw v45, v2, 3 ->   slliw a6, a0, 3
// [Asm] subst   add v46, v7, v45 ->   add a6, a5, a6
// [Asm] subst   ld v9, 0(v46) ->   ld a6, 0(a6)
// [Asm] subst   slliw v42, v2, 3 ->   slliw a7, a0, 3
// [Asm] subst   add v43, v7, v42 ->   add a7, a5, a7
// [Asm] subst   ld v10, 0(v43) ->   ld a7, 0(a7)
// [Asm] subst   slliw v39, v3, 3 ->   slliw t0, a1, 3
// [Asm] subst   add v40, v10, v39 ->   add a7, a7, t0
// [Asm] subst   fld fv11, 0(v40) ->   fld fa0, 0(a7)
// [Asm] subst   slliw v36, v2, 3 ->   slliw a7, a0, 3
// [Asm] subst   add v37, v5, v36 ->   add a7, a3, a7
// [Asm] subst   ld v12, 0(v37) ->   ld a7, 0(a7)
// [Asm] subst   slliw v33, v4, 3 ->   slliw t0, a2, 3
// [Asm] subst   add v34, v12, v33 ->   add a7, a7, t0
// [Asm] subst   fld fv13, 0(v34) ->   fld fa1, 0(a7)
// [Asm] subst   slliw v30, v4, 3 ->   slliw a7, a2, 3
// [Asm] subst   add v31, v6, v30 ->   add a7, a4, a7
// [Asm] subst   ld v14, 0(v31) ->   ld a7, 0(a7)
// [Asm] subst   slliw v27, v3, 3 ->   slliw t0, a1, 3
// [Asm] subst   add v28, v14, v27 ->   add a7, a7, t0
// [Asm] subst   fld fv15, 0(v28) ->   fld fa2, 0(a7)
// [Asm] subst   fmadd.d fv17, fv13, fv15, fv11 ->   fmadd.d fa0, fa1, fa2, fa0
// [Asm] subst   slliw v24, v3, 3 ->   slliw a7, a1, 3
// [Asm] subst   add v25, v9, v24 ->   add a6, a6, a7
// [Asm] subst   fsd fv17, 0(v25) ->   fsd fa0, 0(a6)
// [Asm] subst   addi v19, v4, -1 ->   addi a2, a2, -1
// [Asm] subst   call loop31_0 ->   call loop31_0
// [Asm] before colored: # leaf false
// [Asm] main85_4:
// [Asm] # block info: defs: [fv112, a1, s11, fv47, v44, fa1, fa2, v99, v50, fv100, a6, ft10, v102, ft4, v10, ft9, v119, v123, v43, a7, v48, v96, v132, v40, v25, fv52, fv85, ft0, ft1, v41, v108, v29, v8, v105, fv109, v90, v21, v53, v114, a2, v9, ft8, t3, fa5, v23, v84, t4, fv82, v15, v131, v76, v2, fv97, v33, v51, ft6, fa6, a4, v27, ft5, v129, v54, v116, fv37, v87, v49, fa4, ft2, v17, a3, v31, fa7, v75, fa3, ft3, fv42, v45, t2, fv106, fv88, v3, t1, v13, fv134, v120, v93, v115, fv94, v126, v19, v4, v81, v74, v128, v122, ft7, v11, fv79, fv91, v46, a5, a0, v78, v36, v111, s10, v39, v118, t0, v124, fa0, v35, v38, fv103], uses: [v76, fv97, fv112, a1, s11, fv47, v33, v51, v99, v27, a4, fv100, v102, v129, v116, fv37, v87, v10, v123, v119, v17, v43, a3, v31, v75, v48, v96, fv42, fv106, fv88, v3, v132, v25, fv52, v13, v120, fv85, v41, v108, v93, v115, fv94, v126, zero, v29, v8, v105, v19, v90, fv109, v4, v81, v74, v128, v122, v11, fv79, fv91, v46, v21, v53, a5, a0, v78, v36, v114, a2, v111, v9, v118, v124, v23, v84, v38, fv82, v15, v131, fv103, v2], upward_exposed: [s11, zero], params_defs: []
// [Asm] # live_in: [s11, zero], live_out: []
// [Asm] # block parameters: []
// [Asm] .main85_4_0:
// [Asm]   # save_ctx1  # live: [zero, s11]
// [Asm]   addi v132, s11, 0  # live: [zero, v132]
// [Asm]   andi v2, v132, -8  # live: [zero, v2]
// [Asm]   mv s11, v2  # live: [zero, s11, v2]
// [Asm]   fmv.d.x fv134, zero  # live: [zero, s11, v2]
// [Asm]   addi v129, s11, -8  # live: [zero, v129, v2]
// [Asm]   andi v3, v129, -8  # live: [v3, zero, v2]
// [Asm]   mv s11, v3  # live: [v3, zero, s11, v2]
// [Asm]   la v131, init_arr89_10  # live: [v3, zero, s11, v131, v2]
// [Asm]   sd v131, 0(v3)  # live: [v3, zero, s11, v2]
// [Asm]   addi v126, s11, -16  # live: [v3, zero, v126, v2]
// [Asm]   andi v4, v126, -8  # live: [v3, zero, v4, v2]
// [Asm]   mv s11, v4  # live: [v3, zero, v4, v2]
// [Asm]   la v128, make_arr103_12  # live: [v3, zero, v4, v128, v2]
// [Asm]   sd v128, 0(v4)  # live: [v3, zero, v4, v2]
// [Asm]   sd v3, 8(v4)  # live: [zero, v4, v2]
// [Asm]   mv s10, v4  # live: [zero, v4, v2]
// [Asm]   ld v122, 0(v4)  # live: [zero, v4, v122, v2]
// [Asm]   # save_ctx2  # live: [zero, v4, v122, v2]
// [Asm]   li v123, 2  # live: [zero, v123, v4, v122, v2]
// [Asm]   mv a0, v123  # live: [zero, a0, v4, v122, v2]
// [Asm]   li v124, 3  # live: [v124, zero, a0, v4, v122, v2]
// [Asm]   mv a1, v124  # live: [zero, a0, v4, a1, v122, v2]
// [Asm]   mv a2, v2  # live: [zero, a0, v4, a2, a1, v122, v2]
// [Asm]   jalr v122  # live: [zero, a0, v4, v2]
// [Asm]   mv v8, a0  # live: [zero, v8, v4, v2]
// [Asm]   # restore_ctx2  # live: [zero, v8, v4, v2]
// [Asm]   mv s10, v4  # live: [zero, v8, v4, v2]
// [Asm]   ld v118, 0(v4)  # live: [v118, zero, v8, v4, v2]
// [Asm]   # save_ctx2  # live: [v118, zero, v8, v4, v2]
// [Asm]   li v119, 3  # live: [v118, zero, v119, v8, v4, v2]
// [Asm]   mv a0, v119  # live: [v118, zero, a0, v8, v4, v2]
// [Asm]   li v120, 2  # live: [v118, zero, a0, v120, v8, v4, v2]
// [Asm]   mv a1, v120  # live: [v118, zero, a0, v8, v4, a1, v2]
// [Asm]   mv a2, v2  # live: [v118, zero, a0, v8, v4, a2, a1, v2]
// [Asm]   jalr v118  # live: [zero, a0, v8, v4, v2]
// [Asm]   mv v9, a0  # live: [zero, v8, v4, v9, v2]
// [Asm]   # restore_ctx2  # live: [zero, v8, v4, v9, v2]
// [Asm]   mv s10, v4  # live: [zero, v8, v4, v9, v2]
// [Asm]   ld v114, 0(v4)  # live: [zero, v8, v114, v9, v2]
// [Asm]   # save_ctx2  # live: [zero, v8, v114, v9, v2]
// [Asm]   li v115, 2  # live: [v115, zero, v8, v114, v9, v2]
// [Asm]   mv a0, v115  # live: [zero, a0, v8, v114, v9, v2]
// [Asm]   li v116, 2  # live: [v116, zero, a0, v8, v114, v9, v2]
// [Asm]   mv a1, v116  # live: [zero, a0, v8, v114, a1, v9, v2]
// [Asm]   mv a2, v2  # live: [zero, a0, v8, a2, v114, a1, v9]
// [Asm]   jalr v114  # live: [zero, a0, v8, v9]
// [Asm]   mv v10, a0  # live: [v10, zero, v8, v9]
// [Asm]   # restore_ctx2  # live: [v10, zero, v8, v9]
// [Asm]   ld v11, 0(v8)  # live: [v11, v10, zero, v8, v9]
// [Asm]   li v111, 4607182418800017408  # live: [v11, v10, zero, v8, v111, v9]
// [Asm]   fmv.d.x fv112, v111  # live: [v11, v10, zero, fv112, v8, v9]
// [Asm]   fsd fv112, 0(v11)  # live: [v10, zero, v8, v9]
// [Asm]   ld v13, 0(v8)  # live: [v10, zero, v13, v8, v9]
// [Asm]   li v108, 4611686018427387904  # live: [v10, zero, v13, v8, v108, v9]
// [Asm]   fmv.d.x fv109, v108  # live: [v10, zero, v13, v8, fv109, v9]
// [Asm]   fsd fv109, 8(v13)  # live: [v10, zero, v8, v9]
// [Asm]   ld v15, 0(v8)  # live: [v10, zero, v8, v15, v9]
// [Asm]   li v105, 4613937818241073152  # live: [v10, zero, v8, v105, v15, v9]
// [Asm]   fmv.d.x fv106, v105  # live: [v10, zero, v8, fv106, v15, v9]
// [Asm]   fsd fv106, 16(v15)  # live: [v10, zero, v8, v9]
// [Asm]   ld v17, 8(v8)  # live: [v10, zero, v8, v17, v9]
// [Asm]   li v102, 4616189618054758400  # live: [v10, zero, v8, v17, v102, v9]
// [Asm]   fmv.d.x fv103, v102  # live: [v10, zero, v8, v17, fv103, v9]
// [Asm]   fsd fv103, 0(v17)  # live: [v10, zero, v8, v9]
// [Asm]   ld v19, 8(v8)  # live: [v10, zero, v8, v19, v9]
// [Asm]   li v99, 4617315517961601024  # live: [v10, v99, zero, v8, v19, v9]
// [Asm]   fmv.d.x fv100, v99  # live: [v10, zero, v8, fv100, v19, v9]
// [Asm]   fsd fv100, 8(v19)  # live: [v10, zero, v8, v9]
// [Asm]   ld v21, 8(v8)  # live: [v10, v21, zero, v8, v9]
// [Asm]   li v96, 4618441417868443648  # live: [v10, v21, v96, zero, v8, v9]
// [Asm]   fmv.d.x fv97, v96  # live: [v10, v21, fv97, zero, v8, v9]
// [Asm]   fsd fv97, 16(v21)  # live: [v10, zero, v8, v9]
// [Asm]   ld v23, 0(v9)  # live: [v10, zero, v23, v8, v9]
// [Asm]   li v93, 4619567317775286272  # live: [v10, zero, v23, v8, v9, v93]
// [Asm]   fmv.d.x fv94, v93  # live: [v10, fv94, zero, v23, v8, v9]
// [Asm]   fsd fv94, 0(v23)  # live: [v10, zero, v8, v9]
// [Asm]   ld v25, 0(v9)  # live: [v25, v10, zero, v8, v9]
// [Asm]   li v90, 4620693217682128896  # live: [v25, v10, zero, v8, v90, v9]
// [Asm]   fmv.d.x fv91, v90  # live: [v25, fv91, v10, zero, v8, v9]
// [Asm]   fsd fv91, 8(v25)  # live: [v10, zero, v8, v9]
// [Asm]   ld v27, 8(v9)  # live: [v10, zero, v27, v8, v9]
// [Asm]   li v87, 4621256167635550208  # live: [v87, v10, zero, v27, v8, v9]
// [Asm]   fmv.d.x fv88, v87  # live: [v10, zero, v27, v8, v9, fv88]
// [Asm]   fsd fv88, 0(v27)  # live: [v10, zero, v8, v9]
// [Asm]   ld v29, 8(v9)  # live: [v10, zero, v29, v8, v9]
// [Asm]   li v84, 4621819117588971520  # live: [v10, zero, v29, v8, v84, v9]
// [Asm]   fmv.d.x fv85, v84  # live: [v10, zero, v29, v8, fv85, v9]
// [Asm]   fsd fv85, 8(v29)  # live: [v10, zero, v8, v9]
// [Asm]   ld v31, 16(v9)  # live: [v10, zero, v8, v31, v9]
// [Asm]   li v81, 4622382067542392832  # live: [v10, zero, v8, v81, v31, v9]
// [Asm]   fmv.d.x fv82, v81  # live: [v10, zero, v8, fv82, v31, v9]
// [Asm]   fsd fv82, 0(v31)  # live: [v10, zero, v8, v9]
// [Asm]   ld v33, 16(v9)  # live: [v10, zero, v8, v9, v33]
// [Asm]   li v78, 4622945017495814144  # live: [v10, zero, v78, v8, v9, v33]
// [Asm]   fmv.d.x fv79, v78  # live: [fv79, v10, zero, v8, v9, v33]
// [Asm]   fsd fv79, 8(v33)  # live: [v10, zero, v8, v9]
// [Asm]   # save_ctx2  # live: [v10, zero, v8, v9]
// [Asm]   li v74, 2  # live: [v10, zero, v8, v74, v9]
// [Asm]   mv a0, v74  # live: [v10, zero, a0, v8, v9]
// [Asm]   li v75, 3  # live: [v10, v75, zero, a0, v8, v9]
// [Asm]   mv a1, v75  # live: [v10, zero, a0, v8, a1, v9]
// [Asm]   li v76, 2  # live: [v10, zero, a0, v8, a1, v9, v76]
// [Asm]   mv a2, v76  # live: [v10, zero, a0, v8, a2, a1, v9]
// [Asm]   mv a3, v8  # live: [v10, zero, a0, a2, a1, a3, v9]
// [Asm]   mv a4, v9  # live: [v10, zero, a0, a4, a2, a1, a3]
// [Asm]   mv a5, v10  # live: [v10, a5, zero, a0, a4, a2, a1, a3]
// [Asm]   call mul68_3  # live: [v10, zero, a0]
// [Asm]   mv v35, a0  # live: [v10, zero]
// [Asm]   # restore_ctx2  # live: [v10, zero]
// [Asm]   ld v36, 0(v10)  # live: [v10, zero, v36]
// [Asm]   fld fv37, 0(v36)  # live: [fv37, v10, zero]
// [Asm]   fcvt.w.d v38, fv37, rtz  # live: [v38, v10, zero]
// [Asm]   # save_ctx2  # live: [v38, v10, zero]
// [Asm]   mv a0, v38  # live: [v10, zero, a0]
// [Asm]   call minimbt_print_int  # live: [v10, zero, a0]
// [Asm]   mv v39, a0  # live: [v10, zero]
// [Asm]   # restore_ctx2  # live: [v10, zero]
// [Asm]   # save_ctx2  # live: [v10, zero]
// [Asm]   call minimbt_print_endline  # live: [v10, zero, a0]
// [Asm]   mv v40, a0  # live: [v10, zero]
// [Asm]   # restore_ctx2  # live: [v10, zero]
// [Asm]   ld v41, 0(v10)  # live: [v41, v10, zero]
// [Asm]   fld fv42, 8(v41)  # live: [v10, zero, fv42]
// [Asm]   fcvt.w.d v43, fv42, rtz  # live: [v43, v10, zero]
// [Asm]   # save_ctx2  # live: [v43, v10, zero]
// [Asm]   mv a0, v43  # live: [v10, zero, a0]
// [Asm]   call minimbt_print_int  # live: [v10, zero, a0]
// [Asm]   mv v44, a0  # live: [v10, zero]
// [Asm]   # restore_ctx2  # live: [v10, zero]
// [Asm]   # save_ctx2  # live: [v10, zero]
// [Asm]   call minimbt_print_endline  # live: [v10, zero, a0]
// [Asm]   mv v45, a0  # live: [v10, zero]
// [Asm]   # restore_ctx2  # live: [v10, zero]
// [Asm]   ld v46, 8(v10)  # live: [v46, v10, zero]
// [Asm]   fld fv47, 0(v46)  # live: [v10, fv47, zero]
// [Asm]   fcvt.w.d v48, fv47, rtz  # live: [v10, v48, zero]
// [Asm]   # save_ctx2  # live: [v10, v48, zero]
// [Asm]   mv a0, v48  # live: [v10, zero, a0]
// [Asm]   call minimbt_print_int  # live: [v10, zero, a0]
// [Asm]   mv v49, a0  # live: [v10, zero]
// [Asm]   # restore_ctx2  # live: [v10, zero]
// [Asm]   # save_ctx2  # live: [v10, zero]
// [Asm]   call minimbt_print_endline  # live: [v10, zero, a0]
// [Asm]   mv v50, a0  # live: [v10, zero]
// [Asm]   # restore_ctx2  # live: [v10, zero]
// [Asm]   ld v51, 8(v10)  # live: [zero, v51]
// [Asm]   fld fv52, 8(v51)  # live: [fv52, zero]
// [Asm]   fcvt.w.d v53, fv52, rtz  # live: [v53, zero]
// [Asm]   # save_ctx2  # live: [v53, zero]
// [Asm]   mv a0, v53  # live: [zero, a0]
// [Asm]   call minimbt_print_int  # live: [zero, a0]
// [Asm]   mv v54, a0  # live: [zero]
// [Asm]   # restore_ctx2  # live: [zero]
// [Asm] # control
// [Asm]   mv a0, zero  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # leaf false
// [Asm] init_arr89_10:
// [Asm] # block info: defs: [v3, v0, v4, v2], uses: [v2, a2, a1, s10, a0, zero], upward_exposed: [a2, a1, s10, a0, zero], params_defs: []
// [Asm] # live_in: [a0, zero, a2, a1, s11, s10], live_out: [v2, zero, v0, v4, s11, v3]
// [Asm] # block parameters: []
// [Asm] .init_arr89_10_0:
// [Asm]   # save_ctx1  # live: [zero, a0, a2, a1, s11, s10]
// [Asm]   mv v0, s10  # live: [zero, a0, v0, a2, a1, s11]
// [Asm]   mv v2, a0  # live: [zero, v0, a2, a1, s11, v2]
// [Asm]   mv v3, a1  # live: [v2, zero, v0, a2, s11, v3]
// [Asm]   mv v4, a2  # live: [v2, zero, v0, v4, s11, v3]
// [Asm] # control
// [Asm]   blt v2, zero, .init_arr89_10_2  # live: [v3, v0, v4, s11, zero, v2]
// [Asm] 
// [Asm] # block info: defs: [t1, v16, fv20, ft0, ft1, a1, s11, v12, fa1, fa2, ft6, a4, fa6, a6, ft5, ft10, ft7, v11, ft4, v5, ft9, v10, a5, fa4, a0, ft2, a2, v17, a3, v9, s10, ft8, t3, a7, fa7, t0, fa5, v18, fa3, ft3, fa0, t4, t2, v15], uses: [v3, v5, v16, v10, a0, fv20, v0, a2, v17, a1, s11, v12, v9, v18, zero, fa0, v4, v15, v2], upward_exposed: [v3, zero, v0, v4, s11, v2], params_defs: []
// [Asm] # live_in: [v3, zero, v0, v4, s11, v2], live_out: [v11]
// [Asm] # block parameters: []
// [Asm] .init_arr89_10_1:
// [Asm]   slliw v17, v3, 3  # live: [v3, zero, v0, v4, v17, s11, v2]
// [Asm]   sub v18, s11, v17  # live: [v3, v18, zero, v0, v4, v2]
// [Asm]   andi v5, v18, -8  # live: [v3, v5, zero, v0, v4, v2]
// [Asm]   mv s11, v5  # live: [v3, v5, zero, v0, v4, v2]
// [Asm]   fmv.d.x fv20, zero  # live: [v3, v5, fv20, v0, v4, v2]
// [Asm]   mv a1, v3  # live: [v3, v5, fv20, v0, v4, a1, v2]
// [Asm]   mv a0, v5  # live: [v3, v5, a0, fv20, v0, v4, a1, v2]
// [Asm]   fmv.d fa0, fv20  # live: [v3, v5, a0, fa0, v0, v4, a1, v2]
// [Asm]   call memsetf64  # live: [v2, v0, v4, v5, v3]
// [Asm]   slliw v15, v2, 3  # live: [v2, v0, v4, v5, v15, v3]
// [Asm]   add v16, v4, v15  # live: [v2, v0, v4, v5, v16, v3]
// [Asm]   sd v5, 0(v16)  # live: [v2, v0, v4, v3]
// [Asm]   addi v9, v2, -1  # live: [v0, v4, v9, v3]
// [Asm]   mv s10, v0  # live: [v0, v4, v9, v3]
// [Asm]   ld v12, 0(v0)  # live: [v4, v12, v9, v3]
// [Asm]   # save_ctx2  # live: [v4, v12, v9, v3]
// [Asm]   mv a0, v9  # live: [v4, v12, a0, v3]
// [Asm]   mv a1, v3  # live: [v4, a1, v12, a0]
// [Asm]   mv a2, v4  # live: [a2, a1, v12, a0]
// [Asm]   jalr v12  # live: [a0]
// [Asm]   mv v10, a0  # live: [v10]
// [Asm]   # restore_ctx2  # live: [v10]
// [Asm] # control
// [Asm]   mv v11, v10  # live: [v11]
// [Asm] 
// [Asm] # block info: defs: [a0], uses: [v11, a0], upward_exposed: [v11], params_defs: [v11]
// [Asm] # live_in: [v11], live_out: []
// [Asm] # block parameters: [v11]
// [Asm] .init_arr89_10_3:
// [Asm] # control
// [Asm]   mv a0, v11  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # block info: defs: [v11], uses: [zero], upward_exposed: [zero], params_defs: []
// [Asm] # live_in: [zero], live_out: [v11]
// [Asm] # block parameters: []
// [Asm] .init_arr89_10_2:
// [Asm] # control
// [Asm]   mv v11, zero  # live: [v11]
// [Asm]   j .init_arr89_10_3  # live: [v11]
// [Asm] 
// [Asm] # leaf false
// [Asm] loop228_1:
// [Asm] # block info: defs: [v3, v7, v4, v6, v5, v2], uses: [a5, a0, zero, a4, a2, v4, a1, a3], upward_exposed: [a5, a0, zero, a4, a2, a1, a3], params_defs: []
// [Asm] # live_in: [a5, a0, zero, a4, a2, a1, a3], live_out: [v3, v5, zero, v7, v4, v6, v2]
// [Asm] # block parameters: []
// [Asm] .loop228_1_0:
// [Asm]   # save_ctx1  # live: [a5, zero, a0, a4, a2, a1, a3]
// [Asm]   mv v2, a0  # live: [a5, zero, a4, a2, a1, a3, v2]
// [Asm]   mv v3, a1  # live: [v2, a5, zero, a4, a2, a3, v3]
// [Asm]   mv v4, a2  # live: [v2, a5, zero, a4, v4, a3, v3]
// [Asm]   mv v5, a3  # live: [v2, v5, a5, zero, a4, v4, v3]
// [Asm]   mv v6, a4  # live: [v2, v5, a5, zero, v4, v6, v3]
// [Asm]   mv v7, a5  # live: [v2, v5, zero, v7, v4, v6, v3]
// [Asm] # control
// [Asm]   blt v4, zero, .loop228_1_2  # live: [v2, v5, zero, v7, v4, v6, v3]
// [Asm] 
// [Asm] # block info: defs: [t1, v13, ft0, ft1, a1, v12, fa1, fa2, ft6, a4, fa6, a6, ft5, ft10, ft7, v11, ft4, ft9, v10, a5, fa4, a0, ft2, a2, a3, v9, ft8, t3, a7, fa7, t0, fa5, fa3, ft3, fa0, t4, t2], uses: [v2, v11, v5, a5, a0, v7, a2, a1, a3, v12, v9, a4, v4, v6, v3], upward_exposed: [v3, v5, v7, v4, v6, v2], params_defs: []
// [Asm] # live_in: [v3, v5, v7, v4, v6, v2], live_out: [v13]
// [Asm] # block parameters: []
// [Asm] .loop228_1_1:
// [Asm]   addi v9, v3, -1  # live: [v2, v5, v7, v4, v6, v9, v3]
// [Asm]   # save_ctx2  # live: [v2, v5, v7, v4, v6, v9, v3]
// [Asm]   mv a0, v2  # live: [v2, v5, a0, v7, v4, v6, v9, v3]
// [Asm]   mv a1, v4  # live: [v2, v5, a0, v7, v4, a1, v6, v9, v3]
// [Asm]   mv a2, v9  # live: [v2, v5, a0, v7, v4, a2, a1, v6, v3]
// [Asm]   mv a3, v5  # live: [v2, v5, a0, v7, v4, a2, a1, v6, a3, v3]
// [Asm]   mv a4, v6  # live: [v2, v5, a0, a4, v7, v4, a2, a1, v6, a3, v3]
// [Asm]   mv a5, v7  # live: [v2, v5, a5, a0, a4, v7, v4, a2, a1, v6, a3, v3]
// [Asm]   call loop31_0  # live: [v2, v5, a0, v7, v4, v6, v3]
// [Asm]   mv v10, a0  # live: [v3, v2, v4, v6, v5, v7]
// [Asm]   # restore_ctx2  # live: [v3, v2, v4, v6, v5, v7]
// [Asm]   addi v11, v4, -1  # live: [v3, v2, v11, v5, v6, v7]
// [Asm]   # save_ctx2  # live: [v3, v2, v11, v5, v6, v7]
// [Asm]   mv a0, v2  # live: [v3, v11, v6, v5, a0, v7]
// [Asm]   mv a1, v3  # live: [v11, a1, v6, v5, a0, v7]
// [Asm]   mv a2, v11  # live: [a2, a1, v6, v5, a0, v7]
// [Asm]   mv a3, v5  # live: [a2, a1, v6, a3, a0, v7]
// [Asm]   mv a4, v6  # live: [a2, a1, a3, a0, a4, v7]
// [Asm]   mv a5, v7  # live: [a2, a1, a3, a5, a0, a4]
// [Asm]   call loop228_1  # live: [a0]
// [Asm]   mv v12, a0  # live: [v12]
// [Asm]   # restore_ctx2  # live: [v12]
// [Asm] # control
// [Asm]   mv v13, v12  # live: [v13]
// [Asm] 
// [Asm] # block info: defs: [a0], uses: [v13, a0], upward_exposed: [v13], params_defs: [v13]
// [Asm] # live_in: [v13], live_out: []
// [Asm] # block parameters: [v13]
// [Asm] .loop228_1_3:
// [Asm] # control
// [Asm]   mv a0, v13  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # block info: defs: [v13], uses: [zero], upward_exposed: [zero], params_defs: []
// [Asm] # live_in: [zero], live_out: [v13]
// [Asm] # block parameters: []
// [Asm] .loop228_1_2:
// [Asm] # control
// [Asm]   mv v13, zero  # live: [v13]
// [Asm]   j .loop228_1_3  # live: [v13]
// [Asm] 
// [Asm] # leaf false
// [Asm] loop148_2:
// [Asm] # block info: defs: [v3, v7, v4, v6, v5, v2], uses: [a5, a0, zero, a4, a2, a1, a3, v2], upward_exposed: [a5, a0, zero, a4, a2, a1, a3], params_defs: []
// [Asm] # live_in: [a5, a0, zero, a4, a2, a1, a3], live_out: [v2, v5, zero, v7, v4, v6, v3]
// [Asm] # block parameters: []
// [Asm] .loop148_2_0:
// [Asm]   # save_ctx1  # live: [a5, zero, a0, a4, a2, a1, a3]
// [Asm]   mv v2, a0  # live: [a5, zero, a4, a2, a1, a3, v2]
// [Asm]   mv v3, a1  # live: [v3, a5, zero, a4, a2, a3, v2]
// [Asm]   mv v4, a2  # live: [v3, a5, zero, a4, v4, a3, v2]
// [Asm]   mv v5, a3  # live: [v3, v5, a5, zero, a4, v4, v2]
// [Asm]   mv v6, a4  # live: [v3, v5, a5, zero, v4, v6, v2]
// [Asm]   mv v7, a5  # live: [v3, v5, zero, v7, v4, v6, v2]
// [Asm] # control
// [Asm]   blt v2, zero, .loop148_2_2  # live: [v3, v5, zero, v7, v4, v6, v2]
// [Asm] 
// [Asm] # block info: defs: [t1, v13, ft0, ft1, a1, v12, fa1, fa2, ft6, a4, fa6, a6, ft5, ft10, ft7, v11, ft4, ft9, v10, a5, fa4, a0, ft2, a2, a3, v9, ft8, t3, a7, fa7, t0, fa5, fa3, ft3, fa0, t4, t2], uses: [v3, v11, v5, a5, a0, v7, a2, a1, a3, v12, v9, a4, v4, v6, v2], upward_exposed: [v2, v5, v7, v4, v6, v3], params_defs: []
// [Asm] # live_in: [v2, v5, v7, v4, v6, v3], live_out: [v13]
// [Asm] # block parameters: []
// [Asm] .loop148_2_1:
// [Asm]   addi v9, v4, -1  # live: [v2, v5, v7, v4, v6, v9, v3]
// [Asm]   # save_ctx2  # live: [v2, v5, v7, v4, v6, v9, v3]
// [Asm]   mv a0, v2  # live: [v2, v5, a0, v7, v4, v6, v9, v3]
// [Asm]   mv a1, v3  # live: [v2, v5, a0, v7, v4, a1, v6, v9, v3]
// [Asm]   mv a2, v9  # live: [v2, v5, a0, v7, v4, a2, a1, v6, v3]
// [Asm]   mv a3, v5  # live: [v2, v5, a0, v7, v4, a2, a1, v6, a3, v3]
// [Asm]   mv a4, v6  # live: [v2, v5, a0, a4, v7, v4, a2, a1, v6, a3, v3]
// [Asm]   mv a5, v7  # live: [v2, v5, a5, a0, a4, v7, v4, a2, a1, v6, a3, v3]
// [Asm]   call loop228_1  # live: [v2, v5, a0, v7, v4, v6, v3]
// [Asm]   mv v10, a0  # live: [v3, v2, v4, v6, v5, v7]
// [Asm]   # restore_ctx2  # live: [v3, v2, v4, v6, v5, v7]
// [Asm]   addi v11, v2, -1  # live: [v3, v11, v4, v5, v6, v7]
// [Asm]   # save_ctx2  # live: [v3, v11, v4, v5, v6, v7]
// [Asm]   mv a0, v11  # live: [v3, v4, v6, v5, a0, v7]
// [Asm]   mv a1, v3  # live: [v4, a1, v6, v5, a0, v7]
// [Asm]   mv a2, v4  # live: [a2, a1, v6, v5, a0, v7]
// [Asm]   mv a3, v5  # live: [a2, a1, v6, a3, a0, v7]
// [Asm]   mv a4, v6  # live: [a2, a1, a3, a0, a4, v7]
// [Asm]   mv a5, v7  # live: [a2, a1, a3, a5, a0, a4]
// [Asm]   call loop148_2  # live: [a0]
// [Asm]   mv v12, a0  # live: [v12]
// [Asm]   # restore_ctx2  # live: [v12]
// [Asm] # control
// [Asm]   mv v13, v12  # live: [v13]
// [Asm] 
// [Asm] # block info: defs: [a0], uses: [v13, a0], upward_exposed: [v13], params_defs: [v13]
// [Asm] # live_in: [v13], live_out: []
// [Asm] # block parameters: [v13]
// [Asm] .loop148_2_3:
// [Asm] # control
// [Asm]   mv a0, v13  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # block info: defs: [v13], uses: [zero], upward_exposed: [zero], params_defs: []
// [Asm] # live_in: [zero], live_out: [v13]
// [Asm] # block parameters: []
// [Asm] .loop148_2_2:
// [Asm] # control
// [Asm]   mv v13, zero  # live: [v13]
// [Asm]   j .loop148_2_3  # live: [v13]
// [Asm] 
// [Asm] # leaf false
// [Asm] T$start_14:
// [Asm] # block info: defs: [t1, ft0, ft1, a1, fa1, fa2, ft6, a4, fa6, a6, ft5, ft10, ft7, ft4, ft9, a5, a0, fa4, ft2, a2, a3, ft8, t3, a7, fa7, t0, fa5, fa3, ft3, fa0, t4, t2, v2], uses: [a0, v2], upward_exposed: [], params_defs: []
// [Asm] # live_in: [], live_out: []
// [Asm] # block parameters: []
// [Asm] .T$start_14_0:
// [Asm]   # save_ctx1  # live: []
// [Asm]   # save_ctx2  # live: []
// [Asm]   call main85_4  # live: [a0]
// [Asm]   mv v2, a0  # live: [v2]
// [Asm]   # restore_ctx2  # live: [v2]
// [Asm] # control
// [Asm]   mv a0, v2  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # leaf false
// [Asm] mul68_3:
// [Asm] # block info: defs: [v2, t1, v7, ft0, ft1, a1, fa1, fa2, ft6, a4, fa6, v8, a6, ft5, ft10, v4, v6, ft7, ft4, v5, ft9, a5, a0, fa4, ft2, a2, a3, v9, ft8, t3, a7, fa7, t0, fa5, fa3, ft3, fa0, t4, t2, v3], uses: [v2, v5, a5, a0, v7, a2, a1, a3, zero, a4, v8, v4, v6, v3], upward_exposed: [a5, a0, zero, a4, a2, a1, a3], params_defs: []
// [Asm] # live_in: [a5, a0, zero, a4, a2, a1, a3], live_out: []
// [Asm] # block parameters: []
// [Asm] .mul68_3_0:
// [Asm]   # save_ctx1  # live: [a5, zero, a0, a4, a2, a1, a3]
// [Asm]   mv v2, a0  # live: [a5, zero, a4, a2, a1, a3, v2]
// [Asm]   mv v3, a1  # live: [v2, a5, zero, a4, a2, a3, v3]
// [Asm]   mv v4, a2  # live: [v2, a5, zero, a4, v4, a3, v3]
// [Asm]   mv v5, a3  # live: [v2, v5, a5, zero, a4, v4, v3]
// [Asm]   mv v6, a4  # live: [v2, v5, a5, zero, v4, v6, v3]
// [Asm]   mv v7, a5  # live: [v2, v5, zero, v7, v4, v6, v3]
// [Asm]   addi v8, v2, -1  # live: [v5, zero, v7, v8, v4, v6, v3]
// [Asm]   # save_ctx2  # live: [v5, zero, v7, v8, v4, v6, v3]
// [Asm]   mv a0, v8  # live: [v5, zero, a0, v7, v4, v6, v3]
// [Asm]   mv a1, v3  # live: [v5, zero, a0, v7, v4, a1, v6]
// [Asm]   mv a2, v4  # live: [v5, zero, a0, v7, a2, a1, v6]
// [Asm]   mv a3, v5  # live: [zero, a0, v7, a2, a1, v6, a3]
// [Asm]   mv a4, v6  # live: [zero, a0, a4, v7, a2, a1, a3]
// [Asm]   mv a5, v7  # live: [a5, zero, a0, a4, a2, a1, a3]
// [Asm]   call loop148_2  # live: [zero, a0]
// [Asm]   mv v9, a0  # live: [zero]
// [Asm]   # restore_ctx2  # live: [zero]
// [Asm] # control
// [Asm]   mv a0, zero  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # leaf false
// [Asm] make_arr103_12:
// [Asm] # block info: defs: [v2, t1, v14, v13, v0, ft0, ft1, a1, s11, fa1, fa2, ft6, a4, fa6, v8, a6, ft5, ft10, v4, v6, ft7, ft4, v5, ft9, v10, a5, fa4, a0, ft2, a2, a3, s10, v9, ft8, t3, a7, fa7, t0, fa5, fa3, ft3, fa0, t4, t2, v3], uses: [v3, v14, v5, v10, a0, v13, v0, a2, a1, s11, s10, v8, v4, v6, v2], upward_exposed: [a2, a1, s11, s10, a0], params_defs: []
// [Asm] # live_in: [a2, a1, s11, s10, a0], live_out: []
// [Asm] # block parameters: []
// [Asm] .make_arr103_12_0:
// [Asm]   # save_ctx1  # live: [a0, a2, a1, s11, s10]
// [Asm]   mv v0, s10  # live: [a0, v0, a2, a1, s11]
// [Asm]   mv v2, a0  # live: [v0, a2, a1, s11, v2]
// [Asm]   mv v3, a1  # live: [v3, v0, a2, s11, v2]
// [Asm]   mv v4, a2  # live: [v3, v0, v4, s11, v2]
// [Asm]   ld v5, 8(v0)  # live: [v3, v5, v4, s11, v2]
// [Asm]   slliw v13, v2, 3  # live: [v3, v5, v13, v4, s11, v2]
// [Asm]   sub v14, s11, v13  # live: [v3, v5, v14, v4, v2]
// [Asm]   andi v6, v14, -8  # live: [v3, v5, v4, v6, v2]
// [Asm]   mv s11, v6  # live: [v3, v5, v4, v6, v2]
// [Asm]   mv a1, v2  # live: [v3, v5, v4, v6, a1, v2]
// [Asm]   mv a0, v6  # live: [v3, v5, a0, v4, v6, a1, v2]
// [Asm]   mv a2, v4  # live: [v3, v5, a0, a2, v6, a1, v2]
// [Asm]   call memseti64  # live: [v2, v6, v5, v3]
// [Asm]   addi v8, v2, -1  # live: [v8, v6, v5, v3]
// [Asm]   mv s10, v5  # live: [v8, v6, v5, v3]
// [Asm]   ld v10, 0(v5)  # live: [v8, v6, v10, v3]
// [Asm]   # save_ctx2  # live: [v8, v6, v10, v3]
// [Asm]   mv a0, v8  # live: [v6, v10, a0, v3]
// [Asm]   mv a1, v3  # live: [v6, a1, v10, a0]
// [Asm]   mv a2, v6  # live: [a2, v6, a1, v10, a0]
// [Asm]   jalr v10  # live: [v6, a0]
// [Asm]   mv v9, a0  # live: [v6]
// [Asm]   # restore_ctx2  # live: [v6]
// [Asm] # control
// [Asm]   mv a0, v6  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # leaf false
// [Asm] loop31_0:
// [Asm] # block info: defs: [v3, v7, v4, v6, v5, v2], uses: [a5, a0, zero, a4, a2, v4, a1, a3], upward_exposed: [a5, a0, zero, a4, a2, a1, a3], params_defs: []
// [Asm] # live_in: [a5, a0, zero, a4, a2, a1, a3], live_out: [v2, v5, zero, v7, v4, v6, v3]
// [Asm] # block parameters: []
// [Asm] .loop31_0_0:
// [Asm]   # save_ctx1  # live: [a5, zero, a0, a4, a2, a1, a3]
// [Asm]   mv v2, a0  # live: [a5, zero, a4, a2, a1, a3, v2]
// [Asm]   mv v3, a1  # live: [v3, a5, zero, a4, a2, a3, v2]
// [Asm]   mv v4, a2  # live: [v3, a5, zero, a4, v4, a3, v2]
// [Asm]   mv v5, a3  # live: [v3, v5, a5, zero, a4, v4, v2]
// [Asm]   mv v6, a4  # live: [v3, v5, a5, zero, v4, v6, v2]
// [Asm]   mv v7, a5  # live: [v3, v5, zero, v7, v4, v6, v2]
// [Asm] # control
// [Asm]   blt v4, zero, .loop31_0_2  # live: [v3, v5, zero, v7, v4, v6, v2]
// [Asm] 
// [Asm] # block info: defs: [a1, fv15, v28, v33, fa1, fa2, ft6, v27, a4, fa6, v20, a6, ft5, ft10, ft4, v10, ft9, fa4, ft2, v37, v43, a3, v31, a7, fa7, fa3, fv11, ft3, v45, t2, fv17, v40, v25, t1, v14, v42, ft0, ft1, v12, v19, v34, ft7, v46, v21, a5, a0, v30, v36, a2, v24, v9, v39, ft8, t3, t0, fa5, fv13, fa0, t4], uses: [v2, v3, v25, v14, v42, v7, a1, v12, v28, fv15, v33, v27, a4, v20, v19, v4, v6, v34, v46, v5, v10, a5, a0, v30, v36, v37, a2, v43, v24, a3, v31, v9, v39, fv11, v45, fv13, fv17, v40], upward_exposed: [v2, v5, v7, v4, v6, v3], params_defs: []
// [Asm] # live_in: [v2, v5, v7, v4, v6, v3], live_out: [v21]
// [Asm] # block parameters: []
// [Asm] .loop31_0_1:
// [Asm]   slliw v45, v2, 3  # live: [v2, v5, v7, v45, v4, v6, v3]
// [Asm]   add v46, v7, v45  # live: [v2, v5, v46, v7, v4, v6, v3]
// [Asm]   ld v9, 0(v46)  # live: [v2, v5, v7, v4, v6, v9, v3]
// [Asm]   slliw v42, v2, 3  # live: [v2, v5, v42, v7, v4, v6, v9, v3]
// [Asm]   add v43, v7, v42  # live: [v2, v5, v7, v4, v6, v43, v9, v3]
// [Asm]   ld v10, 0(v43)  # live: [v2, v5, v10, v7, v4, v6, v9, v3]
// [Asm]   slliw v39, v3, 3  # live: [v2, v5, v10, v7, v4, v6, v9, v39, v3]
// [Asm]   add v40, v10, v39  # live: [v2, v40, v5, v7, v4, v6, v9, v3]
// [Asm]   fld fv11, 0(v40)  # live: [v2, v5, fv11, v7, v4, v6, v9, v3]
// [Asm]   slliw v36, v2, 3  # live: [v2, v5, fv11, v7, v36, v4, v6, v9, v3]
// [Asm]   add v37, v5, v36  # live: [v2, v5, fv11, v7, v4, v37, v6, v9, v3]
// [Asm]   ld v12, 0(v37)  # live: [v2, v5, fv11, v7, v4, v6, v12, v9, v3]
// [Asm]   slliw v33, v4, 3  # live: [v2, v5, fv11, v7, v4, v6, v12, v9, v33, v3]
// [Asm]   add v34, v12, v33  # live: [v2, v5, fv11, v7, v4, v6, v9, v34, v3]
// [Asm]   fld fv13, 0(v34)  # live: [v2, v5, fv11, v7, fv13, v4, v6, v9, v3]
// [Asm]   slliw v30, v4, 3  # live: [v2, v5, fv11, v30, v7, fv13, v4, v6, v9, v3]
// [Asm]   add v31, v6, v30  # live: [v2, v5, fv11, v7, fv13, v4, v6, v31, v9, v3]
// [Asm]   ld v14, 0(v31)  # live: [v2, v5, v14, fv11, v7, fv13, v4, v6, v9, v3]
// [Asm]   slliw v27, v3, 3  # live: [v2, v5, v14, fv11, v27, v7, fv13, v4, v6, v9, v3]
// [Asm]   add v28, v14, v27  # live: [v2, v5, fv11, v7, fv13, v4, v6, v28, v9, v3]
// [Asm]   fld fv15, 0(v28)  # live: [v2, v5, fv11, v7, fv13, v4, v6, fv15, v9, v3]
// [Asm]   fmadd.d fv17, fv13, fv15, fv11  # live: [v2, v5, v7, v4, v6, fv17, v9, v3]
// [Asm]   slliw v24, v3, 3  # live: [v2, v5, v7, v4, v6, v24, fv17, v9, v3]
// [Asm]   add v25, v9, v24  # live: [v2, v25, v5, v7, v4, v6, fv17, v3]
// [Asm]   fsd fv17, 0(v25)  # live: [v3, v2, v4, v6, v5, v7]
// [Asm]   addi v19, v4, -1  # live: [v3, v2, v19, v5, v6, v7]
// [Asm]   # save_ctx2  # live: [v3, v2, v19, v5, v6, v7]
// [Asm]   mv a0, v2  # live: [v3, v19, v6, v5, a0, v7]
// [Asm]   mv a1, v3  # live: [v19, a1, v6, v5, a0, v7]
// [Asm]   mv a2, v19  # live: [a2, a1, v6, v5, a0, v7]
// [Asm]   mv a3, v5  # live: [a2, a1, v6, a3, a0, v7]
// [Asm]   mv a4, v6  # live: [a2, a1, a3, a0, a4, v7]
// [Asm]   mv a5, v7  # live: [a2, a1, a3, a5, a0, a4]
// [Asm]   call loop31_0  # live: [a0]
// [Asm]   mv v20, a0  # live: [v20]
// [Asm]   # restore_ctx2  # live: [v20]
// [Asm] # control
// [Asm]   mv v21, v20  # live: [v21]
// [Asm] 
// [Asm] # block info: defs: [a0], uses: [v21, a0], upward_exposed: [v21], params_defs: [v21]
// [Asm] # live_in: [v21], live_out: []
// [Asm] # block parameters: [v21]
// [Asm] .loop31_0_3:
// [Asm] # control
// [Asm]   mv a0, v21  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # block info: defs: [v21], uses: [zero], upward_exposed: [zero], params_defs: []
// [Asm] # live_in: [zero], live_out: [v21]
// [Asm] # block parameters: []
// [Asm] .loop31_0_2:
// [Asm] # control
// [Asm]   mv v21, zero  # live: [v21]
// [Asm]   j .loop31_0_3  # live: [v21]
// [Asm] 
// [Asm] # leaf false
// [Asm] minimbt_main:
// [Asm] # block info: defs: [t1, ft0, ft1, a1, s11, ra, fa1, fa2, ft6, a4, fa6, a6, ft5, ft10, s0, ft7, ft4, ft9, a5, a0, fa4, ft2, a2, sp, a3, ft8, a7, t3, fa7, t0, fa5, fa3, ft3, fa0, t4, t2], uses: [sp, s0, ra, s11, a0], upward_exposed: [s0, ra, s11], params_defs: []
// [Asm] # live_in: [s0, ra, s11], live_out: []
// [Asm] # block parameters: []
// [Asm] .minimbt_main_b0:
// [Asm]   addi sp, sp, -32  # live: [s0, ra, s11]
// [Asm]   sd ra, 0(sp)  # live: [s0, s11]
// [Asm]   sd s0, 8(sp)  # live: [s11]
// [Asm]   sd s11, 16(sp)  # live: []
// [Asm]   la s11, large_heap_end  # live: []
// [Asm]   mv s0, sp  # live: [s0]
// [Asm]   la sp, large_stack_end  # live: [s0]
// [Asm]   call T$start_14  # live: [s0, a0]
// [Asm]   mv sp, s0  # live: [a0]
// [Asm]   ld ra, 0(sp)  # live: [a0]
// [Asm]   ld s0, 8(sp)  # live: [a0]
// [Asm]   ld s11, 16(sp)  # live: [a0]
// [Asm]   addi sp, sp, 32  # live: [a0]
// [Asm] # control
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] start:
// [Asm]   .zero 4
// [Asm] 
let rec compose.1: Fun([Int], Int) = (f.3: Fun([Int], Int), g.5: Fun([Int], Int)) {
  let rec composed.6: Int = (x.8: Int) {
    let _9: Int = Apply(f.3, [x.8, ])
    Apply(g.5, [_9, ])
  }
  Var(composed.6)
}
let rec dbl.10: Int = (x.12: Int) {
  Add(x.12, x.12)
}
let rec inc.13: Int = (x.15: Int) {
  let _16: Int = Int(1)
  Add(x.15, _16)
}
let rec dec.17: Int = (x.19: Int) {
  let _20: Int = Int(1)
  Sub(x.19, _20)
}
let rec main.21: Unit = () {
  let _22: Fun([Int], Int) = Apply(compose.1, [dbl.10, dec.17, ])
  let h.23: Fun([Int], Int) = Apply(compose.1, [inc.13, _22, ])
  let _24: Int = Int(123)
  let _25: Int = Apply(h.23, [_24, ])
  ExtApply(minimbt_print_int, [_25, ])
}
Apply(main.21, [])

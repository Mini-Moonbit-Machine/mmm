# name conventions used in the core ir:
# - functions: f<id>
# - blocks: b<id>
# - instructions: %<id>
# - memory: m<id>
# - free variables: ^<id>
# - function parameters: $f<pid>
# - block parameters: $b<bid>.<pid>
.core
.fn f9l2_3 #f3 : fn(int32) -> int32
.freevars ()
.entry b4 {
  .bb #b0 (int32) {
    let %0: bool = eq(1, 1)
    br %0 b1() b2()
  }
  .bb #b1 () {
    jump b0(1)
  }
  .bb #b2 () {
    let %2: int32 = call f2(2, $b0.0)
    jump b3(%2)
  }
  .bb #b3 (int32) {
    return $b3.0
  }
  .bb #b4 () {
    jump b0($f0)
  }
}
.fn useless1l0_0 #f0 : fn(int32) -> int32
.freevars ()
.entry b0 {
  .bb #b0 () {
    let %0: int32 = sub(10, 1)
    return %0
  }
}
.fn T$start_10 #f10 : fn() -> unit
.freevars ()
.entry b0 {
  .bb #b0 () {
    let %0: unit = call f4()
    return %0
  }
}
.fn g12l3_2 #f2 : fn(int32, int32) -> int32
.freevars ()
.entry b0 {
  .bb #b0 () {
    return $f1
  }
}
.fn main19l3_4 #f4 : fn() -> unit
.freevars ()
.entry b0 {
  .bb #b0 () {
    return ()
  }
}
.fn dummy6l1_1 #f1 : fn(int32) -> int32
.freevars ()
.entry b0 {
  .bb #b0 () {
    return $f0
  }
}
.thunk ::0 start

let rec sum_prefix.1: Array(Int) = (arr.3: Array(Int), len.5: Int) {
  let _6: Int = Int(0)
  let res.7: Array(Int) = ExtApply(minimbt_create_array, [len.5, _6, ])
  let rec sum_nested.8: Unit = (acc.10: Int, x.12: Int) {
    let _13: Int = Int(1)
    let _14: Int = Sub(len.5, _13)
    if (x.12 <= _14) then {
      let _15: Int = Get arr.3[x.12]
      let s.16: Int = Add(acc.10, _15)
      let _18: Unit = Put res.7[x.12] = s.16
      let _19: Int = Int(1)
      let _20: Int = Add(x.12, _19)
      Apply(sum_nested.8, [s.16, _20, ])
    } else {
      Unit
    }
  }
  let _21: Int = Int(0)
  let _22: Int = Int(0)
  let _24: Unit = Apply(sum_nested.8, [_21, _22, ])
  Var(res.7)
}
let rec main.25: Unit = () {
  let _26: Int = Int(10)
  let _27: Int = Int(4)
  let arr.28: Array(Int) = ExtApply(minimbt_create_array, [_26, _27, ])
  let _29: Int = Int(10)
  let _30: Array(Int) = Apply(sum_prefix.1, [arr.28, _29, ])
  let _31: Int = Int(0)
  let _32: Int = Get _30[_31]
  ExtApply(minimbt_print_int, [_32, ])
}
Apply(main.25, [])

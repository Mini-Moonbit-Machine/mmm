let rec f.18: Int = (x.2: Unit) {
  Int(123)
}
let rec g.19: Int = (x.4: Unit) {
  Int(456)
}
let rec h.20: Int = (x.6: Unit) {
  Int(789)
}
let rec main.21: Var({val: Some(Unit)}) = () {
  let _8: Unit = Unit
  let x.9: Int = Apply(f.18, [_8, ])
  let _10: Unit = Unit
  let y.11: Int = Apply(g.19, [_10, ])
  let _12: Unit = Unit
  let _13: Int = Apply(h.20, [_12, ])
  let _14: Int = Int(0)
  if (_13 == _14) then {
    let _17: Int = Sub(x.9, y.11)
    ExtApply(minimbt_print_int, [_17, ])
  } else {
    let _15: Int = Sub(y.11, x.9)
    let _16: Int = Add(_15, x.9)
    let _17: Int = Add(_16, y.11)
    ExtApply(minimbt_print_int, [_17, ])
  }
}
Apply(main.21, [])
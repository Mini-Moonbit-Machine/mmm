let rec f1l0: Int = (u2.3: Unit) {
  Int(123)
}
let rec g4l1: Int = (u5.6: Unit) {
  Int(456)
}
let rec h7l2: Int = (u8.9: Unit) {
  Int(789)
}
let rec main10l3: Var({val: Some(Unit)}) = () {
  let _11: Unit = Unit
  let x.12: Int = Apply(f1l0, [_11, ])
  let _13: Unit = Unit
  let y.14: Int = Apply(g4l1, [_13, ])
  let _15: Unit = Unit
  let _16: Int = Apply(h7l2, [_15, ])
  let _17: Int = Int(0)
  let _22: Int = if (_16 == _17) then {
    let _18: Int = Int(1)
    Add(x.12, _18)
  } else {
    let _19: Int = Int(2)
    let _20: Int = Add(y.14, _19)
    let _21: Int = Add(_20, x.12)
    Add(_21, y.14)
  }
  ExtApply(minimbt_print_int, [_22, ])
}
Apply(main10l3, [])
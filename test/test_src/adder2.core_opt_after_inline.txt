# name conventions used in the core ir:
# - functions: f<id>
# - blocks: b<id>
# - instructions: %<id>
# - memory: m<id>
# - free variables: ^<id>
# - function parameters: $f<pid>
# - block parameters: $b<bid>.<pid>
.core
.fn main.21 #f2 : fn() -> unit
.freevars ()
.entry b0 {
  .bb #b0 () {
    let %0: int32 = call f0(10, 2)
    let %1: int32 = call f1(20, 3)
    let %2: int32 = add(%0, %1)
    let %3: unit = ext_call minimbt_print_int(%2)
    return %3
  }
}
.fn T$start #f6 : fn() -> unit
.freevars ()
.entry b0 {
  .bb #b0 () {
    let %0: unit = call f2()
    return %0
  }
}
.fn adder.23 #f1 : fn(int32, int32) -> int32
.freevars ()
.entry b0 {
  .bb #b0 () {
    let %0: int32 = add($f1, $f0)
    return %0
  }
}
.fn adder.22 #f0 : fn(int32, int32) -> int32
.freevars ()
.entry b0 {
  .bb #b0 () {
    let %0: int32 = add($f1, $f0)
    return %0
  }
}
.thunk ::0 start

// [Knf] build_knf: LetRec({name: ("f", Int), args: [("a", Int), ("b", Int), ("c", Int), ("d", Int)], body: Let(("e", Var({val: Some(Int)})), Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Let(("f", Var({val: Some(Int)})), Prim(Var("a"), Var("c"), Add, kind=Some(Int)), Let(("g", Var({val: Some(Int)})), Prim(Var("a"), Var("d"), Add, kind=Some(Int)), Let(("h", Var({val: Some(Int)})), Prim(Var("b"), Var("c"), Add, kind=Some(Int)), Let(("i", Var({val: Some(Int)})), Prim(Var("b"), Var("d"), Add, kind=Some(Int)), Let(("j", Var({val: Some(Int)})), Prim(Var("c"), Var("d"), Add, kind=Some(Int)), Let(("k", Var({val: Some(Int)})), Prim(Var("e"), Var("f"), Add, kind=Some(Int)), Let(("l", Var({val: Some(Int)})), Prim(Var("e"), Var("g"), Add, kind=Some(Int)), Let(("m", Var({val: Some(Int)})), Prim(Var("e"), Var("h"), Add, kind=Some(Int)), Let(("n", Var({val: Some(Int)})), Prim(Var("e"), Var("i"), Add, kind=Some(Int)), Let(("o", Var({val: Some(Int)})), Prim(Var("e"), Var("j"), Add, kind=Some(Int)), Let(("p", Var({val: Some(Int)})), Prim(Var("f"), Var("g"), Add, kind=Some(Int)), Let(("q", Var({val: Some(Int)})), Prim(Var("f"), Var("h"), Add, kind=Some(Int)), Let(("r", Var({val: Some(Int)})), Prim(Var("f"), Var("i"), Add, kind=Some(Int)), Let(("s", Var({val: Some(Int)})), Prim(Var("f"), Var("j"), Add, kind=Some(Int)), Let(("t", Var({val: Some(Int)})), Prim(Var("g"), Var("h"), Add, kind=Some(Int)), Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))))))))))))))))))))))))))))))))))}, LetRec({name: ("main", Var({val: Some(Unit)})), args: [], body: App(Var("print_int"), [App(Var("f"), [Int(1), Int(2), Int(3), Int(4)])])}, App(Var("main"), [])))
// [Knf] build_knf: Let(("e", Var({val: Some(Int)})), Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Let(("f", Var({val: Some(Int)})), Prim(Var("a"), Var("c"), Add, kind=Some(Int)), Let(("g", Var({val: Some(Int)})), Prim(Var("a"), Var("d"), Add, kind=Some(Int)), Let(("h", Var({val: Some(Int)})), Prim(Var("b"), Var("c"), Add, kind=Some(Int)), Let(("i", Var({val: Some(Int)})), Prim(Var("b"), Var("d"), Add, kind=Some(Int)), Let(("j", Var({val: Some(Int)})), Prim(Var("c"), Var("d"), Add, kind=Some(Int)), Let(("k", Var({val: Some(Int)})), Prim(Var("e"), Var("f"), Add, kind=Some(Int)), Let(("l", Var({val: Some(Int)})), Prim(Var("e"), Var("g"), Add, kind=Some(Int)), Let(("m", Var({val: Some(Int)})), Prim(Var("e"), Var("h"), Add, kind=Some(Int)), Let(("n", Var({val: Some(Int)})), Prim(Var("e"), Var("i"), Add, kind=Some(Int)), Let(("o", Var({val: Some(Int)})), Prim(Var("e"), Var("j"), Add, kind=Some(Int)), Let(("p", Var({val: Some(Int)})), Prim(Var("f"), Var("g"), Add, kind=Some(Int)), Let(("q", Var({val: Some(Int)})), Prim(Var("f"), Var("h"), Add, kind=Some(Int)), Let(("r", Var({val: Some(Int)})), Prim(Var("f"), Var("i"), Add, kind=Some(Int)), Let(("s", Var({val: Some(Int)})), Prim(Var("f"), Var("j"), Add, kind=Some(Int)), Let(("t", Var({val: Some(Int)})), Prim(Var("g"), Var("h"), Add, kind=Some(Int)), Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))))))))))))))))))))))))))))))))))
// [Knf] build_knf: Prim(Var("a"), Var("b"), Add, kind=Some(Int))
// [Knf] build_knf: Var("a")
// [Knf] build_knf: Var("b")
// [Knf] build_knf: Let(("f", Var({val: Some(Int)})), Prim(Var("a"), Var("c"), Add, kind=Some(Int)), Let(("g", Var({val: Some(Int)})), Prim(Var("a"), Var("d"), Add, kind=Some(Int)), Let(("h", Var({val: Some(Int)})), Prim(Var("b"), Var("c"), Add, kind=Some(Int)), Let(("i", Var({val: Some(Int)})), Prim(Var("b"), Var("d"), Add, kind=Some(Int)), Let(("j", Var({val: Some(Int)})), Prim(Var("c"), Var("d"), Add, kind=Some(Int)), Let(("k", Var({val: Some(Int)})), Prim(Var("e"), Var("f"), Add, kind=Some(Int)), Let(("l", Var({val: Some(Int)})), Prim(Var("e"), Var("g"), Add, kind=Some(Int)), Let(("m", Var({val: Some(Int)})), Prim(Var("e"), Var("h"), Add, kind=Some(Int)), Let(("n", Var({val: Some(Int)})), Prim(Var("e"), Var("i"), Add, kind=Some(Int)), Let(("o", Var({val: Some(Int)})), Prim(Var("e"), Var("j"), Add, kind=Some(Int)), Let(("p", Var({val: Some(Int)})), Prim(Var("f"), Var("g"), Add, kind=Some(Int)), Let(("q", Var({val: Some(Int)})), Prim(Var("f"), Var("h"), Add, kind=Some(Int)), Let(("r", Var({val: Some(Int)})), Prim(Var("f"), Var("i"), Add, kind=Some(Int)), Let(("s", Var({val: Some(Int)})), Prim(Var("f"), Var("j"), Add, kind=Some(Int)), Let(("t", Var({val: Some(Int)})), Prim(Var("g"), Var("h"), Add, kind=Some(Int)), Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))))))))))))))))))))))))))))))))))))
// [Knf] build_knf: Prim(Var("a"), Var("c"), Add, kind=Some(Int))
// [Knf] build_knf: Var("a")
// [Knf] build_knf: Var("c")
// [Knf] build_knf: Let(("g", Var({val: Some(Int)})), Prim(Var("a"), Var("d"), Add, kind=Some(Int)), Let(("h", Var({val: Some(Int)})), Prim(Var("b"), Var("c"), Add, kind=Some(Int)), Let(("i", Var({val: Some(Int)})), Prim(Var("b"), Var("d"), Add, kind=Some(Int)), Let(("j", Var({val: Some(Int)})), Prim(Var("c"), Var("d"), Add, kind=Some(Int)), Let(("k", Var({val: Some(Int)})), Prim(Var("e"), Var("f"), Add, kind=Some(Int)), Let(("l", Var({val: Some(Int)})), Prim(Var("e"), Var("g"), Add, kind=Some(Int)), Let(("m", Var({val: Some(Int)})), Prim(Var("e"), Var("h"), Add, kind=Some(Int)), Let(("n", Var({val: Some(Int)})), Prim(Var("e"), Var("i"), Add, kind=Some(Int)), Let(("o", Var({val: Some(Int)})), Prim(Var("e"), Var("j"), Add, kind=Some(Int)), Let(("p", Var({val: Some(Int)})), Prim(Var("f"), Var("g"), Add, kind=Some(Int)), Let(("q", Var({val: Some(Int)})), Prim(Var("f"), Var("h"), Add, kind=Some(Int)), Let(("r", Var({val: Some(Int)})), Prim(Var("f"), Var("i"), Add, kind=Some(Int)), Let(("s", Var({val: Some(Int)})), Prim(Var("f"), Var("j"), Add, kind=Some(Int)), Let(("t", Var({val: Some(Int)})), Prim(Var("g"), Var("h"), Add, kind=Some(Int)), Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))))))))))))))))))))))))))))))))
// [Knf] build_knf: Prim(Var("a"), Var("d"), Add, kind=Some(Int))
// [Knf] build_knf: Var("a")
// [Knf] build_knf: Var("d")
// [Knf] build_knf: Let(("h", Var({val: Some(Int)})), Prim(Var("b"), Var("c"), Add, kind=Some(Int)), Let(("i", Var({val: Some(Int)})), Prim(Var("b"), Var("d"), Add, kind=Some(Int)), Let(("j", Var({val: Some(Int)})), Prim(Var("c"), Var("d"), Add, kind=Some(Int)), Let(("k", Var({val: Some(Int)})), Prim(Var("e"), Var("f"), Add, kind=Some(Int)), Let(("l", Var({val: Some(Int)})), Prim(Var("e"), Var("g"), Add, kind=Some(Int)), Let(("m", Var({val: Some(Int)})), Prim(Var("e"), Var("h"), Add, kind=Some(Int)), Let(("n", Var({val: Some(Int)})), Prim(Var("e"), Var("i"), Add, kind=Some(Int)), Let(("o", Var({val: Some(Int)})), Prim(Var("e"), Var("j"), Add, kind=Some(Int)), Let(("p", Var({val: Some(Int)})), Prim(Var("f"), Var("g"), Add, kind=Some(Int)), Let(("q", Var({val: Some(Int)})), Prim(Var("f"), Var("h"), Add, kind=Some(Int)), Let(("r", Var({val: Some(Int)})), Prim(Var("f"), Var("i"), Add, kind=Some(Int)), Let(("s", Var({val: Some(Int)})), Prim(Var("f"), Var("j"), Add, kind=Some(Int)), Let(("t", Var({val: Some(Int)})), Prim(Var("g"), Var("h"), Add, kind=Some(Int)), Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))))))))))))))))))))))))))))))))))
// [Knf] build_knf: Prim(Var("b"), Var("c"), Add, kind=Some(Int))
// [Knf] build_knf: Var("b")
// [Knf] build_knf: Var("c")
// [Knf] build_knf: Let(("i", Var({val: Some(Int)})), Prim(Var("b"), Var("d"), Add, kind=Some(Int)), Let(("j", Var({val: Some(Int)})), Prim(Var("c"), Var("d"), Add, kind=Some(Int)), Let(("k", Var({val: Some(Int)})), Prim(Var("e"), Var("f"), Add, kind=Some(Int)), Let(("l", Var({val: Some(Int)})), Prim(Var("e"), Var("g"), Add, kind=Some(Int)), Let(("m", Var({val: Some(Int)})), Prim(Var("e"), Var("h"), Add, kind=Some(Int)), Let(("n", Var({val: Some(Int)})), Prim(Var("e"), Var("i"), Add, kind=Some(Int)), Let(("o", Var({val: Some(Int)})), Prim(Var("e"), Var("j"), Add, kind=Some(Int)), Let(("p", Var({val: Some(Int)})), Prim(Var("f"), Var("g"), Add, kind=Some(Int)), Let(("q", Var({val: Some(Int)})), Prim(Var("f"), Var("h"), Add, kind=Some(Int)), Let(("r", Var({val: Some(Int)})), Prim(Var("f"), Var("i"), Add, kind=Some(Int)), Let(("s", Var({val: Some(Int)})), Prim(Var("f"), Var("j"), Add, kind=Some(Int)), Let(("t", Var({val: Some(Int)})), Prim(Var("g"), Var("h"), Add, kind=Some(Int)), Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))))))))))))))))))))))))))))))
// [Knf] build_knf: Prim(Var("b"), Var("d"), Add, kind=Some(Int))
// [Knf] build_knf: Var("b")
// [Knf] build_knf: Var("d")
// [Knf] build_knf: Let(("j", Var({val: Some(Int)})), Prim(Var("c"), Var("d"), Add, kind=Some(Int)), Let(("k", Var({val: Some(Int)})), Prim(Var("e"), Var("f"), Add, kind=Some(Int)), Let(("l", Var({val: Some(Int)})), Prim(Var("e"), Var("g"), Add, kind=Some(Int)), Let(("m", Var({val: Some(Int)})), Prim(Var("e"), Var("h"), Add, kind=Some(Int)), Let(("n", Var({val: Some(Int)})), Prim(Var("e"), Var("i"), Add, kind=Some(Int)), Let(("o", Var({val: Some(Int)})), Prim(Var("e"), Var("j"), Add, kind=Some(Int)), Let(("p", Var({val: Some(Int)})), Prim(Var("f"), Var("g"), Add, kind=Some(Int)), Let(("q", Var({val: Some(Int)})), Prim(Var("f"), Var("h"), Add, kind=Some(Int)), Let(("r", Var({val: Some(Int)})), Prim(Var("f"), Var("i"), Add, kind=Some(Int)), Let(("s", Var({val: Some(Int)})), Prim(Var("f"), Var("j"), Add, kind=Some(Int)), Let(("t", Var({val: Some(Int)})), Prim(Var("g"), Var("h"), Add, kind=Some(Int)), Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))))))))))))))))))))))))))))))))
// [Knf] build_knf: Prim(Var("c"), Var("d"), Add, kind=Some(Int))
// [Knf] build_knf: Var("c")
// [Knf] build_knf: Var("d")
// [Knf] build_knf: Let(("k", Var({val: Some(Int)})), Prim(Var("e"), Var("f"), Add, kind=Some(Int)), Let(("l", Var({val: Some(Int)})), Prim(Var("e"), Var("g"), Add, kind=Some(Int)), Let(("m", Var({val: Some(Int)})), Prim(Var("e"), Var("h"), Add, kind=Some(Int)), Let(("n", Var({val: Some(Int)})), Prim(Var("e"), Var("i"), Add, kind=Some(Int)), Let(("o", Var({val: Some(Int)})), Prim(Var("e"), Var("j"), Add, kind=Some(Int)), Let(("p", Var({val: Some(Int)})), Prim(Var("f"), Var("g"), Add, kind=Some(Int)), Let(("q", Var({val: Some(Int)})), Prim(Var("f"), Var("h"), Add, kind=Some(Int)), Let(("r", Var({val: Some(Int)})), Prim(Var("f"), Var("i"), Add, kind=Some(Int)), Let(("s", Var({val: Some(Int)})), Prim(Var("f"), Var("j"), Add, kind=Some(Int)), Let(("t", Var({val: Some(Int)})), Prim(Var("g"), Var("h"), Add, kind=Some(Int)), Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))))))))))))))))))))))))))))
// [Knf] build_knf: Prim(Var("e"), Var("f"), Add, kind=Some(Int))
// [Knf] build_knf: Var("e")
// [Knf] build_knf: Var("f")
// [Knf] build_knf: Let(("l", Var({val: Some(Int)})), Prim(Var("e"), Var("g"), Add, kind=Some(Int)), Let(("m", Var({val: Some(Int)})), Prim(Var("e"), Var("h"), Add, kind=Some(Int)), Let(("n", Var({val: Some(Int)})), Prim(Var("e"), Var("i"), Add, kind=Some(Int)), Let(("o", Var({val: Some(Int)})), Prim(Var("e"), Var("j"), Add, kind=Some(Int)), Let(("p", Var({val: Some(Int)})), Prim(Var("f"), Var("g"), Add, kind=Some(Int)), Let(("q", Var({val: Some(Int)})), Prim(Var("f"), Var("h"), Add, kind=Some(Int)), Let(("r", Var({val: Some(Int)})), Prim(Var("f"), Var("i"), Add, kind=Some(Int)), Let(("s", Var({val: Some(Int)})), Prim(Var("f"), Var("j"), Add, kind=Some(Int)), Let(("t", Var({val: Some(Int)})), Prim(Var("g"), Var("h"), Add, kind=Some(Int)), Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))))))))))))))))))))))))))))))
// [Knf] build_knf: Prim(Var("e"), Var("g"), Add, kind=Some(Int))
// [Knf] build_knf: Var("e")
// [Knf] build_knf: Var("g")
// [Knf] build_knf: Let(("m", Var({val: Some(Int)})), Prim(Var("e"), Var("h"), Add, kind=Some(Int)), Let(("n", Var({val: Some(Int)})), Prim(Var("e"), Var("i"), Add, kind=Some(Int)), Let(("o", Var({val: Some(Int)})), Prim(Var("e"), Var("j"), Add, kind=Some(Int)), Let(("p", Var({val: Some(Int)})), Prim(Var("f"), Var("g"), Add, kind=Some(Int)), Let(("q", Var({val: Some(Int)})), Prim(Var("f"), Var("h"), Add, kind=Some(Int)), Let(("r", Var({val: Some(Int)})), Prim(Var("f"), Var("i"), Add, kind=Some(Int)), Let(("s", Var({val: Some(Int)})), Prim(Var("f"), Var("j"), Add, kind=Some(Int)), Let(("t", Var({val: Some(Int)})), Prim(Var("g"), Var("h"), Add, kind=Some(Int)), Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))))))))))))))))))))))))))
// [Knf] build_knf: Prim(Var("e"), Var("h"), Add, kind=Some(Int))
// [Knf] build_knf: Var("e")
// [Knf] build_knf: Var("h")
// [Knf] build_knf: Let(("n", Var({val: Some(Int)})), Prim(Var("e"), Var("i"), Add, kind=Some(Int)), Let(("o", Var({val: Some(Int)})), Prim(Var("e"), Var("j"), Add, kind=Some(Int)), Let(("p", Var({val: Some(Int)})), Prim(Var("f"), Var("g"), Add, kind=Some(Int)), Let(("q", Var({val: Some(Int)})), Prim(Var("f"), Var("h"), Add, kind=Some(Int)), Let(("r", Var({val: Some(Int)})), Prim(Var("f"), Var("i"), Add, kind=Some(Int)), Let(("s", Var({val: Some(Int)})), Prim(Var("f"), Var("j"), Add, kind=Some(Int)), Let(("t", Var({val: Some(Int)})), Prim(Var("g"), Var("h"), Add, kind=Some(Int)), Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))))))))))))))))))))))))))))
// [Knf] build_knf: Prim(Var("e"), Var("i"), Add, kind=Some(Int))
// [Knf] build_knf: Var("e")
// [Knf] build_knf: Var("i")
// [Knf] build_knf: Let(("o", Var({val: Some(Int)})), Prim(Var("e"), Var("j"), Add, kind=Some(Int)), Let(("p", Var({val: Some(Int)})), Prim(Var("f"), Var("g"), Add, kind=Some(Int)), Let(("q", Var({val: Some(Int)})), Prim(Var("f"), Var("h"), Add, kind=Some(Int)), Let(("r", Var({val: Some(Int)})), Prim(Var("f"), Var("i"), Add, kind=Some(Int)), Let(("s", Var({val: Some(Int)})), Prim(Var("f"), Var("j"), Add, kind=Some(Int)), Let(("t", Var({val: Some(Int)})), Prim(Var("g"), Var("h"), Add, kind=Some(Int)), Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))))))))))))))))))))))))
// [Knf] build_knf: Prim(Var("e"), Var("j"), Add, kind=Some(Int))
// [Knf] build_knf: Var("e")
// [Knf] build_knf: Var("j")
// [Knf] build_knf: Let(("p", Var({val: Some(Int)})), Prim(Var("f"), Var("g"), Add, kind=Some(Int)), Let(("q", Var({val: Some(Int)})), Prim(Var("f"), Var("h"), Add, kind=Some(Int)), Let(("r", Var({val: Some(Int)})), Prim(Var("f"), Var("i"), Add, kind=Some(Int)), Let(("s", Var({val: Some(Int)})), Prim(Var("f"), Var("j"), Add, kind=Some(Int)), Let(("t", Var({val: Some(Int)})), Prim(Var("g"), Var("h"), Add, kind=Some(Int)), Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))))))))))))))))))))))))))
// [Knf] build_knf: Prim(Var("f"), Var("g"), Add, kind=Some(Int))
// [Knf] build_knf: Var("f")
// [Knf] build_knf: Var("g")
// [Knf] build_knf: Let(("q", Var({val: Some(Int)})), Prim(Var("f"), Var("h"), Add, kind=Some(Int)), Let(("r", Var({val: Some(Int)})), Prim(Var("f"), Var("i"), Add, kind=Some(Int)), Let(("s", Var({val: Some(Int)})), Prim(Var("f"), Var("j"), Add, kind=Some(Int)), Let(("t", Var({val: Some(Int)})), Prim(Var("g"), Var("h"), Add, kind=Some(Int)), Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))))))))))))))))))))))
// [Knf] build_knf: Prim(Var("f"), Var("h"), Add, kind=Some(Int))
// [Knf] build_knf: Var("f")
// [Knf] build_knf: Var("h")
// [Knf] build_knf: Let(("r", Var({val: Some(Int)})), Prim(Var("f"), Var("i"), Add, kind=Some(Int)), Let(("s", Var({val: Some(Int)})), Prim(Var("f"), Var("j"), Add, kind=Some(Int)), Let(("t", Var({val: Some(Int)})), Prim(Var("g"), Var("h"), Add, kind=Some(Int)), Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))))))))))))))))))))))))
// [Knf] build_knf: Prim(Var("f"), Var("i"), Add, kind=Some(Int))
// [Knf] build_knf: Var("f")
// [Knf] build_knf: Var("i")
// [Knf] build_knf: Let(("s", Var({val: Some(Int)})), Prim(Var("f"), Var("j"), Add, kind=Some(Int)), Let(("t", Var({val: Some(Int)})), Prim(Var("g"), Var("h"), Add, kind=Some(Int)), Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))))))))))))))))))))
// [Knf] build_knf: Prim(Var("f"), Var("j"), Add, kind=Some(Int))
// [Knf] build_knf: Var("f")
// [Knf] build_knf: Var("j")
// [Knf] build_knf: Let(("t", Var({val: Some(Int)})), Prim(Var("g"), Var("h"), Add, kind=Some(Int)), Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))))))))))))))))))))))
// [Knf] build_knf: Prim(Var("g"), Var("h"), Add, kind=Some(Int))
// [Knf] build_knf: Var("g")
// [Knf] build_knf: Var("h")
// [Knf] build_knf: Let(("u", Var({val: Some(Int)})), Prim(Var("g"), Var("i"), Add, kind=Some(Int)), Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))))))))))))))))))
// [Knf] build_knf: Prim(Var("g"), Var("i"), Add, kind=Some(Int))
// [Knf] build_knf: Var("g")
// [Knf] build_knf: Var("i")
// [Knf] build_knf: Let(("v", Var({val: Some(Int)})), Prim(Var("g"), Var("j"), Add, kind=Some(Int)), Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))))))))))))))))))))
// [Knf] build_knf: Prim(Var("g"), Var("j"), Add, kind=Some(Int))
// [Knf] build_knf: Var("g")
// [Knf] build_knf: Var("j")
// [Knf] build_knf: Let(("w", Var({val: Some(Int)})), Prim(Var("h"), Var("i"), Add, kind=Some(Int)), Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))))))))))))))))
// [Knf] build_knf: Prim(Var("h"), Var("i"), Add, kind=Some(Int))
// [Knf] build_knf: Var("h")
// [Knf] build_knf: Var("i")
// [Knf] build_knf: Let(("x", Var({val: Some(Int)})), Prim(Var("h"), Var("j"), Add, kind=Some(Int)), Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))))))))))))))))))
// [Knf] build_knf: Prim(Var("h"), Var("j"), Add, kind=Some(Int))
// [Knf] build_knf: Var("h")
// [Knf] build_knf: Var("j")
// [Knf] build_knf: Let(("y", Var({val: Some(Int)})), Prim(Var("i"), Var("j"), Add, kind=Some(Int)), Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))))))))))))))
// [Knf] build_knf: Prim(Var("i"), Var("j"), Add, kind=Some(Int))
// [Knf] build_knf: Var("i")
// [Knf] build_knf: Var("j")
// [Knf] build_knf: Let(("aa", Var({val: Some(Int)})), Prim(Var("k"), Var("l"), Add, kind=Some(Int)), Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))))))))))))))))
// [Knf] build_knf: Prim(Var("k"), Var("l"), Add, kind=Some(Int))
// [Knf] build_knf: Var("k")
// [Knf] build_knf: Var("l")
// [Knf] build_knf: Let(("ab", Var({val: Some(Int)})), Prim(Var("k"), Var("m"), Add, kind=Some(Int)), Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))))))))))))
// [Knf] build_knf: Prim(Var("k"), Var("m"), Add, kind=Some(Int))
// [Knf] build_knf: Var("k")
// [Knf] build_knf: Var("m")
// [Knf] build_knf: Let(("ac", Var({val: Some(Int)})), Prim(Var("k"), Var("n"), Add, kind=Some(Int)), Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))))))))))))))
// [Knf] build_knf: Prim(Var("k"), Var("n"), Add, kind=Some(Int))
// [Knf] build_knf: Var("k")
// [Knf] build_knf: Var("n")
// [Knf] build_knf: Let(("ad", Var({val: Some(Int)})), Prim(Var("k"), Var("o"), Add, kind=Some(Int)), Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))))))))))
// [Knf] build_knf: Prim(Var("k"), Var("o"), Add, kind=Some(Int))
// [Knf] build_knf: Var("k")
// [Knf] build_knf: Var("o")
// [Knf] build_knf: Let(("ae", Var({val: Some(Int)})), Prim(Var("k"), Var("p"), Add, kind=Some(Int)), Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))))))))))))
// [Knf] build_knf: Prim(Var("k"), Var("p"), Add, kind=Some(Int))
// [Knf] build_knf: Var("k")
// [Knf] build_knf: Var("p")
// [Knf] build_knf: Let(("af", Var({val: Some(Int)})), Prim(Var("k"), Var("q"), Add, kind=Some(Int)), Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))))))))
// [Knf] build_knf: Prim(Var("k"), Var("q"), Add, kind=Some(Int))
// [Knf] build_knf: Var("k")
// [Knf] build_knf: Var("q")
// [Knf] build_knf: Let(("ag", Var({val: Some(Int)})), Prim(Var("k"), Var("r"), Add, kind=Some(Int)), Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))))))))))
// [Knf] build_knf: Prim(Var("k"), Var("r"), Add, kind=Some(Int))
// [Knf] build_knf: Var("k")
// [Knf] build_knf: Var("r")
// [Knf] build_knf: Let(("ah", Var({val: Some(Int)})), Prim(Var("k"), Var("s"), Add, kind=Some(Int)), Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))))))
// [Knf] build_knf: Prim(Var("k"), Var("s"), Add, kind=Some(Int))
// [Knf] build_knf: Var("k")
// [Knf] build_knf: Var("s")
// [Knf] build_knf: Let(("ai", Var({val: Some(Int)})), Prim(Var("k"), Var("t"), Add, kind=Some(Int)), Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))))))))
// [Knf] build_knf: Prim(Var("k"), Var("t"), Add, kind=Some(Int))
// [Knf] build_knf: Var("k")
// [Knf] build_knf: Var("t")
// [Knf] build_knf: Let(("aj", Var({val: Some(Int)})), Prim(Var("k"), Var("u"), Add, kind=Some(Int)), Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))))
// [Knf] build_knf: Prim(Var("k"), Var("u"), Add, kind=Some(Int))
// [Knf] build_knf: Var("k")
// [Knf] build_knf: Var("u")
// [Knf] build_knf: Let(("ak", Var({val: Some(Int)})), Prim(Var("k"), Var("v"), Add, kind=Some(Int)), Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))))))
// [Knf] build_knf: Prim(Var("k"), Var("v"), Add, kind=Some(Int))
// [Knf] build_knf: Var("k")
// [Knf] build_knf: Var("v")
// [Knf] build_knf: Let(("al", Var({val: Some(Int)})), Prim(Var("k"), Var("w"), Add, kind=Some(Int)), Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))))
// [Knf] build_knf: Prim(Var("k"), Var("w"), Add, kind=Some(Int))
// [Knf] build_knf: Var("k")
// [Knf] build_knf: Var("w")
// [Knf] build_knf: Let(("am", Var({val: Some(Int)})), Prim(Var("k"), Var("x"), Add, kind=Some(Int)), Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))))
// [Knf] build_knf: Prim(Var("k"), Var("x"), Add, kind=Some(Int))
// [Knf] build_knf: Var("k")
// [Knf] build_knf: Var("x")
// [Knf] build_knf: Let(("an", Var({val: Some(Int)})), Prim(Var("k"), Var("y"), Add, kind=Some(Int)), Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int))))
// [Knf] build_knf: Prim(Var("k"), Var("y"), Add, kind=Some(Int))
// [Knf] build_knf: Var("k")
// [Knf] build_knf: Var("y")
// [Knf] build_knf: Let(("z", Var({val: Some(Int)})), Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int)), Neg(Var("z"), kind=Some(Int)))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int)), Var("an"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int)), Var("am"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int)), Var("al"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int)), Var("ak"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int)), Var("aj"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int)), Var("ai"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int)), Var("ah"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int)), Var("ag"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int)), Var("af"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int)), Var("ae"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int)), Var("ad"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int)), Var("ac"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int)), Var("ab"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int)), Var("aa"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int)), Var("y"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int)), Var("x"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int)), Var("w"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int)), Var("v"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int)), Var("u"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int)), Var("t"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int)), Var("s"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int)), Var("r"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int)), Var("q"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int)), Var("p"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int)), Var("o"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int)), Var("n"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int)), Var("m"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int)), Var("l"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int)), Var("k"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int)), Var("j"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int)), Var("i"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int)), Var("h"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int)), Var("g"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int)), Var("f"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int)), Var("e"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int)), Var("d"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Prim(Var("a"), Var("b"), Add, kind=Some(Int)), Var("c"), Add, kind=Some(Int))
// [Knf] build_knf: Prim(Var("a"), Var("b"), Add, kind=Some(Int))
// [Knf] build_knf: Var("a")
// [Knf] build_knf: Var("b")
// [Knf] build_knf: Var("c")
// [Knf] build_knf: Var("d")
// [Knf] build_knf: Var("e")
// [Knf] build_knf: Var("f")
// [Knf] build_knf: Var("g")
// [Knf] build_knf: Var("h")
// [Knf] build_knf: Var("i")
// [Knf] build_knf: Var("j")
// [Knf] build_knf: Var("k")
// [Knf] build_knf: Var("l")
// [Knf] build_knf: Var("m")
// [Knf] build_knf: Var("n")
// [Knf] build_knf: Var("o")
// [Knf] build_knf: Var("p")
// [Knf] build_knf: Var("q")
// [Knf] build_knf: Var("r")
// [Knf] build_knf: Var("s")
// [Knf] build_knf: Var("t")
// [Knf] build_knf: Var("u")
// [Knf] build_knf: Var("v")
// [Knf] build_knf: Var("w")
// [Knf] build_knf: Var("x")
// [Knf] build_knf: Var("y")
// [Knf] build_knf: Var("aa")
// [Knf] build_knf: Var("ab")
// [Knf] build_knf: Var("ac")
// [Knf] build_knf: Var("ad")
// [Knf] build_knf: Var("ae")
// [Knf] build_knf: Var("af")
// [Knf] build_knf: Var("ag")
// [Knf] build_knf: Var("ah")
// [Knf] build_knf: Var("ai")
// [Knf] build_knf: Var("aj")
// [Knf] build_knf: Var("ak")
// [Knf] build_knf: Var("al")
// [Knf] build_knf: Var("am")
// [Knf] build_knf: Var("an")
// [Knf] build_knf: Neg(Var("z"), kind=Some(Int))
// [Knf] build_knf: Var("z")
// [Knf] build_knf: LetRec({name: ("main", Var({val: Some(Unit)})), args: [], body: App(Var("print_int"), [App(Var("f"), [Int(1), Int(2), Int(3), Int(4)])])}, App(Var("main"), []))
// [Knf] build_knf: App(Var("print_int"), [App(Var("f"), [Int(1), Int(2), Int(3), Int(4)])])
// [Knf] build_knf: App(Var("f"), [Int(1), Int(2), Int(3), Int(4)])
// [Knf] build_knf: Var("f")
// [Knf] build_knf: Int(1)
// [Knf] build_knf: Int(2)
// [Knf] build_knf: Int(3)
// [Knf] build_knf: Int(4)
// [Knf] build_knf: App(Var("main"), [])
// [Knf] build_knf: Var("main")
// [Main] function thunk_main(k) {
// [Main]   function f1(a2_3, b4_5, c6_7, d8_9, k) {
// [Main]     const e_10 = a2_3 + b4_5;
// [Main]     const f_11 = a2_3 + c6_7;
// [Main]     const g_12 = a2_3 + d8_9;
// [Main]     const h_13 = b4_5 + c6_7;
// [Main]     const i_14 = b4_5 + d8_9;
// [Main]     const j_15 = c6_7 + d8_9;
// [Main]     const k_16 = e_10 + f_11;
// [Main]     const l_17 = e_10 + g_12;
// [Main]     const m_18 = e_10 + h_13;
// [Main]     const n_19 = e_10 + i_14;
// [Main]     const o_20 = e_10 + j_15;
// [Main]     const p_21 = f_11 + g_12;
// [Main]     const q_22 = f_11 + h_13;
// [Main]     const r_23 = f_11 + i_14;
// [Main]     const s_24 = f_11 + j_15;
// [Main]     const t_25 = g_12 + h_13;
// [Main]     const u_26 = g_12 + i_14;
// [Main]     const v_27 = g_12 + j_15;
// [Main]     const w_28 = h_13 + i_14;
// [Main]     const x_29 = h_13 + j_15;
// [Main]     const y_30 = i_14 + j_15;
// [Main]     const aa_31 = k_16 + l_17;
// [Main]     const ab_32 = k_16 + m_18;
// [Main]     const ac_33 = k_16 + n_19;
// [Main]     const ad_34 = k_16 + o_20;
// [Main]     const ae_35 = k_16 + p_21;
// [Main]     const af_36 = k_16 + q_22;
// [Main]     const ag_37 = k_16 + r_23;
// [Main]     const ah_38 = k_16 + s_24;
// [Main]     const ai_39 = k_16 + t_25;
// [Main]     const aj_40 = k_16 + u_26;
// [Main]     const ak_41 = k_16 + v_27;
// [Main]     const al_42 = k_16 + w_28;
// [Main]     const am_43 = k_16 + x_29;
// [Main]     const an_44 = k_16 + y_30;
// [Main]     const _45 = a2_3 + b4_5;
// [Main]     const _46 = _45 + c6_7;
// [Main]     const _47 = _46 + d8_9;
// [Main]     const _48 = _47 + e_10;
// [Main]     const _49 = _48 + f_11;
// [Main]     const _50 = _49 + g_12;
// [Main]     const _51 = _50 + h_13;
// [Main]     const _52 = _51 + i_14;
// [Main]     const _53 = _52 + j_15;
// [Main]     const _54 = _53 + k_16;
// [Main]     const _55 = _54 + l_17;
// [Main]     const _56 = _55 + m_18;
// [Main]     const _57 = _56 + n_19;
// [Main]     const _58 = _57 + o_20;
// [Main]     const _59 = _58 + p_21;
// [Main]     const _60 = _59 + q_22;
// [Main]     const _61 = _60 + r_23;
// [Main]     const _62 = _61 + s_24;
// [Main]     const _63 = _62 + t_25;
// [Main]     const _64 = _63 + u_26;
// [Main]     const _65 = _64 + v_27;
// [Main]     const _66 = _65 + w_28;
// [Main]     const _67 = _66 + x_29;
// [Main]     const _68 = _67 + y_30;
// [Main]     const _69 = _68 + aa_31;
// [Main]     const _70 = _69 + ab_32;
// [Main]     const _71 = _70 + ac_33;
// [Main]     const _72 = _71 + ad_34;
// [Main]     const _73 = _72 + ae_35;
// [Main]     const _74 = _73 + af_36;
// [Main]     const _75 = _74 + ag_37;
// [Main]     const _76 = _75 + ah_38;
// [Main]     const _77 = _76 + ai_39;
// [Main]     const _78 = _77 + aj_40;
// [Main]     const _79 = _78 + ak_41;
// [Main]     const _80 = _79 + al_42;
// [Main]     const _81 = _80 + am_43;
// [Main]     const z_82 = _81 + an_44;
// [Main]     return k(-z_82)
// [Main]   }
// [Main]   function main83(k) {
// [Main]     const _84 = 1;
// [Main]     const _85 = 2;
// [Main]     const _86 = 3;
// [Main]     const _87 = 4;
// [Main]     return $thunk(() => f1(_84, _85, _86, _87, function (_88) {
// [Main]       return $thunk(() => k(minimbt_print_int($force(_88))))
// [Main]     }
// [Main]     ))
// [Main]   }
// [Main]   return $thunk(() => main83(k))
// [Main] }
// [Main] 
// [Main] function $thunk(lambda) {
// [Main]   return { thunk: lambda };
// [Main] }
// [Main] function $is_thunk(x) {
// [Main]   return x && x.hasOwnProperty('thunk') && x.thunk !== undefined;
// [Main] }
// [Main] function $force(x) {
// [Main]   while ($is_thunk(x)) {
// [Main]     x = x.thunk();
// [Main]   }
// [Main]   return x;
// [Main] }
// [Main] function $trampoline(f, ...args) {
// [Main]   let x = f(...args);
// [Main]   return $force(x);
// [Main] }
// [Main] export default () => $trampoline(thunk_main, x => x);
// [Parser] flags: []

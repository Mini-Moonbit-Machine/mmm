let rec adder4l1: Int = (y5.6: Int, x2.3: Int) {
  Add(x2.3, y5.6)
}
let rec make_adder1l0: Fun([Int], Int) = (x2.3: Int) {
  let rec adder4l1c0: Int = (y5.6: Int) {
    Apply(adder4l1, [y5.6, x2.3, ])
  }
  Var(adder4l1c0)
}
let rec main7l1: Var({val: Some(Unit)}) = () {
  let _8: Int = Int(3)
  let _9: Fun([Int], Int) = Apply(make_adder1l0, [_8, ])
  let _10: Int = Int(7)
  let _11: Int = Apply(_9, [_10, ])
  ExtApply(minimbt_print_int, [_11, ])
}
Apply(main7l1, [])
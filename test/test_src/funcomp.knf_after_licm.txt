let rec compose1: Fun([Int], Int) = (f2.3: Fun([Int], Int), g4.5: Fun([Int], Int)) {
  let rec composed6: Int = (x7.8: Int) {
    let _9: Int = Apply(f2.3, [x7.8, ])
    Apply(g4.5, [_9, ])
  }
  Var(composed6)
}
let rec dbl10: Int = (x11.12: Int) {
  Add(x11.12, x11.12)
}
let rec inc13: Int = (x14.15: Int) {
  let _16: Int = Int(1)
  Add(x14.15, _16)
}
let rec dec17: Int = (x18.19: Int) {
  let _20: Int = Int(1)
  Sub(x18.19, _20)
}
let rec main21: Var({val: Some(Unit)}) = () {
  let _22: Fun([Int], Int) = Apply(compose1, [dbl10, dec17, ])
  let h.23: Fun([Int], Int) = Apply(compose1, [inc13, _22, ])
  let _24: Int = Int(123)
  let _25: Int = Apply(h.23, [_24, ])
  ExtApply(minimbt_print_int, [_25, ])
}
Apply(main21, [])let rec compose1: Fun([Int], Int) = (f2.3: Fun([Int], Int), g4.5: Fun([Int], Int)) {
  let rec composed6: Int = (x7.8: Int) {
    let _9: Int = Apply(f2.3, [x7.8, ])
    Apply(g4.5, [_9, ])
  }
  Var(composed6)
}
let rec dbl10: Int = (x11.12: Int) {
  Add(x11.12, x11.12)
}
let rec inc13: Int = (x14.15: Int) {
  let _16: Int = Int(1)
  Add(x14.15, _16)
}
let rec dec17: Int = (x18.19: Int) {
  let _20: Int = Int(1)
  Sub(x18.19, _20)
}
let rec main21: Var({val: Some(Unit)}) = () {
  let _22: Fun([Int], Int) = Apply(compose1, [dbl10, dec17, ])
  let h.23: Fun([Int], Int) = Apply(compose1, [inc13, _22, ])
  let _24: Int = Int(123)
  let _25: Int = Apply(h.23, [_24, ])
  ExtApply(minimbt_print_int, [_25, ])
}
Apply(main21, [])
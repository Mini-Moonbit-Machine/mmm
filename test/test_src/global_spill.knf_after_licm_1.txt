let _70: Int = Int(1)
let _71: Int = Int(1)
let x_2.3: Int = Add(_70, _71)
let _72: Int = Int(1)
let x_3.5: Int = Add(x_2.3, _72)
let _73: Int = Int(1)
let x_4.7: Int = Add(x_3.5, _73)
let _74: Int = Int(1)
let x_5.9: Int = Add(x_4.7, _74)
let _75: Int = Int(1)
let x_6.11: Int = Add(x_5.9, _75)
let _76: Int = Int(1)
let x_7.13: Int = Add(x_6.11, _76)
let _77: Int = Int(1)
let x_8.15: Int = Add(x_7.13, _77)
let _78: Int = Int(1)
let x_9.17: Int = Add(x_8.15, _78)
let _79: Int = Int(1)
let x_10.19: Int = Add(x_9.17, _79)
let _80: Int = Int(1)
let x_11.21: Int = Add(x_10.19, _80)
let _81: Int = Int(1)
let x_12.23: Int = Add(x_11.21, _81)
let _82: Int = Int(1)
let x_13.25: Int = Add(x_12.23, _82)
let _83: Int = Int(1)
let x_14.27: Int = Add(x_13.25, _83)
let _84: Int = Int(1)
let x_15.29: Int = Add(x_14.27, _84)
let _85: Int = Int(1)
let _86: Int = Int(0)
let dummy.32: Array(Int) = ExtApply(minimbt_create_array, [_85, _86, ])
let rec placeholder34.89: Unit = () {
  let _67: Int = Int(0)
  let _68: Int = Int(0)
  let _69: Unit = Put dummy.32[_67] = _68
  Unit
}
let rec print39.88: Unit = (n40.41: Int) {
  let _42: Int = Int(0)
  if (n40.41 == _42) then {
    Unit
  } else {
    let _45: Unit = Apply(placeholder34.89, [])
    let _87: Int = Int(1)
    let _46: Int = Add(_87, x_2.3)
    let _47: Int = Add(_46, x_3.5)
    let _48: Int = Add(_47, x_4.7)
    let _49: Int = Add(_48, x_5.9)
    let _50: Int = Add(_49, x_6.11)
    let _51: Int = Add(_50, x_7.13)
    let _52: Int = Add(_51, x_8.15)
    let _53: Int = Add(_52, x_9.17)
    let _54: Int = Add(_53, x_10.19)
    let _55: Int = Add(_54, x_11.21)
    let _56: Int = Add(_55, x_12.23)
    let _57: Int = Add(_56, x_13.25)
    let _58: Int = Add(_57, x_14.27)
    let _59: Int = Add(_58, x_15.29)
    let _61: Unit = ExtApply(minimbt_print_int, [_59, ])
    let _62: Int = Int(1)
    let _63: Int = Sub(n40.41, _62)
    Apply(print39.88, [_63, ])
  }
}
let rec main64.90: Var({val: Some(Unit)}) = () {
  let _65: Int = Int(10)
  Apply(print39.88, [_65, ])
}
Apply(main64.90, [])

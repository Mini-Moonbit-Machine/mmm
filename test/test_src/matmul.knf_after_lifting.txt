let rec init_arr63l2: Unit = (i64.65: Int, mat.62: Array(Var({val: Some(Array(Double))})), n60.61: Int) {
  let _66: Int = Int(0)
  if (_66 <= i64.65) then {
    let _67: Double = Double(0)
    let _68: Array(Double) = ExtApply(minimbt_create_float_array, [n60.61, _67, ])
    let _70: Unit = Put mat.62[i64.65] = _68
    let _71: Int = Int(1)
    let _72: Int = Sub(i64.65, _71)
    let _223: Int = Int(0)
    if (_223 <= _72) then {
      let _224: Double = Double(0)
      let _225: Array(Double) = ExtApply(minimbt_create_float_array, [n60.61, _224, ])
      let _226: Unit = Put mat.62[_72] = _225
      let _227: Int = Int(1)
      let _228: Int = Sub(_72, _227)
      Apply(init_arr63l2, [_228, mat.62, n60.61, ])
    } else {
      Unit
    }
  } else {
    Unit
  }
}
let rec gen_arr57l1: Array(Array(Double)) = (m58.59: Int, n60.61: Int, dummy.56: Array(Double)) {
  let mat.62: Array(Var({val: Some(Array(Double))})) = ExtApply(minimbt_create_ptr_array, [m58.59, dummy.56, ])
  let _73: Int = Int(1)
  let _74: Int = Sub(m58.59, _73)
  let _229: Int = Int(0)
  let _76: Unit = if (_229 <= _74) then {
    let _230: Double = Double(0)
    let _231: Array(Double) = ExtApply(minimbt_create_float_array, [n60.61, _230, ])
    let _232: Unit = Put mat.62[_74] = _231
    let _233: Int = Int(1)
    let _234: Int = Sub(_74, _233)
    Apply(init_arr63l2, [_234, mat.62, n60.61, ])
  } else {
    Unit
  }
  Var(mat.62)
}
let rec loop322.241l4: Unit = (k23.242: Int, a.79: Array(Array(Double)), b.82: Array(Array(Double)), c.85: Array(Array(Double)), i15.236: Int, j19.239: Int) {
  let _243: Int = Int(0)
  if (_243 <= k23.242) then {
    let _244: Array(Double) = Get c.85[i15.236]
    let _245: Array(Double) = Get c.85[i15.236]
    let _246: Double = Get _245[j19.239]
    let _247: Array(Double) = Get a.79[i15.236]
    let _248: Double = Get _247[k23.242]
    let _249: Array(Double) = Get b.82[k23.242]
    let _250: Double = Get _249[j19.239]
    let _251: Double = FMul(_248, _250)
    let _252: Double = FAdd(_246, _251)
    let _253: Unit = Put _244[j19.239] = _252
    let _254: Int = Int(1)
    let _255: Int = Sub(k23.242, _254)
    Apply(loop322.241l4, [_255, a.79, b.82, c.85, i15.236, j19.239, ])
  } else {
    Unit
  }
}
let rec loop218.238l3: Unit = (j19.239: Int, _159: Int, a.79: Array(Array(Double)), b.82: Array(Array(Double)), c.85: Array(Array(Double)), i15.236: Int) {
  let _240: Int = Int(0)
  if (_240 <= j19.239) then {
    let _256: Int = Int(1)
    let _257: Int = Sub(_159, _256)
    let _258: Unit = Apply(loop322.241l4, [_257, a.79, b.82, c.85, i15.236, j19.239, ])
    let _259: Int = Int(1)
    let _260: Int = Sub(j19.239, _259)
    Apply(loop218.238l3, [_260, _159, a.79, b.82, c.85, i15.236, ])
  } else {
    Unit
  }
}
let rec loop114.235l2: Unit = (i15.236: Int, _159: Int, _160: Int, a.79: Array(Array(Double)), b.82: Array(Array(Double)), c.85: Array(Array(Double))) {
  let _237: Int = Int(0)
  if (_237 <= i15.236) then {
    let _261: Int = Int(1)
    let _262: Int = Sub(_160, _261)
    let _263: Unit = Apply(loop218.238l3, [_262, _159, a.79, b.82, c.85, i15.236, ])
    let _264: Int = Int(1)
    let _265: Int = Sub(i15.236, _264)
    Apply(loop114.235l2, [_265, _159, _160, a.79, b.82, c.85, ])
  } else {
    Unit
  }
}
let rec main53l0: Var({val: Some(Unit)}) = () {
  let _54: Int = Int(0)
  let _55: Double = Double(0)
  let dummy.56: Array(Double) = ExtApply(minimbt_create_float_array, [_54, _55, ])
  let _77: Int = Int(2)
  let _78: Int = Int(3)
  let a.79: Array(Array(Double)) = Apply(gen_arr57l1, [_77, _78, dummy.56, ])
  let _80: Int = Int(3)
  let _81: Int = Int(2)
  let b.82: Array(Array(Double)) = Apply(gen_arr57l1, [_80, _81, dummy.56, ])
  let _83: Int = Int(2)
  let _84: Int = Int(2)
  let c.85: Array(Array(Double)) = Apply(gen_arr57l1, [_83, _84, dummy.56, ])
  let _86: Int = Int(0)
  let _87: Array(Double) = Get a.79[_86]
  let _88: Int = Int(0)
  let _89: Double = Double(1)
  let _91: Unit = Put _87[_88] = _89
  let _92: Int = Int(0)
  let _93: Array(Double) = Get a.79[_92]
  let _94: Int = Int(1)
  let _95: Double = Double(2)
  let _97: Unit = Put _93[_94] = _95
  let _98: Int = Int(0)
  let _99: Array(Double) = Get a.79[_98]
  let _100: Int = Int(2)
  let _101: Double = Double(3)
  let _103: Unit = Put _99[_100] = _101
  let _104: Int = Int(1)
  let _105: Array(Double) = Get a.79[_104]
  let _106: Int = Int(0)
  let _107: Double = Double(4)
  let _109: Unit = Put _105[_106] = _107
  let _110: Int = Int(1)
  let _111: Array(Double) = Get a.79[_110]
  let _112: Int = Int(1)
  let _113: Double = Double(5)
  let _115: Unit = Put _111[_112] = _113
  let _116: Int = Int(1)
  let _117: Array(Double) = Get a.79[_116]
  let _118: Int = Int(2)
  let _119: Double = Double(6)
  let _121: Unit = Put _117[_118] = _119
  let _122: Int = Int(0)
  let _123: Array(Double) = Get b.82[_122]
  let _124: Int = Int(0)
  let _125: Double = Double(7)
  let _127: Unit = Put _123[_124] = _125
  let _128: Int = Int(0)
  let _129: Array(Double) = Get b.82[_128]
  let _130: Int = Int(1)
  let _131: Double = Double(8)
  let _133: Unit = Put _129[_130] = _131
  let _134: Int = Int(1)
  let _135: Array(Double) = Get b.82[_134]
  let _136: Int = Int(0)
  let _137: Double = Double(9)
  let _139: Unit = Put _135[_136] = _137
  let _140: Int = Int(1)
  let _141: Array(Double) = Get b.82[_140]
  let _142: Int = Int(1)
  let _143: Double = Double(10)
  let _145: Unit = Put _141[_142] = _143
  let _146: Int = Int(2)
  let _147: Array(Double) = Get b.82[_146]
  let _148: Int = Int(0)
  let _149: Double = Double(11)
  let _151: Unit = Put _147[_148] = _149
  let _152: Int = Int(2)
  let _153: Array(Double) = Get b.82[_152]
  let _154: Int = Int(1)
  let _155: Double = Double(12)
  let _157: Unit = Put _153[_154] = _155
  let _158: Int = Int(2)
  let _159: Int = Int(3)
  let _160: Int = Int(2)
  let _266: Int = Int(1)
  let _267: Int = Sub(_158, _266)
  let _162: Unit = Apply(loop114.235l2, [_267, _159, _160, a.79, b.82, c.85, ])
  let _163: Int = Int(0)
  let _164: Array(Double) = Get c.85[_163]
  let _165: Int = Int(0)
  let _166: Double = Get _164[_165]
  let _167: Int = ExtApply(minimbt_truncate, [_166, ])
  let _169: Unit = ExtApply(minimbt_print_int, [_167, ])
  let _171: Unit = ExtApply(minimbt_print_endline, [])
  let _172: Int = Int(0)
  let _173: Array(Double) = Get c.85[_172]
  let _174: Int = Int(1)
  let _175: Double = Get _173[_174]
  let _176: Int = ExtApply(minimbt_truncate, [_175, ])
  let _178: Unit = ExtApply(minimbt_print_int, [_176, ])
  let _180: Unit = ExtApply(minimbt_print_endline, [])
  let _181: Int = Int(1)
  let _182: Array(Double) = Get c.85[_181]
  let _183: Int = Int(0)
  let _184: Double = Get _182[_183]
  let _185: Int = ExtApply(minimbt_truncate, [_184, ])
  let _187: Unit = ExtApply(minimbt_print_int, [_185, ])
  let _189: Unit = ExtApply(minimbt_print_endline, [])
  let _190: Int = Int(1)
  let _191: Array(Double) = Get c.85[_190]
  let _192: Int = Int(1)
  let _193: Double = Get _191[_192]
  let _194: Int = ExtApply(minimbt_truncate, [_193, ])
  let _196: Unit = ExtApply(minimbt_print_int, [_194, ])
  Unit
}
Apply(main53l0, [])
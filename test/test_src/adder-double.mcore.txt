  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl main.15
  .type main.15, @function
# leaf false
main.15:
.main.15_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 4612001270401303839
  fmv.d.x fa0, a0
  call make_adder.12
  mv s10, a0
  ld a1, 0(a0)
  li a0, 1
  jalr a1
  fcvt.w.d a0, fa0, rtz
  call minimbt_print_int
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl adder.13
  .type adder.13, @function
# leaf true
adder.13:
.adder.13_0:
  fcvt.d.w fa1, a0
  fadd.d fa0, fa0, fa1
  ret

  .p2align 2
  .text
  .globl adder.14
  .type adder.14, @function
# leaf false
adder.14:
.adder.14_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a1, s10
  fld fa0, 8(a1)
  call adder.13
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start
  .type T$start, @function
# leaf false
T$start:
.T$start_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main.15
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl make_adder.12
  .type make_adder.12, @function
# leaf true
make_adder.12:
.make_adder.12_0:
  addi a0, s11, -16
  andi s11, a0, -8
  la a1, adder.14
  sd a1, 0(a0)
  fsd fa0, 8(a0)
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

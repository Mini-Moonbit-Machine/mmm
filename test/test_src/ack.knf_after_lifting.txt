let rec ack.21: Int = (x.3: Int, y.5: Int) {
  let _6: Int = Int(0)
  if (x.3 <= _6) then {
    let _7: Int = Int(1)
    Add(y.5, _7)
  } else {
    let _8: Int = Int(0)
    if (y.5 <= _8) then {
      let _9: Int = Int(1)
      let _10: Int = Sub(x.3, _9)
      let _11: Int = Int(1)
      Apply(ack.21, [_10, _11, ])
    } else {
      let _12: Int = Int(1)
      let _13: Int = Sub(x.3, _12)
      let _14: Int = Int(1)
      let _15: Int = Sub(y.5, _14)
      let _16: Int = Apply(ack.21, [x.3, _15, ])
      Apply(ack.21, [_13, _16, ])
    }
  }
}
let rec main.22: Unit = () {
  let _18: Int = Int(3)
  let _19: Int = Int(8)
  let _20: Int = Apply(ack.21, [_18, _19, ])
  ExtApply(minimbt_print_int, [_20, ])
}
Apply(main.22, [])

# name conventions used in the core ir:
# - functions: f<id>
# - blocks: b<id>
# - instructions: %<id>
# - memory: m<id>
# - free variables: ^<id>
# - function parameters: $f<pid>
# - block parameters: $b<bid>.<pid>
.core
.fn T$start #f2 : fn() -> unit
.freevars ()
.entry b0 {
  .bb #b0 () {
    let %0: unit = call f0()
    return %0
  }
}
.fn main.23 #f0 : fn() -> unit
.freevars ()
.entry b0 {
  .bb #b0 () {
    jump b1(21600, 337500)
  }
  .loop #b1 pre #Some(b0) header #b2 {
    .block #b3
    .block #b4
    .block #b5
    .block #b6
    .block #b7
    .block #b8
  }
  .bb #b2 (int32, int32) {
    let %0: bool = eq($b2.0, 0)
    br %0 b3() b4()
  }
  .bb #b3 () {
    let %1: unit = ext_call minimbt_print_int($b2.1)
    jump b8(%1)
  }
  .bb #b4 () {
    let %2: bool = le($b2.0, $b2.1)
    br %2 b5() b6()
  }
  .bb #b5 () {
    let %3: int32 = sub($b2.1, $b2.0)
    jump b2($b2.0, %3)
  }
  .bb #b6 () {
    let %4: int32 = sub($b2.0, $b2.1)
    jump b2($b2.1, %4)
  }
  .bb #b7 (any) {
    jump b8($b7.0)
  }
  .bb #b8 (unit) {
    return $b8.0
  }
}
.thunk ::0 start

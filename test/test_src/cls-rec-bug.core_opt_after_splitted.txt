# name conventions used in the core ir:
# - functions: f<id>
# - blocks: b<id>
# - instructions: %<id>
# - memory: m<id>
# - free variables: ^<id>
# - function parameters: $f<pid>
# - block parameters: $b<bid>.<pid>
.core
.fn f1.17 #f0 : fn(int32) -> int32
.freevars ()
.entry b0 {
  .bb #b0 () {
    let %0: bool = le(0, $f0)
    br %0 b1() b3(-1)
  }
  .bb #b1 () {
    let %1: int32 = call f0(-1)
    jump b3(1)
  }
  .bb #b3 (int32) {
    return $b3.0
  }
}
.fn T$start #f4 : fn() -> unit
.freevars ()
.entry b0 {
  .bb #b0 () {
    let %0: unit = call f1()
    return %0
  }
}
.fn main8.18 #f1 : fn() -> unit
.freevars ()
.entry b0 {
  .bb #b0 () {
    let %0: int32 = call f0(10)
    let %1: unit = ext_call minimbt_print_int(%0)
    let %2: int32 = call f0(-10)
    let %3: unit = ext_call minimbt_print_int(%2)
    return ()
  }
}
.thunk ::0 start


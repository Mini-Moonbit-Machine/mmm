let rec loop31: Unit = (i2.3: Int, j4.5: Int, k6.7: Int, a8.9: Array(Array(Double)), b10.11: Array(Array(Double)), c12.13: Array(Array(Double))) {
  let _14: Int = Int(0)
  if (_14 <= k6.7) then {
    let _15: Array(Double) = Get c12.13[i2.3]
    let _16: Array(Double) = Get c12.13[i2.3]
    let _17: Double = Get _16[j4.5]
    let _18: Array(Double) = Get a8.9[i2.3]
    let _19: Double = Get _18[k6.7]
    let _20: Array(Double) = Get b10.11[k6.7]
    let _21: Double = Get _20[j4.5]
    let _22: Double = FMul(_19, _21)
    let _23: Double = FAdd(_17, _22)
    let _25: Unit = Put _15[j4.5] = _23
    let _26: Int = Int(1)
    let _27: Int = Sub(k6.7, _26)
    let _235: Int = Int(0)
    if (_235 <= _27) then {
      let _236: Array(Double) = Get c12.13[i2.3]
      let _237: Array(Double) = Get c12.13[i2.3]
      let _238: Double = Get _237[j4.5]
      let _239: Array(Double) = Get a8.9[i2.3]
      let _240: Double = Get _239[_27]
      let _241: Array(Double) = Get b10.11[_27]
      let _242: Double = Get _241[j4.5]
      let _243: Double = FMul(_240, _242)
      let _244: Double = FAdd(_238, _243)
      let _245: Unit = Put _236[j4.5] = _244
      let _246: Int = Int(1)
      let _247: Int = Sub(_27, _246)
      Apply(loop31, [i2.3, j4.5, _247, a8.9, b10.11, c12.13, ])
    } else {
      Unit
    }
  } else {
    Unit
  }
}
let rec loop228: Unit = (i29.30: Int, m31.32: Int, j33.34: Int, a35.36: Array(Array(Double)), b37.38: Array(Array(Double)), c39.40: Array(Array(Double))) {
  let _41: Int = Int(0)
  if (_41 <= j33.34) then {
    let _42: Int = Int(1)
    let _43: Int = Sub(m31.32, _42)
    let _45: Unit = 
      let _248: Int = Int(0)
      if (_248 <= _43) then {
        let _249: Array(Double) = Get c39.40[i29.30]
        let _250: Array(Double) = Get c39.40[i29.30]
        let _251: Double = Get _250[j33.34]
        let _252: Array(Double) = Get a35.36[i29.30]
        let _253: Double = Get _252[_43]
        let _254: Array(Double) = Get b37.38[_43]
        let _255: Double = Get _254[j33.34]
        let _256: Double = FMul(_253, _255)
        let _257: Double = FAdd(_251, _256)
        let _258: Unit = Put _249[j33.34] = _257
        let _259: Int = Int(1)
        let _260: Int = Sub(_43, _259)
        Apply(loop31, [i29.30, j33.34, _260, a35.36, b37.38, c39.40, ])
      } else {
        Unit
      }
    let _46: Int = Int(1)
    let _47: Int = Sub(j33.34, _46)
    let _261: Int = Int(0)
    if (_261 <= _47) then {
      let _262: Int = Int(1)
      let _263: Int = Sub(m31.32, _262)
      let _264: Unit = Apply(loop31, [i29.30, _47, _263, a35.36, b37.38, c39.40, ])
      let _265: Int = Int(1)
      let _266: Int = Sub(_47, _265)
      Apply(loop228, [i29.30, m31.32, _266, a35.36, b37.38, c39.40, ])
    } else {
      Unit
    }
  } else {
    Unit
  }
}
let rec loop148: Unit = (i49.50: Int, m51.52: Int, n53.54: Int, a55.56: Array(Array(Double)), b57.58: Array(Array(Double)), c59.60: Array(Array(Double))) {
  let _61: Int = Int(0)
  if (_61 <= i49.50) then {
    let _62: Int = Int(1)
    let _63: Int = Sub(n53.54, _62)
    let _65: Unit = 
      let _267: Int = Int(0)
      if (_267 <= _63) then {
        let _268: Int = Int(1)
        let _269: Int = Sub(m51.52, _268)
        let _270: Unit = Apply(loop31, [i49.50, _63, _269, a55.56, b57.58, c59.60, ])
        let _271: Int = Int(1)
        let _272: Int = Sub(_63, _271)
        Apply(loop228, [i49.50, m51.52, _272, a55.56, b57.58, c59.60, ])
      } else {
        Unit
      }
    let _66: Int = Int(1)
    let _67: Int = Sub(i49.50, _66)
    let _273: Int = Int(0)
    if (_273 <= _67) then {
      let _274: Int = Int(1)
      let _275: Int = Sub(n53.54, _274)
      let _276: Unit = Apply(loop228, [_67, m51.52, _275, a55.56, b57.58, c59.60, ])
      let _277: Int = Int(1)
      let _278: Int = Sub(_67, _277)
      Apply(loop148, [_278, m51.52, n53.54, a55.56, b57.58, c59.60, ])
    } else {
      Unit
    }
  } else {
    Unit
  }
}
let rec main85: Var({val: Some(Unit)}) = () {
  let _86: Int = Int(0)
  let _87: Double = Double(0)
  let dummy.88: Array(Double) = ExtApply(minimbt_create_float_array, [_86, _87, ])
  let rec init_arr89: Unit = (i90.91: Int, n92.93: Int, mat94.95: Array(Array(Double))) {
    let _96: Int = Int(0)
    if (_96 <= i90.91) then {
      let _97: Double = Double(0)
      let _98: Array(Double) = ExtApply(minimbt_create_float_array, [n92.93, _97, ])
      let _100: Unit = Put mat94.95[i90.91] = _98
      let _101: Int = Int(1)
      let _102: Int = Sub(i90.91, _101)
      let _285: Int = Int(0)
      if (_285 <= _102) then {
        let _286: Double = Double(0)
        let _287: Array(Double) = ExtApply(minimbt_create_float_array, [n92.93, _286, ])
        let _288: Unit = Put mat94.95[_102] = _287
        let _289: Int = Int(1)
        let _290: Int = Sub(_102, _289)
        Apply(init_arr89, [_290, n92.93, mat94.95, ])
      } else {
        Unit
      }
    } else {
      Unit
    }
  }
  let _115: Int = Int(2)
  let _116: Int = Int(3)
  let a.117: Array(Array(Double)) = 
    let mat.297: Array(Array(Double)) = ExtApply(minimbt_create_ptr_array, [_115, dummy.88, ])
    let _298: Int = Int(1)
    let _299: Int = Sub(_115, _298)
    let _300: Unit = Apply(init_arr89, [_299, _116, mat.297, ])
    Var(mat.297)
  let _118: Int = Int(3)
  let _119: Int = Int(2)
  let b.120: Array(Array(Double)) = 
    let mat.301: Array(Array(Double)) = ExtApply(minimbt_create_ptr_array, [_118, dummy.88, ])
    let _302: Int = Int(1)
    let _303: Int = Sub(_118, _302)
    let _304: Unit = Apply(init_arr89, [_303, _119, mat.301, ])
    Var(mat.301)
  let _121: Int = Int(2)
  let _122: Int = Int(2)
  let c.123: Array(Array(Double)) = 
    let mat.305: Array(Array(Double)) = ExtApply(minimbt_create_ptr_array, [_121, dummy.88, ])
    let _306: Int = Int(1)
    let _307: Int = Sub(_121, _306)
    let _308: Unit = Apply(init_arr89, [_307, _122, mat.305, ])
    Var(mat.305)
  let _124: Int = Int(0)
  let _125: Array(Double) = Get a.117[_124]
  let _126: Int = Int(0)
  let _127: Double = Double(1)
  let _129: Unit = Put _125[_126] = _127
  let _130: Int = Int(0)
  let _131: Array(Double) = Get a.117[_130]
  let _132: Int = Int(1)
  let _133: Double = Double(2)
  let _135: Unit = Put _131[_132] = _133
  let _136: Int = Int(0)
  let _137: Array(Double) = Get a.117[_136]
  let _138: Int = Int(2)
  let _139: Double = Double(3)
  let _141: Unit = Put _137[_138] = _139
  let _142: Int = Int(1)
  let _143: Array(Double) = Get a.117[_142]
  let _144: Int = Int(0)
  let _145: Double = Double(4)
  let _147: Unit = Put _143[_144] = _145
  let _148: Int = Int(1)
  let _149: Array(Double) = Get a.117[_148]
  let _150: Int = Int(1)
  let _151: Double = Double(5)
  let _153: Unit = Put _149[_150] = _151
  let _154: Int = Int(1)
  let _155: Array(Double) = Get a.117[_154]
  let _156: Int = Int(2)
  let _157: Double = Double(6)
  let _159: Unit = Put _155[_156] = _157
  let _160: Int = Int(0)
  let _161: Array(Double) = Get b.120[_160]
  let _162: Int = Int(0)
  let _163: Double = Double(7)
  let _165: Unit = Put _161[_162] = _163
  let _166: Int = Int(0)
  let _167: Array(Double) = Get b.120[_166]
  let _168: Int = Int(1)
  let _169: Double = Double(8)
  let _171: Unit = Put _167[_168] = _169
  let _172: Int = Int(1)
  let _173: Array(Double) = Get b.120[_172]
  let _174: Int = Int(0)
  let _175: Double = Double(9)
  let _177: Unit = Put _173[_174] = _175
  let _178: Int = Int(1)
  let _179: Array(Double) = Get b.120[_178]
  let _180: Int = Int(1)
  let _181: Double = Double(10)
  let _183: Unit = Put _179[_180] = _181
  let _184: Int = Int(2)
  let _185: Array(Double) = Get b.120[_184]
  let _186: Int = Int(0)
  let _187: Double = Double(11)
  let _189: Unit = Put _185[_186] = _187
  let _190: Int = Int(2)
  let _191: Array(Double) = Get b.120[_190]
  let _192: Int = Int(1)
  let _193: Double = Double(12)
  let _195: Unit = Put _191[_192] = _193
  let _196: Int = Int(2)
  let _197: Int = Int(3)
  let _198: Int = Int(2)
  let _200: Unit = 
    let _309: Int = Int(1)
    let _310: Int = Sub(_196, _309)
    let _311: Unit = Apply(loop148, [_310, _197, _198, a.117, b.120, c.123, ])
    Unit
  let _201: Int = Int(0)
  let _202: Array(Double) = Get c.123[_201]
  let _203: Int = Int(0)
  let _204: Double = Get _202[_203]
  let _205: Int = ExtApply(minimbt_truncate, [_204, ])
  let _207: Unit = ExtApply(minimbt_print_int, [_205, ])
  let _209: Unit = ExtApply(minimbt_print_endline, [])
  let _210: Int = Int(0)
  let _211: Array(Double) = Get c.123[_210]
  let _212: Int = Int(1)
  let _213: Double = Get _211[_212]
  let _214: Int = ExtApply(minimbt_truncate, [_213, ])
  let _216: Unit = ExtApply(minimbt_print_int, [_214, ])
  let _218: Unit = ExtApply(minimbt_print_endline, [])
  let _219: Int = Int(1)
  let _220: Array(Double) = Get c.123[_219]
  let _221: Int = Int(0)
  let _222: Double = Get _220[_221]
  let _223: Int = ExtApply(minimbt_truncate, [_222, ])
  let _225: Unit = ExtApply(minimbt_print_int, [_223, ])
  let _227: Unit = ExtApply(minimbt_print_endline, [])
  let _228: Int = Int(1)
  let _229: Array(Double) = Get c.123[_228]
  let _230: Int = Int(1)
  let _231: Double = Get _229[_230]
  let _232: Int = ExtApply(minimbt_truncate, [_231, ])
  let _234: Unit = ExtApply(minimbt_print_int, [_232, ])
  Unit
}
Apply(main85, [])
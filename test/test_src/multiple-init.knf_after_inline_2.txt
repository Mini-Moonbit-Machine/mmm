let len.3: Array(Int) = 
  let _79: Int = Int(1)
  let _80: Int = Int(0)
  ExtApply(minimbt_create_array, [_79, _80, ])
let _45: Unit = 
  let _81: Int = Int(0)
  let _82: Int = Int(1)
  Put len.3[_81] = _82
let _10: Var({val: Some(Unit)}) = Unit
let len2.13: Array(Int) = 
  let _83: Int = Int(1)
  let _84: Int = Int(0)
  ExtApply(minimbt_create_array, [_83, _84, ])
let _48: Unit = 
  let _85: Int = Int(0)
  let _86: Int = Int(2)
  Put len2.13[_85] = _86
let _20: Var({val: Some(Unit)}) = Unit
let _51: Unit = 
  let _87: Int = Int(0)
  let _88: Int = Int(3)
  Put len.3[_87] = _88
let _54: Unit = 
  let _89: Int = Int(0)
  let _90: Int = Int(4)
  Put len2.13[_89] = _90
let _31: Var({val: Some(Unit)}) = Unit
let rec main.32: Var({val: Some(Unit)}) = () {
  let _33: Int = Int(0)
  let _34: Int = Get len.3[_33]
  let _36: Unit = ExtApply(minimbt_print_int, [_34, ])
  let _38: Unit = ExtApply(minimbt_print_endline, [])
  let _39: Int = Int(0)
  let _40: Int = Get len2.13[_39]
  let _42: Unit = ExtApply(minimbt_print_int, [_40, ])
  Unit
}
Apply(main.32, [])

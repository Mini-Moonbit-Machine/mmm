let rec main53: Var({val: Some(Unit)}) = () {
  let _54: Int = Int(0)
  let _55: Double = Double(0)
  let dummy.56: Array(Double) = ExtApply(minimbt_create_float_array, [_54, _55, ])
  let rec gen_arr57: Array(Array(Double)) = (m58.59: Int, n60.61: Int) {
    let mat.62: Array(Var({val: Some(Array(Double))})) = ExtApply(minimbt_create_ptr_array, [m58.59, dummy.56, ])
    let rec init_arr63: Unit = (i64.65: Int) {
      let _66: Int = Int(0)
      if (_66 <= i64.65) then {
        let _67: Double = Double(0)
        let _68: Array(Double) = ExtApply(minimbt_create_float_array, [n60.61, _67, ])
        let _70: Unit = Put mat.62[i64.65] = _68
        let _71: Int = Int(1)
        let _72: Int = Sub(i64.65, _71)
        Apply(init_arr63, [_72, ])
      } else {
        Unit
      }
    }
    let _73: Int = Int(1)
    let _74: Int = Sub(m58.59, _73)
    let _76: Unit = Apply(init_arr63, [_74, ])
    Var(mat.62)
  }
  let _77: Int = Int(2)
  let _78: Int = Int(3)
  let a.79: Array(Array(Double)) = Apply(gen_arr57, [_77, _78, ])
  let _80: Int = Int(3)
  let _81: Int = Int(2)
  let b.82: Array(Array(Double)) = Apply(gen_arr57, [_80, _81, ])
  let _83: Int = Int(2)
  let _84: Int = Int(2)
  let c.85: Array(Array(Double)) = Apply(gen_arr57, [_83, _84, ])
  let _86: Int = Int(0)
  let _87: Array(Double) = Get a.79[_86]
  let _88: Int = Int(0)
  let _89: Double = Double(1)
  let _91: Unit = Put _87[_88] = _89
  let _92: Int = Int(0)
  let _93: Array(Double) = Get a.79[_92]
  let _94: Int = Int(1)
  let _95: Double = Double(2)
  let _97: Unit = Put _93[_94] = _95
  let _98: Int = Int(0)
  let _99: Array(Double) = Get a.79[_98]
  let _100: Int = Int(2)
  let _101: Double = Double(3)
  let _103: Unit = Put _99[_100] = _101
  let _104: Int = Int(1)
  let _105: Array(Double) = Get a.79[_104]
  let _106: Int = Int(0)
  let _107: Double = Double(4)
  let _109: Unit = Put _105[_106] = _107
  let _110: Int = Int(1)
  let _111: Array(Double) = Get a.79[_110]
  let _112: Int = Int(1)
  let _113: Double = Double(5)
  let _115: Unit = Put _111[_112] = _113
  let _116: Int = Int(1)
  let _117: Array(Double) = Get a.79[_116]
  let _118: Int = Int(2)
  let _119: Double = Double(6)
  let _121: Unit = Put _117[_118] = _119
  let _122: Int = Int(0)
  let _123: Array(Double) = Get b.82[_122]
  let _124: Int = Int(0)
  let _125: Double = Double(7)
  let _127: Unit = Put _123[_124] = _125
  let _128: Int = Int(0)
  let _129: Array(Double) = Get b.82[_128]
  let _130: Int = Int(1)
  let _131: Double = Double(8)
  let _133: Unit = Put _129[_130] = _131
  let _134: Int = Int(1)
  let _135: Array(Double) = Get b.82[_134]
  let _136: Int = Int(0)
  let _137: Double = Double(9)
  let _139: Unit = Put _135[_136] = _137
  let _140: Int = Int(1)
  let _141: Array(Double) = Get b.82[_140]
  let _142: Int = Int(1)
  let _143: Double = Double(10)
  let _145: Unit = Put _141[_142] = _143
  let _146: Int = Int(2)
  let _147: Array(Double) = Get b.82[_146]
  let _148: Int = Int(0)
  let _149: Double = Double(11)
  let _151: Unit = Put _147[_148] = _149
  let _152: Int = Int(2)
  let _153: Array(Double) = Get b.82[_152]
  let _154: Int = Int(1)
  let _155: Double = Double(12)
  let _157: Unit = Put _153[_154] = _155
  let _158: Int = Int(2)
  let _159: Int = Int(3)
  let _160: Int = Int(2)
  let _162: Unit = 
    let rec loop114.197: Unit = (i15.198: Int) {
      let _199: Int = Int(0)
      if (_199 <= i15.198) then {
        let rec loop218.200: Unit = (j19.201: Int) {
          let _202: Int = Int(0)
          if (_202 <= j19.201) then {
            let rec loop322.203: Unit = (k23.204: Int) {
              let _205: Int = Int(0)
              if (_205 <= k23.204) then {
                let _206: Array(Double) = Get c.85[i15.198]
                let _207: Array(Double) = Get c.85[i15.198]
                let _208: Double = Get _207[j19.201]
                let _209: Array(Double) = Get a.79[i15.198]
                let _210: Double = Get _209[k23.204]
                let _211: Array(Double) = Get b.82[k23.204]
                let _212: Double = Get _211[j19.201]
                let _213: Double = FMul(_210, _212)
                let _214: Double = FAdd(_208, _213)
                let _215: Unit = Put _206[j19.201] = _214
                let _216: Int = Int(1)
                let _217: Int = Sub(k23.204, _216)
                Apply(loop322.203, [_217, ])
              } else {
                Unit
              }
            }
            let _218: Int = Int(1)
            let _219: Int = Sub(_159, _218)
            let _220: Unit = Apply(loop322.203, [_219, ])
            let _221: Int = Int(1)
            let _222: Int = Sub(j19.201, _221)
            Apply(loop218.200, [_222, ])
          } else {
            Unit
          }
        }
        let _223: Int = Int(1)
        let _224: Int = Sub(_160, _223)
        let _225: Unit = Apply(loop218.200, [_224, ])
        let _226: Int = Int(1)
        let _227: Int = Sub(i15.198, _226)
        Apply(loop114.197, [_227, ])
      } else {
        Unit
      }
    }
    let _228: Int = Int(1)
    let _229: Int = Sub(_158, _228)
    Apply(loop114.197, [_229, ])
  let _163: Int = Int(0)
  let _164: Array(Double) = Get c.85[_163]
  let _165: Int = Int(0)
  let _166: Double = Get _164[_165]
  let _167: Int = ExtApply(minimbt_truncate, [_166, ])
  let _169: Unit = ExtApply(minimbt_print_int, [_167, ])
  let _171: Unit = ExtApply(minimbt_print_endline, [])
  let _172: Int = Int(0)
  let _173: Array(Double) = Get c.85[_172]
  let _174: Int = Int(1)
  let _175: Double = Get _173[_174]
  let _176: Int = ExtApply(minimbt_truncate, [_175, ])
  let _178: Unit = ExtApply(minimbt_print_int, [_176, ])
  let _180: Unit = ExtApply(minimbt_print_endline, [])
  let _181: Int = Int(1)
  let _182: Array(Double) = Get c.85[_181]
  let _183: Int = Int(0)
  let _184: Double = Get _182[_183]
  let _185: Int = ExtApply(minimbt_truncate, [_184, ])
  let _187: Unit = ExtApply(minimbt_print_int, [_185, ])
  let _189: Unit = ExtApply(minimbt_print_endline, [])
  let _190: Int = Int(1)
  let _191: Array(Double) = Get c.85[_190]
  let _192: Int = Int(1)
  let _193: Double = Get _191[_192]
  let _194: Int = ExtApply(minimbt_truncate, [_193, ])
  let _196: Unit = ExtApply(minimbt_print_int, [_194, ])
  Unit
}
Apply(main53, [])
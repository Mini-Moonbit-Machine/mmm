let rec f.9: Int = (x.11: Int) {
  let _15: Bool = Bool(true)
  let _18: Bool = Bool(true)
  if (_15 == _18) then {
    let _16: Int = Int(1)
    let _22: Bool = Bool(true)
    let _23: Bool = Bool(true)
    if (_22 == _23) then {
      let _24: Int = Int(1)
      let _26: Bool = Bool(true)
      let _27: Bool = Bool(true)
      if (_26 == _27) then {
        let _28: Int = Int(1)
        let _31: Bool = Bool(true)
        let _32: Bool = Bool(true)
        if (_31 == _32) then {
          let _33: Int = Int(1)
          let _36: Bool = Bool(true)
          let _37: Bool = Bool(true)
          if (_36 == _37) then {
            let _38: Int = Int(1)
            let _39: Bool = Bool(true)
            let _40: Bool = Bool(true)
            if (_39 == _40) then {
              let _41: Int = Int(1)
              let _42: Bool = Bool(true)
              let _43: Bool = Bool(true)
              if (_42 == _43) then {
                let _44: Int = Int(1)
                let rec g.45: Int = (y.46: Int) {
                  Int(1)
                }
                let _47: Bool = Bool(true)
                let _48: Bool = Bool(true)
                if (_47 == _48) then {
                  let _49: Int = Int(1)
                  Apply(f.9, [_49, ])
                } else {
                  let _50: Int = Int(2)
                  Apply(g.45, [_50, ])
                }
              } else {
                let _51: Int = Int(2)
                Int(1)
              }
            } else {
              let _52: Int = Int(2)
              Int(1)
            }
          } else {
            let _53: Int = Int(2)
            Int(1)
          }
        } else {
          let _34: Int = Int(2)
          Int(1)
        }
      } else {
        let _35: Int = Int(2)
        Int(1)
      }
    } else {
      let _25: Int = Int(2)
      Int(1)
    }
  } else {
    let _17: Int = Int(2)
    Var(x.11)
  }
}
let rec main.19: Unit = () {
  Unit
}
Apply(main.19, [])

# name conventions used in the core ir:
# - functions: f<id>
# - blocks: b<id>
# - instructions: %<id>
# - memory: m<id>
# - free variables: ^<id>
# - function parameters: $f<pid>
# - block parameters: $b<bid>.<pid>
.core
.fn T$start #f2 : fn() -> unit
.freevars ()
.entry b0 {
  .bb #b0 () {
    let %0: unit = call f0()
    return %0
  }
}
.fn main.17 #f0 : fn() -> unit
.freevars ()
.entry b0 {
  .bb #b0 () {
    let %0: int32 = conv.d2i.rtz(1.23)
    let %1: int32 = conv.d2i.rtz(4.56)
    let %2: int32 = conv.d2i.rtz(-7.89)
    let %3: bool = le(0, %2)
    br %3 b1() b2()
  }
  .bb #b1 () {
    jump b3(%0)
  }
  .bb #b2 () {
    jump b3(%1)
  }
  .bb #b3 (int32) {
    let %4: bool = le(%0, 0)
    br %4 b4() b5()
  }
  .bb #b4 () {
    jump b6(%1)
  }
  .bb #b5 () {
    jump b6(%2)
  }
  .bb #b6 (int32) {
    let %5: int32 = add($b3.0, $b6.0)
    let %6: bool = le(0, %1)
    br %6 b7() b8()
  }
  .bb #b7 () {
    jump b9(%2)
  }
  .bb #b8 () {
    jump b9(%0)
  }
  .bb #b9 (int32) {
    let %7: int32 = add(%5, $b9.0)
    let %8: unit = ext_call minimbt_print_int(%7)
    return %8
  }
}
.thunk ::0 start


let rec make_adder.1: Fun([Int], Int) = (x.2: Int) {
  let rec adder.3: Int = (y.4: Int) {
    Add(x.2, y.4)
  }
  Var(adder.3)
}
let rec main.5: Var({val: Some(Unit)}) = () {
  let _6: Int = Int(2)
  let add2.7: Fun([Int], Int) = Apply(make_adder.1, [_6, ])
  let _8: Int = Int(3)
  let add3.9: Fun([Int], Int) = Apply(make_adder.1, [_8, ])
  let _10: Int = Int(10)
  let _11: Int = Apply(add2.7, [_10, ])
  let _12: Int = Int(20)
  let _13: Int = Apply(add3.9, [_12, ])
  let _14: Int = Add(_11, _13)
  ExtApply(minimbt_print_int, [_14, ])
}
Apply(main.5, [])
let rec g12.54: Int = (y13.45: Int, _43: Int) {
  Var(_43)
}
let rec f9.53: Int = (x10.11: Int) {
  let _15: Bool = Bool(true)
  let _18: Bool = Bool(true)
  if (_15 == _18) then {
    let _16: Int = Int(1)
    let _21: Bool = Bool(true)
    let _22: Bool = Bool(true)
    if (_21 == _22) then {
      let _23: Int = Int(1)
      let _25: Bool = Bool(true)
      let _26: Bool = Bool(true)
      if (_25 == _26) then {
        let _27: Int = Int(1)
        let _30: Bool = Bool(true)
        let _31: Bool = Bool(true)
        if (_30 == _31) then {
          let _32: Int = Int(1)
          let _35: Bool = Bool(true)
          let _36: Bool = Bool(true)
          if (_35 == _36) then {
            let _37: Int = Int(1)
            let _38: Bool = Bool(true)
            let _39: Bool = Bool(true)
            if (_38 == _39) then {
              let _40: Int = Int(1)
              let _41: Bool = Bool(true)
              let _42: Bool = Bool(true)
              if (_41 == _42) then {
                let _43: Int = Int(1)
                let _46: Bool = Bool(true)
                let _47: Bool = Bool(true)
                if (_46 == _47) then {
                  let _48: Int = Int(1)
                  Apply(f9.53, [_48, ])
                } else {
                  let _49: Int = Int(2)
                  Apply(g12.54, [_49, _43, ])
                }
              } else {
                let _50: Int = Int(2)
                Var(_40)
              }
            } else {
              let _51: Int = Int(2)
              Var(_37)
            }
          } else {
            let _52: Int = Int(2)
            Var(_32)
          }
        } else {
          let _33: Int = Int(2)
          Var(_27)
        }
      } else {
        let _34: Int = Int(2)
        Var(_23)
      }
    } else {
      let _24: Int = Int(2)
      Var(_16)
    }
  } else {
    let _17: Int = Int(2)
    Var(x10.11)
  }
}
let rec main19.55: Var({val: Some(Unit)}) = () {
  Unit
}
Apply(main19.55, [])

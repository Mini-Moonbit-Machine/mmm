let len.3: Array(Int) = 
  let _67: Int = Int(1)
  let _68: Int = Int(0)
  ExtApply(minimbt_create_array, [_67, _68, ])
let _45: Unit = 
  let _69: Int = Int(0)
  let _70: Int = Int(1)
  Put len.3[_69] = _70
let _10: Var({val: Some(Unit)}) = Unit
let len2.13: Array(Int) = 
  let _71: Int = Int(1)
  let _72: Int = Int(0)
  ExtApply(minimbt_create_array, [_71, _72, ])
let _48: Unit = 
  let _73: Int = Int(0)
  let _74: Int = Int(2)
  Put len2.13[_73] = _74
let _20: Var({val: Some(Unit)}) = Unit
let _51: Unit = 
  let _75: Int = Int(0)
  let _76: Int = Int(3)
  Put len.3[_75] = _76
let _54: Unit = 
  let _77: Int = Int(0)
  let _78: Int = Int(4)
  Put len2.13[_77] = _78
let _31: Var({val: Some(Unit)}) = Unit
let rec main32: Var({val: Some(Unit)}) = () {
  let _33: Int = Int(0)
  let _34: Int = Get len.3[_33]
  let _36: Unit = ExtApply(minimbt_print_int, [_34, ])
  let _38: Unit = ExtApply(minimbt_print_endline, [])
  let _39: Int = Int(0)
  let _40: Int = Get len2.13[_39]
  let _42: Unit = ExtApply(minimbt_print_int, [_40, ])
  Unit
}
Apply(main32, [])

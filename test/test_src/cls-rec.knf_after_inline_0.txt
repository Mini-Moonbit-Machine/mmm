let x.1: Int = Int(10)
let rec f2: Int = (y3.4: Int) {
  let _5: Int = Int(0)
  if (y3.4 == _5) then {
    Int(0)
  } else {
    let _6: Int = Int(1)
    let _7: Int = Sub(y3.4, _6)
    let _8: Int = 
      let _12: Int = Int(0)
      if (_7 == _12) then {
        Int(0)
      } else {
        let _13: Int = Int(1)
        let _14: Int = Sub(_7, _13)
        let _15: Int = Apply(f2, [_14, ])
        Add(x.1, _15)
      }
    Add(x.1, _8)
  }
}
let rec main9: Var({val: Some(Unit)}) = () {
  let _10: Int = Int(12)
  let _11: Int = 
    let _16: Int = Int(0)
    if (_10 == _16) then {
      Int(0)
    } else {
      let _17: Int = Int(1)
      let _18: Int = Sub(_10, _17)
      let _19: Int = Apply(f2, [_18, ])
      Add(x.1, _19)
    }
  ExtApply(minimbt_print_int, [_11, ])
}
Apply(main9, [])
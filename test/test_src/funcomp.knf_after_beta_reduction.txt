let rec dbl.7: Int = (x.8: Int) {
  Add(x.8, x.8)
}
let rec inc.9: Int = (x.10: Int) {
  let _11: Int = Int(1)
  Add(x.10, _11)
}
let rec dec.12: Int = (x.13: Int) {
  let _14: Int = Int(1)
  Sub(x.13, _14)
}
let rec main.15: Var({val: Some(Unit)}) = () {
  let rec composed.20: Int = (x.21: Int) {
    let _22: Int = Apply(dbl.7, [x.21, ])
    Apply(dec.12, [_22, ])
  }
  let rec composed.23: Int = (x.24: Int) {
    let _25: Int = Apply(inc.9, [x.24, ])
    Apply(composed.20, [_25, ])
  }
  let _18: Int = Int(123)
  let _19: Int = Apply(composed.23, [_18, ])
  ExtApply(minimbt_print_int, [_19, ])
}
Apply(main.15, [])
// [Asm] pre_assigned_registers: Self(fref=f12) -> v0, Insn(iref=%0) -> v2
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v2]
// [Asm] live_set: [v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v2 is X
// [Asm] defs: []
// [Asm] live_set: [v2]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [v2]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of T$start_12"];
// [Asm]   r0 [label="t0", color=blue];
// [Asm]   r5 [label="t4", color=blue];
// [Asm]   r3 [label="t2", color=blue];
// [Asm]   r2 [label="t1", color=blue];
// [Asm]   r9 [label="a4", color=blue];
// [Asm]   r6 [label="a1", color=blue];
// [Asm]   r13 [label="v2 ← a0", color=green];
// [Asm]   r4 [label="t3", color=blue];
// [Asm]   r1 [label="a0", color=blue];
// [Asm]   r11 [label="a6", color=blue];
// [Asm]   r7 [label="a2", color=blue];
// [Asm]   r10 [label="a5", color=blue];
// [Asm]   r12 [label="a7", color=blue];
// [Asm]   r8 [label="a3", color=blue];
// [Asm]   r1 -- r2;
// [Asm]   r1 -- r8;
// [Asm]   r1 -- r5;
// [Asm]   r1 -- r9;
// [Asm]   r0 -- r1;
// [Asm]   r1 -- r3;
// [Asm]   r1 -- r4;
// [Asm]   r1 -- r11;
// [Asm]   r1 -- r7;
// [Asm]   r1 -- r12;
// [Asm]   r1 -- r6;
// [Asm]   r1 -- r10;
// [Asm]   comment = "0:t0-> 1:a0-> 2:t1-> 3:t2-> 4:t3-> 5:t4-> 6:a1-> 7:a2-> 8:a3-> 9:a4-> 10:a5-> 11:a6-> 12:a7-> 13:v2"
// [Asm]   comment = "v2<-a0;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of T$start_12"];
// [Asm]   r0 [label="ft0", color=blue];
// [Asm]   r3 [label="ft3", color=blue];
// [Asm]   r9 [label="ft9", color=blue];
// [Asm]   r6 [label="ft6", color=blue];
// [Asm]   r13 [label="fa2", color=blue];
// [Asm]   r4 [label="ft4", color=blue];
// [Asm]   r1 [label="ft1", color=blue];
// [Asm]   r11 [label="fa0", color=blue];
// [Asm]   r7 [label="ft7", color=blue];
// [Asm]   r10 [label="ft10", color=blue];
// [Asm]   r14 [label="fa3", color=blue];
// [Asm]   r8 [label="ft8", color=blue];
// [Asm]   r5 [label="ft5", color=blue];
// [Asm]   r15 [label="fa4", color=blue];
// [Asm]   r2 [label="ft2", color=blue];
// [Asm]   r16 [label="fa5", color=blue];
// [Asm]   r18 [label="fa7", color=blue];
// [Asm]   r17 [label="fa6", color=blue];
// [Asm]   r12 [label="fa1", color=blue];
// [Asm]   comment = "0:ft0-> 1:ft1-> 2:ft2-> 3:ft3-> 4:ft4-> 5:ft5-> 6:ft6-> 7:ft7-> 8:ft8-> 9:ft9-> 10:ft10-> 11:fa0-> 12:fa1-> 13:fa2-> 14:fa3-> 15:fa4-> 16:fa5-> 17:fa6-> 18:fa7"
// [Asm]   comment = ""
// [Asm] }
// [Asm] 
// [Asm] subst   call main75_1 ->   call main75_1
// [Asm] subst   ret ->   ret
// [Asm] pre_assigned_registers: Insn(iref=%0) -> v2, Self(fref=f1) -> v0
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] defs: [v3]
// [Asm] live_set: [v3]
// [Asm] move_origin: []
// [Asm] defined: v3 is X
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [v3]
// [Asm] defined: a0 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v2]
// [Asm] live_set: [v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v2 is X
// [Asm] defs: []
// [Asm] live_set: [v2]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [v2]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of main75_1"];
// [Asm]   r8 [label="a2", color=blue];
// [Asm]   r0 [label="v3 ← a0", color=green];
// [Asm]   r5 [label="t3", color=blue];
// [Asm]   r3 [label="t1", color=blue];
// [Asm]   r2 [label="t0", color=blue];
// [Asm]   r9 [label="a3", color=blue];
// [Asm]   r6 [label="t4", color=blue];
// [Asm]   r13 [label="a7", color=blue];
// [Asm]   r4 [label="t2", color=blue];
// [Asm]   r1 [label="a0", color=blue];
// [Asm]   r11 [label="a5", color=blue];
// [Asm]   r7 [label="a1", color=blue];
// [Asm]   r10 [label="a4", color=blue];
// [Asm]   r14 [label="v2 ← a0", color=green];
// [Asm]   r12 [label="a6", color=blue];
// [Asm]   r1 -- r2;
// [Asm]   r1 -- r8;
// [Asm]   r1 -- r5;
// [Asm]   r1 -- r9;
// [Asm]   r1 -- r3;
// [Asm]   r1 -- r4;
// [Asm]   r1 -- r13;
// [Asm]   r1 -- r11;
// [Asm]   r1 -- r7;
// [Asm]   r1 -- r12;
// [Asm]   r1 -- r6;
// [Asm]   r1 -- r10;
// [Asm]   comment = "0:v3-> 1:a0-> 2:t0-> 3:t1-> 4:t2-> 5:t3-> 6:t4-> 7:a1-> 8:a2-> 9:a3-> 10:a4-> 11:a5-> 12:a6-> 13:a7-> 14:v2"
// [Asm]   comment = "v3<-a0;v2<-a0;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of main75_1"];
// [Asm]   r0 [label="ft0", color=blue];
// [Asm]   r3 [label="ft3", color=blue];
// [Asm]   r9 [label="ft9", color=blue];
// [Asm]   r6 [label="ft6", color=blue];
// [Asm]   r13 [label="fa2", color=blue];
// [Asm]   r4 [label="ft4", color=blue];
// [Asm]   r1 [label="ft1", color=blue];
// [Asm]   r11 [label="fa0", color=blue];
// [Asm]   r7 [label="ft7", color=blue];
// [Asm]   r10 [label="ft10", color=blue];
// [Asm]   r14 [label="fa3", color=blue];
// [Asm]   r8 [label="ft8", color=blue];
// [Asm]   r5 [label="ft5", color=blue];
// [Asm]   r15 [label="fa4", color=blue];
// [Asm]   r2 [label="ft2", color=blue];
// [Asm]   r16 [label="fa5", color=blue];
// [Asm]   r18 [label="fa7", color=blue];
// [Asm]   r17 [label="fa6", color=blue];
// [Asm]   r12 [label="fa1", color=blue];
// [Asm]   comment = "0:ft0-> 1:ft1-> 2:ft2-> 3:ft3-> 4:ft4-> 5:ft5-> 6:ft6-> 7:ft7-> 8:ft8-> 9:ft9-> 10:ft10-> 11:fa0-> 12:fa1-> 13:fa2-> 14:fa3-> 15:fa4-> 16:fa5-> 17:fa6-> 18:fa7"
// [Asm]   comment = ""
// [Asm] }
// [Asm] 
// [Asm] subst   li v3, 40 ->   li a0, 40
// [Asm] subst   call mandelbrot1_0 ->   call mandelbrot1_0
// [Asm] subst   ret ->   ret
// [Asm] pre_assigned_registers: Insn(iref=%3) -> v9, FnParam(fref=f5, fpref=$f.0) -> v2, Mem(fref=f5, mref=m0) -> v5, Self(fref=f5) -> v0, BlockParam(bref=b3, bpref=$b.0) -> v11, Insn(iref=%2) -> v8, FreeVar(fvref=^1) -> v3, FreeVar(fvref=^2) -> v4, Insn(iref=%1) -> v7, Insn(iref=%0) -> v6, Insn(iref=%4) -> v10
// [Asm] skipping Op(ty=Bool, op=Le, args=[FreeVar(fvref=^1), FnParam(fref=f5, fpref=$f.0)])
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [v11]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] defs: [v11]
// [Asm] live_set: [v11]
// [Asm] move_origin: [zero]
// [Asm] defined: v11 is X
// [Asm] defs: []
// [Asm] live_set: [v11]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [zero, a0, s11, s10]
// [Asm] move_origin: []
// [Asm] defs: [v0]
// [Asm] live_set: [zero, a0, v0, s11]
// [Asm] move_origin: [s10]
// [Asm] defined: v0 is X
// [Asm] defs: [v2]
// [Asm] live_set: [zero, v0, s11, v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v2 is X
// [Asm] defs: [v3]
// [Asm] live_set: [v2, zero, v0, s11, v3]
// [Asm] move_origin: []
// [Asm] defined: v3 is X
// [Asm] defs: [v4]
// [Asm] live_set: [v2, zero, v0, v4, s11, v3]
// [Asm] move_origin: []
// [Asm] defined: v4 is X
// [Asm] defs: []
// [Asm] live_set: [v3, v0, v4, s11, zero, v2]
// [Asm] move_origin: []
// [Asm] defs: [v17]
// [Asm] live_set: [v2, zero, v0, v4, v17, v3]
// [Asm] move_origin: []
// [Asm] defined: v17 is X
// [Asm] defs: [v5]
// [Asm] live_set: [v2, v5, zero, v0, v4, v3]
// [Asm] move_origin: []
// [Asm] defined: v5 is X
// [Asm] defs: [s11]
// [Asm] live_set: [v2, v5, zero, v0, v4, v3]
// [Asm] move_origin: [v5]
// [Asm] defined: s11 is X
// [Asm] defs: [v19]
// [Asm] live_set: [v2, v5, zero, v0, v19, v4, v3]
// [Asm] move_origin: []
// [Asm] defined: v19 is X
// [Asm] defs: []
// [Asm] live_set: [v2, v5, zero, v0, v4, v3]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v0, v4, v5, zero, v2]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v0, v5, zero, v2]
// [Asm] move_origin: []
// [Asm] defs: [s10]
// [Asm] live_set: [v0, v5, zero, v2]
// [Asm] move_origin: [v5]
// [Asm] defined: s10 is X
// [Asm] defs: [v15]
// [Asm] live_set: [v0, v15, zero, v2]
// [Asm] move_origin: []
// [Asm] defined: v15 is X
// [Asm] defs: []
// [Asm] live_set: [v0, v15, zero, v2]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [v0, v15, a0, v2]
// [Asm] move_origin: [zero]
// [Asm] defined: a0 is X
// [Asm] defs: [a1]
// [Asm] live_set: [v0, a1, v15, a0, v2]
// [Asm] move_origin: [v2]
// [Asm] defined: a1 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [v0, a0, v2]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v8]
// [Asm] live_set: [v0, v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v8 is X
// [Asm] defs: []
// [Asm] live_set: [v0, v2]
// [Asm] move_origin: []
// [Asm] defs: [v9]
// [Asm] live_set: [v0, v9]
// [Asm] move_origin: []
// [Asm] defined: v9 is X
// [Asm] defs: [s10]
// [Asm] live_set: [v0, v9]
// [Asm] move_origin: [v0]
// [Asm] defined: s10 is X
// [Asm] defs: [v12]
// [Asm] live_set: [v12, v9]
// [Asm] move_origin: []
// [Asm] defined: v12 is X
// [Asm] defs: []
// [Asm] live_set: [v12, v9]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [v12, a0]
// [Asm] move_origin: [v9]
// [Asm] defined: a0 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v10]
// [Asm] live_set: [v10]
// [Asm] move_origin: [a0]
// [Asm] defined: v10 is X
// [Asm] defs: []
// [Asm] live_set: [v10]
// [Asm] move_origin: []
// [Asm] defs: [v11]
// [Asm] live_set: [v11]
// [Asm] move_origin: [v10]
// [Asm] defined: v11 is X
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of yloop7_5"];
// [Asm]   r0 [label="a0", color=blue];
// [Asm]   r20 [label="a3", color=blue];
// [Asm]   r23 [label="a6", color=blue];
// [Asm]   r3 [label="zero", color=blue];
// [Asm]   r9 [label="v5 ← a2", color=green];
// [Asm]   r26 [label="v9 ← a0", color=green];
// [Asm]   r27 [label="v12 ← a1", color=green];
// [Asm]   r6 [label="v3 ← a0", color=green];
// [Asm]   r13 [label="a1", color=blue];
// [Asm]   r4 [label="s11", color=blue];
// [Asm]   r1 [label="v11 ← a0", color=green];
// [Asm]   r28 [label="v10 ← a0", color=green];
// [Asm]   r11 [label="s10", color=blue];
// [Asm]   r7 [label="v4 ← a1", color=green];
// [Asm]   r10 [label="v19 ← a3", color=green];
// [Asm]   r22 [label="a5", color=blue];
// [Asm]   r14 [label="t0", color=blue];
// [Asm]   r8 [label="v17 ← a2", color=green];
// [Asm]   r5 [label="v2 ← s1", color=green];
// [Asm]   r15 [label="t1", color=blue];
// [Asm]   r24 [label="a7", color=blue];
// [Asm]   r25 [label="v8 ← a0", color=green];
// [Asm]   r2 [label="v0 ← s0", color=green];
// [Asm]   r16 [label="t2", color=blue];
// [Asm]   r18 [label="t4", color=blue];
// [Asm]   r19 [label="a2", color=blue];
// [Asm]   r17 [label="t3", color=blue];
// [Asm]   r21 [label="a4", color=blue];
// [Asm]   r12 [label="v15 ← a2", color=green];
// [Asm]   r6 -- r7;
// [Asm]   r6 -- r9;
// [Asm]   r0 -- r15;
// [Asm]   r0 -- r13;
// [Asm]   r5 -- r21;
// [Asm]   r4 -- r5;
// [Asm]   r2 -- r26;
// [Asm]   r2 -- r15;
// [Asm]   r2 -- r4;
// [Asm]   r5 -- r8;
// [Asm]   r5 -- r20;
// [Asm]   r2 -- r18;
// [Asm]   r5 -- r10;
// [Asm]   r0 -- r24;
// [Asm]   r3 -- r6;
// [Asm]   r5 -- r23;
// [Asm]   r5 -- r17;
// [Asm]   r5 -- r22;
// [Asm]   r0 -- r17;
// [Asm]   r3 -- r12;
// [Asm]   r5 -- r13;
// [Asm]   r5 -- r18;
// [Asm]   r0 -- r14;
// [Asm]   r2 -- r10;
// [Asm]   r3 -- r9;
// [Asm]   r5 -- r19;
// [Asm]   r0 -- r21;
// [Asm]   r3 -- r11;
// [Asm]   r0 -- r23;
// [Asm]   r2 -- r16;
// [Asm]   r0 -- r22;
// [Asm]   r2 -- r7;
// [Asm]   r2 -- r11;
// [Asm]   r7 -- r9;
// [Asm]   r5 -- r11;
// [Asm]   r5 -- r16;
// [Asm]   r0 -- r16;
// [Asm]   r0 -- r19;
// [Asm]   r3 -- r5;
// [Asm]   r6 -- r8;
// [Asm]   r3 -- r8;
// [Asm]   r2 -- r25;
// [Asm]   r26 -- r27;
// [Asm]   r2 -- r6;
// [Asm]   r5 -- r6;
// [Asm]   r3 -- r4;
// [Asm]   r12 -- r13;
// [Asm]   r2 -- r14;
// [Asm]   r5 -- r9;
// [Asm]   r0 -- r2;
// [Asm]   r5 -- r24;
// [Asm]   r6 -- r10;
// [Asm]   r7 -- r10;
// [Asm]   r2 -- r12;
// [Asm]   r2 -- r8;
// [Asm]   r3 -- r10;
// [Asm]   r0 -- r5;
// [Asm]   r2 -- r21;
// [Asm]   r2 -- r5;
// [Asm]   r2 -- r13;
// [Asm]   r2 -- r17;
// [Asm]   r4 -- r7;
// [Asm]   r11 -- r26;
// [Asm]   r5 -- r7;
// [Asm]   r9 -- r10;
// [Asm]   r5 -- r14;
// [Asm]   r0 -- r12;
// [Asm]   r5 -- r25;
// [Asm]   r3 -- r7;
// [Asm]   r2 -- r22;
// [Asm]   r2 -- r9;
// [Asm]   r2 -- r24;
// [Asm]   r4 -- r6;
// [Asm]   r2 -- r19;
// [Asm]   r7 -- r8;
// [Asm]   r0 -- r27;
// [Asm]   r0 -- r20;
// [Asm]   r2 -- r3;
// [Asm]   r2 -- r23;
// [Asm]   r5 -- r15;
// [Asm]   r0 -- r18;
// [Asm]   r5 -- r12;
// [Asm]   r2 -- r20;
// [Asm]   comment = "0:a0-> 2:v0-> 5:v2-> 12:v15-> 13:a1-> 3:zero-> 4:s11-> 6:v3-> 7:v4-> 8:v17-> 9:v5-> 10:v19-> 11:s10-> 14:t0-> 15:t1-> 16:t2-> 17:t3-> 18:t4-> 19:a2-> 20:a3-> 21:a4-> 22:a5-> 23:a6-> 24:a7-> 25:v8-> 26:v9-> 27:v12-> 1:v11-> 28:v10"
// [Asm]   comment = "v5<-a2;v9<-a0;v12<-a1;v3<-a0;v11<-a0;v10<-a0;v4<-a1;v19<-a3;v17<-a2;v2<-s1;v8<-a0;v0<-s0;v15<-a2;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of yloop7_5"];
// [Asm]   r0 [label="ft0", color=blue];
// [Asm]   r3 [label="ft3", color=blue];
// [Asm]   r9 [label="ft9", color=blue];
// [Asm]   r6 [label="ft6", color=blue];
// [Asm]   r13 [label="fa2", color=blue];
// [Asm]   r4 [label="ft4", color=blue];
// [Asm]   r1 [label="ft1", color=blue];
// [Asm]   r11 [label="fa0", color=blue];
// [Asm]   r7 [label="ft7", color=blue];
// [Asm]   r10 [label="ft10", color=blue];
// [Asm]   r14 [label="fa3", color=blue];
// [Asm]   r8 [label="ft8", color=blue];
// [Asm]   r5 [label="ft5", color=blue];
// [Asm]   r15 [label="fa4", color=blue];
// [Asm]   r2 [label="ft2", color=blue];
// [Asm]   r16 [label="fa5", color=blue];
// [Asm]   r18 [label="fa7", color=blue];
// [Asm]   r17 [label="fa6", color=blue];
// [Asm]   r12 [label="fa1", color=blue];
// [Asm]   comment = "0:ft0-> 1:ft1-> 2:ft2-> 3:ft3-> 4:ft4-> 5:ft5-> 6:ft6-> 7:ft7-> 8:ft8-> 9:ft9-> 10:ft10-> 11:fa0-> 12:fa1-> 13:fa2-> 14:fa3-> 15:fa4-> 16:fa5-> 17:fa6-> 18:fa7"
// [Asm]   comment = ""
// [Asm] }
// [Asm] 
// [Asm] subst   ret ->   ret
// [Asm] subst   mv v11, zero ->   mv a0, zero
// [Asm] subst   j .yloop7_5_3 ->   j .yloop7_5_3
// [Asm] subst   mv v0, s10 ->   mv s0, s10
// [Asm] subst   mv v2, a0 ->   mv s1, a0
// [Asm] subst   lw v3, 8(v0) ->   lw a0, 8(s0)
// [Asm] subst   ld v4, 16(v0) ->   ld a1, 16(s0)
// [Asm] subst   bge v2, v3, .yloop7_5_1 ->   bge s1, a0, .yloop7_5_1
// [Asm] subst   addi v17, s11, -24 ->   addi a2, s11, -24
// [Asm] subst   andi v5, v17, -8 ->   andi a2, a2, -8
// [Asm] subst   mv s11, v5 ->   mv s11, a2
// [Asm] subst   la v19, xloop10_7 ->   la a3, xloop10_7
// [Asm] subst   sd v19, 0(v5) ->   sd a3, 0(a2)
// [Asm] subst   sd v3, 8(v5) ->   sd a0, 8(a2)
// [Asm] subst   sd v4, 16(v5) ->   sd a1, 16(a2)
// [Asm] subst   mv s10, v5 ->   mv s10, a2
// [Asm] subst   ld v15, 0(v5) ->   ld a2, 0(a2)
// [Asm] subst   mv a0, zero ->   mv a0, zero
// [Asm] subst   mv a1, v2 ->   mv a1, s1
// [Asm] subst   jalr v15 ->   jalr a2
// [Asm] subst   addi v9, v2, 1 ->   addi a0, s1, 1
// [Asm] subst   mv s10, v0 ->   mv s10, s0
// [Asm] subst   ld v12, 0(v0) ->   ld a1, 0(s0)
// [Asm] subst   jalr v12 ->   jalr a1
// [Asm] pre_assigned_registers: Self(fref=f9) -> v0, Insn(iref=%9) -> fv18, FreeVar(fvref=^1) -> v9, Insn(iref=%8) -> fv17, FnParam(fref=f9, fpref=$f.4) -> fv6, Insn(iref=%10) -> fv19, FnParam(fref=f9, fpref=$f.1) -> fv3, Insn(iref=%14) -> v22, FnParam(fref=f9, fpref=$f.6) -> fv8, Insn(iref=%5) -> fv14, FnParam(fref=f9, fpref=$f.3) -> fv5, Insn(iref=%0) -> v10, Insn(iref=%4) -> fv13, Insn(iref=%3) -> fv12, Insn(iref=%13) -> v21, Insn(iref=%7) -> fv16, BlockParam(bref=b5, bpref=$b.0) -> v24, FnParam(fref=f9, fpref=$f.5) -> fv7, BlockParam(bref=b6, bpref=$b.0) -> v26, Insn(iref=%2) -> fv11, Insn(iref=%1) -> v25, Insn(iref=%11) -> v20, FnParam(fref=f9, fpref=$f.2) -> fv4, Insn(iref=%6) -> fv15, FnParam(fref=f9, fpref=$f.0) -> v2, Insn(iref=%12) -> v23
// [Asm] skipping Op(ty=Double, op=Mul, args=[Insn(iref=%4), FnParam(fref=f9, fpref=$f.2)])
// [Asm] skipping Op(ty=Bool, op=Eq, args=[FnParam(fref=f9, fpref=$f.0), Int32(val=0)])
// [Asm] defs: [v26]
// [Asm] live_set: [v26]
// [Asm] move_origin: [v24]
// [Asm] defined: v26 is X
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [v26]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] defs: [v27]
// [Asm] live_set: [v27]
// [Asm] move_origin: []
// [Asm] defined: v27 is X
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [v27]
// [Asm] defined: a0 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v25]
// [Asm] live_set: [v25]
// [Asm] move_origin: [a0]
// [Asm] defined: v25 is X
// [Asm] defs: []
// [Asm] live_set: [v25]
// [Asm] move_origin: []
// [Asm] defs: [v26]
// [Asm] live_set: [v26]
// [Asm] move_origin: [v25]
// [Asm] defined: v26 is X
// [Asm] defs: []
// [Asm] live_set: [v26]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [zero]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [zero]
// [Asm] defined: a0 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v23]
// [Asm] live_set: [v23]
// [Asm] move_origin: [a0]
// [Asm] defined: v23 is X
// [Asm] defs: []
// [Asm] live_set: [v23]
// [Asm] move_origin: []
// [Asm] defs: [v24]
// [Asm] live_set: [v24]
// [Asm] move_origin: [v23]
// [Asm] defined: v24 is X
// [Asm] defs: []
// [Asm] live_set: [v24]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [fa5, fa3, fa2, fa4, zero, a0, fa0, fa1, s10]
// [Asm] move_origin: []
// [Asm] defs: [v0]
// [Asm] live_set: [fa5, fa3, fa2, fa4, zero, a0, fa0, v0, fa1]
// [Asm] move_origin: [s10]
// [Asm] defined: v0 is X
// [Asm] defs: [v2]
// [Asm] live_set: [fa5, fa3, fa2, fa4, zero, fa0, v0, fa1, v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v2 is X
// [Asm] defs: [fv3]
// [Asm] live_set: [fa5, fa3, fa2, fa4, zero, v0, fv3, fa1, v2]
// [Asm] move_origin: [fa0]
// [Asm] defined: fv3 is F
// [Asm] defs: [fv4]
// [Asm] live_set: [fa5, fa3, fa2, fa4, zero, v0, fv4, fv3, v2]
// [Asm] move_origin: [fa1]
// [Asm] defined: fv4 is F
// [Asm] defs: [fv5]
// [Asm] live_set: [fv5, fa5, fa3, zero, fa4, v0, fv4, fv3, v2]
// [Asm] move_origin: [fa2]
// [Asm] defined: fv5 is F
// [Asm] defs: [fv6]
// [Asm] live_set: [fv5, fa5, zero, fa4, v0, fv4, fv6, fv3, v2]
// [Asm] move_origin: [fa3]
// [Asm] defined: fv6 is F
// [Asm] defs: [fv7]
// [Asm] live_set: [fv5, fa5, zero, v0, fv4, fv6, fv3, fv7, v2]
// [Asm] move_origin: [fa4]
// [Asm] defined: fv7 is F
// [Asm] defs: [fv8]
// [Asm] live_set: [fv5, zero, fv8, v0, fv4, fv6, fv3, fv7, v2]
// [Asm] move_origin: [fa5]
// [Asm] defined: fv8 is F
// [Asm] defs: [v9]
// [Asm] live_set: [v2, fv5, zero, fv8, v0, fv4, fv6, v9, fv3, fv7]
// [Asm] move_origin: []
// [Asm] defined: v9 is X
// [Asm] defs: []
// [Asm] live_set: [v2, fv5, zero, fv8, v0, fv4, fv6, v9, fv3, fv7]
// [Asm] move_origin: []
// [Asm] defs: [v21]
// [Asm] live_set: [v21, fv8, v0, fv12, fv16, fv15, fv17, fv7]
// [Asm] move_origin: []
// [Asm] defined: v21 is X
// [Asm] defs: [s10]
// [Asm] live_set: [v21, fv8, v0, fv12, fv16, fv15, fv17, fv7]
// [Asm] move_origin: [v0]
// [Asm] defined: s10 is X
// [Asm] defs: [v30]
// [Asm] live_set: [v21, v30, fv8, fv12, fv16, fv15, fv17, fv7]
// [Asm] move_origin: []
// [Asm] defined: v30 is X
// [Asm] defs: []
// [Asm] live_set: [v21, v30, fv8, fv12, fv16, fv15, fv17, fv7]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [a0, v30, fv8, fv12, fv16, fv15, fv17, fv7]
// [Asm] move_origin: [v21]
// [Asm] defined: a0 is X
// [Asm] defs: [fa0]
// [Asm] live_set: [a0, v30, fa0, fv8, fv16, fv15, fv17, fv7]
// [Asm] move_origin: [fv12]
// [Asm] defined: fa0 is F
// [Asm] defs: [fa1]
// [Asm] live_set: [a0, v30, fa0, fv8, fv16, fa1, fv17, fv7]
// [Asm] move_origin: [fv15]
// [Asm] defined: fa1 is F
// [Asm] defs: [fa2]
// [Asm] live_set: [fa2, a0, v30, fa0, fv8, fa1, fv17, fv7]
// [Asm] move_origin: [fv16]
// [Asm] defined: fa2 is F
// [Asm] defs: [fa3]
// [Asm] live_set: [fa2, fa3, a0, v30, fa0, fv8, fa1, fv7]
// [Asm] move_origin: [fv17]
// [Asm] defined: fa3 is F
// [Asm] defs: [fa4]
// [Asm] live_set: [fa2, fa3, fa4, a0, v30, fa0, fv8, fa1]
// [Asm] move_origin: [fv7]
// [Asm] defined: fa4 is F
// [Asm] defs: [fa5]
// [Asm] live_set: [fa5, fa2, fa3, fa4, a0, v30, fa0, fa1]
// [Asm] move_origin: [fv8]
// [Asm] defined: fa5 is F
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v22]
// [Asm] live_set: [v22]
// [Asm] move_origin: [a0]
// [Asm] defined: v22 is X
// [Asm] defs: []
// [Asm] live_set: [v22]
// [Asm] move_origin: []
// [Asm] defs: [v24]
// [Asm] live_set: [v24]
// [Asm] move_origin: [v22]
// [Asm] defined: v24 is X
// [Asm] defs: [fv11]
// [Asm] live_set: [v2, zero, fv11, fv8, v0, fv4, fv3, v9, fv7]
// [Asm] move_origin: []
// [Asm] defined: fv11 is F
// [Asm] defs: [fv12]
// [Asm] live_set: [v2, zero, fv8, v0, fv12, fv4, fv3, v9, fv7]
// [Asm] move_origin: []
// [Asm] defined: fv12 is F
// [Asm] defs: [s10]
// [Asm] live_set: [v2, zero, fv8, v0, fv12, fv4, fv3, v9, fv7]
// [Asm] move_origin: [v9]
// [Asm] defined: s10 is X
// [Asm] defs: [v43]
// [Asm] live_set: [zero, fv8, v0, fv12, fv4, v43, fv3, fv7, v2]
// [Asm] move_origin: []
// [Asm] defined: v43 is X
// [Asm] defs: []
// [Asm] live_set: [zero, fv8, v0, fv12, fv4, v43, fv3, fv7, v2]
// [Asm] move_origin: []
// [Asm] defs: [fa0]
// [Asm] live_set: [zero, fv8, fa0, v0, fv12, fv4, v43, fv7, v2]
// [Asm] move_origin: [fv3]
// [Asm] defined: fa0 is F
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [zero, fv8, fa0, v0, fv12, fv4, fv7, v2]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [fv13]
// [Asm] live_set: [zero, fv8, fv13, v0, fv12, fv4, fv7, v2]
// [Asm] move_origin: [fa0]
// [Asm] defined: fv13 is F
// [Asm] defs: []
// [Asm] live_set: [zero, fv8, fv13, v0, fv12, fv4, fv7, v2]
// [Asm] move_origin: []
// [Asm] defs: [fv15]
// [Asm] live_set: [zero, fv8, v0, fv12, fv15, fv7, v2]
// [Asm] move_origin: []
// [Asm] defined: fv15 is F
// [Asm] defs: [fv16]
// [Asm] live_set: [zero, fv8, v0, fv12, fv15, fv16, fv7, v2]
// [Asm] move_origin: []
// [Asm] defined: fv16 is F
// [Asm] defs: [fv17]
// [Asm] live_set: [v2, zero, fv8, v0, fv12, fv15, fv16, fv17, fv7]
// [Asm] move_origin: []
// [Asm] defined: fv17 is F
// [Asm] defs: [v35]
// [Asm] live_set: [v2, zero, fv8, v35, v0, fv12, fv15, fv16, fv17, fv7]
// [Asm] move_origin: []
// [Asm] defined: v35 is X
// [Asm] defs: [fv36]
// [Asm] live_set: [v2, zero, fv36, fv8, v0, fv12, fv15, fv16, fv17, fv7]
// [Asm] move_origin: []
// [Asm] defined: fv36 is F
// [Asm] defs: [v37]
// [Asm] live_set: [v2, zero, fv36, fv8, v0, fv12, v37, fv15, fv16, fv17, fv7]
// [Asm] move_origin: []
// [Asm] defined: v37 is X
// [Asm] defs: [fv38]
// [Asm] live_set: [fv38, v2, zero, fv36, fv8, v0, fv12, fv15, fv16, fv17, fv7]
// [Asm] move_origin: []
// [Asm] defined: fv38 is F
// [Asm] defs: [fv18]
// [Asm] live_set: [fv7, v2, zero, fv8, v0, fv12, fv15, fv16, fv18, fv17]
// [Asm] move_origin: []
// [Asm] defined: fv18 is F
// [Asm] defs: [fv19]
// [Asm] live_set: [fv7, v2, zero, fv8, v0, fv19, fv12, fv15, fv16, fv18, fv17]
// [Asm] move_origin: []
// [Asm] defined: fv19 is F
// [Asm] defs: [v20]
// [Asm] live_set: [v2, zero, v20, fv8, v0, fv12, fv15, fv16, fv17, fv7]
// [Asm] move_origin: []
// [Asm] defined: v20 is X
// [Asm] defs: []
// [Asm] live_set: [v2, zero, fv8, v0, fv12, fv15, fv16, fv17, fv7]
// [Asm] move_origin: []
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of iloop29_9"];
// [Asm]   r0 [label="v26 ← a0", color=green];
// [Asm]   r20 [label="v2 ← s1", color=green];
// [Asm]   r23 [label="s10", color=blue];
// [Asm]   r3 [label="t0", color=blue];
// [Asm]   r9 [label="a2", color=blue];
// [Asm]   r26 [label="v43 ← a0", color=green];
// [Asm]   r27 [label="v35 ← a0", color=green];
// [Asm]   r6 [label="t3", color=blue];
// [Asm]   r13 [label="a6", color=blue];
// [Asm]   r4 [label="t1", color=blue];
// [Asm]   r1 [label="a0", color=blue];
// [Asm]   r29 [label="v20 ← a0", color=green];
// [Asm]   r28 [label="v37 ← a0", color=green];
// [Asm]   r11 [label="a4", color=blue];
// [Asm]   r7 [label="t4", color=blue];
// [Asm]   r10 [label="a3", color=blue];
// [Asm]   r22 [label="v21 ← a0", color=green];
// [Asm]   r14 [label="a7", color=blue];
// [Asm]   r8 [label="a1", color=blue];
// [Asm]   r5 [label="t2", color=blue];
// [Asm]   r15 [label="v25 ← a0", color=green];
// [Asm]   r24 [label="v30 ← a1", color=green];
// [Asm]   r25 [label="v22 ← a0", color=green];
// [Asm]   r2 [label="v27 ← a0", color=green];
// [Asm]   r16 [label="v23 ← a0", color=green];
// [Asm]   r18 [label="v0 ← s0", color=green];
// [Asm]   r19 [label="zero", color=blue];
// [Asm]   r21 [label="v9 ← a0", color=green];
// [Asm]   r17 [label="v24 ← a0", color=green];
// [Asm]   r12 [label="a5", color=blue];
// [Asm]   r3 -- r19;
// [Asm]   r14 -- r20;
// [Asm]   r1 -- r12;
// [Asm]   r11 -- r20;
// [Asm]   r14 -- r18;
// [Asm]   r1 -- r8;
// [Asm]   r5 -- r20;
// [Asm]   r20 -- r26;
// [Asm]   r1 -- r4;
// [Asm]   r18 -- r29;
// [Asm]   r8 -- r19;
// [Asm]   r1 -- r7;
// [Asm]   r1 -- r18;
// [Asm]   r1 -- r19;
// [Asm]   r5 -- r18;
// [Asm]   r1 -- r10;
// [Asm]   r7 -- r20;
// [Asm]   r20 -- r29;
// [Asm]   r10 -- r19;
// [Asm]   r5 -- r19;
// [Asm]   r1 -- r13;
// [Asm]   r4 -- r20;
// [Asm]   r18 -- r27;
// [Asm]   r18 -- r21;
// [Asm]   r1 -- r20;
// [Asm]   r4 -- r18;
// [Asm]   r18 -- r22;
// [Asm]   r11 -- r18;
// [Asm]   r19 -- r21;
// [Asm]   r19 -- r26;
// [Asm]   r3 -- r18;
// [Asm]   r8 -- r20;
// [Asm]   r22 -- r24;
// [Asm]   r12 -- r19;
// [Asm]   r13 -- r20;
// [Asm]   r13 -- r19;
// [Asm]   r6 -- r20;
// [Asm]   r11 -- r19;
// [Asm]   r9 -- r18;
// [Asm]   r18 -- r28;
// [Asm]   r20 -- r23;
// [Asm]   r1 -- r9;
// [Asm]   r6 -- r19;
// [Asm]   r14 -- r19;
// [Asm]   r19 -- r28;
// [Asm]   r12 -- r20;
// [Asm]   r10 -- r20;
// [Asm]   r18 -- r26;
// [Asm]   r19 -- r29;
// [Asm]   r18 -- r19;
// [Asm]   r7 -- r19;
// [Asm]   r19 -- r23;
// [Asm]   r19 -- r27;
// [Asm]   r10 -- r18;
// [Asm]   r6 -- r18;
// [Asm]   r8 -- r18;
// [Asm]   r22 -- r23;
// [Asm]   r3 -- r20;
// [Asm]   r20 -- r27;
// [Asm]   r9 -- r20;
// [Asm]   r13 -- r18;
// [Asm]   r1 -- r11;
// [Asm]   r18 -- r20;
// [Asm]   r20 -- r28;
// [Asm]   r9 -- r19;
// [Asm]   r1 -- r6;
// [Asm]   r7 -- r18;
// [Asm]   r1 -- r5;
// [Asm]   r1 -- r14;
// [Asm]   r1 -- r3;
// [Asm]   r20 -- r21;
// [Asm]   r12 -- r18;
// [Asm]   r4 -- r19;
// [Asm]   r19 -- r20;
// [Asm]   r1 -- r24;
// [Asm]   r18 -- r23;
// [Asm]   comment = "0:v26-> 1:a0-> 3:t0-> 18:v0-> 19:zero-> 20:v2-> 4:t1-> 5:t2-> 6:t3-> 7:t4-> 8:a1-> 9:a2-> 10:a3-> 11:a4-> 12:a5-> 13:a6-> 14:a7-> 21:v9-> 23:s10-> 26:v43-> 27:v35-> 28:v37-> 29:v20-> 22:v21-> 24:v30-> 2:v27-> 15:v25-> 16:v23-> 17:v24-> 25:v22"
// [Asm]   comment = "v26<-a0;v2<-s1;v43<-a0;v35<-a0;v20<-a0;v37<-a0;v21<-a0;v25<-a0;v30<-a1;v22<-a0;v27<-a0;v23<-a0;v0<-s0;v9<-a0;v24<-a0;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of iloop29_9"];
// [Asm]   r0 [label="ft0", color=blue];
// [Asm]   r33 [label="fv18 ← fa0", color=green];
// [Asm]   r9 [label="ft9", color=blue];
// [Asm]   r26 [label="fv16 ← fa2", color=green];
// [Asm]   r6 [label="ft6", color=blue];
// [Asm]   r13 [label="fa2", color=blue];
// [Asm]   r4 [label="ft4", color=blue];
// [Asm]   r29 [label="fv11 ← fa1", color=green];
// [Asm]   r7 [label="ft7", color=blue];
// [Asm]   r10 [label="ft10", color=blue];
// [Asm]   r8 [label="ft8", color=blue];
// [Asm]   r5 [label="ft5", color=blue];
// [Asm]   r32 [label="fv38 ← fa4", color=green];
// [Asm]   r24 [label="fv8 ← fs2", color=green];
// [Asm]   r15 [label="fa4", color=blue];
// [Asm]   r31 [label="fv36 ← fa0", color=green];
// [Asm]   r17 [label="fa6", color=blue];
// [Asm]   r12 [label="fa1", color=blue];
// [Asm]   r20 [label="fv4 ← fs0", color=green];
// [Asm]   r23 [label="fv7 ← fs1", color=green];
// [Asm]   r3 [label="ft3", color=blue];
// [Asm]   r27 [label="fv15 ← fa1", color=green];
// [Asm]   r1 [label="ft1", color=blue];
// [Asm]   r28 [label="fv17 ← fa3", color=green];
// [Asm]   r11 [label="fa0", color=blue];
// [Asm]   r34 [label="fv19 ← fa4", color=green];
// [Asm]   r22 [label="fv6 ← fa2", color=green];
// [Asm]   r14 [label="fa3", color=blue];
// [Asm]   r30 [label="fv13 ← fa0", color=green];
// [Asm]   r25 [label="fv12 ← fs3", color=green];
// [Asm]   r2 [label="ft2", color=blue];
// [Asm]   r16 [label="fa5", color=blue];
// [Asm]   r18 [label="fa7", color=blue];
// [Asm]   r19 [label="fv3 ← fa0", color=green];
// [Asm]   r21 [label="fv5 ← fa1", color=green];
// [Asm]   r1 -- r24;
// [Asm]   r19 -- r20;
// [Asm]   r18 -- r23;
// [Asm]   r28 -- r34;
// [Asm]   r2 -- r20;
// [Asm]   r21 -- r24;
// [Asm]   r12 -- r25;
// [Asm]   r26 -- r33;
// [Asm]   r23 -- r31;
// [Asm]   r25 -- r28;
// [Asm]   r9 -- r25;
// [Asm]   r16 -- r20;
// [Asm]   r14 -- r20;
// [Asm]   r16 -- r25;
// [Asm]   r28 -- r32;
// [Asm]   r14 -- r16;
// [Asm]   r11 -- r14;
// [Asm]   r7 -- r25;
// [Asm]   r18 -- r25;
// [Asm]   r0 -- r25;
// [Asm]   r24 -- r32;
// [Asm]   r27 -- r32;
// [Asm]   r3 -- r11;
// [Asm]   r1 -- r20;
// [Asm]   r0 -- r23;
// [Asm]   r27 -- r28;
// [Asm]   r13 -- r28;
// [Asm]   r3 -- r24;
// [Asm]   r11 -- r24;
// [Asm]   r11 -- r18;
// [Asm]   r19 -- r21;
// [Asm]   r27 -- r34;
// [Asm]   r15 -- r25;
// [Asm]   r12 -- r19;
// [Asm]   r20 -- r30;
// [Asm]   r20 -- r23;
// [Asm]   r8 -- r24;
// [Asm]   r12 -- r24;
// [Asm]   r14 -- r19;
// [Asm]   r26 -- r28;
// [Asm]   r2 -- r25;
// [Asm]   r26 -- r27;
// [Asm]   r20 -- r22;
// [Asm]   r10 -- r20;
// [Asm]   r24 -- r31;
// [Asm]   r19 -- r29;
// [Asm]   r11 -- r13;
// [Asm]   r12 -- r28;
// [Asm]   r25 -- r32;
// [Asm]   r9 -- r23;
// [Asm]   r19 -- r22;
// [Asm]   r23 -- r32;
// [Asm]   r8 -- r23;
// [Asm]   r24 -- r27;
// [Asm]   r28 -- r33;
// [Asm]   r9 -- r20;
// [Asm]   r23 -- r24;
// [Asm]   r1 -- r11;
// [Asm]   r4 -- r25;
// [Asm]   r12 -- r23;
// [Asm]   r11 -- r15;
// [Asm]   r15 -- r23;
// [Asm]   r18 -- r20;
// [Asm]   r0 -- r11;
// [Asm]   r8 -- r11;
// [Asm]   r16 -- r21;
// [Asm]   r10 -- r25;
// [Asm]   r21 -- r22;
// [Asm]   r6 -- r23;
// [Asm]   r2 -- r24;
// [Asm]   r16 -- r24;
// [Asm]   r24 -- r25;
// [Asm]   r16 -- r23;
// [Asm]   r2 -- r23;
// [Asm]   r14 -- r15;
// [Asm]   r16 -- r22;
// [Asm]   r11 -- r25;
// [Asm]   r17 -- r20;
// [Asm]   r27 -- r31;
// [Asm]   r6 -- r25;
// [Asm]   r18 -- r24;
// [Asm]   r23 -- r29;
// [Asm]   r25 -- r33;
// [Asm]   r26 -- r34;
// [Asm]   r13 -- r24;
// [Asm]   r23 -- r33;
// [Asm]   r20 -- r24;
// [Asm]   r6 -- r11;
// [Asm]   r13 -- r15;
// [Asm]   r3 -- r25;
// [Asm]   r4 -- r24;
// [Asm]   r11 -- r20;
// [Asm]   r11 -- r17;
// [Asm]   r28 -- r31;
// [Asm]   r4 -- r23;
// [Asm]   r5 -- r20;
// [Asm]   r0 -- r24;
// [Asm]   r1 -- r23;
// [Asm]   r5 -- r23;
// [Asm]   r7 -- r24;
// [Asm]   r15 -- r22;
// [Asm]   r12 -- r15;
// [Asm]   r14 -- r23;
// [Asm]   r25 -- r27;
// [Asm]   r11 -- r16;
// [Asm]   r16 -- r19;
// [Asm]   r20 -- r29;
// [Asm]   r7 -- r20;
// [Asm]   r13 -- r16;
// [Asm]   r11 -- r12;
// [Asm]   r25 -- r30;
// [Asm]   r23 -- r34;
// [Asm]   r4 -- r20;
// [Asm]   r17 -- r24;
// [Asm]   r11 -- r23;
// [Asm]   r25 -- r26;
// [Asm]   r19 -- r24;
// [Asm]   r2 -- r11;
// [Asm]   r14 -- r24;
// [Asm]   r17 -- r25;
// [Asm]   r23 -- r27;
// [Asm]   r5 -- r11;
// [Asm]   r8 -- r20;
// [Asm]   r8 -- r25;
// [Asm]   r24 -- r29;
// [Asm]   r24 -- r28;
// [Asm]   r13 -- r25;
// [Asm]   r22 -- r24;
// [Asm]   r20 -- r25;
// [Asm]   r6 -- r24;
// [Asm]   r24 -- r26;
// [Asm]   r13 -- r20;
// [Asm]   r13 -- r19;
// [Asm]   r6 -- r20;
// [Asm]   r24 -- r30;
// [Asm]   r21 -- r23;
// [Asm]   r33 -- r34;
// [Asm]   r23 -- r26;
// [Asm]   r12 -- r20;
// [Asm]   r9 -- r11;
// [Asm]   r23 -- r25;
// [Asm]   r4 -- r11;
// [Asm]   r17 -- r23;
// [Asm]   r12 -- r13;
// [Asm]   r19 -- r23;
// [Asm]   r15 -- r21;
// [Asm]   r5 -- r24;
// [Asm]   r13 -- r23;
// [Asm]   r23 -- r30;
// [Asm]   r14 -- r25;
// [Asm]   r14 -- r21;
// [Asm]   r24 -- r34;
// [Asm]   r23 -- r28;
// [Asm]   r9 -- r24;
// [Asm]   r13 -- r14;
// [Asm]   r25 -- r34;
// [Asm]   r10 -- r23;
// [Asm]   r22 -- r23;
// [Asm]   r10 -- r11;
// [Asm]   r7 -- r11;
// [Asm]   r3 -- r20;
// [Asm]   r25 -- r31;
// [Asm]   r1 -- r25;
// [Asm]   r15 -- r24;
// [Asm]   r11 -- r26;
// [Asm]   r5 -- r25;
// [Asm]   r27 -- r33;
// [Asm]   r12 -- r16;
// [Asm]   r12 -- r14;
// [Asm]   r31 -- r32;
// [Asm]   r26 -- r31;
// [Asm]   r11 -- r27;
// [Asm]   r7 -- r23;
// [Asm]   r15 -- r20;
// [Asm]   r15 -- r16;
// [Asm]   r11 -- r28;
// [Asm]   r15 -- r19;
// [Asm]   r19 -- r25;
// [Asm]   r0 -- r20;
// [Asm]   r20 -- r21;
// [Asm]   r3 -- r23;
// [Asm]   r10 -- r24;
// [Asm]   r24 -- r33;
// [Asm]   r26 -- r32;
// [Asm]   r12 -- r26;
// [Asm]   comment = "0:ft0-> 11:fa0-> 20:fv4-> 23:fv7-> 24:fv8-> 25:fv12-> 1:ft1-> 2:ft2-> 3:ft3-> 4:ft4-> 5:ft5-> 6:ft6-> 7:ft7-> 8:ft8-> 9:ft9-> 10:ft10-> 12:fa1-> 13:fa2-> 14:fa3-> 15:fa4-> 16:fa5-> 19:fv3-> 21:fv5-> 22:fv6-> 28:fv17-> 26:fv16-> 27:fv15-> 31:fv36-> 32:fv38-> 33:fv18-> 34:fv19-> 17:fa6-> 18:fa7-> 29:fv11-> 30:fv13"
// [Asm]   comment = "fv18<-fa0;fv16<-fa2;fv11<-fa1;fv38<-fa4;fv8<-fs2;fv36<-fa0;fv4<-fs0;fv7<-fs1;fv15<-fa1;fv17<-fa3;fv19<-fa4;fv6<-fa2;fv13<-fa0;fv12<-fs3;fv3<-fa0;fv5<-fa1;"
// [Asm] }
// [Asm] 
// [Asm] subst   ret ->   ret
// [Asm] subst   li v27, 1 ->   li a0, 1
// [Asm] subst   call minimbt_print_int ->   call minimbt_print_int
// [Asm] subst   j .iloop29_9_6 ->   j .iloop29_9_6
// [Asm] subst   mv a0, zero ->   mv a0, zero
// [Asm] subst   call minimbt_print_int ->   call minimbt_print_int
// [Asm] subst   j .iloop29_9_5 ->   j .iloop29_9_5
// [Asm] subst   mv v0, s10 ->   mv s0, s10
// [Asm] subst   mv v2, a0 ->   mv s1, a0
// [Asm] subst   fmv.d fv4, fa1 ->   fmv.d fs0, fa1
// [Asm] subst   fmv.d fv5, fa2 ->   fmv.d fa1, fa2
// [Asm] subst   fmv.d fv6, fa3 ->   fmv.d fa2, fa3
// [Asm] subst   fmv.d fv7, fa4 ->   fmv.d fs1, fa4
// [Asm] subst   fmv.d fv8, fa5 ->   fmv.d fs2, fa5
// [Asm] subst   ld v9, 8(v0) ->   ld a0, 8(s0)
// [Asm] subst   beq v2, zero, .iloop29_9_1 ->   beq s1, zero, .iloop29_9_1
// [Asm] subst   addi v21, v2, -1 ->   addi a0, s1, -1
// [Asm] subst   mv s10, v0 ->   mv s10, s0
// [Asm] subst   ld v30, 0(v0) ->   ld a1, 0(s0)
// [Asm] subst   fmv.d fa0, fv12 ->   fmv.d fa0, fs3
// [Asm] subst   fmv.d fa4, fv7 ->   fmv.d fa4, fs1
// [Asm] subst   fmv.d fa5, fv8 ->   fmv.d fa5, fs2
// [Asm] subst   jalr v30 ->   jalr a1
// [Asm] subst   fsub.d fv11, fv5, fv6 ->   fsub.d fa1, fa1, fa2
// [Asm] subst   fadd.d fv12, fv11, fv7 ->   fadd.d fs3, fa1, fs1
// [Asm] subst   mv s10, v9 ->   mv s10, a0
// [Asm] subst   ld v43, 0(v9) ->   ld a0, 0(a0)
// [Asm] subst   jalr v43 ->   jalr a0
// [Asm] subst   fmadd.d fv15, fv13, fv4, fv8 ->   fmadd.d fa1, fa0, fs0, fs2
// [Asm] subst   fmul.d fv16, fv12, fv12 ->   fmul.d fa2, fs3, fs3
// [Asm] subst   fmul.d fv17, fv15, fv15 ->   fmul.d fa3, fa1, fa1
// [Asm] subst   li v35, 4611686018427387904 ->   li a0, 4611686018427387904
// [Asm] subst   fmv.d.x fv36, v35 ->   fmv.d.x fa0, a0
// [Asm] subst   li v37, 4611686018427387904 ->   li a0, 4611686018427387904
// [Asm] subst   fmv.d.x fv38, v37 ->   fmv.d.x fa4, a0
// [Asm] subst   fmul.d fv18, fv36, fv38 ->   fmul.d fa0, fa0, fa4
// [Asm] subst   fmadd.d fv19, fv15, fv15, fv16 ->   fmadd.d fa4, fa1, fa1, fa2
// [Asm] subst   fle.d v20, fv18, fv19 ->   fle.d a0, fa0, fa4
// [Asm] subst   bne v20, zero, .iloop29_9_3 ->   bne a0, zero, .iloop29_9_3
// [Asm] pre_assigned_registers: FnParam(fref=f3, fpref=$f.0) -> fv2, Self(fref=f3) -> v0, Insn(iref=%0) -> fv3
// [Asm] defs: []
// [Asm] live_set: [s10, fa0]
// [Asm] move_origin: []
// [Asm] defs: [v0]
// [Asm] live_set: [fa0]
// [Asm] move_origin: [s10]
// [Asm] defined: v0 is X
// [Asm] defs: [fv2]
// [Asm] live_set: [fv2]
// [Asm] move_origin: [fa0]
// [Asm] defined: fv2 is F
// [Asm] defs: [fv3]
// [Asm] live_set: [fv3]
// [Asm] move_origin: []
// [Asm] defined: fv3 is F
// [Asm] defs: [fa0]
// [Asm] live_set: [fa0]
// [Asm] move_origin: [fv3]
// [Asm] defined: fa0 is F
// [Asm] defs: []
// [Asm] live_set: [fa0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of dbl4_3"];
// [Asm]   r0 [label="v0 ← a0", color=green];
// [Asm]   comment = "0:v0"
// [Asm]   comment = "v0<-a0;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of dbl4_3"];
// [Asm]   r0 [label="fa0", color=blue];
// [Asm]   r2 [label="fv3 ← fa0", color=green];
// [Asm]   r1 [label="fv2 ← fa0", color=green];
// [Asm]   comment = "0:fa0-> 1:fv2-> 2:fv3"
// [Asm]   comment = "fv3<-fa0;fv2<-fa0;"
// [Asm] }
// [Asm] 
// [Asm] subst   mv v0, s10 ->   mv a0, s10
// [Asm] subst   fadd.d fv3, fv2, fv2 ->   fadd.d fa0, fa0, fa0
// [Asm] subst   ret ->   ret
// [Asm] pre_assigned_registers: Mem(fref=f7, mref=m0) -> v6, FnParam(fref=f7, fpref=$f.1) -> v3, Insn(iref=%15) -> v21, Self(fref=f7) -> v0, BlockParam(bref=b3, bpref=$b.0) -> v23, Insn(iref=%9) -> fv15, FreeVar(fvref=^1) -> v4, Insn(iref=%8) -> fv14, FreeVar(fvref=^2) -> v5, Insn(iref=%10) -> fv16, Insn(iref=%14) -> v20, Insn(iref=%5) -> fv11, Insn(iref=%0) -> v7, Insn(iref=%4) -> fv10, Insn(iref=%3) -> fv9, Insn(iref=%13) -> v19, Insn(iref=%7) -> fv13, FnParam(fref=f7, fpref=$f.0) -> v2, Insn(iref=%2) -> fv8, Insn(iref=%1) -> v22, Insn(iref=%11) -> fv17, Insn(iref=%6) -> fv12, Insn(iref=%12) -> v18
// [Asm] skipping Op(ty=Bool, op=Le, args=[FreeVar(fvref=^1), FnParam(fref=f7, fpref=$f.0)])
// [Asm] defs: []
// [Asm] live_set: [zero, a0, a1, s11, s10]
// [Asm] move_origin: []
// [Asm] defs: [v0]
// [Asm] live_set: [zero, a0, v0, a1, s11]
// [Asm] move_origin: [s10]
// [Asm] defined: v0 is X
// [Asm] defs: [v2]
// [Asm] live_set: [zero, v0, a1, s11, v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v2 is X
// [Asm] defs: [v3]
// [Asm] live_set: [v3, zero, v0, s11, v2]
// [Asm] move_origin: [a1]
// [Asm] defined: v3 is X
// [Asm] defs: [v4]
// [Asm] live_set: [v3, zero, v0, v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: v4 is X
// [Asm] defs: [v5]
// [Asm] live_set: [v3, v5, zero, v0, v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: v5 is X
// [Asm] defs: []
// [Asm] live_set: [v3, v5, zero, v0, v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [v23]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] defs: [fv8]
// [Asm] live_set: [v3, v5, zero, fv8, v0, v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: fv8 is F
// [Asm] defs: [s10]
// [Asm] live_set: [v3, v5, zero, fv8, v0, v4, s11, v2]
// [Asm] move_origin: [v5]
// [Asm] defined: s10 is X
// [Asm] defs: [v51]
// [Asm] live_set: [v3, v51, v5, zero, fv8, v0, v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: v51 is X
// [Asm] defs: []
// [Asm] live_set: [v3, v51, v5, zero, fv8, v0, v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defs: [fa0]
// [Asm] live_set: [v3, v51, v5, zero, fa0, v0, v4, s11, v2]
// [Asm] move_origin: [fv8]
// [Asm] defined: fa0 is F
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [v3, v5, zero, fa0, v0, v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [fv9]
// [Asm] live_set: [v3, fv9, v5, zero, v0, v4, s11, v2]
// [Asm] move_origin: [fa0]
// [Asm] defined: fv9 is F
// [Asm] defs: []
// [Asm] live_set: [v3, fv9, v5, zero, v0, v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defs: [fv10]
// [Asm] live_set: [v3, fv9, fv10, v5, zero, v0, v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: fv10 is F
// [Asm] defs: [fv11]
// [Asm] live_set: [v3, v5, zero, fv11, v0, v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: fv11 is F
// [Asm] defs: [v46]
// [Asm] live_set: [v3, v5, v46, zero, fv11, v0, v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: v46 is X
// [Asm] defs: [fv47]
// [Asm] live_set: [v3, v5, zero, fv11, v0, v4, s11, fv47, v2]
// [Asm] move_origin: []
// [Asm] defined: fv47 is F
// [Asm] defs: [fv12]
// [Asm] live_set: [v3, v5, zero, v0, fv12, v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: fv12 is F
// [Asm] defs: [fv13]
// [Asm] live_set: [v3, v5, zero, fv13, v0, fv12, v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: fv13 is F
// [Asm] defs: [s10]
// [Asm] live_set: [v3, v5, zero, fv13, v0, fv12, v4, s11, v2]
// [Asm] move_origin: [v5]
// [Asm] defined: s10 is X
// [Asm] defs: [v43]
// [Asm] live_set: [v3, v5, zero, fv13, v0, fv12, v4, v43, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: v43 is X
// [Asm] defs: []
// [Asm] live_set: [v3, v5, zero, fv13, v0, fv12, v4, v43, s11, v2]
// [Asm] move_origin: []
// [Asm] defs: [fa0]
// [Asm] live_set: [v3, v5, zero, fa0, v0, fv12, v4, v43, s11, v2]
// [Asm] move_origin: [fv13]
// [Asm] defined: fa0 is F
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [v3, v5, zero, fa0, v0, fv12, v4, s11, v2]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [fv14]
// [Asm] live_set: [v3, v5, zero, v0, fv12, v4, s11, fv14, v2]
// [Asm] move_origin: [fa0]
// [Asm] defined: fv14 is F
// [Asm] defs: []
// [Asm] live_set: [v3, v5, zero, v0, fv12, v4, s11, fv14, v2]
// [Asm] move_origin: []
// [Asm] defs: [fv15]
// [Asm] live_set: [v3, v5, zero, v0, fv12, s11, fv14, fv15, v2]
// [Asm] move_origin: []
// [Asm] defined: fv15 is F
// [Asm] defs: [fv16]
// [Asm] live_set: [v3, v5, zero, v0, fv12, s11, fv16, v2]
// [Asm] move_origin: []
// [Asm] defined: fv16 is F
// [Asm] defs: [v38]
// [Asm] live_set: [v3, v5, zero, v0, fv12, v38, s11, fv16, v2]
// [Asm] move_origin: []
// [Asm] defined: v38 is X
// [Asm] defs: [fv39]
// [Asm] live_set: [v3, v5, zero, fv39, v0, fv12, s11, fv16, v2]
// [Asm] move_origin: []
// [Asm] defined: fv39 is F
// [Asm] defs: [fv17]
// [Asm] live_set: [v3, v5, zero, v0, fv12, s11, fv17, v2]
// [Asm] move_origin: []
// [Asm] defined: fv17 is F
// [Asm] defs: [v35]
// [Asm] live_set: [v3, v5, zero, v35, v0, fv12, fv17, v2]
// [Asm] move_origin: []
// [Asm] defined: v35 is X
// [Asm] defs: [v6]
// [Asm] live_set: [v3, v5, zero, v0, fv12, v6, fv17, v2]
// [Asm] move_origin: []
// [Asm] defined: v6 is X
// [Asm] defs: [s11]
// [Asm] live_set: [v3, v5, zero, v0, fv12, v6, fv17, v2]
// [Asm] move_origin: [v6]
// [Asm] defined: s11 is X
// [Asm] defs: [v37]
// [Asm] live_set: [v3, v5, zero, v0, fv12, v37, v6, fv17, v2]
// [Asm] move_origin: []
// [Asm] defined: v37 is X
// [Asm] defs: []
// [Asm] live_set: [v3, v5, zero, v0, fv12, v6, fv17, v2]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v3, zero, v0, fv12, v6, fv17, v2]
// [Asm] move_origin: []
// [Asm] defs: [s10]
// [Asm] live_set: [v3, zero, v0, fv12, v6, fv17, v2]
// [Asm] move_origin: [v6]
// [Asm] defined: s10 is X
// [Asm] defs: [v28]
// [Asm] live_set: [v3, zero, v0, fv12, v28, fv17, v2]
// [Asm] move_origin: []
// [Asm] defined: v28 is X
// [Asm] defs: []
// [Asm] live_set: [v3, zero, v0, fv12, v28, fv17, v2]
// [Asm] move_origin: []
// [Asm] defs: [v29]
// [Asm] live_set: [v3, zero, v29, v0, fv12, v28, fv17, v2]
// [Asm] move_origin: []
// [Asm] defined: v29 is X
// [Asm] defs: [a0]
// [Asm] live_set: [v3, a0, zero, v0, fv12, v28, fv17, v2]
// [Asm] move_origin: [v29]
// [Asm] defined: a0 is X
// [Asm] defs: [fv30]
// [Asm] live_set: [v3, a0, zero, fv30, v0, fv12, v28, fv17, v2]
// [Asm] move_origin: []
// [Asm] defined: fv30 is F
// [Asm] defs: [fa0]
// [Asm] live_set: [v3, a0, zero, fa0, v0, fv12, v28, fv17, v2]
// [Asm] move_origin: [fv30]
// [Asm] defined: fa0 is F
// [Asm] defs: [fv31]
// [Asm] live_set: [v3, fv31, a0, zero, fa0, v0, fv12, v28, fv17, v2]
// [Asm] move_origin: []
// [Asm] defined: fv31 is F
// [Asm] defs: [fa1]
// [Asm] live_set: [v3, a0, zero, fa0, v0, fv12, v28, fa1, fv17, v2]
// [Asm] move_origin: [fv31]
// [Asm] defined: fa1 is F
// [Asm] defs: [fv32]
// [Asm] live_set: [v3, fv32, a0, zero, fa0, v0, fv12, v28, fa1, fv17, v2]
// [Asm] move_origin: []
// [Asm] defined: fv32 is F
// [Asm] defs: [fa2]
// [Asm] live_set: [v3, fa2, a0, zero, fa0, v0, fv12, v28, fa1, fv17, v2]
// [Asm] move_origin: [fv32]
// [Asm] defined: fa2 is F
// [Asm] defs: [fv33]
// [Asm] live_set: [v3, fa2, a0, fa0, fv33, v0, fv12, v28, fa1, fv17, v2]
// [Asm] move_origin: []
// [Asm] defined: fv33 is F
// [Asm] defs: [fa3]
// [Asm] live_set: [v3, fa2, fa3, a0, fa0, v0, fv12, v28, fa1, fv17, v2]
// [Asm] move_origin: [fv33]
// [Asm] defined: fa3 is F
// [Asm] defs: [fa4]
// [Asm] live_set: [v3, fa2, fa3, fa4, a0, fa0, v0, v28, fa1, fv17, v2]
// [Asm] move_origin: [fv12]
// [Asm] defined: fa4 is F
// [Asm] defs: [fa5]
// [Asm] live_set: [v3, fa5, fa2, fa3, fa4, a0, fa0, v0, v28, fa1, v2]
// [Asm] move_origin: [fv17]
// [Asm] defined: fa5 is F
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [v2, v0, a0, v3]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v19]
// [Asm] live_set: [v2, v0, v3]
// [Asm] move_origin: [a0]
// [Asm] defined: v19 is X
// [Asm] defs: []
// [Asm] live_set: [v2, v0, v3]
// [Asm] move_origin: []
// [Asm] defs: [v20]
// [Asm] live_set: [v0, v20, v3]
// [Asm] move_origin: []
// [Asm] defined: v20 is X
// [Asm] defs: [s10]
// [Asm] live_set: [v0, v20, v3]
// [Asm] move_origin: [v0]
// [Asm] defined: s10 is X
// [Asm] defs: [v25]
// [Asm] live_set: [v25, v20, v3]
// [Asm] move_origin: []
// [Asm] defined: v25 is X
// [Asm] defs: []
// [Asm] live_set: [v25, v20, v3]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [v25, a0, v3]
// [Asm] move_origin: [v20]
// [Asm] defined: a0 is X
// [Asm] defs: [a1]
// [Asm] live_set: [v25, a1, a0]
// [Asm] move_origin: [v3]
// [Asm] defined: a1 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v21]
// [Asm] live_set: [v21]
// [Asm] move_origin: [a0]
// [Asm] defined: v21 is X
// [Asm] defs: []
// [Asm] live_set: [v21]
// [Asm] move_origin: []
// [Asm] defs: [v23]
// [Asm] live_set: [v23]
// [Asm] move_origin: [v21]
// [Asm] defined: v23 is X
// [Asm] defs: []
// [Asm] live_set: [zero]
// [Asm] move_origin: []
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [zero, a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v22]
// [Asm] live_set: [zero]
// [Asm] move_origin: [a0]
// [Asm] defined: v22 is X
// [Asm] defs: []
// [Asm] live_set: [zero]
// [Asm] move_origin: []
// [Asm] defs: [v23]
// [Asm] live_set: [v23]
// [Asm] move_origin: [zero]
// [Asm] defined: v23 is X
// [Asm] defs: []
// [Asm] live_set: [v23]
// [Asm] move_origin: []
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of xloop10_7"];
// [Asm]   r0 [label="v0 ← s0", color=green];
// [Asm]   r33 [label="v21 ← a0", color=green];
// [Asm]   r9 [label="s10", color=blue];
// [Asm]   r26 [label="v6 ← a0", color=green];
// [Asm]   r6 [label="v3 ← s2", color=green];
// [Asm]   r13 [label="t2", color=blue];
// [Asm]   r4 [label="s11", color=blue];
// [Asm]   r29 [label="v29 ← a0", color=green];
// [Asm]   r35 [label="v22 ← a0", color=green];
// [Asm]   r7 [label="v4 ← s3", color=green];
// [Asm]   r10 [label="v51 ← a0", color=green];
// [Asm]   r8 [label="v5 ← s4", color=green];
// [Asm]   r5 [label="v2 ← s1", color=green];
// [Asm]   r32 [label="v25 ← a2", color=green];
// [Asm]   r15 [label="t4", color=blue];
// [Asm]   r24 [label="v38 ← a0", color=green];
// [Asm]   r31 [label="v20 ← a0", color=green];
// [Asm]   r17 [label="a3", color=blue];
// [Asm]   r12 [label="t1", color=blue];
// [Asm]   r20 [label="a6", color=blue];
// [Asm]   r23 [label="v43 ← a0", color=green];
// [Asm]   r3 [label="a1", color=blue];
// [Asm]   r27 [label="v37 ← a1", color=green];
// [Asm]   r1 [label="zero", color=blue];
// [Asm]   r28 [label="v28 ← a1", color=green];
// [Asm]   r11 [label="t0", color=blue];
// [Asm]   r34 [label="v23 ← a0", color=green];
// [Asm]   r22 [label="v46 ← a0", color=green];
// [Asm]   r14 [label="t3", color=blue];
// [Asm]   r30 [label="v19 ← a0", color=green];
// [Asm]   r25 [label="v35 ← a0", color=green];
// [Asm]   r2 [label="a0", color=blue];
// [Asm]   r16 [label="a2", color=blue];
// [Asm]   r18 [label="a4", color=blue];
// [Asm]   r19 [label="a5", color=blue];
// [Asm]   r21 [label="a7", color=blue];
// [Asm]   r5 -- r15;
// [Asm]   r4 -- r19;
// [Asm]   r1 -- r24;
// [Asm]   r5 -- r12;
// [Asm]   r2 -- r20;
// [Asm]   r6 -- r21;
// [Asm]   r2 -- r32;
// [Asm]   r0 -- r13;
// [Asm]   r5 -- r21;
// [Asm]   r1 -- r12;
// [Asm]   r7 -- r21;
// [Asm]   r1 -- r26;
// [Asm]   r2 -- r15;
// [Asm]   r5 -- r8;
// [Asm]   r5 -- r10;
// [Asm]   r3 -- r6;
// [Asm]   r1 -- r4;
// [Asm]   r5 -- r17;
// [Asm]   r5 -- r22;
// [Asm]   r0 -- r17;
// [Asm]   r1 -- r7;
// [Asm]   r1 -- r18;
// [Asm]   r1 -- r19;
// [Asm]   r1 -- r10;
// [Asm]   r5 -- r18;
// [Asm]   r0 -- r28;
// [Asm]   r0 -- r25;
// [Asm]   r6 -- r29;
// [Asm]   r3 -- r32;
// [Asm]   r1 -- r17;
// [Asm]   r5 -- r29;
// [Asm]   r0 -- r23;
// [Asm]   r1 -- r20;
// [Asm]   r9 -- r31;
// [Asm]   r2 -- r16;
// [Asm]   r0 -- r22;
// [Asm]   r2 -- r7;
// [Asm]   r4 -- r22;
// [Asm]   r1 -- r16;
// [Asm]   r0 -- r16;
// [Asm]   r3 -- r5;
// [Asm]   r8 -- r12;
// [Asm]   r0 -- r6;
// [Asm]   r3 -- r8;
// [Asm]   r4 -- r21;
// [Asm]   r8 -- r24;
// [Asm]   r6 -- r13;
// [Asm]   r1 -- r9;
// [Asm]   r26 -- r27;
// [Asm]   r2 -- r6;
// [Asm]   r5 -- r6;
// [Asm]   r8 -- r17;
// [Asm]   r0 -- r26;
// [Asm]   r3 -- r4;
// [Asm]   r8 -- r16;
// [Asm]   r0 -- r2;
// [Asm]   r1 -- r21;
// [Asm]   r0 -- r9;
// [Asm]   r6 -- r18;
// [Asm]   r6 -- r10;
// [Asm]   r7 -- r10;
// [Asm]   r2 -- r12;
// [Asm]   r2 -- r8;
// [Asm]   r8 -- r23;
// [Asm]   r1 -- r27;
// [Asm]   r4 -- r12;
// [Asm]   r1 -- r2;
// [Asm]   r6 -- r31;
// [Asm]   r28 -- r29;
// [Asm]   r2 -- r5;
// [Asm]   r2 -- r13;
// [Asm]   r0 -- r1;
// [Asm]   r0 -- r10;
// [Asm]   r1 -- r11;
// [Asm]   r8 -- r22;
// [Asm]   r5 -- r7;
// [Asm]   r4 -- r8;
// [Asm]   r8 -- r21;
// [Asm]   r5 -- r14;
// [Asm]   r0 -- r11;
// [Asm]   r8 -- r11;
// [Asm]   r1 -- r6;
// [Asm]   r3 -- r7;
// [Asm]   r1 -- r5;
// [Asm]   r6 -- r23;
// [Asm]   r0 -- r4;
// [Asm]   r1 -- r35;
// [Asm]   r8 -- r14;
// [Asm]   r7 -- r8;
// [Asm]   r4 -- r14;
// [Asm]   r4 -- r9;
// [Asm]   r6 -- r32;
// [Asm]   r0 -- r18;
// [Asm]   r6 -- r25;
// [Asm]   r6 -- r7;
// [Asm]   r6 -- r9;
// [Asm]   r4 -- r13;
// [Asm]   r0 -- r15;
// [Asm]   r4 -- r16;
// [Asm]   r6 -- r11;
// [Asm]   r4 -- r24;
// [Asm]   r4 -- r5;
// [Asm]   r6 -- r15;
// [Asm]   r1 -- r8;
// [Asm]   r4 -- r23;
// [Asm]   r5 -- r20;
// [Asm]   r2 -- r4;
// [Asm]   r2 -- r18;
// [Asm]   r0 -- r24;
// [Asm]   r6 -- r14;
// [Asm]   r1 -- r23;
// [Asm]   r8 -- r27;
// [Asm]   r5 -- r23;
// [Asm]   r8 -- r19;
// [Asm]   r6 -- r30;
// [Asm]   r5 -- r13;
// [Asm]   r1 -- r22;
// [Asm]   r7 -- r13;
// [Asm]   r0 -- r14;
// [Asm]   r7 -- r20;
// [Asm]   r5 -- r19;
// [Asm]   r0 -- r21;
// [Asm]   r1 -- r15;
// [Asm]   r1 -- r13;
// [Asm]   r4 -- r20;
// [Asm]   r6 -- r16;
// [Asm]   r4 -- r18;
// [Asm]   r6 -- r22;
// [Asm]   r2 -- r11;
// [Asm]   r7 -- r9;
// [Asm]   r5 -- r11;
// [Asm]   r5 -- r16;
// [Asm]   r8 -- r20;
// [Asm]   r6 -- r26;
// [Asm]   r8 -- r25;
// [Asm]   r6 -- r12;
// [Asm]   r0 -- r19;
// [Asm]   r6 -- r24;
// [Asm]   r6 -- r20;
// [Asm]   r1 -- r28;
// [Asm]   r0 -- r31;
// [Asm]   r6 -- r8;
// [Asm]   r7 -- r17;
// [Asm]   r6 -- r19;
// [Asm]   r6 -- r27;
// [Asm]   r7 -- r22;
// [Asm]   r2 -- r28;
// [Asm]   r4 -- r15;
// [Asm]   r4 -- r11;
// [Asm]   r7 -- r19;
// [Asm]   r5 -- r28;
// [Asm]   r8 -- r13;
// [Asm]   r2 -- r14;
// [Asm]   r5 -- r9;
// [Asm]   r5 -- r24;
// [Asm]   r5 -- r26;
// [Asm]   r0 -- r3;
// [Asm]   r8 -- r15;
// [Asm]   r0 -- r8;
// [Asm]   r6 -- r28;
// [Asm]   r7 -- r15;
// [Asm]   r1 -- r29;
// [Asm]   r8 -- r18;
// [Asm]   r0 -- r29;
// [Asm]   r7 -- r11;
// [Asm]   r0 -- r5;
// [Asm]   r1 -- r25;
// [Asm]   r2 -- r21;
// [Asm]   r6 -- r17;
// [Asm]   r8 -- r10;
// [Asm]   r2 -- r17;
// [Asm]   r4 -- r7;
// [Asm]   r0 -- r12;
// [Asm]   r5 -- r25;
// [Asm]   r8 -- r26;
// [Asm]   r5 -- r27;
// [Asm]   r4 -- r17;
// [Asm]   r31 -- r32;
// [Asm]   r7 -- r16;
// [Asm]   r7 -- r18;
// [Asm]   r7 -- r23;
// [Asm]   r1 -- r14;
// [Asm]   r4 -- r6;
// [Asm]   r4 -- r10;
// [Asm]   r2 -- r19;
// [Asm]   r0 -- r30;
// [Asm]   r1 -- r3;
// [Asm]   r7 -- r12;
// [Asm]   r0 -- r7;
// [Asm]   r0 -- r27;
// [Asm]   r5 -- r30;
// [Asm]   r0 -- r20;
// [Asm]   r2 -- r3;
// [Asm]   r7 -- r14;
// [Asm]   comment = "0:v0-> 1:zero-> 2:a0-> 3:a1-> 4:s11-> 5:v2-> 6:v3-> 7:v4-> 8:v5-> 11:t0-> 12:t1-> 13:t2-> 14:t3-> 15:t4-> 16:a2-> 17:a3-> 18:a4-> 19:a5-> 20:a6-> 21:a7-> 10:v51-> 22:v46-> 23:v43-> 9:s10-> 24:v38-> 25:v35-> 26:v6-> 27:v37-> 28:v28-> 29:v29-> 30:v19-> 31:v20-> 32:v25-> 35:v22-> 33:v21-> 34:v23"
// [Asm]   comment = "v0<-s0;v21<-a0;v6<-a0;v3<-s2;v29<-a0;v22<-a0;v4<-s3;v51<-a0;v5<-s4;v2<-s1;v25<-a2;v38<-a0;v20<-a0;v43<-a0;v37<-a1;v28<-a1;v23<-a0;v46<-a0;v19<-a0;v35<-a0;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of xloop10_7"];
// [Asm]   r0 [label="fv8 ← fa0", color=green];
// [Asm]   r33 [label="fv32 ← fa2", color=green];
// [Asm]   r9 [label="ft7", color=blue];
// [Asm]   r26 [label="fv14 ← fa0", color=green];
// [Asm]   r6 [label="ft4", color=blue];
// [Asm]   r13 [label="fa1", color=blue];
// [Asm]   r4 [label="ft2", color=blue];
// [Asm]   r29 [label="fv39 ← fa1", color=green];
// [Asm]   r7 [label="ft5", color=blue];
// [Asm]   r10 [label="ft8", color=blue];
// [Asm]   r8 [label="ft6", color=blue];
// [Asm]   r5 [label="ft3", color=blue];
// [Asm]   r15 [label="fa3", color=blue];
// [Asm]   r32 [label="fv31 ← fa1", color=green];
// [Asm]   r24 [label="fv12 ← fs0", color=green];
// [Asm]   r31 [label="fv30 ← fa0", color=green];
// [Asm]   r17 [label="fa5", color=blue];
// [Asm]   r12 [label="ft10", color=blue];
// [Asm]   r20 [label="fv9 ← fa0", color=green];
// [Asm]   r23 [label="fv47 ← fa1", color=green];
// [Asm]   r3 [label="ft1", color=blue];
// [Asm]   r27 [label="fv15 ← fa1", color=green];
// [Asm]   r1 [label="fa0", color=blue];
// [Asm]   r28 [label="fv16 ← fa0", color=green];
// [Asm]   r11 [label="ft9", color=blue];
// [Asm]   r34 [label="fv33 ← fa3", color=green];
// [Asm]   r22 [label="fv11 ← fa0", color=green];
// [Asm]   r14 [label="fa2", color=blue];
// [Asm]   r30 [label="fv17 ← fa5", color=green];
// [Asm]   r25 [label="fv13 ← fa0", color=green];
// [Asm]   r2 [label="ft0", color=blue];
// [Asm]   r16 [label="fa4", color=blue];
// [Asm]   r18 [label="fa6", color=blue];
// [Asm]   r19 [label="fa7", color=blue];
// [Asm]   r21 [label="fv10 ← fa1", color=green];
// [Asm]   r13 -- r24;
// [Asm]   r16 -- r30;
// [Asm]   r13 -- r15;
// [Asm]   r1 -- r12;
// [Asm]   r4 -- r24;
// [Asm]   r14 -- r17;
// [Asm]   r1 -- r30;
// [Asm]   r14 -- r16;
// [Asm]   r1 -- r8;
// [Asm]   r1 -- r34;
// [Asm]   r1 -- r4;
// [Asm]   r7 -- r24;
// [Asm]   r1 -- r7;
// [Asm]   r30 -- r32;
// [Asm]   r1 -- r18;
// [Asm]   r1 -- r19;
// [Asm]   r1 -- r10;
// [Asm]   r1 -- r32;
// [Asm]   r30 -- r31;
// [Asm]   r24 -- r32;
// [Asm]   r13 -- r16;
// [Asm]   r1 -- r15;
// [Asm]   r17 -- r24;
// [Asm]   r1 -- r13;
// [Asm]   r19 -- r24;
// [Asm]   r1 -- r17;
// [Asm]   r3 -- r24;
// [Asm]   r11 -- r24;
// [Asm]   r14 -- r24;
// [Asm]   r1 -- r16;
// [Asm]   r1 -- r33;
// [Asm]   r24 -- r28;
// [Asm]   r24 -- r29;
// [Asm]   r30 -- r34;
// [Asm]   r24 -- r26;
// [Asm]   r6 -- r24;
// [Asm]   r24 -- r30;
// [Asm]   r16 -- r17;
// [Asm]   r14 -- r34;
// [Asm]   r14 -- r30;
// [Asm]   r8 -- r24;
// [Asm]   r12 -- r24;
// [Asm]   r1 -- r9;
// [Asm]   r26 -- r27;
// [Asm]   r24 -- r31;
// [Asm]   r13 -- r30;
// [Asm]   r13 -- r33;
// [Asm]   r13 -- r34;
// [Asm]   r15 -- r17;
// [Asm]   r5 -- r24;
// [Asm]   r24 -- r34;
// [Asm]   r9 -- r24;
// [Asm]   r13 -- r14;
// [Asm]   r22 -- r23;
// [Asm]   r24 -- r27;
// [Asm]   r13 -- r17;
// [Asm]   r1 -- r2;
// [Asm]   r28 -- r29;
// [Asm]   r15 -- r24;
// [Asm]   r1 -- r11;
// [Asm]   r1 -- r6;
// [Asm]   r1 -- r5;
// [Asm]   r2 -- r24;
// [Asm]   r1 -- r14;
// [Asm]   r1 -- r3;
// [Asm]   r24 -- r25;
// [Asm]   r16 -- r24;
// [Asm]   r15 -- r16;
// [Asm]   r20 -- r21;
// [Asm]   r15 -- r30;
// [Asm]   r14 -- r15;
// [Asm]   r10 -- r24;
// [Asm]   r30 -- r33;
// [Asm]   r24 -- r33;
// [Asm]   r1 -- r24;
// [Asm]   r18 -- r24;
// [Asm]   comment = "0:fv8-> 1:fa0-> 2:ft0-> 24:fv12-> 3:ft1-> 4:ft2-> 5:ft3-> 6:ft4-> 7:ft5-> 8:ft6-> 9:ft7-> 10:ft8-> 11:ft9-> 12:ft10-> 13:fa1-> 14:fa2-> 15:fa3-> 16:fa4-> 17:fa5-> 30:fv17-> 34:fv33-> 33:fv32-> 32:fv31-> 18:fa6-> 19:fa7-> 31:fv30-> 25:fv13-> 26:fv14-> 27:fv15-> 28:fv16-> 29:fv39-> 20:fv9-> 21:fv10-> 22:fv11-> 23:fv47"
// [Asm]   comment = "fv8<-fa0;fv32<-fa2;fv14<-fa0;fv39<-fa1;fv31<-fa1;fv12<-fs0;fv30<-fa0;fv9<-fa0;fv47<-fa1;fv15<-fa1;fv16<-fa0;fv33<-fa3;fv11<-fa0;fv17<-fa5;fv13<-fa0;fv10<-fa1;"
// [Asm] }
// [Asm] 
// [Asm] subst   mv v0, s10 ->   mv s0, s10
// [Asm] subst   mv v2, a0 ->   mv s1, a0
// [Asm] subst   mv v3, a1 ->   mv s2, a1
// [Asm] subst   lw v4, 8(v0) ->   lw s3, 8(s0)
// [Asm] subst   ld v5, 16(v0) ->   ld s4, 16(s0)
// [Asm] subst   bge v2, v4, .xloop10_7_1 ->   bge s1, s3, .xloop10_7_1
// [Asm] subst   ret ->   ret
// [Asm] subst   fcvt.d.w fv8, v2 ->   fcvt.d.w fa0, s1
// [Asm] subst   mv s10, v5 ->   mv s10, s4
// [Asm] subst   ld v51, 0(v5) ->   ld a0, 0(s4)
// [Asm] subst   jalr v51 ->   jalr a0
// [Asm] subst   fcvt.d.w fv10, v4 ->   fcvt.d.w fa1, s3
// [Asm] subst   fdiv.d fv11, fv9, fv10 ->   fdiv.d fa0, fa0, fa1
// [Asm] subst   li v46, 4609434218613702656 ->   li a0, 4609434218613702656
// [Asm] subst   fmv.d.x fv47, v46 ->   fmv.d.x fa1, a0
// [Asm] subst   fsub.d fv12, fv11, fv47 ->   fsub.d fs0, fa0, fa1
// [Asm] subst   fcvt.d.w fv13, v3 ->   fcvt.d.w fa0, s2
// [Asm] subst   mv s10, v5 ->   mv s10, s4
// [Asm] subst   ld v43, 0(v5) ->   ld a0, 0(s4)
// [Asm] subst   jalr v43 ->   jalr a0
// [Asm] subst   fcvt.d.w fv15, v4 ->   fcvt.d.w fa1, s3
// [Asm] subst   fdiv.d fv16, fv14, fv15 ->   fdiv.d fa0, fa0, fa1
// [Asm] subst   li v38, 4607182418800017408 ->   li a0, 4607182418800017408
// [Asm] subst   fmv.d.x fv39, v38 ->   fmv.d.x fa1, a0
// [Asm] subst   fsub.d fv17, fv16, fv39 ->   fsub.d fa5, fa0, fa1
// [Asm] subst   addi v35, s11, -16 ->   addi a0, s11, -16
// [Asm] subst   andi v6, v35, -8 ->   andi a0, a0, -8
// [Asm] subst   mv s11, v6 ->   mv s11, a0
// [Asm] subst   la v37, iloop29_9 ->   la a1, iloop29_9
// [Asm] subst   sd v37, 0(v6) ->   sd a1, 0(a0)
// [Asm] subst   sd v5, 8(v6) ->   sd s4, 8(a0)
// [Asm] subst   mv s10, v6 ->   mv s10, a0
// [Asm] subst   ld v28, 0(v6) ->   ld a1, 0(a0)
// [Asm] subst   li v29, 1000 ->   li a0, 1000
// [Asm] subst   fmv.d.x fv30, zero ->   fmv.d.x fa0, zero
// [Asm] subst   fmv.d.x fv31, zero ->   fmv.d.x fa1, zero
// [Asm] subst   fmv.d.x fv32, zero ->   fmv.d.x fa2, zero
// [Asm] subst   fmv.d.x fv33, zero ->   fmv.d.x fa3, zero
// [Asm] subst   fmv.d fa4, fv12 ->   fmv.d fa4, fs0
// [Asm] subst   jalr v28 ->   jalr a1
// [Asm] subst   addi v20, v2, 1 ->   addi a0, s1, 1
// [Asm] subst   mv s10, v0 ->   mv s10, s0
// [Asm] subst   ld v25, 0(v0) ->   ld a2, 0(s0)
// [Asm] subst   mv a1, v3 ->   mv a1, s2
// [Asm] subst   jalr v25 ->   jalr a2
// [Asm] subst   call minimbt_print_endline ->   call minimbt_print_endline
// [Asm] subst   mv v23, zero ->   mv a0, zero
// [Asm] subst   j .xloop10_7_3 ->   j .xloop10_7_3
// [Asm] pre_assigned_registers: Insn(iref=%2) -> v7, Insn(iref=%1) -> v6, Mem(fref=f0, mref=m1) -> v4, Self(fref=f0) -> v0, FnParam(fref=f0, fpref=$f.0) -> v2, Insn(iref=%0) -> v5, Mem(fref=f0, mref=m0) -> v3
// [Asm] defs: []
// [Asm] live_set: [s11, zero, a0]
// [Asm] move_origin: []
// [Asm] defs: [v2]
// [Asm] live_set: [s11, zero, v2]
// [Asm] move_origin: [a0]
// [Asm] defined: v2 is X
// [Asm] defs: [v13]
// [Asm] live_set: [zero, v13, v2]
// [Asm] move_origin: []
// [Asm] defined: v13 is X
// [Asm] defs: [v3]
// [Asm] live_set: [v2, zero, v3]
// [Asm] move_origin: []
// [Asm] defined: v3 is X
// [Asm] defs: [s11]
// [Asm] live_set: [v2, s11, zero, v3]
// [Asm] move_origin: [v3]
// [Asm] defined: s11 is X
// [Asm] defs: [v15]
// [Asm] live_set: [v2, s11, v15, zero, v3]
// [Asm] move_origin: []
// [Asm] defined: v15 is X
// [Asm] defs: []
// [Asm] live_set: [v2, s11, zero, v3]
// [Asm] move_origin: []
// [Asm] defs: [v10]
// [Asm] live_set: [v2, v10, zero, v3]
// [Asm] move_origin: []
// [Asm] defined: v10 is X
// [Asm] defs: [v4]
// [Asm] live_set: [v2, v4, zero, v3]
// [Asm] move_origin: []
// [Asm] defined: v4 is X
// [Asm] defs: [s11]
// [Asm] live_set: [v2, v4, zero, v3]
// [Asm] move_origin: [v4]
// [Asm] defined: s11 is X
// [Asm] defs: [v12]
// [Asm] live_set: [v2, v4, v12, zero, v3]
// [Asm] move_origin: []
// [Asm] defined: v12 is X
// [Asm] defs: []
// [Asm] live_set: [v2, v4, zero, v3]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v4, zero, v3]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: [v4, zero]
// [Asm] move_origin: []
// [Asm] defs: [s10]
// [Asm] live_set: [v4, zero]
// [Asm] move_origin: [v4]
// [Asm] defined: s10 is X
// [Asm] defs: [v8]
// [Asm] live_set: [zero, v8]
// [Asm] move_origin: []
// [Asm] defined: v8 is X
// [Asm] defs: []
// [Asm] live_set: [zero, v8]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [a0, v8]
// [Asm] move_origin: [zero]
// [Asm] defined: a0 is X
// [Asm] defs: [t0, t1, t2, t3, t4, a0, a1, a2, a3, a4, a5, a6, a7, ft0, ft1, ft2, ft3, ft4, ft5, ft6, ft7, ft8, ft9, ft10, fa0, fa1, fa2, fa3, fa4, fa5, fa6, fa7]
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defined: t0 is X
// [Asm] defined: t1 is X
// [Asm] defined: t2 is X
// [Asm] defined: t3 is X
// [Asm] defined: t4 is X
// [Asm] defined: a0 is X
// [Asm] defined: a1 is X
// [Asm] defined: a2 is X
// [Asm] defined: a3 is X
// [Asm] defined: a4 is X
// [Asm] defined: a5 is X
// [Asm] defined: a6 is X
// [Asm] defined: a7 is X
// [Asm] defined: ft0 is F
// [Asm] defined: ft1 is F
// [Asm] defined: ft2 is F
// [Asm] defined: ft3 is F
// [Asm] defined: ft4 is F
// [Asm] defined: ft5 is F
// [Asm] defined: ft6 is F
// [Asm] defined: ft7 is F
// [Asm] defined: ft8 is F
// [Asm] defined: ft9 is F
// [Asm] defined: ft10 is F
// [Asm] defined: fa0 is F
// [Asm] defined: fa1 is F
// [Asm] defined: fa2 is F
// [Asm] defined: fa3 is F
// [Asm] defined: fa4 is F
// [Asm] defined: fa5 is F
// [Asm] defined: fa6 is F
// [Asm] defined: fa7 is F
// [Asm] defs: [v7]
// [Asm] live_set: [v7]
// [Asm] move_origin: [a0]
// [Asm] defined: v7 is X
// [Asm] defs: []
// [Asm] live_set: [v7]
// [Asm] move_origin: []
// [Asm] defs: [a0]
// [Asm] live_set: [a0]
// [Asm] move_origin: [v7]
// [Asm] defined: a0 is X
// [Asm] defs: []
// [Asm] live_set: [a0]
// [Asm] move_origin: []
// [Asm] defs: []
// [Asm] live_set: []
// [Asm] move_origin: []
// [Asm] graph G {
// [Asm]   graph [label="integer interference graph of mandelbrot1_0"];
// [Asm]   r0 [label="v2 ← a0", color=green];
// [Asm]   r20 [label="a4", color=blue];
// [Asm]   r23 [label="a7", color=blue];
// [Asm]   r3 [label="v13 ← a1", color=green];
// [Asm]   r9 [label="s10", color=blue];
// [Asm]   r6 [label="v10 ← a2", color=green];
// [Asm]   r13 [label="t1", color=blue];
// [Asm]   r4 [label="v3 ← a1", color=green];
// [Asm]   r1 [label="s11", color=blue];
// [Asm]   r11 [label="a0", color=blue];
// [Asm]   r7 [label="v4 ← a2", color=green];
// [Asm]   r10 [label="v8 ← a1", color=green];
// [Asm]   r22 [label="a6", color=blue];
// [Asm]   r14 [label="t2", color=blue];
// [Asm]   r8 [label="v12 ← a3", color=green];
// [Asm]   r5 [label="v15 ← a2", color=green];
// [Asm]   r24 [label="v7 ← a0", color=green];
// [Asm]   r15 [label="t3", color=blue];
// [Asm]   r2 [label="zero", color=blue];
// [Asm]   r16 [label="t4", color=blue];
// [Asm]   r18 [label="a2", color=blue];
// [Asm]   r19 [label="a3", color=blue];
// [Asm]   r21 [label="a5", color=blue];
// [Asm]   r17 [label="a1", color=blue];
// [Asm]   r12 [label="t0", color=blue];
// [Asm]   r2 -- r6;
// [Asm]   r4 -- r5;
// [Asm]   r11 -- r20;
// [Asm]   r11 -- r13;
// [Asm]   r11 -- r17;
// [Asm]   r0 -- r2;
// [Asm]   r0 -- r3;
// [Asm]   r2 -- r4;
// [Asm]   r0 -- r8;
// [Asm]   r1 -- r4;
// [Asm]   r11 -- r14;
// [Asm]   r2 -- r8;
// [Asm]   r10 -- r11;
// [Asm]   r11 -- r16;
// [Asm]   r0 -- r5;
// [Asm]   r1 -- r2;
// [Asm]   r2 -- r5;
// [Asm]   r2 -- r10;
// [Asm]   r0 -- r1;
// [Asm]   r11 -- r12;
// [Asm]   r4 -- r7;
// [Asm]   r11 -- r23;
// [Asm]   r4 -- r8;
// [Asm]   r11 -- r22;
// [Asm]   r11 -- r15;
// [Asm]   r2 -- r7;
// [Asm]   r11 -- r18;
// [Asm]   r1 -- r5;
// [Asm]   r0 -- r4;
// [Asm]   r2 -- r9;
// [Asm]   r4 -- r6;
// [Asm]   r7 -- r8;
// [Asm]   r0 -- r7;
// [Asm]   r2 -- r3;
// [Asm]   r11 -- r19;
// [Asm]   r11 -- r21;
// [Asm]   r0 -- r6;
// [Asm]   comment = "0:v2-> 1:s11-> 2:zero-> 4:v3-> 5:v15-> 6:v10-> 7:v4-> 8:v12-> 3:v13-> 9:s10-> 10:v8-> 11:a0-> 12:t0-> 13:t1-> 14:t2-> 15:t3-> 16:t4-> 17:a1-> 18:a2-> 19:a3-> 20:a4-> 21:a5-> 22:a6-> 23:a7-> 24:v7"
// [Asm]   comment = "v2<-a0;v13<-a1;v10<-a2;v3<-a1;v4<-a2;v8<-a1;v12<-a3;v15<-a2;v7<-a0;"
// [Asm] }
// [Asm] 
// [Asm] graph G {
// [Asm]   graph [label="float interference graph of mandelbrot1_0"];
// [Asm]   r0 [label="ft0", color=blue];
// [Asm]   r3 [label="ft3", color=blue];
// [Asm]   r9 [label="ft9", color=blue];
// [Asm]   r6 [label="ft6", color=blue];
// [Asm]   r13 [label="fa2", color=blue];
// [Asm]   r4 [label="ft4", color=blue];
// [Asm]   r1 [label="ft1", color=blue];
// [Asm]   r11 [label="fa0", color=blue];
// [Asm]   r7 [label="ft7", color=blue];
// [Asm]   r10 [label="ft10", color=blue];
// [Asm]   r14 [label="fa3", color=blue];
// [Asm]   r8 [label="ft8", color=blue];
// [Asm]   r5 [label="ft5", color=blue];
// [Asm]   r15 [label="fa4", color=blue];
// [Asm]   r2 [label="ft2", color=blue];
// [Asm]   r16 [label="fa5", color=blue];
// [Asm]   r18 [label="fa7", color=blue];
// [Asm]   r17 [label="fa6", color=blue];
// [Asm]   r12 [label="fa1", color=blue];
// [Asm]   comment = "0:ft0-> 1:ft1-> 2:ft2-> 3:ft3-> 4:ft4-> 5:ft5-> 6:ft6-> 7:ft7-> 8:ft8-> 9:ft9-> 10:ft10-> 11:fa0-> 12:fa1-> 13:fa2-> 14:fa3-> 15:fa4-> 16:fa5-> 17:fa6-> 18:fa7"
// [Asm]   comment = ""
// [Asm] }
// [Asm] 
// [Asm] subst   addi v13, s11, -8 ->   addi a1, s11, -8
// [Asm] subst   andi v3, v13, -8 ->   andi a1, a1, -8
// [Asm] subst   mv s11, v3 ->   mv s11, a1
// [Asm] subst   la v15, dbl4_3 ->   la a2, dbl4_3
// [Asm] subst   sd v15, 0(v3) ->   sd a2, 0(a1)
// [Asm] subst   addi v10, s11, -24 ->   addi a2, s11, -24
// [Asm] subst   andi v4, v10, -8 ->   andi a2, a2, -8
// [Asm] subst   mv s11, v4 ->   mv s11, a2
// [Asm] subst   la v12, yloop7_5 ->   la a3, yloop7_5
// [Asm] subst   sd v12, 0(v4) ->   sd a3, 0(a2)
// [Asm] subst   sd v2, 8(v4) ->   sd a0, 8(a2)
// [Asm] subst   sd v3, 16(v4) ->   sd a1, 16(a2)
// [Asm] subst   mv s10, v4 ->   mv s10, a2
// [Asm] subst   ld v8, 0(v4) ->   ld a1, 0(a2)
// [Asm] subst   mv a0, zero ->   mv a0, zero
// [Asm] subst   jalr v8 ->   jalr a1
// [Asm] subst   ret ->   ret
// [Asm] before colored: # leaf false
// [Asm] main75_1:
// [Asm] # block info: defs: [v2, t1, ft0, ft1, a1, fa1, fa2, ft6, a4, fa6, a6, ft5, ft10, ft7, ft4, ft9, a5, a0, fa4, ft2, a2, a3, ft8, t3, a7, fa7, t0, fa5, fa3, ft3, fa0, t4, t2, v3], uses: [v2, a0, v3], upward_exposed: [], params_defs: []
// [Asm] # live_in: [], live_out: []
// [Asm] # block parameters: []
// [Asm] .main75_1_0:
// [Asm]   # save_ctx1  # live: []
// [Asm]   # save_ctx2  # live: []
// [Asm]   li v3, 40  # live: [v3]
// [Asm]   mv a0, v3  # live: [a0]
// [Asm]   call mandelbrot1_0  # live: [a0]
// [Asm]   mv v2, a0  # live: [v2]
// [Asm]   # restore_ctx2  # live: [v2]
// [Asm] # control
// [Asm]   mv a0, v2  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # leaf false
// [Asm] T$start_12:
// [Asm] # block info: defs: [t1, ft0, ft1, a1, fa1, fa2, ft6, a4, fa6, a6, ft5, ft10, ft7, ft4, ft9, a5, a0, fa4, ft2, a2, a3, ft8, t3, a7, fa7, t0, fa5, fa3, ft3, fa0, t4, t2, v2], uses: [a0, v2], upward_exposed: [], params_defs: []
// [Asm] # live_in: [], live_out: []
// [Asm] # block parameters: []
// [Asm] .T$start_12_0:
// [Asm]   # save_ctx1  # live: []
// [Asm]   # save_ctx2  # live: []
// [Asm]   call main75_1  # live: [a0]
// [Asm]   mv v2, a0  # live: [v2]
// [Asm]   # restore_ctx2  # live: [v2]
// [Asm] # control
// [Asm]   mv a0, v2  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # leaf false
// [Asm] iloop29_9:
// [Asm] # block info: defs: [v2, fv5, fv8, v0, fv4, fv6, fv3, v9, fv7], uses: [fa5, fa2, fa3, a0, fa4, zero, fa0, v0, s10, fa1, v2], upward_exposed: [fa5, fa2, fa3, a0, fa4, zero, fa0, s10, fa1], params_defs: []
// [Asm] # live_in: [fa5, fa2, fa3, zero, a0, fa4, fa0, s10, fa1], live_out: [v2, fv5, zero, fv8, v0, fv4, fv6, v9, fv3, fv7]
// [Asm] # block parameters: []
// [Asm] .iloop29_9_0:
// [Asm]   # save_ctx1  # live: [fa5, fa3, fa2, fa4, zero, a0, fa0, fa1, s10]
// [Asm]   mv v0, s10  # live: [fa5, fa3, fa2, fa4, zero, a0, fa0, v0, fa1]
// [Asm]   mv v2, a0  # live: [fa5, fa3, fa2, fa4, zero, fa0, v0, fa1, v2]
// [Asm]   fmv.d fv3, fa0  # live: [fa5, fa3, fa2, fa4, zero, v0, fv3, fa1, v2]
// [Asm]   fmv.d fv4, fa1  # live: [fa5, fa3, fa2, fa4, zero, v0, fv4, fv3, v2]
// [Asm]   fmv.d fv5, fa2  # live: [fv5, fa5, fa3, zero, fa4, v0, fv4, fv3, v2]
// [Asm]   fmv.d fv6, fa3  # live: [fv5, fa5, zero, fa4, v0, fv4, fv6, fv3, v2]
// [Asm]   fmv.d fv7, fa4  # live: [fv5, fa5, zero, v0, fv4, fv6, fv3, fv7, v2]
// [Asm]   fmv.d fv8, fa5  # live: [fv5, zero, fv8, v0, fv4, fv6, fv3, fv7, v2]
// [Asm]   ld v9, 8(v0)  # live: [v2, fv5, zero, fv8, v0, fv4, fv6, v9, fv3, fv7]
// [Asm] # control
// [Asm]   beq v2, zero, .iloop29_9_1  # live: [v2, fv5, zero, fv8, v0, fv4, fv6, v9, fv3, fv7]
// [Asm] 
// [Asm] # block info: defs: [t1, fv19, fv12, ft0, ft1, a1, fv15, fv16, fa1, fv38, fa2, ft6, fv36, fa6, a4, v20, a6, ft5, ft10, ft7, ft4, ft9, a5, a0, fa4, ft2, a2, v37, v43, a3, s10, ft8, a7, t3, fa7, t0, fa5, fa3, fv11, ft3, fa0, fv13, v35, t4, t2, fv18, fv17], uses: [fv8, fv19, fv12, v37, v43, fv4, fv15, fv6, fv16, v9, fv38, fv5, fv11, fv36, zero, v20, v35, fa0, fv13, fv18, fv3, fv7], upward_exposed: [fv5, zero, fv8, fv4, fv6, v9, fv3, fv7], params_defs: []
// [Asm] # live_in: [v2, fv5, zero, fv8, v0, fv4, fv6, v9, fv3, fv7], live_out: [v2, zero, fv8, v0, fv12, fv15, fv16, fv17, fv7]
// [Asm] # block parameters: []
// [Asm] .iloop29_9_2:
// [Asm]   fsub.d fv11, fv5, fv6  # live: [v2, zero, fv11, fv8, v0, fv4, fv3, v9, fv7]
// [Asm]   fadd.d fv12, fv11, fv7  # live: [v2, zero, fv8, v0, fv12, fv4, fv3, v9, fv7]
// [Asm]   mv s10, v9  # live: [v2, zero, fv8, v0, fv12, fv4, fv3, v9, fv7]
// [Asm]   ld v43, 0(v9)  # live: [zero, fv8, v0, fv12, fv4, v43, fv3, fv7, v2]
// [Asm]   # save_ctx2  # live: [zero, fv8, v0, fv12, fv4, v43, fv3, fv7, v2]
// [Asm]   fmv.d fa0, fv3  # live: [zero, fv8, fa0, v0, fv12, fv4, v43, fv7, v2]
// [Asm]   jalr v43  # live: [zero, fv8, fa0, v0, fv12, fv4, fv7, v2]
// [Asm]   fmv.d fv13, fa0  # live: [zero, fv8, fv13, v0, fv12, fv4, fv7, v2]
// [Asm]   # restore_ctx2  # live: [zero, fv8, fv13, v0, fv12, fv4, fv7, v2]
// [Asm]   fmadd.d fv15, fv13, fv4, fv8  # live: [zero, fv8, v0, fv12, fv15, fv7, v2]
// [Asm]   fmul.d fv16, fv12, fv12  # live: [zero, fv8, v0, fv12, fv15, fv16, fv7, v2]
// [Asm]   fmul.d fv17, fv15, fv15  # live: [v2, zero, fv8, v0, fv12, fv15, fv16, fv17, fv7]
// [Asm]   li v35, 4611686018427387904  # live: [v2, zero, fv8, v35, v0, fv12, fv15, fv16, fv17, fv7]
// [Asm]   fmv.d.x fv36, v35  # live: [v2, zero, fv36, fv8, v0, fv12, fv15, fv16, fv17, fv7]
// [Asm]   li v37, 4611686018427387904  # live: [v2, zero, fv36, fv8, v0, fv12, v37, fv15, fv16, fv17, fv7]
// [Asm]   fmv.d.x fv38, v37  # live: [fv38, v2, zero, fv36, fv8, v0, fv12, fv15, fv16, fv17, fv7]
// [Asm]   fmul.d fv18, fv36, fv38  # live: [fv7, v2, zero, fv8, v0, fv12, fv15, fv16, fv18, fv17]
// [Asm]   fmadd.d fv19, fv15, fv15, fv16  # live: [fv7, v2, zero, fv8, v0, fv19, fv12, fv15, fv16, fv18, fv17]
// [Asm]   fle.d v20, fv18, fv19  # live: [v2, zero, v20, fv8, v0, fv12, fv15, fv16, fv17, fv7]
// [Asm] # control
// [Asm]   bne v20, zero, .iloop29_9_3  # live: [v2, zero, fv8, v0, fv12, fv15, fv16, fv17, fv7]
// [Asm] 
// [Asm] # block info: defs: [t1, v22, ft0, ft1, a1, fa1, fa2, ft6, a4, fa6, a6, ft5, ft10, ft7, ft4, v21, ft9, a5, a0, fa4, v30, ft2, a2, a3, v24, s10, ft8, t3, a7, fa7, t0, fa5, fa3, ft3, fa0, t4, t2], uses: [v21, fa4, a0, v30, v22, fv8, v0, fv12, fv15, fv16, fa1, fa5, fa2, fa3, fa0, fv17, fv7, v2], upward_exposed: [v2, fv8, v0, fv12, fv15, fv16, fv17, fv7], params_defs: []
// [Asm] # live_in: [v2, fv8, v0, fv12, fv15, fv16, fv17, fv7], live_out: [v24]
// [Asm] # block parameters: []
// [Asm] .iloop29_9_4:
// [Asm]   addi v21, v2, -1  # live: [v21, fv8, v0, fv12, fv16, fv15, fv17, fv7]
// [Asm]   mv s10, v0  # live: [v21, fv8, v0, fv12, fv16, fv15, fv17, fv7]
// [Asm]   ld v30, 0(v0)  # live: [v21, v30, fv8, fv12, fv16, fv15, fv17, fv7]
// [Asm]   # save_ctx2  # live: [v21, v30, fv8, fv12, fv16, fv15, fv17, fv7]
// [Asm]   mv a0, v21  # live: [a0, v30, fv8, fv12, fv16, fv15, fv17, fv7]
// [Asm]   fmv.d fa0, fv12  # live: [a0, v30, fa0, fv8, fv16, fv15, fv17, fv7]
// [Asm]   fmv.d fa1, fv15  # live: [a0, v30, fa0, fv8, fv16, fa1, fv17, fv7]
// [Asm]   fmv.d fa2, fv16  # live: [fa2, a0, v30, fa0, fv8, fa1, fv17, fv7]
// [Asm]   fmv.d fa3, fv17  # live: [fa2, fa3, a0, v30, fa0, fv8, fa1, fv7]
// [Asm]   fmv.d fa4, fv7  # live: [fa2, fa3, fa4, a0, v30, fa0, fv8, fa1]
// [Asm]   fmv.d fa5, fv8  # live: [fa5, fa2, fa3, fa4, a0, v30, fa0, fa1]
// [Asm]   jalr v30  # live: [a0]
// [Asm]   mv v22, a0  # live: [v22]
// [Asm]   # restore_ctx2  # live: [v22]
// [Asm] # control
// [Asm]   mv v24, v22  # live: [v24]
// [Asm] 
// [Asm] # block info: defs: [v26], uses: [v24], upward_exposed: [v24], params_defs: [v24]
// [Asm] # live_in: [v24], live_out: [v26]
// [Asm] # block parameters: [v24]
// [Asm] .iloop29_9_5:
// [Asm] # control
// [Asm]   mv v26, v24  # live: [v26]
// [Asm] 
// [Asm] # block info: defs: [a0], uses: [v26, a0], upward_exposed: [v26], params_defs: [v26]
// [Asm] # live_in: [v26], live_out: []
// [Asm] # block parameters: [v26]
// [Asm] .iloop29_9_6:
// [Asm] # control
// [Asm]   mv a0, v26  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # block info: defs: [v25, t1, v26, ft0, ft1, a1, fa1, fa2, ft6, v27, a4, fa6, a6, ft10, ft5, ft7, ft4, ft9, a5, a0, fa4, ft2, a2, a3, ft8, t3, a7, fa7, t0, fa5, fa3, ft3, fa0, t4, t2], uses: [v25, a0, v27], upward_exposed: [], params_defs: []
// [Asm] # live_in: [], live_out: [v26]
// [Asm] # block parameters: []
// [Asm] .iloop29_9_1:
// [Asm]   # save_ctx2  # live: []
// [Asm]   li v27, 1  # live: [v27]
// [Asm]   mv a0, v27  # live: [a0]
// [Asm]   call minimbt_print_int  # live: [a0]
// [Asm]   mv v25, a0  # live: [v25]
// [Asm]   # restore_ctx2  # live: [v25]
// [Asm] # control
// [Asm]   mv v26, v25  # live: [v26]
// [Asm]   j .iloop29_9_6  # live: [v26]
// [Asm] 
// [Asm] # block info: defs: [t1, ft0, ft1, a1, fa1, fa2, ft6, a4, fa6, a6, ft5, ft10, ft7, ft4, ft9, a5, a0, fa4, ft2, a2, a3, v24, ft8, t3, a7, fa7, t0, fa5, fa3, ft3, v23, fa0, t4, t2], uses: [zero, a0, v23], upward_exposed: [zero], params_defs: []
// [Asm] # live_in: [zero], live_out: [v24]
// [Asm] # block parameters: []
// [Asm] .iloop29_9_3:
// [Asm]   # save_ctx2  # live: [zero]
// [Asm]   mv a0, zero  # live: [a0]
// [Asm]   call minimbt_print_int  # live: [a0]
// [Asm]   mv v23, a0  # live: [v23]
// [Asm]   # restore_ctx2  # live: [v23]
// [Asm] # control
// [Asm]   mv v24, v23  # live: [v24]
// [Asm]   j .iloop29_9_5  # live: [v24]
// [Asm] 
// [Asm] # leaf false
// [Asm] mandelbrot1_0:
// [Asm] # block info: defs: [v2, t1, v13, v7, ft0, ft1, a1, s11, v12, fa1, fa2, ft6, a4, fa6, v8, a6, ft5, ft10, v4, ft7, ft4, v10, ft9, a5, a0, fa4, ft2, a2, a3, s10, ft8, a7, t3, fa7, t0, fa5, fa3, ft3, fa0, t4, t2, v15, v3], uses: [v2, v10, v13, a0, zero, v8, v7, v4, s11, v15, v12, v3], upward_exposed: [s11, a0, zero], params_defs: []
// [Asm] # live_in: [s11, a0, zero], live_out: []
// [Asm] # block parameters: []
// [Asm] .mandelbrot1_0_0:
// [Asm]   # save_ctx1  # live: [s11, zero, a0]
// [Asm]   mv v2, a0  # live: [s11, zero, v2]
// [Asm]   addi v13, s11, -8  # live: [zero, v13, v2]
// [Asm]   andi v3, v13, -8  # live: [v2, zero, v3]
// [Asm]   mv s11, v3  # live: [v2, s11, zero, v3]
// [Asm]   la v15, dbl4_3  # live: [v2, s11, v15, zero, v3]
// [Asm]   sd v15, 0(v3)  # live: [v2, s11, zero, v3]
// [Asm]   addi v10, s11, -24  # live: [v2, v10, zero, v3]
// [Asm]   andi v4, v10, -8  # live: [v2, v4, zero, v3]
// [Asm]   mv s11, v4  # live: [v2, v4, zero, v3]
// [Asm]   la v12, yloop7_5  # live: [v2, v4, v12, zero, v3]
// [Asm]   sd v12, 0(v4)  # live: [v2, v4, zero, v3]
// [Asm]   sd v2, 8(v4)  # live: [v4, zero, v3]
// [Asm]   sd v3, 16(v4)  # live: [v4, zero]
// [Asm]   mv s10, v4  # live: [v4, zero]
// [Asm]   ld v8, 0(v4)  # live: [zero, v8]
// [Asm]   # save_ctx2  # live: [zero, v8]
// [Asm]   mv a0, zero  # live: [a0, v8]
// [Asm]   jalr v8  # live: [a0]
// [Asm]   mv v7, a0  # live: [v7]
// [Asm]   # restore_ctx2  # live: [v7]
// [Asm] # control
// [Asm]   mv a0, v7  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # leaf true
// [Asm] dbl4_3:
// [Asm] # block info: defs: [v0, fv2, fv3, fa0], uses: [fv2, s10, fv3, fa0], upward_exposed: [s10, fa0], params_defs: []
// [Asm] # live_in: [s10, fa0], live_out: []
// [Asm] # block parameters: []
// [Asm] .dbl4_3_0:
// [Asm]   # save_ctx1  # live: [s10, fa0]
// [Asm]   mv v0, s10  # live: [fa0]
// [Asm]   fmv.d fv2, fa0  # live: [fv2]
// [Asm]   fadd.d fv3, fv2, fv2  # live: [fv3]
// [Asm] # control
// [Asm]   fmv.d fa0, fv3  # live: [fa0]
// [Asm]   # restore_ctx1  # live: [fa0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # leaf false
// [Asm] minimbt_main:
// [Asm] # block info: defs: [t1, ft0, ft1, a1, s11, ra, fa1, fa2, ft6, a4, fa6, a6, ft5, ft10, s0, ft7, ft4, ft9, a5, a0, fa4, ft2, a2, sp, a3, ft8, a7, t3, fa7, t0, fa5, fa3, ft3, fa0, t4, t2], uses: [sp, s0, ra, s11, a0], upward_exposed: [s0, ra, s11], params_defs: []
// [Asm] # live_in: [s0, ra, s11], live_out: []
// [Asm] # block parameters: []
// [Asm] .minimbt_main_b0:
// [Asm]   addi sp, sp, -32  # live: [s0, ra, s11]
// [Asm]   sd ra, 0(sp)  # live: [s0, s11]
// [Asm]   sd s0, 8(sp)  # live: [s11]
// [Asm]   sd s11, 16(sp)  # live: []
// [Asm]   la s11, large_heap_end  # live: []
// [Asm]   mv s0, sp  # live: [s0]
// [Asm]   la sp, large_stack_end  # live: [s0]
// [Asm]   call T$start_12  # live: [s0, a0]
// [Asm]   mv sp, s0  # live: [a0]
// [Asm]   ld ra, 0(sp)  # live: [a0]
// [Asm]   ld s0, 8(sp)  # live: [a0]
// [Asm]   ld s11, 16(sp)  # live: [a0]
// [Asm]   addi sp, sp, 32  # live: [a0]
// [Asm] # control
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # leaf false
// [Asm] yloop7_5:
// [Asm] # block info: defs: [v3, v0, v4, v2], uses: [v3, v0, s10, a0, v2], upward_exposed: [s10, a0], params_defs: []
// [Asm] # live_in: [s11, s10, a0, zero], live_out: [v2, zero, v0, v4, s11, v3]
// [Asm] # block parameters: []
// [Asm] .yloop7_5_0:
// [Asm]   # save_ctx1  # live: [zero, a0, s11, s10]
// [Asm]   mv v0, s10  # live: [zero, a0, v0, s11]
// [Asm]   mv v2, a0  # live: [zero, v0, s11, v2]
// [Asm]   lw v3, 8(v0)  # live: [v2, zero, v0, s11, v3]
// [Asm]   ld v4, 16(v0)  # live: [v2, zero, v0, v4, s11, v3]
// [Asm] # control
// [Asm]   bge v2, v3, .yloop7_5_1  # live: [v3, v0, v4, s11, zero, v2]
// [Asm] 
// [Asm] # block info: defs: [t1, ft0, ft1, a1, s11, v12, fa1, fa2, ft6, a4, fa6, v8, a6, v19, ft10, ft5, ft7, v11, ft4, v5, ft9, v10, a5, fa4, a0, ft2, a2, v17, a3, s10, v9, ft8, a7, t3, fa7, t0, fa5, fa3, ft3, fa0, t4, t2, v15], uses: [v3, v5, v10, a0, v0, a1, v17, s11, v12, v9, zero, v19, v4, v15, v2], upward_exposed: [v3, zero, v0, v4, s11, v2], params_defs: []
// [Asm] # live_in: [v3, zero, v0, v4, s11, v2], live_out: [v11]
// [Asm] # block parameters: []
// [Asm] .yloop7_5_2:
// [Asm]   addi v17, s11, -24  # live: [v2, zero, v0, v4, v17, v3]
// [Asm]   andi v5, v17, -8  # live: [v2, v5, zero, v0, v4, v3]
// [Asm]   mv s11, v5  # live: [v2, v5, zero, v0, v4, v3]
// [Asm]   la v19, xloop10_7  # live: [v2, v5, zero, v0, v19, v4, v3]
// [Asm]   sd v19, 0(v5)  # live: [v2, v5, zero, v0, v4, v3]
// [Asm]   sd v3, 8(v5)  # live: [v0, v4, v5, zero, v2]
// [Asm]   sd v4, 16(v5)  # live: [v0, v5, zero, v2]
// [Asm]   mv s10, v5  # live: [v0, v5, zero, v2]
// [Asm]   ld v15, 0(v5)  # live: [v0, v15, zero, v2]
// [Asm]   # save_ctx2  # live: [v0, v15, zero, v2]
// [Asm]   mv a0, zero  # live: [v0, v15, a0, v2]
// [Asm]   mv a1, v2  # live: [v0, a1, v15, a0, v2]
// [Asm]   jalr v15  # live: [v0, a0, v2]
// [Asm]   mv v8, a0  # live: [v0, v2]
// [Asm]   # restore_ctx2  # live: [v0, v2]
// [Asm]   addi v9, v2, 1  # live: [v0, v9]
// [Asm]   mv s10, v0  # live: [v0, v9]
// [Asm]   ld v12, 0(v0)  # live: [v12, v9]
// [Asm]   # save_ctx2  # live: [v12, v9]
// [Asm]   mv a0, v9  # live: [v12, a0]
// [Asm]   jalr v12  # live: [a0]
// [Asm]   mv v10, a0  # live: [v10]
// [Asm]   # restore_ctx2  # live: [v10]
// [Asm] # control
// [Asm]   mv v11, v10  # live: [v11]
// [Asm] 
// [Asm] # block info: defs: [a0], uses: [v11, a0], upward_exposed: [v11], params_defs: [v11]
// [Asm] # live_in: [v11], live_out: []
// [Asm] # block parameters: [v11]
// [Asm] .yloop7_5_3:
// [Asm] # control
// [Asm]   mv a0, v11  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # block info: defs: [v11], uses: [zero], upward_exposed: [zero], params_defs: []
// [Asm] # live_in: [zero], live_out: [v11]
// [Asm] # block parameters: []
// [Asm] .yloop7_5_1:
// [Asm] # control
// [Asm]   mv v11, zero  # live: [v11]
// [Asm]   j .yloop7_5_3  # live: [v11]
// [Asm] 
// [Asm] # leaf false
// [Asm] xloop10_7:
// [Asm] # block info: defs: [v3, v0, v4, v5, v2], uses: [v0, v4, a1, s10, a0, v2], upward_exposed: [a1, s10, a0], params_defs: []
// [Asm] # live_in: [a1, s11, s10, a0, zero], live_out: [v2, v5, zero, v0, v4, s11, v3]
// [Asm] # block parameters: []
// [Asm] .xloop10_7_0:
// [Asm]   # save_ctx1  # live: [zero, a0, a1, s11, s10]
// [Asm]   mv v0, s10  # live: [zero, a0, v0, a1, s11]
// [Asm]   mv v2, a0  # live: [zero, v0, a1, s11, v2]
// [Asm]   mv v3, a1  # live: [v3, zero, v0, s11, v2]
// [Asm]   lw v4, 8(v0)  # live: [v3, zero, v0, v4, s11, v2]
// [Asm]   ld v5, 16(v0)  # live: [v3, v5, zero, v0, v4, s11, v2]
// [Asm] # control
// [Asm]   bge v2, v4, .xloop10_7_1  # live: [v3, v5, zero, v0, v4, s11, v2]
// [Asm] 
// [Asm] # block info: defs: [fv39, fv30, fv12, a1, fv47, s11, fv15, v28, fa1, v51, fa2, ft6, a4, fa6, v20, a6, ft10, ft5, v6, ft4, ft9, fa4, ft2, v37, v43, a3, a7, fa7, fa3, fv11, ft3, t2, fv17, v25, t1, fv10, ft0, ft1, fv14, fv16, v29, v19, ft7, v46, fv32, v21, a5, a0, fv8, a2, s10, ft8, t3, fv9, t0, fa5, fv31, v23, fa0, fv13, v35, fv33, t4, v38], uses: [v2, v25, fv10, fv39, fv30, v0, fv12, a1, fv47, fv14, s11, fv16, fv15, v28, fa1, v51, fa2, v29, zero, v20, v4, v6, v46, v5, fv32, v21, a0, fa4, fv8, v37, v43, fv9, fa5, fv31, fa3, fv11, fv13, v35, fa0, fv33, v38, fv17, v3], upward_exposed: [v2, v5, zero, v0, v4, s11, v3], params_defs: []
// [Asm] # live_in: [v3, v5, zero, v0, v4, s11, v2], live_out: [v23]
// [Asm] # block parameters: []
// [Asm] .xloop10_7_2:
// [Asm]   fcvt.d.w fv8, v2  # live: [v3, v5, zero, fv8, v0, v4, s11, v2]
// [Asm]   mv s10, v5  # live: [v3, v5, zero, fv8, v0, v4, s11, v2]
// [Asm]   ld v51, 0(v5)  # live: [v3, v51, v5, zero, fv8, v0, v4, s11, v2]
// [Asm]   # save_ctx2  # live: [v3, v51, v5, zero, fv8, v0, v4, s11, v2]
// [Asm]   fmv.d fa0, fv8  # live: [v3, v51, v5, zero, fa0, v0, v4, s11, v2]
// [Asm]   jalr v51  # live: [v3, v5, zero, fa0, v0, v4, s11, v2]
// [Asm]   fmv.d fv9, fa0  # live: [v3, fv9, v5, zero, v0, v4, s11, v2]
// [Asm]   # restore_ctx2  # live: [v3, fv9, v5, zero, v0, v4, s11, v2]
// [Asm]   fcvt.d.w fv10, v4  # live: [v3, fv9, fv10, v5, zero, v0, v4, s11, v2]
// [Asm]   fdiv.d fv11, fv9, fv10  # live: [v3, v5, zero, fv11, v0, v4, s11, v2]
// [Asm]   li v46, 4609434218613702656  # live: [v3, v5, v46, zero, fv11, v0, v4, s11, v2]
// [Asm]   fmv.d.x fv47, v46  # live: [v3, v5, zero, fv11, v0, v4, s11, fv47, v2]
// [Asm]   fsub.d fv12, fv11, fv47  # live: [v3, v5, zero, v0, fv12, v4, s11, v2]
// [Asm]   fcvt.d.w fv13, v3  # live: [v3, v5, zero, fv13, v0, fv12, v4, s11, v2]
// [Asm]   mv s10, v5  # live: [v3, v5, zero, fv13, v0, fv12, v4, s11, v2]
// [Asm]   ld v43, 0(v5)  # live: [v3, v5, zero, fv13, v0, fv12, v4, v43, s11, v2]
// [Asm]   # save_ctx2  # live: [v3, v5, zero, fv13, v0, fv12, v4, v43, s11, v2]
// [Asm]   fmv.d fa0, fv13  # live: [v3, v5, zero, fa0, v0, fv12, v4, v43, s11, v2]
// [Asm]   jalr v43  # live: [v3, v5, zero, fa0, v0, fv12, v4, s11, v2]
// [Asm]   fmv.d fv14, fa0  # live: [v3, v5, zero, v0, fv12, v4, s11, fv14, v2]
// [Asm]   # restore_ctx2  # live: [v3, v5, zero, v0, fv12, v4, s11, fv14, v2]
// [Asm]   fcvt.d.w fv15, v4  # live: [v3, v5, zero, v0, fv12, s11, fv14, fv15, v2]
// [Asm]   fdiv.d fv16, fv14, fv15  # live: [v3, v5, zero, v0, fv12, s11, fv16, v2]
// [Asm]   li v38, 4607182418800017408  # live: [v3, v5, zero, v0, fv12, v38, s11, fv16, v2]
// [Asm]   fmv.d.x fv39, v38  # live: [v3, v5, zero, fv39, v0, fv12, s11, fv16, v2]
// [Asm]   fsub.d fv17, fv16, fv39  # live: [v3, v5, zero, v0, fv12, s11, fv17, v2]
// [Asm]   addi v35, s11, -16  # live: [v3, v5, zero, v35, v0, fv12, fv17, v2]
// [Asm]   andi v6, v35, -8  # live: [v3, v5, zero, v0, fv12, v6, fv17, v2]
// [Asm]   mv s11, v6  # live: [v3, v5, zero, v0, fv12, v6, fv17, v2]
// [Asm]   la v37, iloop29_9  # live: [v3, v5, zero, v0, fv12, v37, v6, fv17, v2]
// [Asm]   sd v37, 0(v6)  # live: [v3, v5, zero, v0, fv12, v6, fv17, v2]
// [Asm]   sd v5, 8(v6)  # live: [v3, zero, v0, fv12, v6, fv17, v2]
// [Asm]   mv s10, v6  # live: [v3, zero, v0, fv12, v6, fv17, v2]
// [Asm]   ld v28, 0(v6)  # live: [v3, zero, v0, fv12, v28, fv17, v2]
// [Asm]   # save_ctx2  # live: [v3, zero, v0, fv12, v28, fv17, v2]
// [Asm]   li v29, 1000  # live: [v3, zero, v29, v0, fv12, v28, fv17, v2]
// [Asm]   mv a0, v29  # live: [v3, a0, zero, v0, fv12, v28, fv17, v2]
// [Asm]   fmv.d.x fv30, zero  # live: [v3, a0, zero, fv30, v0, fv12, v28, fv17, v2]
// [Asm]   fmv.d fa0, fv30  # live: [v3, a0, zero, fa0, v0, fv12, v28, fv17, v2]
// [Asm]   fmv.d.x fv31, zero  # live: [v3, fv31, a0, zero, fa0, v0, fv12, v28, fv17, v2]
// [Asm]   fmv.d fa1, fv31  # live: [v3, a0, zero, fa0, v0, fv12, v28, fa1, fv17, v2]
// [Asm]   fmv.d.x fv32, zero  # live: [v3, fv32, a0, zero, fa0, v0, fv12, v28, fa1, fv17, v2]
// [Asm]   fmv.d fa2, fv32  # live: [v3, fa2, a0, zero, fa0, v0, fv12, v28, fa1, fv17, v2]
// [Asm]   fmv.d.x fv33, zero  # live: [v3, fa2, a0, fa0, fv33, v0, fv12, v28, fa1, fv17, v2]
// [Asm]   fmv.d fa3, fv33  # live: [v3, fa2, fa3, a0, fa0, v0, fv12, v28, fa1, fv17, v2]
// [Asm]   fmv.d fa4, fv12  # live: [v3, fa2, fa3, fa4, a0, fa0, v0, v28, fa1, fv17, v2]
// [Asm]   fmv.d fa5, fv17  # live: [v3, fa5, fa2, fa3, fa4, a0, fa0, v0, v28, fa1, v2]
// [Asm]   jalr v28  # live: [v2, v0, a0, v3]
// [Asm]   mv v19, a0  # live: [v2, v0, v3]
// [Asm]   # restore_ctx2  # live: [v2, v0, v3]
// [Asm]   addi v20, v2, 1  # live: [v0, v20, v3]
// [Asm]   mv s10, v0  # live: [v0, v20, v3]
// [Asm]   ld v25, 0(v0)  # live: [v25, v20, v3]
// [Asm]   # save_ctx2  # live: [v25, v20, v3]
// [Asm]   mv a0, v20  # live: [v25, a0, v3]
// [Asm]   mv a1, v3  # live: [v25, a1, a0]
// [Asm]   jalr v25  # live: [a0]
// [Asm]   mv v21, a0  # live: [v21]
// [Asm]   # restore_ctx2  # live: [v21]
// [Asm] # control
// [Asm]   mv v23, v21  # live: [v23]
// [Asm] 
// [Asm] # block info: defs: [a0], uses: [a0, v23], upward_exposed: [v23], params_defs: [v23]
// [Asm] # live_in: [v23], live_out: []
// [Asm] # block parameters: [v23]
// [Asm] .xloop10_7_3:
// [Asm] # control
// [Asm]   mv a0, v23  # live: [a0]
// [Asm]   # restore_ctx1  # live: [a0]
// [Asm]   ret  # live: []
// [Asm] 
// [Asm] # block info: defs: [t1, v22, ft0, ft1, a1, fa1, fa2, ft6, a4, fa6, a6, ft5, ft10, ft7, ft4, ft9, a5, a0, fa4, ft2, a2, a3, ft8, t3, a7, fa7, t0, fa5, fa3, ft3, v23, fa0, t4, t2], uses: [a0, zero], upward_exposed: [zero], params_defs: []
// [Asm] # live_in: [zero], live_out: [v23]
// [Asm] # block parameters: []
// [Asm] .xloop10_7_1:
// [Asm]   # save_ctx2  # live: [zero]
// [Asm]   call minimbt_print_endline  # live: [zero, a0]
// [Asm]   mv v22, a0  # live: [zero]
// [Asm]   # restore_ctx2  # live: [zero]
// [Asm] # control
// [Asm]   mv v23, zero  # live: [v23]
// [Asm]   j .xloop10_7_3  # live: [v23]
// [Asm] 
// [Asm] start:
// [Asm]   .zero 4
// [Asm] 
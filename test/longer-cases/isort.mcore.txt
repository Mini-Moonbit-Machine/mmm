  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl print_array.77
  .type print_array.77, @function
# leaf false
print_array.77:
.print_array.77_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a2, a0
  mv a0, zero
  call aux.78
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main.79
  .type main.79, @function
# leaf false
main.79:
.main.79_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  addi s0, s11, -400
  andi s11, s0, -8
  li a0, 100
  mv a1, a0
  mv a0, s0
  li a1, 100
  call fill_buffer.72
  mv a0, s0
  li a1, 100
  call isort.74
  mv a0, s0
  li a1, 100
  call print_array.77
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux.73
  .type aux.73, @function
# leaf true
aux.73:
.aux.73_5:
  mv a4, a0
  mv a0, a3
  mv a3, a4
  mv a4, a0

.aux.73_0:
  bne a3, a2, .aux.73_2

.aux.73_1:
  mv a0, zero

.aux.73_3:
  ret

.aux.73_2:

.aux.73_9:
  li a0, 75
  mul a0, a1, a0
  addi a0, a0, 74
  mv a1, a0

.aux.73_6:

.aux.73_8:
  li a0, 65537
  div a0, a1, a0
  li a5, 65537
  mul a0, a0, a5
  sub a0, a1, a0

.aux.73_7:
  slliw a1, a3, 2
  add a1, a4, a1
  sw a0, 0(a1)
  addi a1, a3, 1
  mv a3, a1
  mv a1, a0
  j .aux.73_0

  .p2align 2
  .text
  .globl aux.76
  .type aux.76, @function
# leaf true
aux.76:
.aux.76_5:
  mv a4, a0
  mv a3, a1
  mv a0, a2
  mv a1, a4
  mv a4, a3
  mv a3, a0

.aux.76_0:
  bne a1, a4, .aux.76_2

.aux.76_1:
  mv a0, zero

.aux.76_3:
  ret

.aux.76_2:

.aux.76_15:
  mv a2, a1

.aux.76_7:
  beq a2, zero, .aux.76_8

.aux.76_9:
  addi a0, a2, -1
  slliw a0, a0, 2
  add a0, a3, a0
  lw a0, 0(a0)
  slliw a5, a2, 2
  add a5, a3, a5
  lw a5, 0(a5)
  bge a5, a0, .aux.76_10

.aux.76_11:
  slliw a0, a2, 2
  add a5, a3, a0
  lw a5, 0(a5)
  addi a2, a2, -1
  slliw a6, a2, 2
  add a7, a3, a6
  lw a7, 0(a7)
  add a0, a3, a0
  sw a7, 0(a0)
  add a0, a3, a6
  sw a5, 0(a0)
  j .aux.76_7

.aux.76_8:
  mv a0, zero

.aux.76_13:

.aux.76_6:
  addi a0, a1, 1
  mv a1, a0
  j .aux.76_0

.aux.76_10:
  mv a0, zero

.aux.76_12:
  j .aux.76_13

  .p2align 2
  .text
  .globl aux.78
  .type aux.78, @function
# leaf false
aux.78:
.aux.78_5:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s1, a0
  mv s0, a1
  mv s2, a2

.aux.78_0:
  beq s1, s0, .aux.78_1

.aux.78_2:
  slliw a0, s1, 2
  add a0, s2, a0
  lw a0, 0(a0)
  call minimbt_print_int
  li a0, 32
  call minimbt_print_char
  addi a0, s1, 1
  mv s1, a0
  j .aux.78_0

.aux.78_1:
  mv a0, zero

.aux.78_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl fill_buffer.72
  .type fill_buffer.72, @function
# leaf false
fill_buffer.72:
.fill_buffer.72_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a3, a0
  mv a2, a1
  mv a0, zero
  li a1, 12345
  call aux.73
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start
  .type T$start, @function
# leaf false
T$start:
.T$start_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main.79
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl isort.74
  .type isort.74, @function
# leaf false
isort.74:
.isort.74_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a2, a0
  li a0, 1
  call aux.76
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

  .option arch, +xtheadba, +xtheadfmemidx, +xtheadmemidx
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl main85.147
  .type main85.147, @function
# leaf false
main85.147:
.main85.147_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  addi s0, s11, -400
  andi s11, s0, -8
  mv a0, zero
  li a1, 12345
  li a2, 100
  mv a3, s0
  call aux19.148
  li a0, 1
  li a1, 100
  mv a2, s0
  call aux60.150
  mv a0, zero
  li a1, 100
  mv a2, s0
  call aux73.151
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux60.150
  .type aux60.150, @function
# leaf true
aux60.150:
.aux60.150_5:
  mv a3, a0
  mv a0, a1
  mv a1, a3
  mv a3, a0
  mv a0, a2

.aux60.150_0:
  bne a1, a3, .aux60.150_2

.aux60.150_1:
  mv a0, zero

.aux60.150_3:
  ret

.aux60.150_2:

.aux60.150_15:
  mv a4, a1

.aux60.150_7:
  beq a4, zero, .aux60.150_8

.aux60.150_9:
  addi a2, a4, -1
  slliw a2, a2, 2
  add a2, a0, a2
  lw a2, 0(a2)
  slliw a5, a4, 2
  add a5, a0, a5
  lw a5, 0(a5)
  bge a5, a2, .aux60.150_10

.aux60.150_11:
  slliw a5, a4, 2
  add a2, a0, a5
  lw a2, 0(a2)
  addi a6, a4, -1
  slliw a7, a6, 2
  add a4, a0, a7
  lw a4, 0(a4)
  add a5, a0, a5
  sw a4, 0(a5)
  add a4, a0, a7
  sw a2, 0(a4)
  mv a4, a6
  j .aux60.150_7

.aux60.150_10:
  mv a2, zero

.aux60.150_12:

.aux60.150_13:

.aux60.150_6:
  addi a1, a1, 1
  j .aux60.150_0

.aux60.150_8:
  mv a2, zero
  j .aux60.150_13

  .p2align 2
  .text
  .globl aux19.148
  .type aux19.148, @function
# leaf true
aux19.148:
.aux19.148_5:

.aux19.148_0:
  beq a0, a2, .aux19.148_1

.aux19.148_2:
  li a4, 75
  mul a1, a1, a4
  addi a1, a1, 74
  li a4, 65537
  rem a1, a1, a4
  slliw a4, a0, 2
  add a4, a3, a4
  sw a1, 0(a4)
  addi a0, a0, 1
  j .aux19.148_0

.aux19.148_1:
  mv a0, zero

.aux19.148_3:
  ret

  .p2align 2
  .text
  .globl aux73.151
  .type aux73.151, @function
# leaf false
aux73.151:
.aux73.151_5:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2

.aux73.151_0:
  beq s0, s1, .aux73.151_1

.aux73.151_2:
  slliw a0, s0, 2
  add a0, s2, a0
  lw a0, 0(a0)
  call minimbt_print_int
  li a0, 32
  call minimbt_print_char
  addi s0, s0, 1
  j .aux73.151_0

.aux73.151_1:
  mv a0, zero

.aux73.151_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s11, 8(sp)
  la s11, large_heap_end
  call main85.147
  ld ra, 0(sp)
  ld s11, 8(sp)
  addi sp, sp, 16
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



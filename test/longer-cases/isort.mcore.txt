  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl main85l5_8
  .type main85l5_8, @function
# leaf false
main85l5_8:
.main85l5_8_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  addi a0, s11, -400
  andi s0, a0, -8
  mv s11, s0
  li a0, 100
  mv a1, a0
  mv a0, s0
  mv a2, zero
  call memseti32
  mv a0, s0
  li a1, 100
  call fill_buffer14l2_2
  mv a0, s0
  li a1, 100
  call isort33l3_5
  mv a0, s0
  li a1, 100
  call print_array68l4_7
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux60l5_4
  .type aux60l5_4, @function
# leaf false
aux60l5_4:
.aux60l5_4_4:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s1, a0
  mv s0, a1
  mv s2, a2

.aux60l5_4_0:
  beq s1, s0, .aux60l5_4_1

.aux60l5_4_2:
  mv a0, s2
  mv a1, s1
  call insert38l4_3
  addi a0, s1, 1
  mv s1, a0
  j .aux60l5_4_0

.aux60l5_4_1:
  mv a0, zero

.aux60l5_4_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl aux19_12
  .type aux19_12, @function
# leaf false
aux19_12:
.aux19_12_4:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv a2, s10
  lw s0, 8(a2)
  ld s1, 16(a2)
  mv s2, a0
  mv a0, a1

.aux19_12_0:
  beq s2, s0, .aux19_12_1

.aux19_12_2:
  call random1l0_0
  li a1, 65537
  call modulo7l1_1
  slliw a1, s2, 2
  add a1, s1, a1
  sw a0, 0(a1)
  addi a1, s2, 1
  mv s2, a1
  j .aux19_12_0

.aux19_12_1:
  mv a0, zero

.aux19_12_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl modulo7l1_1
  .type modulo7l1_1, @function
# leaf true
modulo7l1_1:
.modulo7l1_1_0:
  div a2, a0, a1
  mul a1, a2, a1
  sub a0, a0, a1
  ret

  .p2align 2
  .text
  .globl T$start_20
  .type T$start_20, @function
# leaf false
T$start_20:
.T$start_20_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main85l5_8
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl isort33l3_5
  .type isort33l3_5, @function
# leaf false
isort33l3_5:
.isort33l3_5_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a2, a0
  li a0, 1
  call aux60l5_4
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl print_array68l4_7
  .type print_array68l4_7, @function
# leaf false
print_array68l4_7:
.print_array68l4_7_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a2, a0
  mv a0, zero
  call aux73l5_6
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl random1l0_0
  .type random1l0_0, @function
# leaf true
random1l0_0:
.random1l0_0_0:
  li a1, 75
  mul a0, a0, a1
  addi a0, a0, 74
  ret

  .p2align 2
  .text
  .globl insert38l4_3
  .type insert38l4_3, @function
# leaf true
insert38l4_3:
.insert38l4_3_7:

.insert38l4_3_0:
  beq a1, zero, .insert38l4_3_1

.insert38l4_3_2:
  addi a2, a1, -1
  slliw a2, a2, 2
  add a2, a0, a2
  lw a2, 0(a2)
  slliw a3, a1, 2
  add a3, a0, a3
  lw a3, 0(a3)
  bge a3, a2, .insert38l4_3_3

.insert38l4_3_4:
  slliw a2, a1, 2
  add a2, a0, a2
  lw a2, 0(a2)
  addi a3, a1, -1
  slliw a3, a3, 2
  add a3, a0, a3
  lw a3, 0(a3)
  slliw a4, a1, 2
  add a4, a0, a4
  sw a3, 0(a4)
  addi a3, a1, -1
  slliw a3, a3, 2
  add a3, a0, a3
  sw a2, 0(a3)
  addi a1, a1, -1
  j .insert38l4_3_0

.insert38l4_3_1:
  mv a0, zero

.insert38l4_3_6:
  ret

.insert38l4_3_3:
  mv a0, zero

.insert38l4_3_5:
  j .insert38l4_3_6

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_20
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl aux73l5_6
  .type aux73l5_6, @function
# leaf false
aux73l5_6:
.aux73l5_6_4:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2

.aux73l5_6_0:
  beq s0, s1, .aux73l5_6_1

.aux73l5_6_2:
  slliw a0, s0, 2
  add a0, s2, a0
  lw a0, 0(a0)
  call minimbt_print_int
  li a0, 32
  call minimbt_print_char
  addi a0, s0, 1
  mv s0, a0
  j .aux73l5_6_0

.aux73l5_6_1:
  mv a0, zero

.aux73l5_6_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl fill_buffer14l2_2
  .type fill_buffer14l2_2, @function
# leaf false
fill_buffer14l2_2:
.fill_buffer14l2_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, aux19_12
  sd a3, 0(a2)
  sd a1, 8(a2)
  sd a0, 16(a2)
  mv s10, a2
  ld a2, 0(a2)
  mv a0, zero
  li a1, 12345
  jalr a2
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

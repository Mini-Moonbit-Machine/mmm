  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl aux.90
  .type aux.90, @function
# leaf true
aux.90:
.aux.90_5:

.aux.90_0:
  beq a0, a2, .aux.90_1

.aux.90_2:
  li a4, 75
  mul a1, a1, a4
  addi a1, a1, 74
  li a4, 65537
  div a4, a1, a4
  li a5, 65537
  mul a4, a4, a5
  sub a1, a1, a4
  slliw a4, a0, 2
  add a4, a3, a4
  sw a1, 0(a4)
  addi a0, a0, 1
  j .aux.90_0

.aux.90_1:
  mv a0, zero

.aux.90_3:
  ret

  .p2align 2
  .text
  .globl aux.95
  .type aux.95, @function
# leaf false
aux.95:
.aux.95_5:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2

.aux.95_0:
  beq s0, s1, .aux.95_1

.aux.95_2:
  slliw a0, s0, 2
  add a0, s2, a0
  lw a0, 0(a0)
  call minimbt_print_int
  li a0, 32
  call minimbt_print_char
  addi a0, s0, 1
  mv s0, a0
  j .aux.95_0

.aux.95_1:
  mv a0, zero

.aux.95_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main.94
  .type main.94, @function
# leaf false
main.94:
.main.94_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  addi s0, s11, -400
  andi s11, s0, -8
  li a0, 100
  mv a1, a0
  mv a0, s0
  li a1, 100
  call fill_buffer.89
  mv a0, s0
  li a1, 100
  call isort.91
  mv a0, zero
  li a1, 100
  mv a2, s0
  call aux.95
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl isort.91
  .type isort.91, @function
# leaf false
isort.91:
.isort.91_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a2, a0
  li a0, 1
  call aux.93
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl fill_buffer.89
  .type fill_buffer.89, @function
# leaf false
fill_buffer.89:
.fill_buffer.89_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a3, a0
  mv a2, a1
  mv a0, zero
  li a1, 12345
  call aux.90
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux.93
  .type aux.93, @function
# leaf false
aux.93:
.aux.93_8:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s1, a0
  mv s0, a1
  mv s2, a2

.aux.93_0:
  beq s1, s0, .aux.93_1

.aux.93_2:
  mv a0, s2
  mv a1, s1
  call insert.92
  addi s1, s1, 1
  beq s1, s0, .aux.93_3

.aux.93_4:
  mv a0, s2
  mv a1, s1
  call insert.92
  addi a0, s1, 1
  mv s1, a0
  j .aux.93_0

.aux.93_1:
  mv a0, zero

.aux.93_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.aux.93_3:
  mv a0, zero

.aux.93_5:
  j .aux.93_6

  .p2align 2
  .text
  .globl T$start
  .type T$start, @function
# leaf false
T$start:
.T$start_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main.94
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl insert.92
  .type insert.92, @function
# leaf true
insert.92:
.insert.92_8:
  mv a2, a0
  mv a0, a1
  mv a1, a2
  mv a2, a0

.insert.92_0:
  beq a2, zero, .insert.92_1

.insert.92_2:
  addi a0, a2, -1
  slliw a0, a0, 2
  add a0, a1, a0
  lw a0, 0(a0)
  slliw a3, a2, 2
  add a3, a1, a3
  lw a3, 0(a3)
  bge a3, a0, .insert.92_3

.insert.92_4:
  slliw a0, a2, 2
  add a3, a1, a0
  lw a3, 0(a3)
  addi a2, a2, -1
  slliw a4, a2, 2
  add a5, a1, a4
  lw a5, 0(a5)
  add a0, a1, a0
  sw a5, 0(a0)
  add a0, a1, a4
  sw a3, 0(a0)
  j .insert.92_0

.insert.92_1:
  mv a0, zero

.insert.92_6:
  ret

.insert.92_3:
  mv a0, zero

.insert.92_5:
  j .insert.92_6

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

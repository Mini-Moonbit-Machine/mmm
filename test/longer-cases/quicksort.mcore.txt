  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl T$start_16
  .type T$start_16, @function
# leaf false
T$start_16:
.T$start_16_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main75l3_7
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl partition14l1_2
  .type partition14l1_2, @function
# leaf false
partition14l1_2:
.partition14l1_2_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  mv s3, a0
  mv s4, a1
  mv s1, a2
  slliw a0, s1, 2
  add a0, s3, a0
  lw s2, 0(a0)
  addi a0, s4, -1
  addi s0, s11, -4
  andi s11, s0, -8
  sw a0, 0(s0)
  addi a0, s1, -1
  blt a0, s4, .partition14l1_2_2

.partition14l1_2_1:
  slliw a0, s4, 2
  add a0, s3, a0
  lw a0, 0(a0)
  blt s2, a0, .partition14l1_2_4

.partition14l1_2_3:
  lw a0, 0(s0)
  addi a0, a0, 1
  sw a0, 0(s0)
  lw a1, 0(s0)
  mv a0, s3
  mv a2, s4
  call swap1l0_0

.partition14l1_2_5:
  addi a0, s4, 1
  mv a1, s0
  mv a2, s3
  mv a3, s2
  mv a4, s1
  call l26l2_1

.partition14l1_2_6:
  lw a0, 0(s0)
  addi a0, a0, 1
  sw a0, 0(s0)
  lw a0, 0(s0)
  slliw a1, a0, 2
  add a1, s3, a1
  lw a1, 0(a1)
  slliw a2, s1, 2
  add a2, s3, a2
  lw a2, 0(a2)
  slliw a0, a0, 2
  add a0, s3, a0
  sw a2, 0(a0)
  slliw a0, s1, 2
  add a0, s3, a0
  sw a1, 0(a0)
  lw a0, 0(s0)
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  addi sp, sp, 48
  ret

.partition14l1_2_2:
  mv a0, zero
  j .partition14l1_2_6

.partition14l1_2_4:
  mv a0, zero
  j .partition14l1_2_5

  .p2align 2
  .text
  .globl input79l4_5
  .type input79l4_5, @function
# leaf false
input79l4_5:
.input79l4_5_8:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s1, a0
  mv s0, a1
  mv s2, a2

.input79l4_5_0:
  addi a0, s2, -1
  blt a0, s1, .input79l4_5_2

.input79l4_5_1:
  call minimbt_read_int
  slliw a1, s1, 2
  add a1, s0, a1
  sw a0, 0(a1)
  addi s1, s1, 1
  addi a0, s2, -1
  blt a0, s1, .input79l4_5_4

.input79l4_5_3:
  call minimbt_read_int
  slliw a1, s1, 2
  add a1, s0, a1
  sw a0, 0(a1)
  addi a0, s1, 1
  mv s1, a0
  j .input79l4_5_0

.input79l4_5_2:
  mv a0, zero

.input79l4_5_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.input79l4_5_4:
  mv a0, zero

.input79l4_5_5:
  j .input79l4_5_6

  .p2align 2
  .text
  .globl output97l5_6
  .type output97l5_6, @function
# leaf false
output97l5_6:
.output97l5_6_8:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s1, a0
  mv s0, a1
  mv s2, a2

.output97l5_6_0:
  addi a0, s2, -1
  blt a0, s1, .output97l5_6_2

.output97l5_6_1:
  slliw a0, s1, 2
  add a0, s0, a0
  lw a0, 0(a0)
  call minimbt_print_int
  call minimbt_print_endline
  addi s1, s1, 1
  addi a0, s2, -1
  blt a0, s1, .output97l5_6_4

.output97l5_6_3:
  slliw a0, s1, 2
  add a0, s0, a0
  lw a0, 0(a0)
  call minimbt_print_int
  call minimbt_print_endline
  addi a0, s1, 1
  mv s1, a0
  j .output97l5_6_0

.output97l5_6_2:
  mv a0, zero

.output97l5_6_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.output97l5_6_4:
  mv a0, zero

.output97l5_6_5:
  j .output97l5_6_6

  .p2align 2
  .text
  .globl l26l2_1
  .type l26l2_1, @function
# leaf false
l26l2_1:
.l26l2_1_14:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  mv a5, a1
  mv a1, a0
  mv s2, a5
  mv s3, a2
  mv s1, a3
  mv s0, a4

.l26l2_1_0:
  addi a0, s0, -1
  blt a0, a1, .l26l2_1_2

.l26l2_1_1:
  slliw a0, a1, 2
  add a0, s3, a0
  lw a0, 0(a0)
  blt s1, a0, .l26l2_1_4

.l26l2_1_3:
  lw a0, 0(s2)
  addi a0, a0, 1
  sw a0, 0(s2)
  lw a0, 0(s2)
  slliw a2, a0, 2
  add a2, s3, a2
  lw a2, 0(a2)
  slliw a3, a1, 2
  add a3, s3, a3
  lw a3, 0(a3)
  slliw a0, a0, 2
  add a0, s3, a0
  sw a3, 0(a0)
  slliw a0, a1, 2
  add a0, s3, a0
  sw a2, 0(a0)
  mv a0, zero

.l26l2_1_5:
  addi s4, a1, 1
  addi a0, s0, -1
  blt a0, s4, .l26l2_1_7

.l26l2_1_6:
  slliw a0, s4, 2
  add a0, s3, a0
  lw a0, 0(a0)
  blt s1, a0, .l26l2_1_9

.l26l2_1_8:
  lw a0, 0(s2)
  addi a0, a0, 1
  sw a0, 0(s2)
  lw a1, 0(s2)
  mv a0, s3
  mv a2, s4
  call swap1l0_0

.l26l2_1_10:
  addi a0, s4, 1
  mv a1, a0
  j .l26l2_1_0

.l26l2_1_2:
  mv a0, zero

.l26l2_1_12:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  addi sp, sp, 48
  ret

.l26l2_1_4:
  mv a0, zero
  j .l26l2_1_5

.l26l2_1_7:
  mv a0, zero

.l26l2_1_11:
  j .l26l2_1_12

.l26l2_1_9:
  mv a0, zero
  j .l26l2_1_10

  .p2align 2
  .text
  .globl quicksort59l2_4
  .type quicksort59l2_4, @function
# leaf false
quicksort59l2_4:
.quicksort59l2_4_11:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  mv s0, a0
  mv s4, a1
  mv s3, a2

.quicksort59l2_4_0:
  addi a0, s3, -1
  blt a0, s4, .quicksort59l2_4_2

.quicksort59l2_4_1:
  slliw a0, s3, 2
  add a0, s0, a0
  lw a0, 0(a0)
  addi a1, s4, -1
  addi s2, s11, -4
  andi s11, s2, -8
  sw a1, 0(s2)

.quicksort59l2_4_35:
  mv s1, s4
  mv s5, a0

.quicksort59l2_4_27:
  addi a0, s3, -1
  blt a0, s1, .quicksort59l2_4_29

.quicksort59l2_4_28:
  slliw a0, s1, 2
  add a0, s0, a0
  lw a0, 0(a0)
  blt s5, a0, .quicksort59l2_4_31

.quicksort59l2_4_30:
  lw a0, 0(s2)
  addi a0, a0, 1
  sw a0, 0(s2)
  lw a1, 0(s2)
  mv a0, s0
  mv a2, s1
  call swap1l0_0

.quicksort59l2_4_32:
  addi a0, s1, 1
  mv s1, a0
  j .quicksort59l2_4_27

.quicksort59l2_4_2:
  mv a0, zero

.quicksort59l2_4_9:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  addi sp, sp, 64
  ret

.quicksort59l2_4_29:
  mv a0, zero

.quicksort59l2_4_33:

.quicksort59l2_4_12:
  lw a0, 0(s2)
  addi a0, a0, 1
  sw a0, 0(s2)
  lw a1, 0(s2)
  mv a0, s0
  mv a2, s3
  call swap1l0_0
  lw s1, 0(s2)
  addi s2, s1, -1
  addi a0, s2, -1
  blt a0, s4, .quicksort59l2_4_4

.quicksort59l2_4_3:
  mv a0, s0
  mv a1, s4
  mv a2, s2
  call partition14l1_2
  mv s5, a0
  addi a2, s5, -1
  mv a0, s0
  mv a1, s4
  call quicksort59l2_4
  addi a1, s5, 1
  mv a0, s0
  mv a2, s2
  call quicksort59l2_4

.quicksort59l2_4_5:
  addi s1, s1, 1
  addi a0, s3, -1
  blt a0, s1, .quicksort59l2_4_7

.quicksort59l2_4_6:
  mv a0, s0
  mv a1, s1
  mv a2, s3
  call partition14l1_2
  mv s2, a0
  addi a2, s2, -1
  mv a0, s0
  mv a1, s1
  call quicksort59l2_4
  addi a0, s2, 1
  mv s4, a0
  j .quicksort59l2_4_0

.quicksort59l2_4_4:
  mv a0, zero
  j .quicksort59l2_4_5

.quicksort59l2_4_7:
  mv a0, zero

.quicksort59l2_4_8:
  j .quicksort59l2_4_9

.quicksort59l2_4_31:
  mv a0, zero
  j .quicksort59l2_4_32

  .p2align 2
  .text
  .globl swap1l0_0
  .type swap1l0_0, @function
# leaf true
swap1l0_0:
.swap1l0_0_0:
  slliw a3, a1, 2
  add a3, a0, a3
  lw a3, 0(a3)
  slliw a4, a2, 2
  add a4, a0, a4
  lw a4, 0(a4)
  slliw a1, a1, 2
  add a1, a0, a1
  sw a4, 0(a1)
  slliw a1, a2, 2
  add a0, a0, a1
  sw a3, 0(a0)
  mv a0, zero
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_16
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main75l3_7
  .type main75l3_7, @function
# leaf false
main75l3_7:
.main75l3_7_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  call minimbt_read_int
  mv s2, a0
  slliw a0, s2, 2
  sub s0, s11, a0
  andi s11, s0, -8
  mv a1, s2
  addi a0, s2, -1
  blt a0, zero, .main75l3_7_2

.main75l3_7_1:
  call minimbt_read_int
  sw a0, 0(s0)
  li a0, 1
  addi a0, a0, 0
  mv a1, s0
  mv a2, s2
  call input79l4_5

.main75l3_7_3:
  addi s1, s2, -1
  addi a0, s1, -1
  blt a0, zero, .main75l3_7_5

.main75l3_7_4:
  mv a0, s0
  mv a1, zero
  mv a2, s1
  call partition14l1_2
  mv s3, a0
  addi a2, s3, -1
  mv a0, s0
  mv a1, zero
  call quicksort59l2_4
  addi a1, s3, 1
  mv a0, s0
  mv a2, s1
  call quicksort59l2_4

.main75l3_7_6:
  addi a0, s2, -1
  blt a0, zero, .main75l3_7_8

.main75l3_7_7:
  lw a0, 0(s0)
  call minimbt_print_int
  call minimbt_print_endline
  li a0, 1
  addi a0, a0, 0
  mv a1, s0
  mv a2, s2
  call output97l5_6

.main75l3_7_9:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

.main75l3_7_2:
  mv a0, zero
  j .main75l3_7_3

.main75l3_7_5:
  mv a0, zero
  j .main75l3_7_6

.main75l3_7_8:
  mv a0, zero
  j .main75l3_7_9

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

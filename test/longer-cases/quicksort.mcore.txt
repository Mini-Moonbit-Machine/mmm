  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl main.255
  .type main.255, @function
# leaf false
main.255:
.main.255_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  call minimbt_read_int
  mv s2, a0
  slliw a0, s2, 2
  sub s0, s11, a0
  andi s11, s0, -8
  mv a1, s2
  mv s1, zero

.main.255_2:
  addi a0, s2, -1
  blt a0, s1, .main.255_4

.main.255_3:
  call minimbt_read_int
  slliw a1, s1, 2
  add a1, s0, a1
  sw a0, 0(a1)
  addi a0, s1, 1
  mv s1, a0
  j .main.255_2

.main.255_4:
  addi a2, s2, -1
  mv a0, s0
  mv a1, zero
  call quicksort.254
  mv s1, zero

.main.255_6:
  addi a0, s2, -1
  blt a0, s1, .main.255_8

.main.255_7:
  slliw a0, s1, 2
  add a0, s0, a0
  lw a0, 0(a0)
  call minimbt_print_int
  call minimbt_print_endline
  addi a0, s1, 1
  mv s1, a0
  j .main.255_6

.main.255_8:
  mv a0, zero

.main.255_9:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$start
  .type T$start, @function
# leaf false
T$start:
.T$start_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main.255
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl quicksort.254
  .type quicksort.254, @function
# leaf false
quicksort.254:
.quicksort.254_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s1, a0
  mv s0, a2

.quicksort.254_2:
  addi a0, s0, -1
  blt a0, a1, .quicksort.254_4

.quicksort.254_3:
  slliw a0, s0, 2
  add a0, s1, a0
  lw a3, 0(a0)
  addi a0, a1, -1
  addi a2, s11, -4
  andi s11, a2, -8
  sw a0, 0(a2)
  mv a0, a1

.quicksort.254_6:
  addi a4, s0, -1
  blt a4, a0, .quicksort.254_8

.quicksort.254_7:
  slliw a4, a0, 2
  add a4, s1, a4
  lw a4, 0(a4)
  blt a3, a4, .quicksort.254_10

.quicksort.254_9:
  lw a4, 0(a2)
  addi a4, a4, 1
  sw a4, 0(a2)
  lw a5, 0(a2)

.quicksort.254_28:
  slliw a4, a5, 2
  add a4, s1, a4
  lw a4, 0(a4)
  slliw a6, a0, 2
  add a6, s1, a6
  lw a6, 0(a6)
  slliw a5, a5, 2
  add a5, s1, a5
  sw a6, 0(a5)
  slliw a5, a0, 2
  add a5, s1, a5
  sw a4, 0(a5)
  mv a4, zero

.quicksort.254_14:
  addi a0, a0, 1
  j .quicksort.254_6

.quicksort.254_4:
  mv a0, zero

.quicksort.254_13:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.quicksort.254_8:
  lw a0, 0(a2)
  addi a0, a0, 1
  sw a0, 0(a2)
  lw a0, 0(a2)
  slliw a3, a0, 2
  add a3, s1, a3
  lw a3, 0(a3)
  slliw a4, s0, 2
  add a4, s1, a4
  lw a4, 0(a4)
  slliw a0, a0, 2
  add a0, s1, a0
  sw a4, 0(a0)
  slliw a0, s0, 2
  add a0, s1, a0
  sw a3, 0(a0)
  lw s2, 0(a2)
  addi a2, s2, -1
  mv a0, s1
  call quicksort.254
  addi a0, s2, 1
  mv a1, a0
  j .quicksort.254_2

.quicksort.254_10:
  addi a0, a0, 1
  j .quicksort.254_6

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

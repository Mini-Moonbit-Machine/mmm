  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl quicksort.126
  .type quicksort.126, @function
# leaf false
quicksort.126:
.quicksort.126_5:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  mv s3, a0
  mv s1, a1
  mv s2, a2

.quicksort.126_0:
  addi a0, s2, -1
  blt a0, s1, .quicksort.126_2

.quicksort.126_1:
  slliw a0, s2, 2
  add a0, s3, a0
  lw a0, 0(a0)
  addi a1, s1, -1
  addi s0, s11, -4
  andi s11, s0, -8
  sw a1, 0(s0)

.quicksort.126_23:
  mv s5, s1
  mv s4, a0

.quicksort.126_15:
  addi a0, s2, -1
  blt a0, s5, .quicksort.126_17

.quicksort.126_16:
  slliw a0, s5, 2
  add a0, s3, a0
  lw a0, 0(a0)
  blt s4, a0, .quicksort.126_19

.quicksort.126_18:
  lw a0, 0(s0)
  addi a0, a0, 1
  sw a0, 0(s0)
  lw a1, 0(s0)
  mv a0, s3
  mv a2, s5
  call swap.125

.quicksort.126_20:
  addi a0, s5, 1
  mv s5, a0
  j .quicksort.126_15

.quicksort.126_2:
  mv a0, zero

.quicksort.126_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  addi sp, sp, 64
  ret

.quicksort.126_17:
  mv a0, zero

.quicksort.126_21:

.quicksort.126_6:
  lw a0, 0(s0)
  addi a0, a0, 1
  sw a0, 0(s0)
  lw a1, 0(s0)
  mv a0, s3
  mv a2, s2
  call swap.125
  lw s0, 0(s0)
  addi a2, s0, -1
  mv a0, s3
  mv a1, s1
  call quicksort.126
  addi a0, s0, 1
  mv s1, a0
  j .quicksort.126_0

.quicksort.126_19:
  mv a0, zero
  j .quicksort.126_20

  .p2align 2
  .text
  .globl swap.125
  .type swap.125, @function
# leaf true
swap.125:
.swap.125_0:
  slliw a3, a1, 2
  add a3, a0, a3
  lw a3, 0(a3)
  slliw a4, a2, 2
  add a4, a0, a4
  lw a4, 0(a4)
  slliw a1, a1, 2
  add a1, a0, a1
  sw a4, 0(a1)
  slliw a1, a2, 2
  add a0, a0, a1
  sw a3, 0(a0)
  mv a0, zero
  ret

  .p2align 2
  .text
  .globl output.130
  .type output.130, @function
# leaf false
output.130:
.output.130_5:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2

.output.130_0:
  addi a0, s2, -1
  blt a0, s0, .output.130_2

.output.130_1:
  slliw a0, s0, 2
  add a0, s1, a0
  lw a0, 0(a0)
  call minimbt_print_int
  call minimbt_print_endline
  addi a0, s0, 1
  mv s0, a0
  j .output.130_0

.output.130_2:
  mv a0, zero

.output.130_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main.128
  .type main.128, @function
# leaf false
main.128:
.main.128_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  call minimbt_read_int
  mv s0, a0
  slliw a0, s0, 2
  sub s1, s11, a0
  andi s11, s1, -8
  mv a1, s0
  mv a0, zero
  mv a1, s1
  mv a2, s0
  call input.129
  addi a2, s0, -1
  mv a0, s1
  mv a1, zero
  call quicksort.126
  mv a0, zero
  mv a1, s1
  mv a2, s0
  call output.130
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl input.129
  .type input.129, @function
# leaf false
input.129:
.input.129_5:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2

.input.129_0:
  addi a0, s2, -1
  blt a0, s0, .input.129_2

.input.129_1:
  call minimbt_read_int
  slliw a1, s0, 2
  add a1, s1, a1
  sw a0, 0(a1)
  addi a0, s0, 1
  mv s0, a0
  j .input.129_0

.input.129_2:
  mv a0, zero

.input.129_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$start
  .type T$start, @function
# leaf false
T$start:
.T$start_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main.128
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

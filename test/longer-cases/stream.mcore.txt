  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl add102_27
  .type add102_27, @function
# leaf true
add102_27:
.add102_27_0:
  mv a2, s10
  add a0, a0, a1
  ret

  .p2align 2
  .text
  .globl aux46_17
  .type aux46_17, @function
# leaf false
aux46_17:
.aux46_17_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a1, s10
  ld a0, 8(a1)
  ld s0, 16(a1)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  lw a1, 0(a0)
  lw a0, 4(a0)
  bne a1, zero, .aux46_17_2

.aux46_17_1:
  mv s10, s0
  ld a1, 0(s0)
  mv a0, zero
  jalr a1

.aux46_17_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.aux46_17_2:
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  li a2, 1
  sw a2, 0(a1)
  sw a0, 4(a1)
  mv a0, a1
  j .aux46_17_3

  .p2align 2
  .text
  .globl aux25_14
  .type aux25_14, @function
# leaf false
aux25_14:
.aux25_14_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, s10
  ld a0, 8(s0)
  ld s1, 16(s0)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  mv a1, a0
  lw a0, 0(a1)
  lw s2, 4(a1)
  beq a0, zero, .aux25_14_1

.aux25_14_2:
  mv s10, s1
  ld a1, 0(s1)
  mv a0, s2
  jalr a1
  bne a0, zero, .aux25_14_4

.aux25_14_3:
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  li a1, 1
  sw a1, 0(a0)
  sw s2, 4(a0)

.aux25_14_5:

.aux25_14_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.aux25_14_1:
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux25_14_6

.aux25_14_4:
  mv s10, s0
  ld a1, 0(s0)
  mv a0, zero
  jalr a1
  j .aux25_14_5

  .p2align 2
  .text
  .globl main120_9
  .type main120_9, @function
# leaf false
main120_9:
.main120_9_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a0, zero
  li a1, 100
  call range58_3
  mv s0, a0
  mv a0, zero
  li a1, 1000
  call range58_3
  mv a1, a0
  mv a0, s0
  call concat41_2
  mv s0, a0
  li a0, 1
  call addx78_4
  mv a1, a0
  mv a0, s0
  call map1_0
  mv s0, a0
  li a0, 50
  call gt108_7
  mv a1, a0
  mv a0, s0
  call filter20_1
  mv s0, a0
  li a0, 1200
  call le114_8
  mv a1, a0
  mv a0, s0
  call filter20_1
  call sum99_6
  call minimbt_print_int
  li a0, 10
  call minimbt_print_char
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux6_11
  .type aux6_11, @function
# leaf false
aux6_11:
.aux6_11_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a1, s10
  ld a0, 8(a1)
  ld s0, 16(a1)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  lw a1, 0(a0)
  lw a0, 4(a0)
  beq a1, zero, .aux6_11_1

.aux6_11_2:
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  li a2, 1
  sw a2, 0(a1)
  sw a0, 4(a1)
  mv a0, a1

.aux6_11_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.aux6_11_1:
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux6_11_3

  .p2align 2
  .text
  .globl map1_0
  .type map1_0, @function
# leaf true
map1_0:
.map1_0_0:
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, aux6_11
  sd a3, 0(a2)
  sd a0, 8(a2)
  sd a1, 16(a2)
  mv a0, a2
  ret

  .p2align 2
  .text
  .globl addx78_4
  .type addx78_4, @function
# leaf true
addx78_4:
.addx78_4_0:
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, aux81_23
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  ret

  .p2align 2
  .text
  .globl le114_8
  .type le114_8, @function
# leaf true
le114_8:
.le114_8_0:
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, aux117_33
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  ret

  .p2align 2
  .text
  .globl gt108_7
  .type gt108_7, @function
# leaf true
gt108_7:
.gt108_7_0:
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, aux111_30
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  ret

  .p2align 2
  .text
  .globl aux111_30
  .type aux111_30, @function
# leaf true
aux111_30:
.aux111_30_0:
  mv a1, s10
  lw a1, 8(a1)
  blt a0, a1, .aux111_30_2

.aux111_30_1:
  mv a0, zero

.aux111_30_3:
  ret

.aux111_30_2:
  li a0, 1
  j .aux111_30_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_36
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl sum99_6
  .type sum99_6, @function
# leaf false
sum99_6:
.sum99_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  la a2, add102_27
  sd a2, 0(a1)
  mv a2, zero
  call fold84_5
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl filter20_1
  .type filter20_1, @function
# leaf true
filter20_1:
.filter20_1_0:
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, aux25_14
  sd a3, 0(a2)
  sd a0, 8(a2)
  sd a1, 16(a2)
  mv a0, a2
  ret

  .p2align 2
  .text
  .globl aux81_23
  .type aux81_23, @function
# leaf true
aux81_23:
.aux81_23_0:
  mv a1, s10
  lw a1, 8(a1)
  add a0, a1, a0
  ret

  .p2align 2
  .text
  .globl aux117_33
  .type aux117_33, @function
# leaf true
aux117_33:
.aux117_33_0:
  mv a1, s10
  lw a1, 8(a1)
  blt a1, a0, .aux117_33_2

.aux117_33_1:
  mv a0, zero

.aux117_33_3:
  ret

.aux117_33_2:
  li a0, 1
  j .aux117_33_3

  .p2align 2
  .text
  .globl T$start_36
  .type T$start_36, @function
# leaf false
T$start_36:
.T$start_36_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main120_9
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl range58_3
  .type range58_3, @function
# leaf true
range58_3:
.range58_3_0:
  addi a2, s11, -4
  andi a2, a2, -8
  mv s11, a2
  sw a0, 0(a2)
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  la a3, aux65_20
  sd a3, 0(a0)
  sd a2, 8(a0)
  sd a1, 16(a0)
  ret

  .p2align 2
  .text
  .globl concat41_2
  .type concat41_2, @function
# leaf true
concat41_2:
.concat41_2_0:
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, aux46_17
  sd a3, 0(a2)
  sd a0, 8(a2)
  sd a1, 16(a2)
  mv a0, a2
  ret

  .p2align 2
  .text
  .globl fold84_5
  .type fold84_5, @function
# leaf false
fold84_5:
.fold84_5_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2
  mv s10, s0
  ld a1, 0(s0)
  mv a0, zero
  jalr a1
  mv a1, a0
  lw a0, 0(a1)
  lw a1, 4(a1)
  beq a0, zero, .fold84_5_1

.fold84_5_2:
  mv s10, s1
  ld a2, 0(s1)
  mv a0, s2
  jalr a2
  mv a2, a0
  mv a0, s0
  mv a1, s1
  call fold84_5

.fold84_5_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.fold84_5_1:
  mv a0, s2
  j .fold84_5_3

  .p2align 2
  .text
  .globl aux65_20
  .type aux65_20, @function
# leaf true
aux65_20:
.aux65_20_0:
  mv a1, s10
  ld a0, 8(a1)
  lw a1, 16(a1)
  lw a2, 0(a0)
  beq a2, a1, .aux65_20_1

.aux65_20_2:
  addi a1, a2, 1
  sw a1, 0(a0)
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  li a1, 1
  sw a1, 0(a0)
  sw a2, 4(a0)

.aux65_20_3:
  ret

.aux65_20_1:
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux65_20_3

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

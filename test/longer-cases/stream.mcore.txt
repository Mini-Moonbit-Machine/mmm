  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl add.7659
  .type add.7659, @function
# leaf true
add.7659:
.add.7659_0:
  add a0, a0, a1
  ret

  .p2align 2
  .text
  .globl add.7661
  .type add.7661, @function
# leaf false
add.7661:
.add.7661_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a2, s10
  call add.7659
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux.7658
  .type aux.7658, @function
# leaf false
aux.7658:
.aux.7658_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  mv s6, a1
  mv s3, a2
  mv s0, a3
  mv s4, a4
  mv s1, a5
  mv s2, a6
  mv s5, a7

.aux.7658_2:
  mv a0, zero

.aux.7658_4:

.aux.7658_41:
  mv a0, zero
  mv a1, s6
  mv a2, s2
  call aux.7652

.aux.7658_51:
  lw a1, 0(a0)
  lw a0, 4(a0)
  beq a1, zero, .aux.7658_42

.aux.7658_43:
  addi a1, s11, -8
  andi s11, a1, -8
  li a2, 1
  sw a2, 0(a1)
  sw a0, 4(a1)
  lw a0, 0(a1)
  lw a1, 4(a1)
  beq a0, zero, .aux.7658_47

.aux.7658_48:
  add a0, s0, a1
  addi a1, s11, -8
  andi s11, a1, -8
  li a2, 1
  sw a2, 0(a1)
  sw a0, 4(a1)
  mv a0, a1

.aux.7658_49:

.aux.7658_50:
  mv a1, a0

.aux.7658_36:
  lw a0, 0(a1)
  lw a1, 4(a1)
  bne a0, zero, .aux.7658_6

.aux.7658_5:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)
  lw a1, 0(a0)
  lw a0, 4(a0)
  beq a1, zero, .aux.7658_7

.aux.7658_8:
  blt s1, a0, .aux.7658_10

.aux.7658_9:
  bne zero, zero, .aux.7658_12

.aux.7658_11:
  addi a1, s11, -8
  andi s11, a1, -8
  li a2, 1
  sw a2, 0(a1)
  sw a0, 4(a1)
  mv a0, a1

.aux.7658_13:

.aux.7658_17:

.aux.7658_18:

.aux.7658_34:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  addi sp, sp, 64
  ret

.aux.7658_42:
  mv a0, zero
  mv a1, s3
  mv a2, s5
  call aux.7653

.aux.7658_52:
  lw a1, 0(a0)
  lw a0, 4(a0)
  beq a1, zero, .aux.7658_44

.aux.7658_45:
  add a0, s0, a0
  addi a1, s11, -8
  andi s11, a1, -8
  li a2, 1
  sw a2, 0(a1)
  sw a0, 4(a1)
  mv a0, a1

.aux.7658_46:
  j .aux.7658_50

.aux.7658_44:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux.7658_46

.aux.7658_47:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux.7658_49

.aux.7658_6:

.aux.7658_37:
  blt a1, s4, .aux.7658_39

.aux.7658_38:
  mv a0, zero

.aux.7658_40:

.aux.7658_35:
  bne a0, zero, .aux.7658_20

.aux.7658_19:
  addi a0, s11, -8
  andi s11, a0, -8
  li a2, 1
  sw a2, 0(a0)
  sw a1, 4(a0)
  lw a1, 0(a0)
  lw a0, 4(a0)
  beq a1, zero, .aux.7658_21

.aux.7658_22:
  blt s1, a0, .aux.7658_24

.aux.7658_23:
  bne zero, zero, .aux.7658_26

.aux.7658_25:
  addi a1, s11, -8
  andi s11, a1, -8
  li a2, 1
  sw a2, 0(a1)
  sw a0, 4(a1)
  mv a0, a1

.aux.7658_27:

.aux.7658_31:

.aux.7658_32:

.aux.7658_33:
  j .aux.7658_34

.aux.7658_39:
  li a0, 1
  j .aux.7658_40

.aux.7658_20:
  mv a0, zero
  j .aux.7658_4

.aux.7658_21:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux.7658_32

.aux.7658_24:
  li a1, 1
  bne a1, zero, .aux.7658_29

.aux.7658_28:
  addi a1, s11, -8
  andi s11, a1, -8
  li a2, 1
  sw a2, 0(a1)
  sw a0, 4(a1)
  mv a0, a1

.aux.7658_30:
  j .aux.7658_31

.aux.7658_29:
  mv a0, zero
  j .aux.7658_2

.aux.7658_26:
  mv a0, zero
  j .aux.7658_2

.aux.7658_7:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux.7658_18

.aux.7658_10:
  li a1, 1
  bne a1, zero, .aux.7658_15

.aux.7658_14:
  addi a1, s11, -8
  andi s11, a1, -8
  li a2, 1
  sw a2, 0(a1)
  sw a0, 4(a1)
  mv a0, a1

.aux.7658_16:
  j .aux.7658_17

.aux.7658_15:
  mv a0, zero
  j .aux.7658_2

.aux.7658_12:
  mv a0, zero
  j .aux.7658_2

  .p2align 2
  .text
  .globl aux.7653
  .type aux.7653, @function
# leaf true
aux.7653:
.aux.7653_0:
  mv a0, a1
  mv a1, a2
  lw a2, 0(a1)
  beq a2, a0, .aux.7653_1

.aux.7653_2:
  addi a0, a2, 1
  sw a0, 0(a1)
  addi a0, s11, -8
  andi s11, a0, -8
  li a1, 1
  sw a1, 0(a0)
  sw a2, 4(a0)

.aux.7653_3:
  ret

.aux.7653_1:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux.7653_3

  .p2align 2
  .text
  .globl aux.7652
  .type aux.7652, @function
# leaf true
aux.7652:
.aux.7652_0:
  mv a3, a1
  mv a0, a2
  lw a1, 0(a0)
  beq a1, a3, .aux.7652_1

.aux.7652_2:
  addi a2, a1, 1
  sw a2, 0(a0)
  addi a0, s11, -8
  andi s11, a0, -8
  li a2, 1
  sw a2, 0(a0)
  sw a1, 4(a0)

.aux.7652_3:
  ret

.aux.7652_1:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux.7652_3

  .p2align 2
  .text
  .globl T$start
  .type T$start, @function
# leaf false
T$start:
.T$start_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main.7651
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main.7651
  .type main.7651, @function
# leaf false
main.7651:
.main.7651_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  addi a0, s11, -4
  andi s11, a0, -8
  sw zero, 0(a0)
  addi a2, s11, -4
  andi s11, a2, -8
  sw zero, 0(a2)
  addi a1, s11, -64
  andi s11, a1, -8
  la a3, aux.7660
  sd a3, 0(a1)
  li a3, 100
  sd a3, 8(a1)
  li a3, 1000
  sd a3, 16(a1)
  li a3, 1
  sd a3, 24(a1)
  li a3, 50
  sd a3, 32(a1)
  li a3, 1200
  sd a3, 40(a1)
  sd a0, 48(a1)
  sd a2, 56(a1)
  addi a0, s11, -8
  andi s11, a0, -8
  la a2, add.7661
  sd a2, 0(a0)
  mv s1, a1
  mv s0, a0
  mv s2, zero

.main.7651_2:
  mv s10, s1
  ld a1, 0(s1)
  mv a0, zero
  jalr a1
  mv a1, a0
  lw a0, 0(a1)
  lw a1, 4(a1)
  bne a0, zero, .main.7651_4

.main.7651_3:
  mv a0, s2
  call minimbt_print_int
  li a0, 10
  call minimbt_print_char
  mv a0, zero

.main.7651_5:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.main.7651_4:
  mv s10, s0
  ld a2, 0(s0)
  mv a0, s2
  jalr a2
  mv s2, a0
  j .main.7651_2

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl aux.7660
  .type aux.7660, @function
# leaf false
aux.7660:
.aux.7660_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a1, s10
  lw a2, 8(a1)
  lw a3, 16(a1)
  lw a4, 24(a1)
  lw a5, 32(a1)
  lw a6, 40(a1)
  ld a7, 48(a1)
  ld t0, 56(a1)
  mv a1, a2
  mv a2, a3
  mv a3, a4
  mv a4, a5
  mv a5, a6
  mv a6, a7
  mv a7, t0
  call aux.7658
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

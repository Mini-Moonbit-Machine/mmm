  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl aux.12705
  .type aux.12705, @function
# leaf false
aux.12705:
.aux.12705_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  mv s6, a1
  mv s3, a2
  mv s0, a3
  mv s4, a4
  mv s2, a5
  mv s1, a6
  mv s5, a7

.aux.12705_2:

.aux.12705_15:
  mv a0, zero

.aux.12705_17:

.aux.12705_30:
  mv a1, s6
  mv a2, s3
  mv a3, s1
  mv a4, s5
  call aux.12699
  mv a1, a0

.aux.12705_34:
  lw a0, 0(a1)
  lw a1, 4(a1)
  bne a0, zero, .aux.12705_32

.aux.12705_31:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)

.aux.12705_33:
  mv a1, a0

.aux.12705_25:
  lw a0, 0(a1)
  lw a1, 4(a1)
  bne a0, zero, .aux.12705_19

.aux.12705_18:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)

.aux.12705_23:
  mv a1, a0

.aux.12705_10:
  lw a0, 0(a1)
  lw a1, 4(a1)
  bne a0, zero, .aux.12705_4

.aux.12705_3:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)

.aux.12705_8:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  addi sp, sp, 64
  ret

.aux.12705_32:
  mv a0, a1
  mv a1, s0
  call aux.12700
  mv a1, a0

.aux.12705_35:
  addi a0, s11, -8
  andi s11, a0, -8
  li a2, 1
  sw a2, 0(a0)
  sw a1, 4(a0)
  j .aux.12705_33

.aux.12705_19:

.aux.12705_26:
  blt a1, s4, .aux.12705_28

.aux.12705_27:
  mv a0, zero

.aux.12705_29:

.aux.12705_24:
  bne a0, zero, .aux.12705_21

.aux.12705_20:
  addi a0, s11, -8
  andi s11, a0, -8
  li a2, 1
  sw a2, 0(a0)
  sw a1, 4(a0)

.aux.12705_22:
  j .aux.12705_23

.aux.12705_28:
  li a0, 1
  j .aux.12705_29

.aux.12705_21:
  mv a0, zero
  j .aux.12705_17

.aux.12705_4:

.aux.12705_11:
  blt s2, a1, .aux.12705_13

.aux.12705_12:
  mv a0, zero

.aux.12705_14:

.aux.12705_9:
  bne a0, zero, .aux.12705_6

.aux.12705_5:
  addi a0, s11, -8
  andi s11, a0, -8
  li a2, 1
  sw a2, 0(a0)
  sw a1, 4(a0)

.aux.12705_7:
  j .aux.12705_8

.aux.12705_13:
  li a0, 1
  j .aux.12705_14

.aux.12705_6:
  mv a0, zero
  j .aux.12705_2

  .p2align 2
  .text
  .globl aux.12698
  .type aux.12698, @function
# leaf true
aux.12698:
.aux.12698_0:
  mv a0, a1
  mv a1, a2
  lw a2, 0(a1)
  beq a2, a0, .aux.12698_1

.aux.12698_2:
  addi a0, a2, 1
  sw a0, 0(a1)
  addi a0, s11, -8
  andi s11, a0, -8
  li a1, 1
  sw a1, 0(a0)
  sw a2, 4(a0)

.aux.12698_3:
  ret

.aux.12698_1:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux.12698_3

  .p2align 2
  .text
  .globl aux.12699
  .type aux.12699, @function
# leaf false
aux.12699:
.aux.12699_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a5, a1
  mv a1, a2
  mv a2, a4

.aux.12699_6:
  lw a0, 0(a3)
  beq a0, a5, .aux.12699_7

.aux.12699_8:
  addi a4, a0, 1
  sw a4, 0(a3)
  addi a3, s11, -8
  andi s11, a3, -8
  li a4, 1
  sw a4, 0(a3)
  sw a0, 4(a3)
  mv a0, a3

.aux.12699_9:
  mv a3, a0

.aux.12699_4:
  lw a0, 0(a3)
  lw a3, 4(a3)
  bne a0, zero, .aux.12699_2

.aux.12699_1:
  call aux.12698

.aux.12699_3:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.aux.12699_7:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux.12699_9

.aux.12699_2:
  addi a0, s11, -8
  andi s11, a0, -8
  li a1, 1
  sw a1, 0(a0)
  sw a3, 4(a0)
  j .aux.12699_3

  .p2align 2
  .text
  .globl main.12696
  .type main.12696, @function
# leaf false
main.12696:
.main.12696_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  addi a0, s11, -4
  andi s11, a0, -8
  sw zero, 0(a0)
  addi a2, s11, -4
  andi s11, a2, -8
  sw zero, 0(a2)
  addi a1, s11, -64
  andi s11, a1, -8
  la a3, aux.12707
  sd a3, 0(a1)
  li a3, 100
  sd a3, 8(a1)
  li a3, 1000
  sd a3, 16(a1)
  li a3, 1
  sd a3, 24(a1)
  li a3, 50
  sd a3, 32(a1)
  li a3, 1200
  sd a3, 40(a1)
  sd a0, 48(a1)
  sd a2, 56(a1)
  addi a0, s11, -8
  andi s11, a0, -8
  la a2, add.12708
  sd a2, 0(a0)
  mv s1, a1
  mv s0, a0
  mv s2, zero

.main.12696_2:
  mv s10, s1
  ld a1, 0(s1)
  jalr a1
  mv a1, a0
  lw a0, 0(a1)
  lw a1, 4(a1)
  bne a0, zero, .main.12696_4

.main.12696_3:
  mv a0, s2
  call minimbt_print_int
  li a0, 10
  call minimbt_print_char
  mv a0, zero

.main.12696_5:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.main.12696_4:
  mv s10, s0
  ld a2, 0(s0)
  mv a0, s2
  jalr a2
  mv s2, a0
  j .main.12696_2

  .p2align 2
  .text
  .globl aux.12707
  .type aux.12707, @function
# leaf false
aux.12707:
.aux.12707_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a1, s10
  lw a2, 8(a1)
  lw a3, 16(a1)
  lw a4, 24(a1)
  lw a5, 32(a1)
  lw a6, 40(a1)
  ld a7, 48(a1)
  ld t0, 56(a1)
  mv a1, a2
  mv a2, a3
  mv a3, a4
  mv a4, a5
  mv a5, a6
  mv a6, a7
  mv a7, t0
  call aux.12705
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start
  .type T$start, @function
# leaf false
T$start:
.T$start_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main.12696
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl add.12708
  .type add.12708, @function
# leaf false
add.12708:
.add.12708_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a2, s10
  call add.12706
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl add.12706
  .type add.12706, @function
# leaf true
add.12706:
.add.12706_0:
  add a0, a0, a1
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl aux.12700
  .type aux.12700, @function
# leaf true
aux.12700:
.aux.12700_0:
  add a0, a1, a0
  ret

  .p2align 2
  .text
  .globl aux.12697
  .type aux.12697, @function
# leaf true
aux.12697:
.aux.12697_0:
  mv a0, a1
  mv a1, a2
  lw a2, 0(a1)
  beq a2, a0, .aux.12697_1

.aux.12697_2:
  addi a0, a2, 1
  sw a0, 0(a1)
  addi a0, s11, -8
  andi s11, a0, -8
  li a1, 1
  sw a1, 0(a0)
  sw a2, 4(a0)

.aux.12697_3:
  ret

.aux.12697_1:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux.12697_3

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

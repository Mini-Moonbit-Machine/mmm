  .option arch, +xtheadba
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl fold84_2
  .type fold84_2, @function
# leaf false
fold84_2:
.fold84_2_5:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2

.fold84_2_0:
  mv s10, s0
  ld a1, 0(s0)
  mv a0, zero
  jalr a1
  mv a1, a0
  lw a0, 0(a1)
  lw a1, 4(a1)
  beq a0, zero, .fold84_2_1

.fold84_2_2:
  mv s10, s1
  ld a2, 0(s1)
  mv a0, s2
  jalr a2
  mv s2, a0
  j .fold84_2_0

.fold84_2_1:
  mv a0, s2

.fold84_2_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl filter20_0
  .type filter20_0, @function
# leaf true
filter20_0:
.filter20_0_0:
  addi a2, s11, -24
  andi s11, a2, -8
  la a3, aux25_5
  sd a3, 0(a2)
  sd a0, 8(a2)
  sd a1, 16(a2)
  mv a0, a2
  ret

  .p2align 2
  .text
  .globl aux6.154_16
  .type aux6.154_16, @function
# leaf false
aux6.154_16:
.aux6.154_16_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a1, s10
  ld a0, 8(a1)
  ld s0, 16(a1)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  lw a1, 0(a0)
  lw a0, 4(a0)
  beq a1, zero, .aux6.154_16_1

.aux6.154_16_2:
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  addi a1, s11, -8
  andi s11, a1, -8
  li a2, 1
  sw a2, 0(a1)
  sw a0, 4(a1)
  mv a0, a1

.aux6.154_16_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.aux6.154_16_1:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux6.154_16_3

  .p2align 2
  .text
  .globl aux117.167_20
  .type aux117.167_20, @function
# leaf true
aux117.167_20:
.aux117.167_20_0:
  mv a1, s10
  lw a1, 8(a1)
  blt a1, a0, .aux117.167_20_2

.aux117.167_20_1:
  mv a0, zero

.aux117.167_20_3:
  ret

.aux117.167_20_2:
  li a0, 1
  j .aux117.167_20_3

  .p2align 2
  .text
  .globl aux46.143_12
  .type aux46.143_12, @function
# leaf false
aux46.143_12:
.aux46.143_12_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a1, s10
  ld a0, 8(a1)
  ld s0, 16(a1)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  mv a1, a0
  lw a0, 0(a1)
  lw a1, 4(a1)
  bne a0, zero, .aux46.143_12_2

.aux46.143_12_1:
  mv s10, s0
  ld a1, 0(s0)
  mv a0, zero
  jalr a1

.aux46.143_12_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.aux46.143_12_2:
  addi a0, s11, -8
  andi s11, a0, -8
  li a2, 1
  sw a2, 0(a0)
  sw a1, 4(a0)
  j .aux46.143_12_3

  .p2align 2
  .text
  .globl add102.169_22
  .type add102.169_22, @function
# leaf true
add102.169_22:
.add102.169_22_0:
  mv a2, s10
  add a0, a0, a1
  ret

  .p2align 2
  .text
  .globl main120_3
  .type main120_3, @function
# leaf false
main120_3:
.main120_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a0, zero
  li a1, 100
  call range58_1
  mv s0, a0
  mv a0, zero
  li a1, 1000
  call range58_1
  addi a1, s11, -24
  andi s11, a1, -8
  la a2, aux46.143_12
  sd a2, 0(a1)
  sd s0, 8(a1)
  sd a0, 16(a1)
  addi a0, s11, -16
  andi s11, a0, -8
  la a2, aux81.152_14
  sd a2, 0(a0)
  li a2, 1
  sd a2, 8(a0)
  addi a2, s11, -24
  andi s11, a2, -8
  la a3, aux6.154_16
  sd a3, 0(a2)
  sd a1, 8(a2)
  sd a0, 16(a2)
  addi a1, s11, -16
  andi s11, a1, -8
  la a0, aux111.165_18
  sd a0, 0(a1)
  li a0, 50
  sd a0, 8(a1)
  mv a0, a2
  call filter20_0
  addi a1, s11, -16
  andi s11, a1, -8
  la a2, aux117.167_20
  sd a2, 0(a1)
  li a2, 1200
  sd a2, 8(a1)
  call filter20_0
  addi a1, s11, -8
  andi s11, a1, -8
  la a2, add102.169_22
  sd a2, 0(a1)
  mv a2, zero
  call fold84_2
  call minimbt_print_int
  li a0, 10
  call minimbt_print_char
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux65_8
  .type aux65_8, @function
# leaf true
aux65_8:
.aux65_8_0:
  mv a1, s10
  ld a0, 8(a1)
  lw a1, 16(a1)
  lw a2, 0(a0)
  beq a2, a1, .aux65_8_1

.aux65_8_2:
  addi a1, a2, 1
  sw a1, 0(a0)
  addi a0, s11, -8
  andi s11, a0, -8
  li a1, 1
  sw a1, 0(a0)
  sw a2, 4(a0)

.aux65_8_3:
  ret

.aux65_8_1:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux65_8_3

  .p2align 2
  .text
  .globl range58_1
  .type range58_1, @function
# leaf true
range58_1:
.range58_1_0:
  addi a2, s11, -4
  andi s11, a2, -8
  sw a0, 0(a2)
  addi a0, s11, -24
  andi s11, a0, -8
  la a3, aux65_8
  sd a3, 0(a0)
  sd a2, 8(a0)
  sd a1, 16(a0)
  ret

  .p2align 2
  .text
  .globl aux25_5
  .type aux25_5, @function
# leaf false
aux25_5:
.aux25_5_8:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv a1, s10
  ld s2, 8(a1)
  ld s1, 16(a1)

.aux25_5_0:
  mv s10, s2
  ld a1, 0(s2)
  mv a0, zero
  jalr a1
  mv a1, a0
  lw a0, 0(a1)
  lw s0, 4(a1)
  beq a0, zero, .aux25_5_1

.aux25_5_2:
  mv s10, s1
  ld a1, 0(s1)
  mv a0, s0
  jalr a1
  bne a0, zero, .aux25_5_4

.aux25_5_3:
  addi a0, s11, -8
  andi s11, a0, -8
  li a1, 1
  sw a1, 0(a0)
  sw s0, 4(a0)

.aux25_5_5:

.aux25_5_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.aux25_5_1:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux25_5_6

.aux25_5_4:
  mv a0, zero
  j .aux25_5_0

  .p2align 2
  .text
  .globl T$start_24
  .type T$start_24, @function
# leaf false
T$start_24:
.T$start_24_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main120_3
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux81.152_14
  .type aux81.152_14, @function
# leaf true
aux81.152_14:
.aux81.152_14_0:
  mv a1, s10
  lw a1, 8(a1)
  add a0, a1, a0
  ret

  .p2align 2
  .text
  .globl aux111.165_18
  .type aux111.165_18, @function
# leaf true
aux111.165_18:
.aux111.165_18_0:
  mv a1, s10
  lw a1, 8(a1)
  blt a0, a1, .aux111.165_18_2

.aux111.165_18_1:
  mv a0, zero

.aux111.165_18_3:
  ret

.aux111.165_18_2:
  li a0, 1
  j .aux111.165_18_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_24
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

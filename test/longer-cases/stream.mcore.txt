  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl add.349
  .type add.349, @function
# leaf true
add.349:
.add.349_0:
  mv a2, s10
  add a0, a0, a1
  ret

  .p2align 2
  .text
  .globl filter.15
  .type filter.15, @function
# leaf true
filter.15:
.filter.15_0:
  addi a2, s11, -24
  andi s11, a2, -8
  la a3, aux.18
  sd a3, 0(a2)
  sd a0, 8(a2)
  sd a1, 16(a2)
  mv a0, a2
  ret

  .p2align 2
  .text
  .globl range.43
  .type range.43, @function
# leaf true
range.43:
.range.43_0:
  addi a2, s11, -4
  andi s11, a2, -8
  sw a0, 0(a2)
  addi a0, s11, -24
  andi s11, a0, -8
  la a3, aux.48
  sd a3, 0(a0)
  sd a2, 8(a0)
  sd a1, 16(a0)
  ret

  .p2align 2
  .text
  .globl fold.63
  .type fold.63, @function
# leaf false
fold.63:
.fold.63_8:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, a0
  mv s2, a1
  mv s1, a2

.fold.63_0:
  mv s10, s0
  ld a1, 0(s0)
  mv a0, zero
  jalr a1
  mv a1, a0
  lw a0, 0(a1)
  lw a1, 4(a1)
  beq a0, zero, .fold.63_1

.fold.63_2:
  mv s10, s2
  ld a2, 0(s2)
  mv a0, s1
  jalr a2
  mv s1, a0
  mv s10, s0
  ld a1, 0(s0)
  mv a0, zero
  jalr a1
  mv a1, a0
  lw a0, 0(a1)
  lw a1, 4(a1)
  beq a0, zero, .fold.63_3

.fold.63_4:
  mv s10, s2
  ld a2, 0(s2)
  mv a0, s1
  jalr a2
  mv s1, a0
  j .fold.63_0

.fold.63_1:
  mv a0, s1

.fold.63_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.fold.63_3:
  mv a0, s1

.fold.63_5:
  j .fold.63_6

  .p2align 2
  .text
  .globl aux.320
  .type aux.320, @function
# leaf false
aux.320:
.aux.320_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a1, s10
  ld a0, 8(a1)
  ld s0, 16(a1)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  lw a1, 0(a0)
  lw a0, 4(a0)
  beq a1, zero, .aux.320_1

.aux.320_2:
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  addi a1, s11, -8
  andi s11, a1, -8
  li a2, 1
  sw a2, 0(a1)
  sw a0, 4(a1)
  mv a0, a1

.aux.320_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.aux.320_1:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux.320_3

  .p2align 2
  .text
  .globl aux.48
  .type aux.48, @function
# leaf true
aux.48:
.aux.48_0:
  mv a1, s10
  ld a0, 8(a1)
  lw a1, 16(a1)
  lw a2, 0(a0)
  beq a2, a1, .aux.48_1

.aux.48_2:
  addi a1, a2, 1
  sw a1, 0(a0)
  addi a0, s11, -8
  andi s11, a0, -8
  li a1, 1
  sw a1, 0(a0)
  sw a2, 4(a0)

.aux.48_3:
  ret

.aux.48_1:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux.48_3

  .p2align 2
  .text
  .globl aux.296
  .type aux.296, @function
# leaf true
aux.296:
.aux.296_0:
  mv a1, s10
  lw a1, 8(a1)
  add a0, a1, a0
  ret

  .p2align 2
  .text
  .globl aux.347
  .type aux.347, @function
# leaf true
aux.347:
.aux.347_0:
  mv a1, s10
  lw a1, 8(a1)
  blt a1, a0, .aux.347_2

.aux.347_1:
  mv a0, zero

.aux.347_3:
  ret

.aux.347_2:
  li a0, 1
  j .aux.347_3

  .p2align 2
  .text
  .globl aux.232
  .type aux.232, @function
# leaf false
aux.232:
.aux.232_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a1, s10
  ld a0, 8(a1)
  ld s0, 16(a1)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  lw a1, 0(a0)
  lw a0, 4(a0)
  bne a1, zero, .aux.232_2

.aux.232_1:
  mv s10, s0
  ld a1, 0(s0)
  mv a0, zero
  jalr a1

.aux.232_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.aux.232_2:
  addi a1, s11, -8
  andi s11, a1, -8
  li a2, 1
  sw a2, 0(a1)
  sw a0, 4(a1)
  mv a0, a1
  j .aux.232_3

  .p2align 2
  .text
  .globl aux.341
  .type aux.341, @function
# leaf true
aux.341:
.aux.341_0:
  mv a1, s10
  lw a1, 8(a1)
  blt a0, a1, .aux.341_2

.aux.341_1:
  mv a0, zero

.aux.341_3:
  ret

.aux.341_2:
  li a0, 1
  j .aux.341_3

  .p2align 2
  .text
  .globl T$start
  .type T$start, @function
# leaf false
T$start:
.T$start_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main.87
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl aux.18
  .type aux.18, @function
# leaf false
aux.18:
.aux.18_8:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv a1, s10
  ld s1, 8(a1)
  ld s0, 16(a1)

.aux.18_0:
  mv s10, s1
  ld a1, 0(s1)
  mv a0, zero
  jalr a1
  mv a1, a0
  lw a0, 0(a1)
  lw s2, 4(a1)
  beq a0, zero, .aux.18_1

.aux.18_2:
  mv s10, s0
  ld a1, 0(s0)
  mv a0, s2
  jalr a1
  bne a0, zero, .aux.18_4

.aux.18_3:
  addi a0, s11, -8
  andi s11, a0, -8
  li a1, 1
  sw a1, 0(a0)
  sw s2, 4(a0)

.aux.18_5:

.aux.18_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.aux.18_1:
  addi a0, s11, -8
  andi s11, a0, -8
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux.18_6

.aux.18_4:
  mv a0, zero
  j .aux.18_0

  .p2align 2
  .text
  .globl main.87
  .type main.87, @function
# leaf false
main.87:
.main.87_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a0, zero
  li a1, 100
  call range.43
  mv s0, a0
  mv a0, zero
  li a1, 1000
  call range.43
  addi a1, s11, -24
  andi s11, a1, -8
  la a2, aux.232
  sd a2, 0(a1)
  sd s0, 8(a1)
  sd a0, 16(a1)
  addi a0, s11, -16
  andi s11, a0, -8
  la a2, aux.296
  sd a2, 0(a0)
  li a2, 1
  sd a2, 8(a0)
  addi a2, s11, -24
  andi s11, a2, -8
  la a3, aux.320
  sd a3, 0(a2)
  sd a1, 8(a2)
  sd a0, 16(a2)
  addi a1, s11, -16
  andi s11, a1, -8
  la a0, aux.341
  sd a0, 0(a1)
  li a0, 50
  sd a0, 8(a1)
  mv a0, a2
  call filter.15
  addi a1, s11, -16
  andi s11, a1, -8
  la a2, aux.347
  sd a2, 0(a1)
  li a2, 1200
  sd a2, 8(a1)
  call filter.15
  addi a1, s11, -8
  andi s11, a1, -8
  la a2, add.349
  sd a2, 0(a1)
  mv a2, zero
  call fold.63
  call minimbt_print_int
  li a0, 10
  call minimbt_print_char
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

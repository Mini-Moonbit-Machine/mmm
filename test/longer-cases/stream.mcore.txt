  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl main120l9_17
  .type main120l9_17, @function
# leaf false
main120l9_17:
.main120l9_17_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a0, zero
  li a1, 100
  call range58l3_7
  mv s0, a0
  mv a0, zero
  li a1, 1000
  call range58l3_7
  mv a1, a0
  mv a0, s0
  call concat41l2_5
  mv s0, a0
  li a0, 1
  call addx78l4_9
  mv a1, a0
  mv a0, s0
  call map1l0_1
  mv s0, a0
  li a0, 50
  call gt108l7_14
  mv a1, a0
  mv a0, s0
  call filter20l1_3
  mv s0, a0
  li a0, 1200
  call le114l8_16
  mv a1, a0
  mv a0, s0
  call filter20l1_3
  call sum99l6_12
  call minimbt_print_int
  li a0, 10
  call minimbt_print_char
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl sum99l6_12
  .type sum99l6_12, @function
# leaf false
sum99l6_12:
.sum99l6_12_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  la a2, add102l7c0_41
  sd a2, 0(a1)
  mv a2, zero
  call fold84l5_10
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl filter20l1_3
  .type filter20l1_3, @function
# leaf true
filter20l1_3:
.filter20l1_3_0:
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, aux25l2c0_24
  sd a3, 0(a2)
  sd a1, 8(a2)
  sd a0, 16(a2)
  mv a0, a2
  ret

  .p2align 2
  .text
  .globl aux6l1c0_20
  .type aux6l1c0_20, @function
# leaf false
aux6l1c0_20:
.aux6l1c0_20_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a1, s10
  ld a2, 8(a1)
  ld a3, 16(a1)
  mv a1, a2
  mv a2, a3
  call aux6l1_0
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl add102l7_11
  .type add102l7_11, @function
# leaf true
add102l7_11:
.add102l7_11_0:
  add a0, a0, a1
  ret

  .p2align 2
  .text
  .globl map1l0_1
  .type map1l0_1, @function
# leaf true
map1l0_1:
.map1l0_1_0:
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, aux6l1c0_20
  sd a3, 0(a2)
  sd a1, 8(a2)
  sd a0, 16(a2)
  mv a0, a2
  ret

  .p2align 2
  .text
  .globl gt108l7_14
  .type gt108l7_14, @function
# leaf true
gt108l7_14:
.gt108l7_14_0:
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, aux111l8c0_45
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  ret

  .p2align 2
  .text
  .globl aux6l1_0
  .type aux6l1_0, @function
# leaf false
aux6l1_0:
.aux6l1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv s0, a1
  mv a0, a2
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  lw a1, 0(a0)
  lw a0, 4(a0)
  beq a1, zero, .aux6l1_0_1

.aux6l1_0_2:
  mv s10, s0
  ld a1, 0(s0)
  jalr a1
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  li a2, 1
  sw a2, 0(a1)
  sw a0, 4(a1)
  mv a0, a1

.aux6l1_0_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.aux6l1_0_1:
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux6l1_0_3

  .p2align 2
  .text
  .globl aux117l9c0_49
  .type aux117l9c0_49, @function
# leaf false
aux117l9c0_49:
.aux117l9c0_49_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a1, s10
  lw a1, 8(a1)
  call aux117l9_15
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl add102l7c0_41
  .type add102l7c0_41, @function
# leaf false
add102l7c0_41:
.add102l7c0_41_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a2, s10
  call add102l7_11
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux46l3c0_28
  .type aux46l3c0_28, @function
# leaf false
aux46l3c0_28:
.aux46l3c0_28_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a1, s10
  ld a2, 8(a1)
  ld a3, 16(a1)
  mv a1, a2
  mv a2, a3
  call aux46l3_4
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl addx78l4_9
  .type addx78l4_9, @function
# leaf true
addx78l4_9:
.addx78l4_9_0:
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, aux81l5c0_36
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_52
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl aux111l8c0_45
  .type aux111l8c0_45, @function
# leaf false
aux111l8c0_45:
.aux111l8c0_45_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a1, s10
  lw a1, 8(a1)
  call aux111l8_13
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux65l4_6
  .type aux65l4_6, @function
# leaf true
aux65l4_6:
.aux65l4_6_0:
  mv a0, a1
  mv a1, a2
  lw a2, 0(a1)
  beq a2, a0, .aux65l4_6_1

.aux65l4_6_2:
  addi a0, a2, 1
  sw a0, 0(a1)
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  li a1, 1
  sw a1, 0(a0)
  sw a2, 4(a0)

.aux65l4_6_3:
  ret

.aux65l4_6_1:
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux65l4_6_3

  .p2align 2
  .text
  .globl T$start_52
  .type T$start_52, @function
# leaf false
T$start_52:
.T$start_52_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main120l9_17
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux81l5_8
  .type aux81l5_8, @function
# leaf true
aux81l5_8:
.aux81l5_8_0:
  add a0, a1, a0
  ret

  .p2align 2
  .text
  .globl range58l3_7
  .type range58l3_7, @function
# leaf true
range58l3_7:
.range58l3_7_0:
  addi a2, s11, -4
  andi a2, a2, -8
  mv s11, a2
  sw a0, 0(a2)
  addi a0, s11, -24
  andi a0, a0, -8
  mv s11, a0
  la a3, aux65l4c0_32
  sd a3, 0(a0)
  sd a1, 8(a0)
  sd a2, 16(a0)
  ret

  .p2align 2
  .text
  .globl fold84l5_10
  .type fold84l5_10, @function
# leaf false
fold84l5_10:
.fold84l5_10_4:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s1, a0
  mv s0, a1
  mv a0, a2
  mv s2, a0

.fold84l5_10_0:
  mv s10, s1
  ld a1, 0(s1)
  mv a0, zero
  jalr a1
  mv a1, a0
  lw a0, 0(a1)
  lw a1, 4(a1)
  beq a0, zero, .fold84l5_10_1

.fold84l5_10_2:
  mv s10, s0
  ld a2, 0(s0)
  mv a0, s2
  jalr a2
  mv s2, a0
  j .fold84l5_10_0

.fold84l5_10_1:
  mv a0, s2

.fold84l5_10_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl aux81l5c0_36
  .type aux81l5c0_36, @function
# leaf false
aux81l5c0_36:
.aux81l5c0_36_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a1, s10
  lw a1, 8(a1)
  call aux81l5_8
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux65l4c0_32
  .type aux65l4c0_32, @function
# leaf false
aux65l4c0_32:
.aux65l4c0_32_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a1, s10
  lw a2, 8(a1)
  ld a3, 16(a1)
  mv a1, a2
  mv a2, a3
  call aux65l4_6
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux117l9_15
  .type aux117l9_15, @function
# leaf true
aux117l9_15:
.aux117l9_15_0:
  blt a1, a0, .aux117l9_15_2

.aux117l9_15_1:
  mv a0, zero

.aux117l9_15_3:
  ret

.aux117l9_15_2:
  li a0, 1
  j .aux117l9_15_3

  .p2align 2
  .text
  .globl aux46l3_4
  .type aux46l3_4, @function
# leaf false
aux46l3_4:
.aux46l3_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a0, a1
  mv s0, a2
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  lw a1, 0(a0)
  lw a0, 4(a0)
  bne a1, zero, .aux46l3_4_2

.aux46l3_4_1:
  mv s10, s0
  ld a1, 0(s0)
  mv a0, zero
  jalr a1

.aux46l3_4_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.aux46l3_4_2:
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  li a2, 1
  sw a2, 0(a1)
  sw a0, 4(a1)
  mv a0, a1
  j .aux46l3_4_3

  .p2align 2
  .text
  .globl concat41l2_5
  .type concat41l2_5, @function
# leaf true
concat41l2_5:
.concat41l2_5_0:
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, aux46l3c0_28
  sd a3, 0(a2)
  sd a0, 8(a2)
  sd a1, 16(a2)
  mv a0, a2
  ret

  .p2align 2
  .text
  .globl aux25l2c0_24
  .type aux25l2c0_24, @function
# leaf false
aux25l2c0_24:
.aux25l2c0_24_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a1, s10
  ld a2, 8(a1)
  ld a3, 16(a1)
  mv a1, a2
  mv a2, a3
  call aux25l2_2
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl le114l8_16
  .type le114l8_16, @function
# leaf true
le114l8_16:
.le114l8_16_0:
  addi a1, s11, -16
  andi a1, a1, -8
  mv s11, a1
  la a2, aux117l9c0_49
  sd a2, 0(a1)
  sd a0, 8(a1)
  mv a0, a1
  ret

  .p2align 2
  .text
  .globl aux25l2_2
  .type aux25l2_2, @function
# leaf false
aux25l2_2:
.aux25l2_2_7:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, a1
  mv s1, a2

.aux25l2_2_0:
  mv s10, s1
  ld a1, 0(s1)
  mv a0, zero
  jalr a1
  mv a1, a0
  lw a0, 0(a1)
  lw s2, 4(a1)
  beq a0, zero, .aux25l2_2_1

.aux25l2_2_2:
  mv s10, s0
  ld a1, 0(s0)
  mv a0, s2
  jalr a1
  bne a0, zero, .aux25l2_2_4

.aux25l2_2_3:
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  li a1, 1
  sw a1, 0(a0)
  sw s2, 4(a0)

.aux25l2_2_5:

.aux25l2_2_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.aux25l2_2_1:
  addi a0, s11, -8
  andi a0, a0, -8
  mv s11, a0
  sw zero, 0(a0)
  sw zero, 4(a0)
  j .aux25l2_2_6

.aux25l2_2_4:
  mv a0, zero
  j .aux25l2_2_0

  .p2align 2
  .text
  .globl aux111l8_13
  .type aux111l8_13, @function
# leaf true
aux111l8_13:
.aux111l8_13_0:
  blt a0, a1, .aux111l8_13_2

.aux111l8_13_1:
  mv a0, zero

.aux111l8_13_3:
  ret

.aux111l8_13_2:
  li a0, 1
  j .aux111l8_13_3

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

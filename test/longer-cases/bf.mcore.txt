  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl bf5l1_4
  .type bf5l1_4, @function
# leaf false
bf5l1_4:
.bf5l1_4_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv s0, a0
  mv s1, a1
  addi s2, s11, -4
  andi s11, s2, -8
  sw zero, 0(s2)
  li a0, 1024
  mul a0, a0, a0
  slliw a1, a0, 2
  sub s3, s11, a1
  andi s11, s3, -8
  mv a1, a0
  mv a0, s3
  mv a2, zero
  call memseti32
  addi a5, s11, -4
  andi s11, a5, -8
  sw zero, 0(a5)
  mv a0, zero
  mv a1, s2
  mv a2, s0
  mv a3, s3
  mv a4, s1
  call aux40l3_3
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl T$start_20
  .type T$start_20, @function
# leaf false
T$start_20:
.T$start_20_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main136l2_9
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl read_prog140l3_8
  .type read_prog140l3_8, @function
# leaf false
read_prog140l3_8:
.read_prog140l3_8_14:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv s0, a0
  mv s1, a1

.read_prog140l3_8_0:
  call minimbt_read_char
  mv a1, a0
  li a0, 10
  beq a1, a0, .read_prog140l3_8_1

.read_prog140l3_8_2:
  li a0, 13
  bne a1, a0, .read_prog140l3_8_4

.read_prog140l3_8_3:
  li a0, -1

.read_prog140l3_8_5:

.read_prog140l3_8_6:
  li a1, -1
  beq a0, a1, .read_prog140l3_8_7

.read_prog140l3_8_8:
  slliw a1, s0, 2
  add a1, s1, a1
  sw a0, 0(a1)
  addi s0, s0, 1
  call read_ch_until_newline_or_eof1l0_0
  mv a1, a0
  li a0, -1
  beq a1, a0, .read_prog140l3_8_9

.read_prog140l3_8_10:
  slliw a0, s0, 2
  add a0, s1, a0
  sw a1, 0(a0)
  addi a0, s0, 1
  mv s0, a0
  j .read_prog140l3_8_0

.read_prog140l3_8_1:
  li a0, -1
  j .read_prog140l3_8_6

.read_prog140l3_8_4:
  mv a0, a1
  j .read_prog140l3_8_5

.read_prog140l3_8_7:
  addi s2, s11, -4
  andi s11, s2, -8
  sw zero, 0(s2)
  li a0, 1024
  mul a0, a0, a0
  slliw a1, a0, 2
  sub s3, s11, a1
  andi s11, s3, -8
  mv a1, a0
  mv a0, s3
  mv a2, zero
  call memseti32
  addi a5, s11, -4
  andi s11, a5, -8
  sw zero, 0(a5)
  mv a0, zero
  mv a1, s2
  mv a2, s0
  mv a3, s1
  mv a4, s3
  call aux40.186l5_7
  mv a0, zero

.read_prog140l3_8_12:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

.read_prog140l3_8_9:
  mv a0, s0
  mv a1, s1
  call bf5l1_4

.read_prog140l3_8_11:
  j .read_prog140l3_8_12

  .p2align 2
  .text
  .globl read_ch_until_newline_or_eof1l0_0
  .type read_ch_until_newline_or_eof1l0_0, @function
# leaf false
read_ch_until_newline_or_eof1l0_0:
.read_ch_until_newline_or_eof1l0_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call minimbt_read_char
  li a1, 10
  beq a0, a1, .read_ch_until_newline_or_eof1l0_0_1

.read_ch_until_newline_or_eof1l0_0_2:
  li a1, 13
  bne a0, a1, .read_ch_until_newline_or_eof1l0_0_4

.read_ch_until_newline_or_eof1l0_0_3:
  li a0, -1

.read_ch_until_newline_or_eof1l0_0_5:

.read_ch_until_newline_or_eof1l0_0_6:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.read_ch_until_newline_or_eof1l0_0_1:
  li a0, -1
  j .read_ch_until_newline_or_eof1l0_0_6

.read_ch_until_newline_or_eof1l0_0_4:
  j .read_ch_until_newline_or_eof1l0_0_5

  .p2align 2
  .text
  .globl aux40l3_3
  .type aux40l3_3, @function
# leaf false
aux40l3_3:
.aux40l3_3_35:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  mv s5, a0
  mv s4, a1
  mv s1, a2
  mv s0, a3
  mv s3, a4
  mv s2, a5

.aux40l3_3_0:
  bge s5, s1, .aux40l3_3_1

.aux40l3_3_2:
  slliw a0, s5, 2
  add a0, s3, a0
  lw a1, 0(a0)
  li a0, 62
  beq a1, a0, .aux40l3_3_3

.aux40l3_3_4:
  li a0, 60
  beq a1, a0, .aux40l3_3_5

.aux40l3_3_6:
  li a0, 43
  beq a1, a0, .aux40l3_3_7

.aux40l3_3_8:
  li a0, 45
  beq a1, a0, .aux40l3_3_9

.aux40l3_3_10:
  li a0, 46
  beq a1, a0, .aux40l3_3_11

.aux40l3_3_12:
  li a0, 44
  bne a1, a0, .aux40l3_3_14

.aux40l3_3_13:
  lw s6, 0(s4)
  call minimbt_read_char
  mv a1, a0
  li a0, 10
  beq a1, a0, .aux40l3_3_15

.aux40l3_3_16:
  li a0, 13
  bne a1, a0, .aux40l3_3_18

.aux40l3_3_17:
  li a0, -1

.aux40l3_3_19:

.aux40l3_3_20:
  slliw a1, s6, 2
  add a1, s0, a1
  sw a0, 0(a1)
  addi a0, s5, 1
  mv s5, a0
  j .aux40l3_3_0

.aux40l3_3_1:
  mv a0, s5

.aux40l3_3_33:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  addi sp, sp, 64
  ret

.aux40l3_3_3:
  lw a0, 0(s4)
  addi a0, a0, 1
  sw a0, 0(s4)
  addi a0, s5, 1
  mv s5, a0
  j .aux40l3_3_0

.aux40l3_3_5:
  lw a0, 0(s4)
  addi a0, a0, -1
  sw a0, 0(s4)
  addi a0, s5, 1
  mv s5, a0
  j .aux40l3_3_0

.aux40l3_3_7:
  lw a0, 0(s4)
  lw a1, 0(s4)
  slliw a1, a1, 2
  add a1, s0, a1
  lw a1, 0(a1)
  addi a1, a1, 1
  slliw a0, a0, 2
  add a0, s0, a0
  sw a1, 0(a0)
  addi a0, s5, 1
  mv s5, a0
  j .aux40l3_3_0

.aux40l3_3_9:
  lw a0, 0(s4)
  lw a1, 0(s4)
  slliw a1, a1, 2
  add a1, s0, a1
  lw a1, 0(a1)
  addi a1, a1, -1
  slliw a0, a0, 2
  add a0, s0, a0
  sw a1, 0(a0)
  addi a0, s5, 1
  mv s5, a0
  j .aux40l3_3_0

.aux40l3_3_11:
  lw a0, 0(s4)
  slliw a0, a0, 2
  add a0, s0, a0
  lw a0, 0(a0)
  call minimbt_print_char
  addi a0, s5, 1
  mv s5, a0
  j .aux40l3_3_0

.aux40l3_3_14:
  li a0, 91
  beq a1, a0, .aux40l3_3_21

.aux40l3_3_22:
  li a0, 93
  bne a1, a0, .aux40l3_3_24

.aux40l3_3_23:
  mv a0, s5

.aux40l3_3_25:

.aux40l3_3_26:

.aux40l3_3_27:

.aux40l3_3_28:

.aux40l3_3_29:

.aux40l3_3_30:

.aux40l3_3_31:

.aux40l3_3_32:
  j .aux40l3_3_33

.aux40l3_3_21:
  sw s5, 0(s2)

.aux40l3_3_56:

.aux40l3_3_51:
  lw a0, 0(s4)
  slliw a0, a0, 2
  add a0, s0, a0
  lw a0, 0(a0)
  beq a0, zero, .aux40l3_3_52

.aux40l3_3_53:
  addi a0, s5, 1
  mv a1, s4
  mv a2, s1
  mv a3, s0
  mv a4, s3
  mv a5, s2
  call aux40l3_3
  sw a0, 0(s2)
  j .aux40l3_3_51

.aux40l3_3_52:
  addi a0, s5, 1

.aux40l3_3_74:
  mv a1, a0
  mv a0, zero
  mv a2, s1
  mv a3, s3

.aux40l3_3_60:
  bge a1, a2, .aux40l3_3_61

.aux40l3_3_62:
  slliw a4, a1, 2
  add a4, a3, a4
  lw a4, 0(a4)
  li a5, 91
  beq a4, a5, .aux40l3_3_63

.aux40l3_3_64:
  li a5, 93
  bne a4, a5, .aux40l3_3_66

.aux40l3_3_65:
  beq a0, zero, .aux40l3_3_67

.aux40l3_3_68:
  addi a1, a1, 1
  addi a0, a0, -1
  j .aux40l3_3_60

.aux40l3_3_61:
  mv a0, a1

.aux40l3_3_72:

.aux40l3_3_57:
  sw a0, 0(s2)
  mv a0, zero

.aux40l3_3_54:

.aux40l3_3_36:
  lw a0, 0(s2)
  addi a0, a0, 1
  mv s5, a0
  j .aux40l3_3_0

.aux40l3_3_63:
  addi a1, a1, 1
  addi a0, a0, 1
  j .aux40l3_3_60

.aux40l3_3_66:
  addi a1, a1, 1
  j .aux40l3_3_60

.aux40l3_3_67:
  mv a0, a1

.aux40l3_3_69:

.aux40l3_3_70:

.aux40l3_3_71:
  j .aux40l3_3_72

.aux40l3_3_24:
  mv a0, s5
  j .aux40l3_3_25

.aux40l3_3_15:
  li a0, -1
  j .aux40l3_3_20

.aux40l3_3_18:
  mv a0, a1
  j .aux40l3_3_19

  .p2align 2
  .text
  .globl main136l2_9
  .type main136l2_9, @function
# leaf false
main136l2_9:
.main136l2_9_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  li a0, 4096
  sub s0, s11, a0
  andi s11, s0, -8
  li a0, 1024
  mv a1, a0
  mv a0, s0
  mv a2, zero
  call memseti32
  call read_ch_until_newline_or_eof1l0_0
  li a1, -1
  beq a0, a1, .main136l2_9_1

.main136l2_9_2:
  sw a0, 0(s0)
  li a0, 1
  addi a0, a0, 0
  mv a1, s0
  call read_prog140l3_8

.main136l2_9_3:
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.main136l2_9_1:
  mv a0, zero
  mv a1, s0
  call bf5l1_4
  j .main136l2_9_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_20
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl aux40.186l5_7
  .type aux40.186l5_7, @function
# leaf false
aux40.186l5_7:
.aux40.186l5_7_29:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  mv s0, a0
  mv s5, a1
  mv s2, a2
  mv s1, a3
  mv s4, a4
  mv s3, a5

.aux40.186l5_7_0:
  bge s0, s2, .aux40.186l5_7_1

.aux40.186l5_7_2:
  slliw a0, s0, 2
  add a0, s1, a0
  lw a1, 0(a0)
  li a0, 62
  beq a1, a0, .aux40.186l5_7_3

.aux40.186l5_7_4:
  li a0, 60
  beq a1, a0, .aux40.186l5_7_5

.aux40.186l5_7_6:
  li a0, 43
  beq a1, a0, .aux40.186l5_7_7

.aux40.186l5_7_8:
  li a0, 45
  beq a1, a0, .aux40.186l5_7_9

.aux40.186l5_7_10:
  li a0, 46
  beq a1, a0, .aux40.186l5_7_11

.aux40.186l5_7_12:
  li a0, 44
  beq a1, a0, .aux40.186l5_7_13

.aux40.186l5_7_14:
  li a0, 91
  beq a1, a0, .aux40.186l5_7_15

.aux40.186l5_7_16:
  li a0, 93
  bne a1, a0, .aux40.186l5_7_18

.aux40.186l5_7_17:
  mv a0, s0

.aux40.186l5_7_19:

.aux40.186l5_7_20:

.aux40.186l5_7_21:

.aux40.186l5_7_22:

.aux40.186l5_7_23:

.aux40.186l5_7_24:

.aux40.186l5_7_25:

.aux40.186l5_7_26:

.aux40.186l5_7_27:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  addi sp, sp, 64
  ret

.aux40.186l5_7_1:
  mv a0, s0
  j .aux40.186l5_7_27

.aux40.186l5_7_3:
  lw a0, 0(s5)
  addi a0, a0, 1
  sw a0, 0(s5)
  addi a0, s0, 1
  mv s0, a0
  j .aux40.186l5_7_0

.aux40.186l5_7_5:
  lw a0, 0(s5)
  addi a0, a0, -1
  sw a0, 0(s5)
  addi a0, s0, 1
  mv s0, a0
  j .aux40.186l5_7_0

.aux40.186l5_7_7:
  lw a0, 0(s5)
  lw a1, 0(s5)
  slliw a1, a1, 2
  add a1, s4, a1
  lw a1, 0(a1)
  addi a1, a1, 1
  slliw a0, a0, 2
  add a0, s4, a0
  sw a1, 0(a0)
  addi a0, s0, 1
  mv s0, a0
  j .aux40.186l5_7_0

.aux40.186l5_7_9:
  lw a0, 0(s5)
  lw a1, 0(s5)
  slliw a1, a1, 2
  add a1, s4, a1
  lw a1, 0(a1)
  addi a1, a1, -1
  slliw a0, a0, 2
  add a0, s4, a0
  sw a1, 0(a0)
  addi a0, s0, 1
  mv s0, a0
  j .aux40.186l5_7_0

.aux40.186l5_7_11:
  lw a0, 0(s5)
  slliw a0, a0, 2
  add a0, s4, a0
  lw a0, 0(a0)
  call minimbt_print_char
  addi a0, s0, 1
  mv s0, a0
  j .aux40.186l5_7_0

.aux40.186l5_7_13:
  lw s6, 0(s5)
  call read_ch_until_newline_or_eof1l0_0
  slliw a1, s6, 2
  add a1, s4, a1
  sw a0, 0(a1)
  addi a0, s0, 1
  mv s0, a0
  j .aux40.186l5_7_0

.aux40.186l5_7_15:
  sw s0, 0(s3)

.aux40.186l5_7_54:

.aux40.186l5_7_49:
  lw a0, 0(s5)
  slliw a0, a0, 2
  add a0, s4, a0
  lw a0, 0(a0)
  beq a0, zero, .aux40.186l5_7_50

.aux40.186l5_7_51:
  addi a0, s0, 1
  mv a1, s5
  mv a2, s2
  mv a3, s1
  mv a4, s4
  mv a5, s3
  call aux40.186l5_7
  sw a0, 0(s3)
  j .aux40.186l5_7_49

.aux40.186l5_7_50:
  addi a0, s0, 1

.aux40.186l5_7_72:
  mv a1, zero
  mv a2, s2
  mv a3, s1

.aux40.186l5_7_58:
  bge a0, a2, .aux40.186l5_7_59

.aux40.186l5_7_60:
  slliw a4, a0, 2
  add a4, a3, a4
  lw a4, 0(a4)
  li a5, 91
  beq a4, a5, .aux40.186l5_7_61

.aux40.186l5_7_62:
  li a5, 93
  bne a4, a5, .aux40.186l5_7_64

.aux40.186l5_7_63:
  beq a1, zero, .aux40.186l5_7_65

.aux40.186l5_7_66:
  addi a0, a0, 1
  addi a1, a1, -1
  j .aux40.186l5_7_58

.aux40.186l5_7_59:

.aux40.186l5_7_70:

.aux40.186l5_7_55:
  sw a0, 0(s3)
  mv a0, zero

.aux40.186l5_7_52:

.aux40.186l5_7_30:
  lw a0, 0(s3)
  addi a0, a0, 1
  mv s0, a0
  j .aux40.186l5_7_0

.aux40.186l5_7_61:
  addi a0, a0, 1
  addi a1, a1, 1
  j .aux40.186l5_7_58

.aux40.186l5_7_64:
  addi a0, a0, 1
  j .aux40.186l5_7_58

.aux40.186l5_7_65:

.aux40.186l5_7_67:

.aux40.186l5_7_68:

.aux40.186l5_7_69:
  j .aux40.186l5_7_70

.aux40.186l5_7_18:
  mv a0, s0
  j .aux40.186l5_7_19

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

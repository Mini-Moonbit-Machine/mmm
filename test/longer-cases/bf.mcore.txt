  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl aux.249
  .type aux.249, @function
# leaf false
aux.249:
.aux.249_29:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  mv s5, a0
  mv s4, a1
  mv s1, a2
  mv s0, a3
  mv s3, a4
  mv s2, a5

.aux.249_0:
  bge s5, s4, .aux.249_1

.aux.249_2:
  slliw a0, s5, 2
  add a0, s0, a0
  lw a0, 0(a0)
  li a1, 62
  beq a0, a1, .aux.249_3

.aux.249_4:
  li a1, 60
  beq a0, a1, .aux.249_5

.aux.249_6:
  li a1, 43
  beq a0, a1, .aux.249_7

.aux.249_8:
  li a1, 45
  beq a0, a1, .aux.249_9

.aux.249_10:
  li a1, 46
  beq a0, a1, .aux.249_11

.aux.249_12:
  li a1, 44
  beq a0, a1, .aux.249_13

.aux.249_14:
  li a1, 91
  beq a0, a1, .aux.249_15

.aux.249_16:
  li a1, 93
  bne a0, a1, .aux.249_18

.aux.249_17:
  mv a0, s5

.aux.249_19:

.aux.249_20:

.aux.249_21:

.aux.249_22:

.aux.249_23:

.aux.249_24:

.aux.249_25:

.aux.249_26:

.aux.249_27:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  addi sp, sp, 64
  ret

.aux.249_1:
  mv a0, s5
  j .aux.249_27

.aux.249_3:
  lw a0, 0(s1)
  addi a0, a0, 1
  sw a0, 0(s1)
  addi a0, s5, 1
  mv s5, a0
  j .aux.249_0

.aux.249_5:
  lw a0, 0(s1)
  addi a0, a0, -1
  sw a0, 0(s1)
  addi a0, s5, 1
  mv s5, a0
  j .aux.249_0

.aux.249_7:
  lw a0, 0(s1)
  slliw a1, a0, 2
  add a1, s3, a1
  lw a1, 0(a1)
  addi a1, a1, 1
  slliw a0, a0, 2
  add a0, s3, a0
  sw a1, 0(a0)
  addi a0, s5, 1
  mv s5, a0
  j .aux.249_0

.aux.249_9:
  lw a0, 0(s1)
  slliw a1, a0, 2
  add a1, s3, a1
  lw a1, 0(a1)
  addi a1, a1, -1
  slliw a0, a0, 2
  add a0, s3, a0
  sw a1, 0(a0)
  addi a0, s5, 1
  mv s5, a0
  j .aux.249_0

.aux.249_11:
  lw a0, 0(s1)
  slliw a0, a0, 2
  add a0, s3, a0
  lw a0, 0(a0)
  call minimbt_print_char
  addi a0, s5, 1
  mv s5, a0
  j .aux.249_0

.aux.249_13:
  lw s6, 0(s1)
  call read_ch_until_newline_or_eof.245
  slliw a1, s6, 2
  add a1, s3, a1
  sw a0, 0(a1)
  addi a0, s5, 1
  mv s5, a0
  j .aux.249_0

.aux.249_15:
  sw s5, 0(s2)

.aux.249_54:

.aux.249_49:
  lw a0, 0(s1)
  slliw a0, a0, 2
  add a0, s3, a0
  lw a0, 0(a0)
  beq a0, zero, .aux.249_50

.aux.249_51:
  addi a0, s5, 1
  mv a1, s4
  mv a2, s1
  mv a3, s0
  mv a4, s3
  mv a5, s2
  call aux.249
  sw a0, 0(s2)
  j .aux.249_49

.aux.249_50:
  addi a0, s5, 1

.aux.249_72:
  mv a1, a0
  mv a0, zero
  mv a2, s4
  mv a3, s0

.aux.249_58:
  bge a1, a2, .aux.249_59

.aux.249_60:
  slliw a4, a1, 2
  add a4, a3, a4
  lw a5, 0(a4)
  li a4, 91
  beq a5, a4, .aux.249_61

.aux.249_62:
  li a4, 93
  bne a5, a4, .aux.249_64

.aux.249_63:
  beq a0, zero, .aux.249_65

.aux.249_66:
  addi a1, a1, 1
  addi a0, a0, -1
  j .aux.249_58

.aux.249_59:
  mv a0, a1

.aux.249_70:

.aux.249_55:
  sw a0, 0(s2)
  mv a0, zero

.aux.249_52:

.aux.249_30:
  lw a0, 0(s2)
  addi a0, a0, 1
  mv s5, a0
  j .aux.249_0

.aux.249_61:
  addi a1, a1, 1
  addi a0, a0, 1
  j .aux.249_58

.aux.249_64:
  addi a1, a1, 1
  j .aux.249_58

.aux.249_65:
  mv a0, a1

.aux.249_67:

.aux.249_68:

.aux.249_69:
  j .aux.249_70

.aux.249_18:
  mv a0, s5
  j .aux.249_19

  .p2align 2
  .text
  .globl read_ch_until_newline_or_eof.245
  .type read_ch_until_newline_or_eof.245, @function
# leaf false
read_ch_until_newline_or_eof.245:
.read_ch_until_newline_or_eof.245_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call minimbt_read_char
  li a1, 10
  beq a0, a1, .read_ch_until_newline_or_eof.245_1

.read_ch_until_newline_or_eof.245_2:
  li a1, 13
  bne a0, a1, .read_ch_until_newline_or_eof.245_4

.read_ch_until_newline_or_eof.245_3:
  li a0, -1

.read_ch_until_newline_or_eof.245_5:

.read_ch_until_newline_or_eof.245_6:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.read_ch_until_newline_or_eof.245_1:
  li a0, -1
  j .read_ch_until_newline_or_eof.245_6

.read_ch_until_newline_or_eof.245_4:
  j .read_ch_until_newline_or_eof.245_5

  .p2align 2
  .text
  .globl read_prog.247
  .type read_prog.247, @function
# leaf false
read_prog.247:
.read_prog.247_5:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s1, a0
  mv s0, a1

.read_prog.247_0:
  call read_ch_until_newline_or_eof.245
  li a1, -1
  bne a0, a1, .read_prog.247_2

.read_prog.247_1:
  addi a2, s11, -4
  andi s11, a2, -8
  sw zero, 0(a2)
  li a0, 1024
  mul a0, a0, a0
  slliw a1, a0, 2
  sub a4, s11, a1
  andi s11, a4, -8
  mv a1, a0
  addi a5, s11, -4
  andi s11, a5, -8
  sw zero, 0(a5)
  mv a0, zero
  mv a1, s1
  mv a3, s0
  call aux.249
  mv a0, zero

.read_prog.247_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.read_prog.247_2:
  slliw a1, s1, 2
  add a1, s0, a1
  sw a0, 0(a1)
  addi a0, s1, 1
  mv s1, a0
  j .read_prog.247_0

  .p2align 2
  .text
  .globl main.246
  .type main.246, @function
# leaf false
main.246:
.main.246_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 4096
  sub a2, s11, a0
  andi s11, a2, -8
  li a0, 1024
  mv a1, a0
  mv a0, zero
  mv a1, a2
  call read_prog.247
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start
  .type T$start, @function
# leaf false
T$start:
.T$start_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main.246
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

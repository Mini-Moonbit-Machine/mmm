  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl aux40.180l4_3
  .type aux40.180l4_3, @function
# leaf false
aux40.180l4_3:
.aux40.180l4_3_29:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  mv s5, a0
  mv s4, a1
  mv s1, a2
  mv s0, a3
  mv s3, a4
  mv s2, a5

.aux40.180l4_3_0:
  bge s5, s1, .aux40.180l4_3_1

.aux40.180l4_3_2:
  slliw a0, s5, 2
  add a0, s0, a0
  lw a1, 0(a0)
  li a0, 62
  beq a1, a0, .aux40.180l4_3_3

.aux40.180l4_3_4:
  li a0, 60
  beq a1, a0, .aux40.180l4_3_5

.aux40.180l4_3_6:
  li a0, 43
  beq a1, a0, .aux40.180l4_3_7

.aux40.180l4_3_8:
  li a0, 45
  beq a1, a0, .aux40.180l4_3_9

.aux40.180l4_3_10:
  li a0, 46
  beq a1, a0, .aux40.180l4_3_11

.aux40.180l4_3_12:
  li a0, 44
  beq a1, a0, .aux40.180l4_3_13

.aux40.180l4_3_14:
  li a0, 91
  beq a1, a0, .aux40.180l4_3_15

.aux40.180l4_3_16:
  li a0, 93
  bne a1, a0, .aux40.180l4_3_18

.aux40.180l4_3_17:
  mv a0, s5

.aux40.180l4_3_19:

.aux40.180l4_3_20:

.aux40.180l4_3_21:

.aux40.180l4_3_22:

.aux40.180l4_3_23:

.aux40.180l4_3_24:

.aux40.180l4_3_25:

.aux40.180l4_3_26:

.aux40.180l4_3_27:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  addi sp, sp, 64
  ret

.aux40.180l4_3_1:
  mv a0, s5
  j .aux40.180l4_3_27

.aux40.180l4_3_3:
  lw a0, 0(s4)
  addi a0, a0, 1
  sw a0, 0(s4)
  addi a0, s5, 1
  mv s5, a0
  j .aux40.180l4_3_0

.aux40.180l4_3_5:
  lw a0, 0(s4)
  addi a0, a0, -1
  sw a0, 0(s4)
  addi a0, s5, 1
  mv s5, a0
  j .aux40.180l4_3_0

.aux40.180l4_3_7:
  lw a0, 0(s4)
  lw a1, 0(s4)
  slliw a1, a1, 2
  add a1, s3, a1
  lw a1, 0(a1)
  addi a1, a1, 1
  slliw a0, a0, 2
  add a0, s3, a0
  sw a1, 0(a0)
  addi a0, s5, 1
  mv s5, a0
  j .aux40.180l4_3_0

.aux40.180l4_3_9:
  lw a0, 0(s4)
  lw a1, 0(s4)
  slliw a1, a1, 2
  add a1, s3, a1
  lw a1, 0(a1)
  addi a1, a1, -1
  slliw a0, a0, 2
  add a0, s3, a0
  sw a1, 0(a0)
  addi a0, s5, 1
  mv s5, a0
  j .aux40.180l4_3_0

.aux40.180l4_3_11:
  lw a0, 0(s4)
  slliw a0, a0, 2
  add a0, s3, a0
  lw a0, 0(a0)
  call minimbt_print_char
  addi a0, s5, 1
  mv s5, a0
  j .aux40.180l4_3_0

.aux40.180l4_3_13:
  lw s6, 0(s4)
  call read_ch_until_newline_or_eof1l0_0
  slliw a1, s6, 2
  add a1, s3, a1
  sw a0, 0(a1)
  addi a0, s5, 1
  mv s5, a0
  j .aux40.180l4_3_0

.aux40.180l4_3_15:
  sw s5, 0(s2)

.aux40.180l4_3_54:

.aux40.180l4_3_49:
  lw a0, 0(s4)
  slliw a0, a0, 2
  add a0, s3, a0
  lw a0, 0(a0)
  beq a0, zero, .aux40.180l4_3_50

.aux40.180l4_3_51:
  addi a0, s5, 1
  mv a1, s4
  mv a2, s1
  mv a3, s0
  mv a4, s3
  mv a5, s2
  call aux40.180l4_3
  sw a0, 0(s2)
  j .aux40.180l4_3_49

.aux40.180l4_3_50:
  addi a0, s5, 1

.aux40.180l4_3_72:
  mv a1, a0
  mv a0, zero
  mv a2, s1
  mv a3, s0

.aux40.180l4_3_58:
  bge a1, a2, .aux40.180l4_3_59

.aux40.180l4_3_60:
  slliw a4, a1, 2
  add a4, a3, a4
  lw a5, 0(a4)
  li a4, 91
  beq a5, a4, .aux40.180l4_3_61

.aux40.180l4_3_62:
  li a4, 93
  bne a5, a4, .aux40.180l4_3_64

.aux40.180l4_3_63:
  beq a0, zero, .aux40.180l4_3_65

.aux40.180l4_3_66:
  addi a1, a1, 1
  addi a0, a0, -1
  j .aux40.180l4_3_58

.aux40.180l4_3_59:
  mv a0, a1

.aux40.180l4_3_70:

.aux40.180l4_3_55:
  sw a0, 0(s2)
  mv a0, zero

.aux40.180l4_3_52:

.aux40.180l4_3_30:
  lw a0, 0(s2)
  addi a0, a0, 1
  mv s5, a0
  j .aux40.180l4_3_0

.aux40.180l4_3_61:
  addi a1, a1, 1
  addi a0, a0, 1
  j .aux40.180l4_3_58

.aux40.180l4_3_64:
  addi a1, a1, 1
  j .aux40.180l4_3_58

.aux40.180l4_3_65:
  mv a0, a1

.aux40.180l4_3_67:

.aux40.180l4_3_68:

.aux40.180l4_3_69:
  j .aux40.180l4_3_70

.aux40.180l4_3_18:
  mv a0, s5
  j .aux40.180l4_3_19

  .p2align 2
  .text
  .globl read_ch_until_newline_or_eof1l0_0
  .type read_ch_until_newline_or_eof1l0_0, @function
# leaf false
read_ch_until_newline_or_eof1l0_0:
.read_ch_until_newline_or_eof1l0_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call minimbt_read_char
  li a1, 10
  beq a0, a1, .read_ch_until_newline_or_eof1l0_0_1

.read_ch_until_newline_or_eof1l0_0_2:
  li a1, 13
  bne a0, a1, .read_ch_until_newline_or_eof1l0_0_4

.read_ch_until_newline_or_eof1l0_0_3:
  li a0, -1

.read_ch_until_newline_or_eof1l0_0_5:

.read_ch_until_newline_or_eof1l0_0_6:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.read_ch_until_newline_or_eof1l0_0_1:
  li a0, -1
  j .read_ch_until_newline_or_eof1l0_0_6

.read_ch_until_newline_or_eof1l0_0_4:
  j .read_ch_until_newline_or_eof1l0_0_5

  .p2align 2
  .text
  .globl T$start_12
  .type T$start_12, @function
# leaf false
T$start_12:
.T$start_12_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main136l1_5
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl read_prog140l2_4
  .type read_prog140l2_4, @function
# leaf false
read_prog140l2_4:
.read_prog140l2_4_5:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv s0, a0
  mv s1, a1

.read_prog140l2_4_0:
  call read_ch_until_newline_or_eof1l0_0
  li a1, -1
  bne a0, a1, .read_prog140l2_4_2

.read_prog140l2_4_1:
  addi s2, s11, -4
  andi s11, s2, -8
  sw zero, 0(s2)
  li a0, 1024
  mul a0, a0, a0
  slliw a1, a0, 2
  sub s3, s11, a1
  andi s11, s3, -8
  mv a1, a0
  mv a0, s3
  mv a2, zero
  call memseti32
  addi a5, s11, -4
  andi s11, a5, -8
  sw zero, 0(a5)
  mv a0, zero
  mv a1, s2
  mv a2, s0
  mv a3, s1
  mv a4, s3
  call aux40.180l4_3
  mv a0, zero

.read_prog140l2_4_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

.read_prog140l2_4_2:
  slliw a1, s0, 2
  add a1, s1, a1
  sw a0, 0(a1)
  addi a0, s0, 1
  mv s0, a0
  j .read_prog140l2_4_0

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_12
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main136l1_5
  .type main136l1_5, @function
# leaf false
main136l1_5:
.main136l1_5_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  li a0, 4096
  sub s0, s11, a0
  andi s11, s0, -8
  li a0, 1024
  mv a1, a0
  mv a0, s0
  mv a2, zero
  call memseti32
  mv a0, zero
  mv a1, s0
  call read_prog140l2_4
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

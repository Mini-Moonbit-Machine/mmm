  .option arch, +xtheadba, +xtheadfmemidx, +xtheadmemidx
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 2013265920 # 2GB - 128MB
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 67108864 # 64MB
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl main.263
  .type main.263, @function
# leaf false
main.263:
.main.263_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 4096
  sub a1, s11, a0
  andi s11, a1, -8
  mv a0, zero
  call read_prog.264
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl read_prog.264
  .type read_prog.264, @function
# leaf false
read_prog.264:
.read_prog.264_5:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s0, a0
  mv s1, a1

.read_prog.264_0:
  call read_ch_until_newline_or_eof.262
  li a1, -1
  bne a0, a1, .read_prog.264_2

.read_prog.264_1:
  addi a2, s11, -4
  andi s11, a2, -8
  li a0, 4194304
  sub a4, s11, a0
  andi s11, a4, -8
  addi a5, s11, -4
  andi s11, a5, -8
  mv a0, zero
  mv a1, s0
  mv a3, s1
  call aux.266
  mv a0, zero

.read_prog.264_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.read_prog.264_2:
  slliw a1, s0, 2
  add a1, s1, a1
  sw a0, 0(a1)
  addi s0, s0, 1
  j .read_prog.264_0

  .p2align 2
  .text
  .globl aux.266
  .type aux.266, @function
# leaf false
aux.266:
.aux.266_29:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  mv s0, a0
  mv s5, a1
  mv s1, a2
  mv s2, a3
  mv s4, a4
  mv s3, a5

.aux.266_0:
  bge s0, s5, .aux.266_1

.aux.266_2:
  slliw a0, s0, 2
  add a0, s2, a0
  lw a1, 0(a0)
  li a0, 62
  beq a1, a0, .aux.266_3

.aux.266_4:
  li a0, 60
  beq a1, a0, .aux.266_5

.aux.266_6:
  li a0, 43
  beq a1, a0, .aux.266_7

.aux.266_8:
  li a0, 45
  beq a1, a0, .aux.266_9

.aux.266_10:
  li a0, 46
  beq a1, a0, .aux.266_11

.aux.266_12:
  li a0, 44
  beq a1, a0, .aux.266_13

.aux.266_14:
  li a0, 91
  beq a1, a0, .aux.266_15

.aux.266_16:
  li a0, 93
  bne a1, a0, .aux.266_18

.aux.266_17:
  mv a0, s0

.aux.266_19:

.aux.266_20:

.aux.266_21:

.aux.266_22:

.aux.266_23:

.aux.266_24:

.aux.266_25:

.aux.266_26:

.aux.266_27:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  addi sp, sp, 64
  ret

.aux.266_18:
  mv a0, s0
  j .aux.266_19

.aux.266_15:
  sw s0, 0(s3)

.aux.266_54:

.aux.266_49:
  lw a0, 0(s1)
  slliw a0, a0, 2
  add a0, s4, a0
  lw a0, 0(a0)
  beq a0, zero, .aux.266_50

.aux.266_51:
  addi a0, s0, 1
  mv a1, s5
  mv a2, s1
  mv a3, s2
  mv a4, s4
  mv a5, s3
  call aux.266
  sw a0, 0(s3)
  j .aux.266_49

.aux.266_13:
  lw s6, 0(s1)
  call read_ch_until_newline_or_eof.262
  slliw a1, s6, 2
  add a1, s4, a1
  sw a0, 0(a1)
  addi s0, s0, 1
  j .aux.266_0

.aux.266_11:
  lw a0, 0(s1)
  slliw a0, a0, 2
  add a0, s4, a0
  lw a0, 0(a0)
  call minimbt_print_char
  addi s0, s0, 1
  j .aux.266_0

.aux.266_9:
  lw a0, 0(s1)
  slliw a0, a0, 2
  add a1, s4, a0
  lw a1, 0(a1)
  addi a1, a1, -1
  add a0, s4, a0
  sw a1, 0(a0)
  addi s0, s0, 1
  j .aux.266_0

.aux.266_7:
  lw a0, 0(s1)
  slliw a0, a0, 2
  add a1, s4, a0
  lw a1, 0(a1)
  addi a1, a1, 1
  add a0, s4, a0
  sw a1, 0(a0)
  addi s0, s0, 1
  j .aux.266_0

.aux.266_5:
  lw a0, 0(s1)
  addi a0, a0, -1
  sw a0, 0(s1)
  addi s0, s0, 1
  j .aux.266_0

.aux.266_3:
  lw a0, 0(s1)
  addi a0, a0, 1
  sw a0, 0(s1)
  addi s0, s0, 1
  j .aux.266_0

.aux.266_1:
  mv a0, s0
  j .aux.266_27

.aux.266_50:
  addi a0, s0, 1

.aux.266_72:
  mv a1, a0
  mv a0, zero
  mv a2, s5
  mv a4, s2

.aux.266_58:
  bge a1, a2, .aux.266_59

.aux.266_60:
  slliw a3, a1, 2
  add a3, a4, a3
  lw a5, 0(a3)
  li a3, 91
  beq a5, a3, .aux.266_61

.aux.266_62:
  li a3, 93
  bne a5, a3, .aux.266_64

.aux.266_63:
  beq a0, zero, .aux.266_65

.aux.266_66:
  addi a1, a1, 1
  addi a0, a0, -1
  j .aux.266_58

.aux.266_65:
  mv a0, a1

.aux.266_67:

.aux.266_68:

.aux.266_69:

.aux.266_70:

.aux.266_55:
  sw a0, 0(s3)
  mv a0, zero

.aux.266_52:

.aux.266_30:
  lw a0, 0(s3)
  addi s0, a0, 1
  j .aux.266_0

.aux.266_64:
  addi a1, a1, 1
  j .aux.266_58

.aux.266_61:
  addi a1, a1, 1
  addi a0, a0, 1
  j .aux.266_58

.aux.266_59:
  mv a0, a1
  j .aux.266_70

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s11, 8(sp)
  la s11, large_heap_end
  call main.263
  ld ra, 0(sp)
  ld s11, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl read_ch_until_newline_or_eof.262
  .type read_ch_until_newline_or_eof.262, @function
# leaf false
read_ch_until_newline_or_eof.262:
.read_ch_until_newline_or_eof.262_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call minimbt_read_char
  mv a1, a0
  li a0, 10
  beq a1, a0, .read_ch_until_newline_or_eof.262_1

.read_ch_until_newline_or_eof.262_2:
  li a0, 13
  bne a1, a0, .read_ch_until_newline_or_eof.262_4

.read_ch_until_newline_or_eof.262_3:
  li a0, -1

.read_ch_until_newline_or_eof.262_5:

.read_ch_until_newline_or_eof.262_6:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.read_ch_until_newline_or_eof.262_4:
  mv a0, a1
  j .read_ch_until_newline_or_eof.262_5

.read_ch_until_newline_or_eof.262_1:
  li a0, -1
  j .read_ch_until_newline_or_eof.262_6

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



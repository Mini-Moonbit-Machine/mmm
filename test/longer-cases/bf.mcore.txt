  .option arch, +xtheadba, +xtheadfmemidx, +xtheadmemidx
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl T$start
  .type T$start, @function
# leaf false
T$start:
.T$start_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main134.263
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl read_prog138.264
  .type read_prog138.264, @function
# leaf false
read_prog138.264:
.read_prog138.264_5:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s0, a0
  mv s1, a1

.read_prog138.264_0:
  call read_ch_until_newline_or_eof1.262
  li a1, -1
  bne a0, a1, .read_prog138.264_2

.read_prog138.264_1:
  addi a2, s11, -4
  andi s11, a2, -8
  sw zero, 0(a2)
  li a0, 1024
  slli a0, a0, 10
  slliw a1, a0, 2
  sub a4, s11, a1
  andi s11, a4, -8
  mv a1, a0
  addi a5, s11, -4
  andi s11, a5, -8
  sw zero, 0(a5)
  mv a0, zero
  mv a1, a2
  mv a2, s0
  mv a3, s1
  call aux46.266
  mv a0, zero

.read_prog138.264_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.read_prog138.264_2:
  slliw a1, s0, 2
  add a1, s1, a1
  sw a0, 0(a1)
  addi a0, s0, 1
  mv s0, a0
  j .read_prog138.264_0

  .p2align 2
  .text
  .globl main134.263
  .type main134.263, @function
# leaf false
main134.263:
.main134.263_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 4096
  sub a2, s11, a0
  andi s11, a2, -8
  li a0, 1024
  mv a1, a0
  mv a0, zero
  mv a1, a2
  call read_prog138.264
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl read_ch_until_newline_or_eof1.262
  .type read_ch_until_newline_or_eof1.262, @function
# leaf false
read_ch_until_newline_or_eof1.262:
.read_ch_until_newline_or_eof1.262_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call minimbt_read_char
  li a1, 10
  beq a0, a1, .read_ch_until_newline_or_eof1.262_1

.read_ch_until_newline_or_eof1.262_2:
  li a1, 13
  bne a0, a1, .read_ch_until_newline_or_eof1.262_4

.read_ch_until_newline_or_eof1.262_3:
  li a0, -1

.read_ch_until_newline_or_eof1.262_5:

.read_ch_until_newline_or_eof1.262_6:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.read_ch_until_newline_or_eof1.262_4:
  j .read_ch_until_newline_or_eof1.262_5

.read_ch_until_newline_or_eof1.262_1:
  li a0, -1
  j .read_ch_until_newline_or_eof1.262_6

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl aux46.266
  .type aux46.266, @function
# leaf false
aux46.266:
.aux46.266_29:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  mv s0, a0
  mv s5, a1
  mv s2, a2
  mv s1, a3
  mv s4, a4
  mv s3, a5

.aux46.266_0:
  bge s0, s2, .aux46.266_1

.aux46.266_2:
  slliw a0, s0, 2
  add a0, s1, a0
  lw a0, 0(a0)
  addi a0, a0, -43
  li a1, 50
  ble a1, a0, .aux46.266_18
  slliw a0, a0, 2
  la a1, .aux46.266_jtbl_0
  add a0, a1, a0
  lw a0, 0(a0)
  jr a0
  .p2align 2
  .rodata
.aux46.266_jtbl_0:
  .word .aux46.266_7
  .word .aux46.266_13
  .word .aux46.266_9
  .word .aux46.266_11
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_5
  .word .aux46.266_18
  .word .aux46.266_3
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_18
  .word .aux46.266_15
  .word .aux46.266_18
  .word .aux46.266_17
  .p2align 2
  .text

.aux46.266_7:
  lw a0, 0(s5)
  slliw a0, a0, 2
  add a1, s4, a0
  lw a1, 0(a1)
  addi a1, a1, 1
  add a0, s4, a0
  sw a1, 0(a0)
  addi a0, s0, 1
  mv s0, a0
  j .aux46.266_0

.aux46.266_18:
  mv a0, s0

.aux46.266_19:

.aux46.266_20:

.aux46.266_21:

.aux46.266_22:

.aux46.266_23:

.aux46.266_24:

.aux46.266_25:

.aux46.266_26:

.aux46.266_27:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  addi sp, sp, 64
  ret

.aux46.266_13:
  lw s6, 0(s5)
  call read_ch_until_newline_or_eof1.262
  slliw a1, s6, 2
  add a1, s4, a1
  sw a0, 0(a1)
  addi a0, s0, 1
  mv s0, a0
  j .aux46.266_0

.aux46.266_9:
  lw a0, 0(s5)
  slliw a0, a0, 2
  add a1, s4, a0
  lw a1, 0(a1)
  addi a1, a1, -1
  add a0, s4, a0
  sw a1, 0(a0)
  addi a0, s0, 1
  mv s0, a0
  j .aux46.266_0

.aux46.266_11:
  lw a0, 0(s5)
  slliw a0, a0, 2
  add a0, s4, a0
  lw a0, 0(a0)
  call minimbt_print_char
  addi a0, s0, 1
  mv s0, a0
  j .aux46.266_0

.aux46.266_5:
  lw a0, 0(s5)
  addi a0, a0, -1
  sw a0, 0(s5)
  addi a0, s0, 1
  mv s0, a0
  j .aux46.266_0

.aux46.266_3:
  lw a0, 0(s5)
  addi a0, a0, 1
  sw a0, 0(s5)
  addi a0, s0, 1
  mv s0, a0
  j .aux46.266_0

.aux46.266_15:
  sw s0, 0(s3)

.aux46.266_54:

.aux46.266_49:
  lw a0, 0(s5)
  slliw a0, a0, 2
  add a0, s4, a0
  lw a0, 0(a0)
  beq a0, zero, .aux46.266_50

.aux46.266_51:
  addi a0, s0, 1
  mv a1, s5
  mv a2, s2
  mv a3, s1
  mv a4, s4
  mv a5, s3
  call aux46.266
  sw a0, 0(s3)
  j .aux46.266_49

.aux46.266_17:
  mv a0, s0
  j .aux46.266_19

.aux46.266_1:
  mv a0, s0
  j .aux46.266_27

.aux46.266_50:
  addi a0, s0, 1

.aux46.266_72:
  mv a1, zero
  mv a2, s2
  mv a3, s1

.aux46.266_58:
  bge a0, a2, .aux46.266_59

.aux46.266_60:
  slliw a4, a0, 2
  add a4, a3, a4
  lw a4, 0(a4)
  li a5, 91
  beq a4, a5, .aux46.266_61

.aux46.266_62:
  li a5, 93
  bne a4, a5, .aux46.266_64

.aux46.266_63:
  beq a1, zero, .aux46.266_65

.aux46.266_66:
  addi a0, a0, 1
  addi a1, a1, -1
  j .aux46.266_58

.aux46.266_65:

.aux46.266_67:

.aux46.266_68:

.aux46.266_69:

.aux46.266_70:

.aux46.266_55:
  sw a0, 0(s3)
  mv a0, zero

.aux46.266_52:

.aux46.266_30:
  lw a0, 0(s3)
  addi a0, a0, 1
  mv s0, a0
  j .aux46.266_0

.aux46.266_64:
  addi a0, a0, 1
  j .aux46.266_58

.aux46.266_61:
  addi a0, a0, 1
  addi a1, a1, 1
  j .aux46.266_58

.aux46.266_59:
  j .aux46.266_70

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4



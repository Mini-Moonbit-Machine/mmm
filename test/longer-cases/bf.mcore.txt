  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl read_prog.255
  .type read_prog.255, @function
# leaf false
read_prog.255:
.read_prog.255_5:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s0, a0
  mv s1, a1

.read_prog.255_0:
  call read_ch_until_newline_or_eof.249
  li a1, -1
  beq a0, a1, .read_prog.255_1

.read_prog.255_2:
  slliw a1, s0, 2
  add a1, s1, a1
  sw a0, 0(a1)
  addi a0, s0, 1
  mv s0, a0
  j .read_prog.255_0

.read_prog.255_1:
  mv a0, s0
  mv a1, s1
  call bf.250

.read_prog.255_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl bf.250
  .type bf.250, @function
# leaf false
bf.250:
.bf.250_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a2, a0
  mv a3, a1
  addi a4, s11, -4
  andi s11, a4, -8
  sw zero, 0(a4)
  li a0, 1024
  mul a0, a0, a0
  slliw a1, a0, 2
  sub a5, s11, a1
  andi s11, a5, -8
  mv a1, a0
  addi a6, s11, -4
  andi s11, a6, -8
  sw zero, 0(a6)
  mv a0, zero
  mv a1, a2
  mv a2, a4
  mv a4, a5
  mv a5, a6
  call aux.252
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start
  .type T$start, @function
# leaf false
T$start:
.T$start_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main.254
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux.252
  .type aux.252, @function
# leaf false
aux.252:
.aux.252_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  mv s5, a1
  mv s3, a2
  mv s0, a3
  mv s4, a4
  mv s1, a5
  mv s2, a0

.aux.252_2:
  bge s2, s5, .aux.252_3

.aux.252_4:
  slliw a0, s2, 2
  add a0, s0, a0
  lw a0, 0(a0)
  li a1, 62
  beq a0, a1, .aux.252_5

.aux.252_6:
  li a1, 60
  beq a0, a1, .aux.252_7

.aux.252_8:
  li a1, 43
  beq a0, a1, .aux.252_9

.aux.252_10:
  li a1, 45
  beq a0, a1, .aux.252_11

.aux.252_12:
  li a1, 46
  beq a0, a1, .aux.252_13

.aux.252_14:
  li a1, 44
  beq a0, a1, .aux.252_15

.aux.252_16:
  li a1, 91
  beq a0, a1, .aux.252_17

.aux.252_18:
  li a1, 93
  bne a0, a1, .aux.252_20

.aux.252_19:
  mv a0, s2

.aux.252_21:

.aux.252_22:

.aux.252_23:

.aux.252_24:

.aux.252_25:

.aux.252_26:

.aux.252_27:

.aux.252_28:

.aux.252_29:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  addi sp, sp, 64
  ret

.aux.252_3:
  mv a0, s2
  j .aux.252_29

.aux.252_5:
  lw a0, 0(s3)
  addi a0, a0, 1
  sw a0, 0(s3)
  addi a0, s2, 1
  mv s2, a0
  j .aux.252_2

.aux.252_7:
  lw a0, 0(s3)
  addi a0, a0, -1
  sw a0, 0(s3)
  addi a0, s2, 1
  mv s2, a0
  j .aux.252_2

.aux.252_9:
  lw a0, 0(s3)
  slliw a0, a0, 2
  add a1, s4, a0
  lw a1, 0(a1)
  addi a1, a1, 1
  add a0, s4, a0
  sw a1, 0(a0)
  addi a0, s2, 1
  mv s2, a0
  j .aux.252_2

.aux.252_11:
  lw a0, 0(s3)
  slliw a0, a0, 2
  add a1, s4, a0
  lw a1, 0(a1)
  addi a1, a1, -1
  add a0, s4, a0
  sw a1, 0(a0)
  addi a0, s2, 1
  mv s2, a0
  j .aux.252_2

.aux.252_13:
  lw a0, 0(s3)
  slliw a0, a0, 2
  add a0, s4, a0
  lw a0, 0(a0)
  call minimbt_print_char
  addi a0, s2, 1
  mv s2, a0
  j .aux.252_2

.aux.252_15:
  lw s6, 0(s3)
  call read_ch_until_newline_or_eof.249
  slliw a1, s6, 2
  add a1, s4, a1
  sw a0, 0(a1)
  addi a0, s2, 1
  mv s2, a0
  j .aux.252_2

.aux.252_17:
  sw s2, 0(s1)

.aux.252_42:

.aux.252_44:
  lw a0, 0(s3)
  slliw a0, a0, 2
  add a0, s4, a0
  lw a0, 0(a0)
  beq a0, zero, .aux.252_45

.aux.252_46:
  addi a0, s2, 1
  mv a1, s5
  mv a2, s3
  mv a3, s0
  mv a4, s4
  mv a5, s1
  call aux.252
  sw a0, 0(s1)
  j .aux.252_44

.aux.252_45:
  addi a0, s2, 1

.aux.252_51:
  mv a1, zero

.aux.252_53:
  bge a0, s5, .aux.252_54

.aux.252_55:
  slliw a2, a0, 2
  add a2, s0, a2
  lw a2, 0(a2)
  li a3, 91
  beq a2, a3, .aux.252_56

.aux.252_57:
  li a3, 93
  bne a2, a3, .aux.252_59

.aux.252_58:
  beq a1, zero, .aux.252_60

.aux.252_61:
  addi a0, a0, 1
  addi a1, a1, -1
  j .aux.252_53

.aux.252_54:

.aux.252_65:

.aux.252_48:
  sw a0, 0(s1)
  mv a0, zero

.aux.252_47:

.aux.252_30:
  lw a0, 0(s1)
  addi a0, a0, 1
  mv s2, a0
  j .aux.252_2

.aux.252_56:
  addi a0, a0, 1
  addi a1, a1, 1
  j .aux.252_53

.aux.252_59:
  addi a0, a0, 1
  j .aux.252_53

.aux.252_60:

.aux.252_62:

.aux.252_63:

.aux.252_64:
  j .aux.252_65

.aux.252_20:
  mv a0, s2
  j .aux.252_21

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main.254
  .type main.254, @function
# leaf false
main.254:
.main.254_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 4096
  sub a2, s11, a0
  andi s11, a2, -8
  li a0, 1024
  mv a1, a0
  mv a0, zero
  mv a1, a2
  call read_prog.255
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl read_ch_until_newline_or_eof.249
  .type read_ch_until_newline_or_eof.249, @function
# leaf false
read_ch_until_newline_or_eof.249:
.read_ch_until_newline_or_eof.249_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call minimbt_read_char
  li a1, 10
  beq a0, a1, .read_ch_until_newline_or_eof.249_1

.read_ch_until_newline_or_eof.249_2:
  li a1, 13
  bne a0, a1, .read_ch_until_newline_or_eof.249_4

.read_ch_until_newline_or_eof.249_3:
  li a0, -1

.read_ch_until_newline_or_eof.249_5:

.read_ch_until_newline_or_eof.249_6:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.read_ch_until_newline_or_eof.249_1:
  li a0, -1
  j .read_ch_until_newline_or_eof.249_6

.read_ch_until_newline_or_eof.249_4:
  j .read_ch_until_newline_or_eof.249_5

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

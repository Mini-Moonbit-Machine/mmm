  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl aux.437
  .type aux.437, @function
# leaf false
aux.437:
.aux.437_0:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  mv s5, a1
  mv s3, a2
  mv s0, a3
  mv s4, a4
  mv s2, a5
  mv s1, a0

.aux.437_2:
  bge s1, s5, .aux.437_3

.aux.437_4:
  slliw a0, s1, 2
  add a0, s0, a0
  lw a0, 0(a0)
  li a1, 62
  beq a0, a1, .aux.437_5

.aux.437_6:
  li a1, 60
  beq a0, a1, .aux.437_7

.aux.437_8:
  li a1, 43
  beq a0, a1, .aux.437_9

.aux.437_10:
  li a1, 45
  beq a0, a1, .aux.437_11

.aux.437_12:
  li a1, 46
  beq a0, a1, .aux.437_13

.aux.437_14:
  li a1, 44
  beq a0, a1, .aux.437_15

.aux.437_16:
  li a1, 91
  beq a0, a1, .aux.437_17

.aux.437_18:
  li a1, 93
  bne a0, a1, .aux.437_25

.aux.437_24:
  mv a0, s1

.aux.437_26:

.aux.437_27:

.aux.437_28:

.aux.437_29:

.aux.437_30:

.aux.437_31:

.aux.437_32:

.aux.437_33:

.aux.437_34:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  addi sp, sp, 64
  ret

.aux.437_3:
  mv a0, s1
  j .aux.437_34

.aux.437_5:
  lw a0, 0(s3)
  addi a0, a0, 1
  sw a0, 0(s3)
  addi a0, s1, 1
  mv s1, a0
  j .aux.437_2

.aux.437_7:
  lw a0, 0(s3)
  addi a0, a0, -1
  sw a0, 0(s3)
  addi a0, s1, 1
  mv s1, a0
  j .aux.437_2

.aux.437_9:
  lw a0, 0(s3)
  slliw a1, a0, 2
  add a1, s4, a1
  lw a1, 0(a1)
  addi a1, a1, 1
  slliw a0, a0, 2
  add a0, s4, a0
  sw a1, 0(a0)
  addi a0, s1, 1
  mv s1, a0
  j .aux.437_2

.aux.437_11:
  lw a0, 0(s3)
  slliw a1, a0, 2
  add a1, s4, a1
  lw a1, 0(a1)
  addi a1, a1, -1
  slliw a0, a0, 2
  add a0, s4, a0
  sw a1, 0(a0)
  addi a0, s1, 1
  mv s1, a0
  j .aux.437_2

.aux.437_13:
  lw a0, 0(s3)
  slliw a0, a0, 2
  add a0, s4, a0
  lw a0, 0(a0)
  call minimbt_print_char
  addi a0, s1, 1
  mv s1, a0
  j .aux.437_2

.aux.437_15:
  lw s6, 0(s3)
  call read_ch_until_newline_or_eof.433
  slliw a1, s6, 2
  add a1, s4, a1
  sw a0, 0(a1)
  addi a0, s1, 1
  mv s1, a0
  j .aux.437_2

.aux.437_17:
  sw s1, 0(s2)

.aux.437_20:
  lw a0, 0(s3)
  slliw a0, a0, 2
  add a0, s4, a0
  lw a0, 0(a0)
  beq a0, zero, .aux.437_21

.aux.437_22:
  addi a0, s1, 1
  mv a1, s5
  mv a2, s3
  mv a3, s0
  mv a4, s4
  mv a5, s2
  call aux.437
  sw a0, 0(s2)
  j .aux.437_20

.aux.437_21:
  addi a0, s1, 1

.aux.437_50:
  mv a1, zero

.aux.437_52:
  bge a0, s5, .aux.437_53

.aux.437_54:
  slliw a2, a0, 2
  add a2, s0, a2
  lw a3, 0(a2)
  li a2, 91
  beq a3, a2, .aux.437_55

.aux.437_56:
  li a2, 93
  bne a3, a2, .aux.437_58

.aux.437_57:
  beq a1, zero, .aux.437_59

.aux.437_60:
  addi a0, a0, 1
  addi a1, a1, -1
  j .aux.437_52

.aux.437_53:

.aux.437_64:

.aux.437_35:
  sw a0, 0(s2)
  lw a0, 0(s2)
  addi a0, a0, 1
  mv s1, a0
  j .aux.437_2

.aux.437_55:
  addi a0, a0, 1
  addi a1, a1, 1
  j .aux.437_52

.aux.437_58:
  addi a0, a0, 1
  j .aux.437_52

.aux.437_59:

.aux.437_61:

.aux.437_62:

.aux.437_63:
  j .aux.437_64

.aux.437_25:
  mv a0, s1
  j .aux.437_26

  .p2align 2
  .text
  .globl read_prog.435
  .type read_prog.435, @function
# leaf false
read_prog.435:
.read_prog.435_5:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s0, a0
  mv s1, a1

.read_prog.435_0:
  call read_ch_until_newline_or_eof.433
  mv a1, a0
  li a0, -1
  bne a1, a0, .read_prog.435_2

.read_prog.435_1:
  addi a2, s11, -4
  andi s11, a2, -8
  sw zero, 0(a2)
  li a0, 1024
  mul a0, a0, a0
  slliw a1, a0, 2
  sub a4, s11, a1
  andi s11, a4, -8
  mv a1, a0
  addi a5, s11, -4
  andi s11, a5, -8
  sw zero, 0(a5)
  mv a0, zero
  mv a1, s0
  mv a3, s1
  call aux.437
  mv a0, zero

.read_prog.435_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.read_prog.435_2:
  slliw a0, s0, 2
  add a0, s1, a0
  sw a1, 0(a0)
  addi a0, s0, 1
  mv s0, a0
  j .read_prog.435_0

  .p2align 2
  .text
  .globl T$start
  .type T$start, @function
# leaf false
T$start:
.T$start_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main.434
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl read_ch_until_newline_or_eof.433
  .type read_ch_until_newline_or_eof.433, @function
# leaf false
read_ch_until_newline_or_eof.433:
.read_ch_until_newline_or_eof.433_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call minimbt_read_char
  mv a1, a0
  li a0, 10
  beq a1, a0, .read_ch_until_newline_or_eof.433_1

.read_ch_until_newline_or_eof.433_2:
  li a0, 13
  bne a1, a0, .read_ch_until_newline_or_eof.433_4

.read_ch_until_newline_or_eof.433_3:
  li a0, -1

.read_ch_until_newline_or_eof.433_5:

.read_ch_until_newline_or_eof.433_6:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.read_ch_until_newline_or_eof.433_1:
  li a0, -1
  j .read_ch_until_newline_or_eof.433_6

.read_ch_until_newline_or_eof.433_4:
  mv a0, a1
  j .read_ch_until_newline_or_eof.433_5

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl main.434
  .type main.434, @function
# leaf false
main.434:
.main.434_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 4096
  sub a2, s11, a0
  andi s11, a2, -8
  li a0, 1024
  mv a1, a0
  mv a0, zero
  mv a1, a2
  call read_prog.435
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

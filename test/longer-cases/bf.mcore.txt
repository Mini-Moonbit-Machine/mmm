  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl skip21l2_1
  .type skip21l2_1, @function
# leaf true
skip21l2_1:
.skip21l2_1_13:
  mv a4, a2
  mv a2, a3
  mv a3, a4

.skip21l2_1_0:
  bge a0, a3, .skip21l2_1_1

.skip21l2_1_2:
  slliw a4, a0, 2
  add a4, a2, a4
  lw a4, 0(a4)
  li a5, 91
  beq a4, a5, .skip21l2_1_3

.skip21l2_1_4:
  li a5, 93
  bne a4, a5, .skip21l2_1_6

.skip21l2_1_5:
  beq a1, zero, .skip21l2_1_7

.skip21l2_1_8:
  addi a0, a0, 1
  addi a1, a1, -1
  j .skip21l2_1_0

.skip21l2_1_1:

.skip21l2_1_12:
  ret

.skip21l2_1_3:
  addi a0, a0, 1
  addi a1, a1, 1
  j .skip21l2_1_0

.skip21l2_1_6:
  addi a0, a0, 1
  j .skip21l2_1_0

.skip21l2_1_7:

.skip21l2_1_9:

.skip21l2_1_10:

.skip21l2_1_11:
  j .skip21l2_1_12

  .p2align 2
  .text
  .globl main136l2_6
  .type main136l2_6, @function
# leaf false
main136l2_6:
.main136l2_6_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  li a0, 4096
  sub a0, s11, a0
  andi s0, a0, -8
  mv s11, s0
  li a0, 1024
  mv a1, a0
  mv a0, s0
  mv a2, zero
  call memseti32
  mv a0, zero
  mv a1, s0
  call read_prog140l3_5
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_14
  .type T$start_14, @function
# leaf false
T$start_14:
.T$start_14_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main136l2_6
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl lp108l4_2
  .type lp108l4_2, @function
# leaf false
lp108l4_2:
.lp108l4_2_4:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  mv s3, a0
  mv s5, a1
  mv s1, a2
  mv s0, a3
  mv s4, a4
  mv s2, a5

.lp108l4_2_0:
  lw a0, 0(s3)
  slliw a0, a0, 2
  add a0, s0, a0
  lw a0, 0(a0)
  bne a0, zero, .lp108l4_2_2

.lp108l4_2_1:
  addi a0, s1, 1
  mv a1, zero
  mv a2, s5
  mv a3, s4
  call skip21l2_1
  sw a0, 0(s2)
  mv a0, zero

.lp108l4_2_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  addi sp, sp, 64
  ret

.lp108l4_2_2:
  addi a0, s1, 1
  mv a1, s3
  mv a2, s5
  mv a3, s0
  mv a4, s4
  mv a5, s2
  call aux40l3_3
  sw a0, 0(s2)
  j .lp108l4_2_0

  .p2align 2
  .text
  .globl bf5l1_4
  .type bf5l1_4, @function
# leaf false
bf5l1_4:
.bf5l1_4_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv s0, a0
  mv s1, a1
  addi a0, s11, -4
  andi s2, a0, -8
  mv s11, s2
  sw zero, 0(s2)
  li a0, 1024
  mul a0, a0, a0
  slliw a1, a0, 2
  sub a1, s11, a1
  andi s3, a1, -8
  mv s11, s3
  mv a1, a0
  mv a0, s3
  mv a2, zero
  call memseti32
  addi a0, s11, -4
  andi a5, a0, -8
  mv s11, a5
  sw zero, 0(a5)
  mv a0, zero
  mv a1, s2
  mv a2, s0
  mv a3, s3
  mv a4, s1
  call aux40l3_3
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl aux40l3_3
  .type aux40l3_3, @function
# leaf false
aux40l3_3:
.aux40l3_3_28:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  mv s3, a0
  mv s5, a1
  mv s1, a2
  mv s0, a3
  mv s4, a4
  mv s2, a5

.aux40l3_3_0:
  bge s3, s1, .aux40l3_3_1

.aux40l3_3_2:
  slliw a0, s3, 2
  add a0, s4, a0
  lw a1, 0(a0)
  li a0, 62
  beq a1, a0, .aux40l3_3_3

.aux40l3_3_4:
  li a0, 60
  beq a1, a0, .aux40l3_3_5

.aux40l3_3_6:
  li a0, 43
  beq a1, a0, .aux40l3_3_7

.aux40l3_3_8:
  li a0, 45
  beq a1, a0, .aux40l3_3_9

.aux40l3_3_10:
  li a0, 46
  beq a1, a0, .aux40l3_3_11

.aux40l3_3_12:
  li a0, 44
  beq a1, a0, .aux40l3_3_13

.aux40l3_3_14:
  li a0, 91
  beq a1, a0, .aux40l3_3_15

.aux40l3_3_16:
  li a0, 93
  bne a1, a0, .aux40l3_3_18

.aux40l3_3_17:
  mv a0, s3

.aux40l3_3_19:

.aux40l3_3_20:

.aux40l3_3_21:

.aux40l3_3_22:

.aux40l3_3_23:

.aux40l3_3_24:

.aux40l3_3_25:

.aux40l3_3_26:

.aux40l3_3_27:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  addi sp, sp, 64
  ret

.aux40l3_3_1:
  mv a0, s3
  j .aux40l3_3_27

.aux40l3_3_3:
  lw a0, 0(s5)
  addi a0, a0, 1
  sw a0, 0(s5)
  addi a0, s3, 1
  mv s3, a0
  j .aux40l3_3_0

.aux40l3_3_5:
  lw a0, 0(s5)
  addi a0, a0, -1
  sw a0, 0(s5)
  addi a0, s3, 1
  mv s3, a0
  j .aux40l3_3_0

.aux40l3_3_7:
  lw a0, 0(s5)
  lw a1, 0(s5)
  slliw a1, a1, 2
  add a1, s0, a1
  lw a1, 0(a1)
  addi a1, a1, 1
  slliw a0, a0, 2
  add a0, s0, a0
  sw a1, 0(a0)
  addi a0, s3, 1
  mv s3, a0
  j .aux40l3_3_0

.aux40l3_3_9:
  lw a0, 0(s5)
  lw a1, 0(s5)
  slliw a1, a1, 2
  add a1, s0, a1
  lw a1, 0(a1)
  addi a1, a1, -1
  slliw a0, a0, 2
  add a0, s0, a0
  sw a1, 0(a0)
  addi a0, s3, 1
  mv s3, a0
  j .aux40l3_3_0

.aux40l3_3_11:
  lw a0, 0(s5)
  slliw a0, a0, 2
  add a0, s0, a0
  lw a0, 0(a0)
  call minimbt_print_char
  addi a0, s3, 1
  mv s3, a0
  j .aux40l3_3_0

.aux40l3_3_13:
  lw s6, 0(s5)
  call read_ch_until_newline_or_eof1l0_0
  slliw a1, s6, 2
  add a1, s0, a1
  sw a0, 0(a1)
  addi a0, s3, 1
  mv s3, a0
  j .aux40l3_3_0

.aux40l3_3_15:
  sw s3, 0(s2)
  mv a0, s5
  mv a1, s1
  mv a2, s3
  mv a3, s0
  mv a4, s4
  mv a5, s2
  call lp108l4_2
  lw a0, 0(s2)
  addi a0, a0, 1
  mv s3, a0
  j .aux40l3_3_0

.aux40l3_3_18:
  mv a0, s3
  j .aux40l3_3_19

  .p2align 2
  .text
  .globl read_ch_until_newline_or_eof1l0_0
  .type read_ch_until_newline_or_eof1l0_0, @function
# leaf false
read_ch_until_newline_or_eof1l0_0:
.read_ch_until_newline_or_eof1l0_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call minimbt_read_char
  li a1, 10
  beq a0, a1, .read_ch_until_newline_or_eof1l0_0_1

.read_ch_until_newline_or_eof1l0_0_2:
  li a1, 13
  bne a0, a1, .read_ch_until_newline_or_eof1l0_0_4

.read_ch_until_newline_or_eof1l0_0_3:
  li a0, -1

.read_ch_until_newline_or_eof1l0_0_5:

.read_ch_until_newline_or_eof1l0_0_6:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.read_ch_until_newline_or_eof1l0_0_1:
  li a0, -1
  j .read_ch_until_newline_or_eof1l0_0_6

.read_ch_until_newline_or_eof1l0_0_4:
  j .read_ch_until_newline_or_eof1l0_0_5

  .p2align 2
  .text
  .globl read_prog140l3_5
  .type read_prog140l3_5, @function
# leaf false
read_prog140l3_5:
.read_prog140l3_5_4:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s1, a0
  mv s0, a1

.read_prog140l3_5_0:
  call read_ch_until_newline_or_eof1l0_0
  mv a1, a0
  li a0, -1
  beq a1, a0, .read_prog140l3_5_1

.read_prog140l3_5_2:
  slliw a0, s1, 2
  add a0, s0, a0
  sw a1, 0(a0)
  addi a0, s1, 1
  mv s1, a0
  j .read_prog140l3_5_0

.read_prog140l3_5_1:
  mv a0, s1
  mv a1, s0
  call bf5l1_4

.read_prog140l3_5_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_14
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

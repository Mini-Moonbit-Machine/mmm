  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl skip21_5
  .type skip21_5, @function
# leaf true
skip21_5:
.skip21_5_13:
  mv a2, s10
  mv a3, a1
  lw a1, 8(a2)
  ld a2, 16(a2)

.skip21_5_0:
  bge a0, a1, .skip21_5_1

.skip21_5_2:
  slliw a4, a0, 2
  add a4, a2, a4
  lw a5, 0(a4)
  li a4, 91
  beq a5, a4, .skip21_5_3

.skip21_5_4:
  li a4, 93
  bne a5, a4, .skip21_5_6

.skip21_5_5:
  beq a3, zero, .skip21_5_7

.skip21_5_8:
  addi a0, a0, 1
  addi a3, a3, -1
  j .skip21_5_0

.skip21_5_1:

.skip21_5_12:
  ret

.skip21_5_3:
  addi a0, a0, 1
  addi a3, a3, 1
  j .skip21_5_0

.skip21_5_6:
  addi a0, a0, 1
  j .skip21_5_0

.skip21_5_7:

.skip21_5_9:

.skip21_5_10:

.skip21_5_11:
  j .skip21_5_12

  .p2align 2
  .text
  .globl main136_2
  .type main136_2, @function
# leaf false
main136_2:
.main136_2_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  li a0, 4096
  sub a0, s11, a0
  andi s0, a0, -8
  mv s11, s0
  li a0, 1024
  mv a1, a0
  mv a0, s0
  mv a2, zero
  call memseti32
  addi a0, s11, -16
  andi a0, a0, -8
  mv s11, a0
  la a1, read_prog140_12
  sd a1, 0(a0)
  sd s0, 8(a0)
  mv s10, a0
  ld a1, 0(a0)
  mv a0, zero
  jalr a1
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$start_14
  .type T$start_14, @function
# leaf false
T$start_14:
.T$start_14_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main136_2
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl lp108_9
  .type lp108_9, @function
# leaf false
lp108_9:
.lp108_9_4:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  mv a0, s10
  ld s5, 8(a0)
  ld s0, 16(a0)
  lw s3, 24(a0)
  ld s1, 32(a0)
  ld s4, 40(a0)
  ld s2, 48(a0)

.lp108_9_0:
  lw a0, 0(s5)
  slliw a0, a0, 2
  add a0, s0, a0
  lw a0, 0(a0)
  bne a0, zero, .lp108_9_2

.lp108_9_1:
  addi a0, s3, 1
  mv s10, s1
  ld a2, 0(s1)
  mv a1, zero
  jalr a2
  sw a0, 0(s4)
  mv a0, zero

.lp108_9_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  addi sp, sp, 64
  ret

.lp108_9_2:
  addi a0, s3, 1
  mv s10, s2
  ld a1, 0(s2)
  jalr a1
  sw a0, 0(s4)
  j .lp108_9_0

  .p2align 2
  .text
  .globl read_ch_until_newline_or_eof1_0
  .type read_ch_until_newline_or_eof1_0, @function
# leaf false
read_ch_until_newline_or_eof1_0:
.read_ch_until_newline_or_eof1_0_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call minimbt_read_char
  li a1, 10
  beq a0, a1, .read_ch_until_newline_or_eof1_0_1

.read_ch_until_newline_or_eof1_0_2:
  li a1, 13
  bne a0, a1, .read_ch_until_newline_or_eof1_0_4

.read_ch_until_newline_or_eof1_0_3:
  li a0, -1

.read_ch_until_newline_or_eof1_0_5:

.read_ch_until_newline_or_eof1_0_6:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.read_ch_until_newline_or_eof1_0_1:
  li a0, -1
  j .read_ch_until_newline_or_eof1_0_6

.read_ch_until_newline_or_eof1_0_4:
  j .read_ch_until_newline_or_eof1_0_5

  .p2align 2
  .text
  .globl bf5_1
  .type bf5_1, @function
# leaf false
bf5_1:
.bf5_1_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv s0, a0
  mv s1, a1
  addi a0, s11, -4
  andi s2, a0, -8
  mv s11, s2
  sw zero, 0(s2)
  li a0, 1024
  li a1, 1024
  mul a0, a0, a1
  slliw a1, a0, 2
  sub a1, s11, a1
  andi s3, a1, -8
  mv s11, s3
  mv a1, a0
  mv a0, s3
  mv a2, zero
  call memseti32
  addi a0, s11, -4
  andi a0, a0, -8
  mv s11, a0
  sw zero, 0(a0)
  addi a1, s11, -24
  andi a1, a1, -8
  mv s11, a1
  la a2, skip21_5
  sd a2, 0(a1)
  sd s0, 8(a1)
  sd s1, 16(a1)
  addi a2, s11, -56
  andi a2, a2, -8
  mv s11, a2
  la a3, aux40_7
  sd a3, 0(a2)
  sd s0, 8(a2)
  sd s1, 16(a2)
  sd s2, 24(a2)
  sd s3, 32(a2)
  sd a0, 40(a2)
  sd a1, 48(a2)
  mv s10, a2
  ld a1, 0(a2)
  mv a0, zero
  jalr a1
  mv a0, zero
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl read_prog140_12
  .type read_prog140_12, @function
# leaf false
read_prog140_12:
.read_prog140_12_4:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv a1, s10
  ld s1, 8(a1)
  mv s0, a0

.read_prog140_12_0:
  call read_ch_until_newline_or_eof1_0
  li a1, -1
  beq a0, a1, .read_prog140_12_1

.read_prog140_12_2:
  slliw a1, s0, 2
  add a1, s1, a1
  sw a0, 0(a1)
  addi a0, s0, 1
  mv s0, a0
  j .read_prog140_12_0

.read_prog140_12_1:
  mv a0, s0
  mv a1, s1
  call bf5_1

.read_prog140_12_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl aux40_7
  .type aux40_7, @function
# leaf false
aux40_7:
.aux40_7_28:
  addi sp, sp, -80
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  mv s4, s10
  lw s7, 8(s4)
  ld s5, 16(s4)
  ld s0, 24(s4)
  ld s6, 32(s4)
  ld s2, 40(s4)
  ld s3, 48(s4)
  mv s1, a0

.aux40_7_0:
  bge s1, s7, .aux40_7_1

.aux40_7_2:
  slliw a0, s1, 2
  add a0, s5, a0
  lw a1, 0(a0)
  li a0, 62
  beq a1, a0, .aux40_7_3

.aux40_7_4:
  li a0, 60
  beq a1, a0, .aux40_7_5

.aux40_7_6:
  li a0, 43
  beq a1, a0, .aux40_7_7

.aux40_7_8:
  li a0, 45
  beq a1, a0, .aux40_7_9

.aux40_7_10:
  li a0, 46
  beq a1, a0, .aux40_7_11

.aux40_7_12:
  li a0, 44
  beq a1, a0, .aux40_7_13

.aux40_7_14:
  li a0, 91
  beq a1, a0, .aux40_7_15

.aux40_7_16:
  li a0, 93
  bne a1, a0, .aux40_7_18

.aux40_7_17:
  mv a0, s1

.aux40_7_19:

.aux40_7_20:

.aux40_7_21:

.aux40_7_22:

.aux40_7_23:

.aux40_7_24:

.aux40_7_25:

.aux40_7_26:

.aux40_7_27:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  addi sp, sp, 80
  ret

.aux40_7_1:
  mv a0, s1
  j .aux40_7_27

.aux40_7_3:
  lw a0, 0(s0)
  addi a0, a0, 1
  sw a0, 0(s0)
  addi a0, s1, 1
  mv s1, a0
  j .aux40_7_0

.aux40_7_5:
  lw a0, 0(s0)
  addi a0, a0, -1
  sw a0, 0(s0)
  addi a0, s1, 1
  mv s1, a0
  j .aux40_7_0

.aux40_7_7:
  lw a0, 0(s0)
  lw a1, 0(s0)
  slliw a1, a1, 2
  add a1, s6, a1
  lw a1, 0(a1)
  addi a1, a1, 1
  slliw a0, a0, 2
  add a0, s6, a0
  sw a1, 0(a0)
  addi a0, s1, 1
  mv s1, a0
  j .aux40_7_0

.aux40_7_9:
  lw a0, 0(s0)
  lw a1, 0(s0)
  slliw a1, a1, 2
  add a1, s6, a1
  lw a1, 0(a1)
  addi a1, a1, -1
  slliw a0, a0, 2
  add a0, s6, a0
  sw a1, 0(a0)
  addi a0, s1, 1
  mv s1, a0
  j .aux40_7_0

.aux40_7_11:
  lw a0, 0(s0)
  slliw a0, a0, 2
  add a0, s6, a0
  lw a0, 0(a0)
  call minimbt_print_char
  addi a0, s1, 1
  mv s1, a0
  j .aux40_7_0

.aux40_7_13:
  lw s8, 0(s0)
  call read_ch_until_newline_or_eof1_0
  slliw a1, s8, 2
  add a1, s6, a1
  sw a0, 0(a1)
  addi a0, s1, 1
  mv s1, a0
  j .aux40_7_0

.aux40_7_15:
  sw s1, 0(s2)
  addi a0, s11, -56
  andi a1, a0, -8
  mv s11, a1
  la a0, lp108_9
  sd a0, 0(a1)
  sd s0, 8(a1)
  sd s6, 16(a1)
  sd s1, 24(a1)
  sd s3, 32(a1)
  sd s2, 40(a1)
  sd s4, 48(a1)
  mv s10, a1
  ld a0, 0(a1)
  jalr a0
  lw a0, 0(s2)
  addi a0, a0, 1
  mv s1, a0
  j .aux40_7_0

.aux40_7_18:
  mv a0, s1
  j .aux40_7_19

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_14
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

  .option arch, +xtheadba, +xtheadfmemidx, +xtheadmemidx
  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl read_prog138.254
  .type read_prog138.254, @function
# leaf false
read_prog138.254:
.read_prog138.254_5:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  mv s1, a0
  mv s0, a1

.read_prog138.254_0:
  call read_ch_until_newline_or_eof1.252
  li a1, -1
  bne a0, a1, .read_prog138.254_2

.read_prog138.254_1:
  addi a2, s11, -4
  andi s11, a2, -8
  sw zero, 0(a2)
  li a0, 1024
  slli a0, a0, 10
  slliw a1, a0, 2
  sub a4, s11, a1
  andi s11, a4, -8
  mv a1, a0
  addi a5, s11, -4
  andi s11, a5, -8
  sw zero, 0(a5)
  mv a0, zero
  mv a1, a2
  mv a2, s1
  mv a3, s0
  call aux46.256
  mv a0, zero

.read_prog138.254_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

.read_prog138.254_2:
  th.surw a0, s0, s1, 2
  addi a0, s1, 1
  mv s1, a0
  j .read_prog138.254_0

  .p2align 2
  .text
  .globl T$loop_start.11
  .type T$loop_start.11, @function
# leaf true
T$loop_start.11:
.T$loop_start.11_0:
  li a0, 91
  ret

  .p2align 2
  .text
  .globl read_ch_until_newline_or_eof1.252
  .type read_ch_until_newline_or_eof1.252, @function
# leaf false
read_ch_until_newline_or_eof1.252:
.read_ch_until_newline_or_eof1.252_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call minimbt_read_char
  li a1, 10
  beq a0, a1, .read_ch_until_newline_or_eof1.252_1

.read_ch_until_newline_or_eof1.252_2:
  li a1, 13
  bne a0, a1, .read_ch_until_newline_or_eof1.252_4

.read_ch_until_newline_or_eof1.252_3:
  li a0, -1

.read_ch_until_newline_or_eof1.252_5:

.read_ch_until_newline_or_eof1.252_6:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.read_ch_until_newline_or_eof1.252_4:
  j .read_ch_until_newline_or_eof1.252_5

.read_ch_until_newline_or_eof1.252_1:
  li a0, -1
  j .read_ch_until_newline_or_eof1.252_6

  .p2align 2
  .text
  .globl T$decrease.8
  .type T$decrease.8, @function
# leaf true
T$decrease.8:
.T$decrease.8_0:
  li a0, 45
  ret

  .p2align 2
  .text
  .globl main134.253
  .type main134.253, @function
# leaf false
main134.253:
.main134.253_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  li a0, 4096
  sub a2, s11, a0
  andi s11, a2, -8
  li a0, 1024
  mv a1, a0
  mv a0, zero
  mv a1, a2
  call read_prog138.254
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl T$read.10
  .type T$read.10, @function
# leaf true
T$read.10:
.T$read.10_0:
  li a0, 44
  ret

  .p2align 2
  .text
  .globl T$loop_end.12
  .type T$loop_end.12, @function
# leaf true
T$loop_end.12:
.T$loop_end.12_0:
  li a0, 93
  ret

  .p2align 2
  .text
  .globl T$print.9
  .type T$print.9, @function
# leaf true
T$print.9:
.T$print.9_0:
  li a0, 46
  ret

  .p2align 2
  .text
  .globl T$move_right.6
  .type T$move_right.6, @function
# leaf true
T$move_right.6:
.T$move_right.6_0:
  li a0, 62
  ret

  .p2align 2
  .text
  .globl T$move_left.5
  .type T$move_left.5, @function
# leaf true
T$move_left.5:
.T$move_left.5_0:
  li a0, 60
  ret

  .p2align 2
  .text
  .globl T$start
  .type T$start, @function
# leaf false
T$start:
.T$start_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main134.253
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl aux46.256
  .type aux46.256, @function
# leaf false
aux46.256:
.aux46.256_29:
  addi sp, sp, -96
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s4, 32(sp)
  sd s5, 40(sp)
  sd s6, 48(sp)
  sd s7, 56(sp)
  sd s8, 64(sp)
  sd s9, 72(sp)
  sd s10, 80(sp)
  lw s9, decrease.8
  lw s7, loop_end.12
  lw s3, move_right.6
  lw s0, increase.7
  lw s6, read.10
  mv s4, a0
  mv s1, a1
  mv s10, a2
  mv s2, a3
  mv s5, a4
  mv s8, a5

.aux46.256_0:
  bge s4, s10, .aux46.256_1

.aux46.256_2:
  th.lurw a1, s2, s4, 2
  beq a1, s3, .aux46.256_3

.aux46.256_4:
  lw a0, move_left.5
  beq a1, a0, .aux46.256_5

.aux46.256_6:
  beq a1, s0, .aux46.256_7

.aux46.256_8:
  beq a1, s9, .aux46.256_9

.aux46.256_10:
  lw a0, print.9
  beq a1, a0, .aux46.256_11

.aux46.256_12:
  beq a1, s6, .aux46.256_13

.aux46.256_14:
  lw a0, loop_start.11
  beq a1, a0, .aux46.256_15

.aux46.256_16:
  bne a1, s7, .aux46.256_18

.aux46.256_17:
  mv a0, s4

.aux46.256_19:

.aux46.256_20:

.aux46.256_21:

.aux46.256_22:

.aux46.256_23:

.aux46.256_24:

.aux46.256_25:

.aux46.256_26:

.aux46.256_27:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s4, 32(sp)
  ld s5, 40(sp)
  ld s6, 48(sp)
  ld s7, 56(sp)
  ld s8, 64(sp)
  ld s9, 72(sp)
  ld s10, 80(sp)
  addi sp, sp, 96
  ret

.aux46.256_18:
  mv a0, s4
  j .aux46.256_19

.aux46.256_15:
  sw s4, 0(s8)

.aux46.256_62:

.aux46.256_57:
  lw a0, 0(s1)
  th.lurw a0, s5, a0, 2
  beq a0, zero, .aux46.256_58

.aux46.256_59:
  addi a0, s4, 1
  mv a1, s1
  mv a2, s10
  mv a3, s2
  mv a4, s5
  mv a5, s8
  call aux46.256
  sw a0, 0(s8)
  j .aux46.256_57

.aux46.256_13:
  lw t5, 0(s1)
  sw t5, 88(sp)
  call read_ch_until_newline_or_eof1.252
  lw t5, 88(sp)
  th.surw a0, s5, t5, 2
  addi a0, s4, 1
  mv s4, a0
  j .aux46.256_0

.aux46.256_11:
  lw a0, 0(s1)
  th.lurw a0, s5, a0, 2
  call minimbt_print_char
  addi a0, s4, 1
  mv s4, a0
  j .aux46.256_0

.aux46.256_9:
  lw a0, 0(s1)
  th.lurw a1, s5, a0, 2
  addi a1, a1, -1
  th.surw a1, s5, a0, 2
  addi a0, s4, 1
  mv s4, a0
  j .aux46.256_0

.aux46.256_7:
  lw a0, 0(s1)
  th.lurw a1, s5, a0, 2
  addi a1, a1, 1
  th.surw a1, s5, a0, 2
  addi a0, s4, 1
  mv s4, a0
  j .aux46.256_0

.aux46.256_5:
  lw a0, 0(s1)
  addi a0, a0, -1
  sw a0, 0(s1)
  addi a0, s4, 1
  mv s4, a0
  j .aux46.256_0

.aux46.256_3:
  lw a0, 0(s1)
  addi a0, a0, 1
  sw a0, 0(s1)
  addi a0, s4, 1
  mv s4, a0
  j .aux46.256_0

.aux46.256_1:
  mv a0, s4
  j .aux46.256_27

.aux46.256_58:
  addi a1, s4, 1

.aux46.256_80:
  lw a0, loop_end.12
  lw a2, loop_start.11
  mv a3, zero
  mv a4, s10
  mv a5, s2

.aux46.256_66:
  bge a1, a4, .aux46.256_67

.aux46.256_68:
  th.lurw a6, a5, a1, 2
  beq a6, a2, .aux46.256_69

.aux46.256_70:
  bne a6, a0, .aux46.256_72

.aux46.256_71:
  beq a3, zero, .aux46.256_73

.aux46.256_74:
  addi a1, a1, 1
  addi a3, a3, -1
  j .aux46.256_66

.aux46.256_73:
  mv a0, a1

.aux46.256_75:

.aux46.256_76:

.aux46.256_77:

.aux46.256_78:

.aux46.256_63:
  sw a0, 0(s8)
  mv a0, zero

.aux46.256_60:

.aux46.256_30:
  lw a0, 0(s8)
  addi a0, a0, 1
  mv s4, a0
  j .aux46.256_0

.aux46.256_72:
  addi a1, a1, 1
  j .aux46.256_66

.aux46.256_69:
  addi a1, a1, 1
  addi a3, a3, 1
  j .aux46.256_66

.aux46.256_67:
  mv a0, a1
  j .aux46.256_78

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$move_left.5
  la t5, move_left.5
  sw a0, 0(t5)
  call T$move_right.6
  la t5, move_right.6
  sw a0, 0(t5)
  call T$increase.7
  la t5, increase.7
  sw a0, 0(t5)
  call T$decrease.8
  la t5, decrease.8
  sw a0, 0(t5)
  call T$print.9
  la t5, print.9
  sw a0, 0(t5)
  call T$read.10
  la t5, read.10
  sw a0, 0(t5)
  call T$loop_start.11
  la t5, loop_start.11
  sw a0, 0(t5)
  call T$loop_end.12
  la t5, loop_end.12
  sw a0, 0(t5)
  call T$start
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$increase.7
  .type T$increase.7, @function
# leaf true
T$increase.7:
.T$increase.7_0:
  li a0, 43
  ret

__end_text:
  .p2align 2
  .bss
  .globl loop_end.12
  .type loop_end.12, @object
loop_end.12:
  .zero 4
  .p2align 2
  .bss
  .globl print.9
  .type print.9, @object
print.9:
  .zero 4
  .p2align 2
  .bss
  .globl read.10
  .type read.10, @object
read.10:
  .zero 4
  .p2align 2
  .bss
  .globl move_right.6
  .type move_right.6, @object
move_right.6:
  .zero 4
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4
  .p2align 2
  .bss
  .globl move_left.5
  .type move_left.5, @object
move_left.5:
  .zero 4
  .p2align 2
  .bss
  .globl decrease.8
  .type decrease.8, @object
decrease.8:
  .zero 4
  .p2align 2
  .bss
  .globl increase.7
  .type increase.7, @object
increase.7:
  .zero 4
  .p2align 2
  .bss
  .globl loop_start.11
  .type loop_start.11, @object
loop_start.11:
  .zero 4


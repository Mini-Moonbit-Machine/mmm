  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl fannkuch.572
  .type fannkuch.572, @function
# leaf false
fannkuch.572:
.fannkuch.572_0:
  addi sp, sp, -96
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  mv s0, a0

.fannkuch.572_12:
  slliw a0, s0, 2
  sub a0, s11, a0
  andi s11, a0, -8
  mv a1, s0
  mv a2, zero

.fannkuch.572_14:
  addi a1, s0, -1
  blt a1, a2, .fannkuch.572_16

.fannkuch.572_15:
  slliw a1, a2, 2
  add a1, a0, a1
  sw a2, 0(a1)
  addi a1, a2, 1
  mv a2, a1
  j .fannkuch.572_14

.fannkuch.572_16:

.fannkuch.572_17:
  mv s9, a0

.fannkuch.572_1:
  slliw a0, s0, 2
  sub s6, s11, a0
  andi s11, s6, -8
  mv a1, s0
  slliw a0, s0, 2
  sub s8, s11, a0
  andi s11, s8, -8
  mv a1, s0
  addi s1, s11, -4
  andi s11, s1, -8
  sw zero, 0(s1)
  addi s5, s11, -4
  andi s11, s5, -8
  sw zero, 0(s5)
  addi s3, s11, -4
  andi s11, s3, -8
  sw zero, 0(s3)
  addi s4, s11, -4
  andi s11, s4, -8
  sw zero, 0(s4)
  addi a0, s11, -4
  andi s11, a0, -8
  sw s0, 0(a0)

.fannkuch.572_18:
  mv s7, a0

.fannkuch.572_20:
  lw a0, 0(s7)
  li a1, 1
  blt a0, a1, .fannkuch.572_22

.fannkuch.572_21:
  mv a1, zero

.fannkuch.572_24:
  addi a0, s0, -1
  blt a0, a1, .fannkuch.572_26

.fannkuch.572_25:
  slliw a0, a1, 2
  add a2, s9, a0
  lw a2, 0(a2)
  add a0, s6, a0
  sw a2, 0(a0)
  addi a0, a1, 1
  mv a1, a0
  j .fannkuch.572_24

.fannkuch.572_22:
  mv a0, zero

.fannkuch.572_31:

.fannkuch.572_2:
  lw a0, 0(s5)
  lw a1, 0(s3)
  addi a2, s11, -8
  andi s11, a2, -8
  sw a0, 0(a2)
  sw a1, 4(a2)
  mv a0, a2
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  addi sp, sp, 96
  ret

.fannkuch.572_26:
  mv a0, s7
  mv a1, s8
  call init_count.575
  sw zero, 0(s1)
  lw a0, 0(s6)
  addi a1, s11, -4
  andi s11, a1, -8
  sw a0, 0(a1)

.fannkuch.572_71:
  mv s2, a1

.fannkuch.572_73:
  lw a0, 0(s2)
  beq a0, zero, .fannkuch.572_74

.fannkuch.572_75:
  addi a2, s11, -4
  andi s11, a2, -8
  sw zero, 0(a2)
  mv a0, zero
  mv a1, s2
  mv a3, s6
  call flip_loop.577

.fannkuch.572_77:
  lw a0, 0(s6)
  sw a0, 0(s2)
  lw a0, 0(s1)
  addi a0, a0, 1
  sw a0, 0(s1)
  j .fannkuch.572_73

.fannkuch.572_74:
  mv a0, zero

.fannkuch.572_76:

.fannkuch.572_32:
  lw a0, 0(s5)
  lw a1, 0(s1)
  blt a1, a0, .fannkuch.572_28

.fannkuch.572_27:
  lw a0, 0(s1)
  sw a0, 0(s5)
  lw a0, 0(s3)
  lw a1, 0(s1)
  lw a2, 0(s4)
  srai a3, a2, 1
  slli a3, a3, 1
  sub a2, a2, a3
  slli a2, a2, 1
  li a3, 1
  sub a2, a3, a2
  mul a1, a1, a2
  add a0, a0, a1
  sw a0, 0(s3)
  addi s10, s11, -4
  andi s11, s10, -8
  li a0, 1
  sw a0, 0(s10)
  addi s2, s11, -4
  andi s11, s2, -8
  sw zero, 0(s2)

.fannkuch.572_80:

.fannkuch.572_82:
  lw a0, 0(s10)
  li a1, 1
  bne a0, a1, .fannkuch.572_84

.fannkuch.572_83:
  lw a0, 0(s7)
  beq a0, s0, .fannkuch.572_85

.fannkuch.572_86:
  lw a0, 0(s9)
  sw a0, 0(s2)
  mv a0, zero
  mv a1, s7
  mv a2, s9
  call move_perm1_forward.579
  lw a0, 0(s7)
  lw a1, 0(s2)
  slliw a0, a0, 2
  add a0, s9, a0
  sw a1, 0(a0)
  lw a0, 0(s7)
  slliw a0, a0, 2
  add a1, s8, a0
  lw a1, 0(a1)
  addi a1, a1, -1
  add a0, s8, a0
  sw a1, 0(a0)
  lw a0, 0(s7)
  slliw a0, a0, 2
  add a0, s8, a0
  lw a0, 0(a0)
  li a1, 1
  bge a0, a1, .fannkuch.572_87

.fannkuch.572_88:
  lw a0, 0(s7)
  addi a0, a0, 1
  sw a0, 0(s7)
  j .fannkuch.572_82

.fannkuch.572_28:
  lw a0, 0(s3)
  lw a1, 0(s1)
  lw a2, 0(s4)
  srai a3, a2, 1
  slli a3, a3, 1
  sub a2, a2, a3
  slli a2, a2, 1
  li a3, 1
  sub a2, a3, a2
  mul a1, a1, a2
  add a0, a0, a1
  sw a0, 0(s3)
  addi s2, s11, -4
  andi s11, s2, -8
  li a0, 1
  sw a0, 0(s2)
  addi s10, s11, -4
  andi s11, s10, -8
  sw zero, 0(s10)

.fannkuch.572_104:

.fannkuch.572_106:
  lw a0, 0(s2)
  li a1, 1
  bne a0, a1, .fannkuch.572_108

.fannkuch.572_107:
  lw a0, 0(s7)
  beq a0, s0, .fannkuch.572_109

.fannkuch.572_110:
  lw a0, 0(s9)
  sw a0, 0(s10)
  mv a0, zero
  mv a1, s7
  mv a2, s9
  call move_perm1_forward.581
  lw a0, 0(s7)
  lw a1, 0(s10)
  slliw a0, a0, 2
  add a0, s9, a0
  sw a1, 0(a0)
  lw a0, 0(s7)
  slliw a0, a0, 2
  add a1, s8, a0
  lw a1, 0(a1)
  addi a1, a1, -1
  add a0, s8, a0
  sw a1, 0(a0)
  lw a0, 0(s7)
  slliw a0, a0, 2
  add a0, s8, a0
  lw a0, 0(a0)
  li a1, 1
  bge a0, a1, .fannkuch.572_111

.fannkuch.572_112:
  lw a0, 0(s7)
  addi a0, a0, 1
  sw a0, 0(s7)
  j .fannkuch.572_106

.fannkuch.572_108:
  mv a0, zero

.fannkuch.572_115:

.fannkuch.572_34:
  lw a0, 0(s4)
  addi a0, a0, 1
  sw a0, 0(s4)
  j .fannkuch.572_20

.fannkuch.572_109:
  sw zero, 0(s2)
  sw zero, 0(s7)
  j .fannkuch.572_106

.fannkuch.572_111:
  sw zero, 0(s2)
  j .fannkuch.572_106

.fannkuch.572_84:
  mv a0, zero

.fannkuch.572_91:

.fannkuch.572_33:
  lw a0, 0(s4)
  addi a0, a0, 1
  sw a0, 0(s4)
  j .fannkuch.572_20

.fannkuch.572_85:
  sw zero, 0(s10)
  sw zero, 0(s7)
  j .fannkuch.572_82

.fannkuch.572_87:
  sw zero, 0(s10)
  j .fannkuch.572_82

  .p2align 2
  .text
  .globl move_perm1_forward.581
  .type move_perm1_forward.581, @function
# leaf false
move_perm1_forward.581:
.move_perm1_forward.581_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  lw a3, 0(a1)
  addi a3, a3, -1
  blt a3, a0, .move_perm1_forward.581_2

.move_perm1_forward.581_1:
  addi a3, a0, 1
  slliw a4, a3, 2
  add a4, a2, a4
  lw a4, 0(a4)
  slliw a0, a0, 2
  add a0, a2, a0
  sw a4, 0(a0)
  mv a0, a3
  call move_perm1_forward.581
  mv a0, zero

.move_perm1_forward.581_3:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.move_perm1_forward.581_2:
  mv a0, zero
  j .move_perm1_forward.581_3

  .p2align 2
  .text
  .globl move_perm1_forward.579
  .type move_perm1_forward.579, @function
# leaf false
move_perm1_forward.579:
.move_perm1_forward.579_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  lw a3, 0(a1)
  addi a3, a3, -1
  blt a3, a0, .move_perm1_forward.579_2

.move_perm1_forward.579_1:
  addi a3, a0, 1
  slliw a4, a3, 2
  add a4, a2, a4
  lw a4, 0(a4)
  slliw a0, a0, 2
  add a0, a2, a0
  sw a4, 0(a0)
  mv a0, a3
  call move_perm1_forward.579
  mv a0, zero

.move_perm1_forward.579_3:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.move_perm1_forward.579_2:
  mv a0, zero
  j .move_perm1_forward.579_3

  .p2align 2
  .text
  .globl main.582
  .type main.582, @function
# leaf false
main.582:
.main.582_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  li a0, 9
  call fannkuch.572
  lw s0, 0(a0)
  lw a0, 4(a0)
  call minimbt_print_int
  mv a0, s0
  call minimbt_print_int
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl flip_loop.577
  .type flip_loop.577, @function
# leaf true
flip_loop.577:
.flip_loop.577_0:
  mv a4, a1
  mv a1, a3
  mv a3, a0

.flip_loop.577_2:
  lw a0, 0(a4)
  srai a0, a0, 1
  blt a0, a3, .flip_loop.577_4

.flip_loop.577_3:
  slliw a0, a3, 2
  add a5, a1, a0
  lw a5, 0(a5)
  sw a5, 0(a2)
  lw a5, 0(a4)
  sub a5, a5, a3
  slliw a5, a5, 2
  add a5, a1, a5
  lw a5, 0(a5)
  add a0, a1, a0
  sw a5, 0(a0)
  lw a0, 0(a4)
  sub a0, a0, a3
  lw a5, 0(a2)
  slliw a0, a0, 2
  add a0, a1, a0
  sw a5, 0(a0)
  addi a0, a3, 1
  mv a3, a0
  j .flip_loop.577_2

.flip_loop.577_4:
  mv a0, zero

.flip_loop.577_5:
  ret

  .p2align 2
  .text
  .globl T$start
  .type T$start, @function
# leaf false
T$start:
.T$start_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main.582
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl init_count.575
  .type init_count.575, @function
# leaf false
init_count.575:
.init_count.575_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  lw a2, 0(a0)
  li a3, 1
  beq a2, a3, .init_count.575_1

.init_count.575_2:
  lw a2, 0(a0)
  addi a3, a2, -1
  slliw a3, a3, 2
  add a3, a1, a3
  sw a2, 0(a3)
  lw a2, 0(a0)
  addi a2, a2, -1
  sw a2, 0(a0)
  call init_count.575
  mv a0, zero

.init_count.575_3:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.init_count.575_1:
  mv a0, zero
  j .init_count.575_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

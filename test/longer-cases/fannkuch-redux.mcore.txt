  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl init_arr.462
  .type init_arr.462, @function
# leaf true
init_arr.462:
.init_arr.462_5:
  mv a3, a0
  mv a0, a2
  mv a2, a3
  mv a3, a0

.init_arr.462_0:
  addi a0, a3, -1
  blt a0, a2, .init_arr.462_2

.init_arr.462_1:
  slliw a0, a2, 2
  add a0, a1, a0
  sw a2, 0(a0)
  addi a0, a2, 1
  mv a2, a0
  j .init_arr.462_0

.init_arr.462_2:
  mv a0, zero

.init_arr.462_3:
  ret

  .p2align 2
  .text
  .globl gen_perm1.461
  .type gen_perm1.461, @function
# leaf false
gen_perm1.461:
.gen_perm1.461_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a2, a0
  slliw a0, a2, 2
  sub s0, s11, a0
  andi s11, s0, -8
  mv a1, a2
  mv a0, zero
  mv a1, s0
  call init_arr.462
  mv a0, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl compute.463
  .type compute.463, @function
# leaf false
compute.463:
.compute.463_8:
  addi sp, sp, -96
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  sd s7, 64(sp)
  sd s8, 72(sp)
  sd s9, 80(sp)
  sd s10, 88(sp)
  mv s8, a0
  mv s0, a1
  mv s7, a2
  mv s1, a3
  mv s6, a4
  mv s5, a5
  mv s2, a6
  mv s3, a7
  mv s4, t0

.compute.463_0:
  lw a0, 0(s8)
  li a1, 1
  blt a0, a1, .compute.463_2

.compute.463_1:

.compute.463_45:
  mv a1, zero
  mv a3, s0
  mv a4, s7
  mv a2, s2

.compute.463_40:
  addi a0, a3, -1
  blt a0, a1, .compute.463_42

.compute.463_41:
  slliw a0, a1, 2
  add a0, a2, a0
  lw a0, 0(a0)
  slliw a5, a1, 2
  add a5, a4, a5
  sw a0, 0(a5)
  addi a0, a1, 1
  mv a1, a0
  j .compute.463_40

.compute.463_2:
  mv a0, zero

.compute.463_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  ld s7, 64(sp)
  ld s8, 72(sp)
  ld s9, 80(sp)
  ld s10, 88(sp)
  addi sp, sp, 96
  ret

.compute.463_42:
  mv a0, zero

.compute.463_43:

.compute.463_9:
  mv a0, s8
  mv a1, s1
  call init_count.465
  sw zero, 0(s6)
  lw a0, 0(s7)
  addi a1, s11, -4
  andi s11, a1, -8
  sw a0, 0(a1)

.compute.463_36:
  mv s9, a1

.compute.463_31:
  lw a0, 0(s9)
  beq a0, zero, .compute.463_32

.compute.463_33:
  addi a2, s11, -4
  andi s11, a2, -8
  sw zero, 0(a2)
  mv a0, zero
  mv a1, s9
  mv a3, s7
  call flip_loop.467

.compute.463_37:
  lw a0, 0(s7)
  sw a0, 0(s9)
  lw a0, 0(s6)
  addi a0, a0, 1
  sw a0, 0(s6)
  j .compute.463_31

.compute.463_32:
  mv a0, zero

.compute.463_34:

.compute.463_10:
  lw a0, 0(s4)
  lw a1, 0(s6)
  blt a1, a0, .compute.463_4

.compute.463_3:
  lw a0, 0(s6)
  sw a0, 0(s4)
  mv a0, zero

.compute.463_5:
  lw a0, 0(s3)
  lw a1, 0(s6)
  lw a2, 0(s5)
  li a3, 2
  div a3, a2, a3
  li a4, 2
  mul a3, a3, a4
  sub a2, a2, a3
  li a3, 2
  mul a2, a2, a3
  li a3, 1
  sub a2, a3, a2
  mul a1, a1, a2
  add a0, a0, a1
  sw a0, 0(s3)
  addi a0, s11, -4
  andi s11, a0, -8
  li a1, 1
  sw a1, 0(a0)
  addi a1, s11, -4
  andi s11, a1, -8
  sw zero, 0(a1)

.compute.463_57:
  mv s9, a1
  mv s10, a0

.compute.463_46:
  lw a0, 0(s10)
  li a1, 1
  bne a0, a1, .compute.463_48

.compute.463_47:
  lw a0, 0(s8)
  beq a0, s0, .compute.463_49

.compute.463_50:
  lw a0, 0(s2)
  sw a0, 0(s9)
  mv a0, zero
  mv a1, s8
  mv a2, s2
  call move_perm1_forward.469
  lw a0, 0(s8)
  lw a1, 0(s9)
  slliw a0, a0, 2
  add a0, s2, a0
  sw a1, 0(a0)
  lw a0, 0(s8)
  slliw a1, a0, 2
  add a1, s1, a1
  lw a1, 0(a1)
  addi a1, a1, -1
  slliw a0, a0, 2
  add a0, s1, a0
  sw a1, 0(a0)
  lw a0, 0(s8)
  slliw a0, a0, 2
  add a0, s1, a0
  lw a0, 0(a0)
  li a1, 1
  bge a0, a1, .compute.463_51

.compute.463_52:
  lw a0, 0(s8)
  addi a0, a0, 1
  sw a0, 0(s8)
  mv a0, zero

.compute.463_53:
  mv a0, zero

.compute.463_54:
  j .compute.463_46

.compute.463_4:
  mv a0, zero
  j .compute.463_5

.compute.463_48:
  mv a0, zero

.compute.463_55:

.compute.463_11:
  lw a0, 0(s5)
  addi a0, a0, 1
  sw a0, 0(s5)
  j .compute.463_0

.compute.463_49:
  sw zero, 0(s10)
  sw zero, 0(s8)
  mv a0, zero
  j .compute.463_54

.compute.463_51:
  sw zero, 0(s10)
  mv a0, zero
  j .compute.463_53

  .p2align 2
  .text
  .globl flip_loop.467
  .type flip_loop.467, @function
# leaf true
flip_loop.467:
.flip_loop.467_5:

.flip_loop.467_0:
  lw a4, 0(a1)
  li a5, 2
  div a4, a4, a5
  blt a4, a0, .flip_loop.467_2

.flip_loop.467_1:
  slliw a4, a0, 2
  add a4, a3, a4
  lw a4, 0(a4)
  sw a4, 0(a2)
  lw a4, 0(a1)
  sub a4, a4, a0
  slliw a4, a4, 2
  add a4, a3, a4
  lw a4, 0(a4)
  slliw a5, a0, 2
  add a5, a3, a5
  sw a4, 0(a5)
  lw a4, 0(a1)
  sub a4, a4, a0
  lw a5, 0(a2)
  slliw a4, a4, 2
  add a4, a3, a4
  sw a5, 0(a4)
  addi a0, a0, 1
  j .flip_loop.467_0

.flip_loop.467_2:
  mv a0, zero

.flip_loop.467_3:
  ret

  .p2align 2
  .text
  .globl init_count.465
  .type init_count.465, @function
# leaf false
init_count.465:
.init_count.465_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  lw a2, 0(a0)
  li a3, 1
  beq a2, a3, .init_count.465_1

.init_count.465_2:
  lw a2, 0(a0)
  addi a3, a2, -1
  slliw a3, a3, 2
  add a3, a1, a3
  sw a2, 0(a3)
  lw a2, 0(a0)
  addi a2, a2, -1
  sw a2, 0(a0)
  call init_count.465

.init_count.465_3:
  mv a0, zero
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.init_count.465_1:
  mv a0, zero
  j .init_count.465_3

  .p2align 2
  .text
  .globl main.460
  .type main.460, @function
# leaf false
main.460:
.main.460_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  li a0, 9
  call gen_perm1.461
  mv a6, a0
  addi a2, s11, -36
  andi s11, a2, -8
  sw zero, 0(a2)
  sw zero, 4(a2)
  sw zero, 8(a2)
  sw zero, 12(a2)
  sw zero, 16(a2)
  sw zero, 20(a2)
  sw zero, 24(a2)
  sw zero, 28(a2)
  sw zero, 32(a2)
  addi a3, s11, -36
  andi s11, a3, -8
  sw zero, 0(a3)
  sw zero, 4(a3)
  sw zero, 8(a3)
  sw zero, 12(a3)
  sw zero, 16(a3)
  sw zero, 20(a3)
  sw zero, 24(a3)
  sw zero, 28(a3)
  sw zero, 32(a3)
  addi a4, s11, -4
  andi s11, a4, -8
  sw zero, 0(a4)
  addi s0, s11, -4
  andi s11, s0, -8
  sw zero, 0(s0)
  addi s1, s11, -4
  andi s11, s1, -8
  sw zero, 0(s1)
  addi a5, s11, -4
  andi s11, a5, -8
  sw zero, 0(a5)
  addi a0, s11, -4
  andi s11, a0, -8
  li a1, 9
  sw a1, 0(a0)
  li a1, 9
  mv a7, s1
  mv t0, s0
  call compute.463
  lw a0, 0(s0)
  lw a2, 0(s1)
  addi a1, s11, -8
  andi s11, a1, -8
  sw a0, 0(a1)
  sw a2, 4(a1)
  lw s0, 0(a1)
  lw a0, 4(a1)
  call minimbt_print_int
  mv a0, s0
  call minimbt_print_int
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$start
  .type T$start, @function
# leaf false
T$start:
.T$start_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main.460
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl move_perm1_forward.469
  .type move_perm1_forward.469, @function
# leaf false
move_perm1_forward.469:
.move_perm1_forward.469_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  lw a3, 0(a1)
  addi a3, a3, -1
  blt a3, a0, .move_perm1_forward.469_2

.move_perm1_forward.469_1:
  addi a3, a0, 1
  slliw a4, a3, 2
  add a4, a2, a4
  lw a4, 0(a4)
  slliw a0, a0, 2
  add a0, a2, a0
  sw a4, 0(a0)
  mv a0, a3
  call move_perm1_forward.469
  mv a0, zero

.move_perm1_forward.469_3:
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

.move_perm1_forward.469_2:
  mv a0, zero
  j .move_perm1_forward.469_3

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl sort_2.333
  .type sort_2.333, @function
# leaf false
sort_2.333:
.sort_2.333_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a4, a0
  mv a5, a1
  mv a0, a2
  mv s0, a3
  slliw a1, a5, 2
  add a1, a0, a1
  lw a1, 0(a1)
  slliw a2, a4, 2
  add a2, a0, a2
  lw a2, 0(a2)
  addi a2, a2, -1
  blt a2, a1, .sort_2.333_2

.sort_2.333_1:
  mv a1, a4
  mv a2, a5
  call swap.327
  lw a0, 0(s0)
  addi a0, a0, 1
  sw a0, 0(s0)
  mv a0, zero

.sort_2.333_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.sort_2.333_2:
  mv a0, zero
  j .sort_2.333_3

  .p2align 2
  .text
  .globl swap.327
  .type swap.327, @function
# leaf true
swap.327:
.swap.327_0:
  slliw a1, a1, 2
  add a3, a0, a1
  lw a3, 0(a3)
  slliw a2, a2, 2
  add a4, a0, a2
  lw a4, 0(a4)
  add a1, a0, a1
  sw a4, 0(a1)
  add a0, a0, a2
  sw a3, 0(a0)
  mv a0, zero
  ret

  .p2align 2
  .text
  .globl insertion_sort.328
  .type insertion_sort.328, @function
# leaf false
insertion_sort.328:
.insertion_sort.328_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  mv s0, a0
  mv s3, a1
  mv s1, a2
  addi a0, s3, 1
  mv s2, a0

.insertion_sort.328_2:
  addi a0, s1, -1
  blt a0, s2, .insertion_sort.328_4

.insertion_sort.328_3:

.insertion_sort.328_7:
  mv a1, s2

.insertion_sort.328_9:
  addi a0, s3, 1
  blt a1, a0, .insertion_sort.328_11

.insertion_sort.328_10:
  slliw a0, a1, 2
  add a0, s0, a0
  lw a0, 0(a0)
  addi a2, a1, -1
  slliw a2, a2, 2
  add a2, s0, a2
  lw a2, 0(a2)
  addi a2, a2, -1
  blt a2, a0, .insertion_sort.328_13

.insertion_sort.328_12:
  addi s4, a1, -1
  mv a0, s0
  mv a2, s4
  call swap.327
  mv a1, s4
  j .insertion_sort.328_9

.insertion_sort.328_4:
  mv a0, zero

.insertion_sort.328_5:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  addi sp, sp, 48
  ret

.insertion_sort.328_11:
  mv a0, zero

.insertion_sort.328_15:

.insertion_sort.328_6:
  addi a0, s2, 1
  mv s2, a0
  j .insertion_sort.328_2

.insertion_sort.328_13:
  mv a0, zero

.insertion_sort.328_14:
  j .insertion_sort.328_15

  .p2align 2
  .text
  .globl sort_3.334
  .type sort_3.334, @function
# leaf false
sort_3.334:
.sort_3.334_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2
  mv s3, a3
  mv s4, a4
  mv a0, s0
  mv a1, s1
  mv a2, s3
  mv a3, s4
  call sort_2.333
  mv a0, s1
  mv a1, s2
  mv a2, s3
  mv a3, s4
  call sort_2.333
  mv a0, s0
  mv a1, s1
  mv a2, s3
  mv a3, s4
  call sort_2.333
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl main.336
  .type main.336, @function
# leaf false
main.336:
.main.336_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  call minimbt_read_int
  mv s0, a0
  slliw a0, s0, 2
  sub s1, s11, a0
  andi s11, s1, -8
  mv a1, s0
  mv s2, zero

.main.336_2:
  addi a0, s0, -1
  blt a0, s2, .main.336_4

.main.336_3:
  call minimbt_read_int
  slliw a1, s2, 2
  add a1, s1, a1
  sw a0, 0(a1)
  addi a0, s2, 1
  mv s2, a0
  j .main.336_2

.main.336_4:
  mv a0, s1
  mv a1, zero
  mv a2, s0
  call quick_sort.335
  mv s2, s1
  mv s1, zero

.main.336_6:
  addi a0, s0, -1
  blt a0, s1, .main.336_8

.main.336_7:
  slliw a0, s1, 2
  add a0, s2, a0
  lw a0, 0(a0)
  call minimbt_print_int
  call minimbt_print_endline
  addi a0, s1, 1
  mv s1, a0
  j .main.336_6

.main.336_8:
  mv a0, zero

.main.336_9:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl T$start
  .type T$start, @function
# leaf false
T$start:
.T$start_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main.336
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl quick_sort.335
  .type quick_sort.335, @function
# leaf false
quick_sort.335:
.quick_sort.335_5:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  sd s6, 56(sp)
  mv s1, a0
  mv s3, a1
  mv s2, a2

.quick_sort.335_0:
  sub a0, s2, s3
  li a1, 16
  blt a1, a0, .quick_sort.335_2

.quick_sort.335_1:
  mv a0, s1
  mv a1, s3
  mv a2, s2
  call insertion_sort.328

.quick_sort.335_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  ld s6, 56(sp)
  addi sp, sp, 64
  ret

.quick_sort.335_2:

.quick_sort.335_45:
  addi s4, s11, -4
  andi s11, s4, -8
  sw zero, 0(s4)
  sub a0, s2, s3
  li a1, 4
  div a1, a0, a1
  li a2, 2
  mul a1, a1, a2
  add s0, s3, a1
  li a1, 8
  blt a0, a1, .quick_sort.335_47

.quick_sort.335_46:
  li a1, 4
  div a1, a0, a1
  li a2, 1
  mul a2, a1, a2
  add s5, s3, a2
  li a2, 3
  mul a1, a1, a2
  add s6, s3, a1
  addi a0, a0, -1
  li a1, 50
  blt a0, a1, .quick_sort.335_49

.quick_sort.335_48:
  addi a0, s5, -1
  addi a2, s5, 1
  mv a1, s5
  mv a3, s1
  mv a4, s4
  call sort_3.334
  addi a0, s0, -1
  addi a2, s0, 1
  mv a1, s0
  mv a3, s1
  mv a4, s4
  call sort_3.334
  addi a0, s6, -1
  addi a2, s6, 1
  mv a1, s6
  mv a3, s1
  mv a4, s4
  call sort_3.334
  mv a0, s5
  mv a1, s0
  mv a2, s6
  mv a3, s1
  mv a4, s4
  call sort_3.334
  lw a0, 0(s4)
  bne a0, zero, .quick_sort.335_51

.quick_sort.335_50:
  addi a0, s11, -8
  andi s11, a0, -8
  sw s0, 0(a0)
  li a1, 1
  sw a1, 4(a0)

.quick_sort.335_52:

.quick_sort.335_56:

.quick_sort.335_60:

.quick_sort.335_6:
  lw a1, 0(a0)

.quick_sort.335_11:
  addi s0, s2, -1
  mv a0, s1
  mv a2, s0
  call swap.327
  slliw a0, s0, 2
  add a0, s1, a0
  lw s0, 0(a0)
  addi s4, s11, -4
  andi s11, s4, -8
  sw s3, 0(s4)
  addi s5, s11, -4
  andi s11, s5, -8
  li a0, 1
  sw a0, 0(s5)

.quick_sort.335_26:
  mv s6, s3

.quick_sort.335_28:
  addi a0, s2, -2
  blt a0, s6, .quick_sort.335_30

.quick_sort.335_29:
  slliw a0, s6, 2
  add a0, s1, a0
  lw a0, 0(a0)
  addi a1, s0, -1
  blt a1, a0, .quick_sort.335_32

.quick_sort.335_31:
  lw a0, 0(s4)
  beq a0, s6, .quick_sort.335_33

.quick_sort.335_34:
  lw a1, 0(s4)
  mv a0, s1
  mv a2, s6
  call swap.327
  sw zero, 0(s5)
  lw a0, 0(s4)
  addi a0, a0, 1
  sw a0, 0(s4)
  addi a0, s6, 1
  mv s6, a0
  j .quick_sort.335_28

.quick_sort.335_47:
  lw a0, 0(s4)
  bne a0, zero, .quick_sort.335_58

.quick_sort.335_57:
  addi a0, s11, -8
  andi s11, a0, -8
  sw s0, 0(a0)
  li a1, 1
  sw a1, 4(a0)

.quick_sort.335_59:
  j .quick_sort.335_60

.quick_sort.335_58:
  addi a0, s11, -8
  andi s11, a0, -8
  sw s0, 0(a0)
  sw zero, 4(a0)
  j .quick_sort.335_59

.quick_sort.335_49:
  mv a0, s5
  mv a1, s0
  mv a2, s6
  mv a3, s1
  mv a4, s4
  call sort_3.334
  lw a0, 0(s4)
  bne a0, zero, .quick_sort.335_54

.quick_sort.335_53:
  addi a0, s11, -8
  andi s11, a0, -8
  sw s0, 0(a0)
  li a1, 1
  sw a1, 4(a0)

.quick_sort.335_55:
  j .quick_sort.335_56

.quick_sort.335_54:
  addi a0, s11, -8
  andi s11, a0, -8
  sw s0, 0(a0)
  sw zero, 4(a0)
  j .quick_sort.335_55

.quick_sort.335_51:
  addi a0, s11, -8
  andi s11, a0, -8
  sw s0, 0(a0)
  sw zero, 4(a0)
  j .quick_sort.335_52

.quick_sort.335_30:
  mv a0, zero

.quick_sort.335_37:

.quick_sort.335_15:
  lw a1, 0(s4)
  addi a2, s2, -1
  mv a0, s1
  call swap.327
  lw a0, 0(s4)
  lw a1, 0(s5)
  li a2, 1
  bne a1, a2, .quick_sort.335_13

.quick_sort.335_12:
  addi a1, s11, -8
  andi s11, a1, -8
  sw a0, 0(a1)
  li a0, 1
  sw a0, 4(a1)
  mv a0, a1

.quick_sort.335_14:

.quick_sort.335_7:
  lw s0, 0(a0)
  mv a0, s1
  mv a1, s3
  mv a2, s0
  call quick_sort.335
  addi a0, s0, 1
  mv s3, a0
  j .quick_sort.335_0

.quick_sort.335_13:
  addi a1, s11, -8
  andi s11, a1, -8
  sw a0, 0(a1)
  sw zero, 4(a1)
  mv a0, a1
  j .quick_sort.335_14

.quick_sort.335_32:
  addi a0, s6, 1
  mv s6, a0
  j .quick_sort.335_28

.quick_sort.335_33:
  lw a0, 0(s4)
  addi a0, a0, 1
  sw a0, 0(s4)
  addi a0, s6, 1
  mv s6, a0
  j .quick_sort.335_28

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

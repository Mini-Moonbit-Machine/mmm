  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl partition65_4
  .type partition65_4, @function
# leaf false
partition65_4:
.partition65_4_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  mv s1, a0
  mv s2, a2
  mv s3, a3
  addi a2, s3, -1
  mv a0, s1
  call swap1l0_0
  addi a0, s3, -1
  slliw a0, a0, 2
  add a0, s1, a0
  lw a0, 0(a0)
  addi a1, s11, -4
  andi s4, a1, -8
  mv s11, s4
  sw s2, 0(s4)
  addi a1, s11, -4
  andi s0, a1, -8
  mv s11, s0
  li a1, 1
  sw a1, 0(s0)
  addi a1, s11, -48
  andi a2, a1, -8
  mv s11, a2
  la a1, aux86_17
  sd a1, 0(a2)
  sd s3, 8(a2)
  sd s1, 16(a2)
  sd a0, 24(a2)
  sd s4, 32(a2)
  sd s0, 40(a2)
  mv s10, a2
  ld a1, 0(a2)
  mv a0, s2
  jalr a1
  lw a1, 0(s4)
  addi a2, s3, -1
  mv a0, s1
  call swap1l0_0
  lw a1, 0(s4)
  lw a0, 0(s0)
  li a2, 1
  bne a0, a2, .partition65_4_2

.partition65_4_1:
  li a0, 1

.partition65_4_3:
  addi a2, s11, -8
  andi a2, a2, -8
  mv s11, a2
  sw a1, 0(a2)
  sw a0, 4(a2)
  mv a0, a2
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  addi sp, sp, 48
  ret

.partition65_4_2:
  mv a0, zero
  j .partition65_4_3

  .p2align 2
  .text
  .globl insertion_sort30l2_3
  .type insertion_sort30l2_3, @function
# leaf false
insertion_sort30l2_3:
.insertion_sort30l2_3_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  addi a3, s11, -32
  andi a3, a3, -8
  mv s11, a3
  la a4, f54_14
  sd a4, 0(a3)
  sd a2, 8(a3)
  sd a0, 16(a3)
  sd a1, 24(a3)
  addi a0, a1, 1
  mv s10, a3
  ld a1, 0(a3)
  jalr a1
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl output14l1_1
  .type output14l1_1, @function
# leaf false
output14l1_1:
.output14l1_1_4:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2

.output14l1_1_0:
  addi a0, s2, -1
  blt a0, s1, .output14l1_1_2

.output14l1_1_1:
  slliw a0, s1, 2
  add a0, s0, a0
  lw a0, 0(a0)
  call minimbt_print_int
  call minimbt_print_endline
  addi a0, s1, 1
  mv s1, a0
  j .output14l1_1_0

.output14l1_1_2:
  mv a0, zero

.output14l1_1_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl g37l3_2
  .type g37l3_2, @function
# leaf false
g37l3_2:
.g37l3_2_7:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2

.g37l3_2_0:
  addi a0, s2, 1
  blt s0, a0, .g37l3_2_2

.g37l3_2_1:
  slliw a0, s0, 2
  add a0, s1, a0
  lw a0, 0(a0)
  addi a1, s0, -1
  slliw a1, a1, 2
  add a1, s1, a1
  lw a1, 0(a1)
  addi a1, a1, -1
  blt a1, a0, .g37l3_2_4

.g37l3_2_3:
  addi a2, s0, -1
  mv a0, s1
  mv a1, s0
  call swap1l0_0
  addi a0, s0, -1
  mv s0, a0
  j .g37l3_2_0

.g37l3_2_2:
  mv a0, zero

.g37l3_2_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.g37l3_2_4:
  mv a0, zero

.g37l3_2_5:
  j .g37l3_2_6

  .p2align 2
  .text
  .globl main239l6_9
  .type main239l6_9, @function
# leaf false
main239l6_9:
.main239l6_9_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  call minimbt_read_int
  mv s0, a0
  slliw a0, s0, 2
  sub a0, s11, a0
  andi s1, a0, -8
  mv s11, s1
  mv a1, s0
  mv a0, s1
  mv a2, zero
  call memseti32
  mv a0, zero
  mv a1, s1
  mv a2, s0
  call input243l7_8
  mv a0, s1
  mv a1, s0
  call sort233l5_7
  mv a0, s1
  mv a1, zero
  mv a2, s0
  call output14l1_1
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl f54_14
  .type f54_14, @function
# leaf false
f54_14:
.f54_14_4:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv a1, s10
  lw s0, 8(a1)
  ld s1, 16(a1)
  lw s2, 24(a1)
  mv s3, a0

.f54_14_0:
  addi a0, s0, -1
  blt a0, s3, .f54_14_2

.f54_14_1:
  mv a0, s3
  mv a1, s1
  mv a2, s2
  call g37l3_2
  addi a0, s3, 1
  mv s3, a0
  j .f54_14_0

.f54_14_2:
  mv a0, zero

.f54_14_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl aux86_17
  .type aux86_17, @function
# leaf false
aux86_17:
.aux86_17_10:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  mv a1, s10
  lw s5, 8(a1)
  ld s3, 16(a1)
  lw s0, 24(a1)
  ld s4, 32(a1)
  ld s2, 40(a1)
  mv s1, a0

.aux86_17_0:
  addi a0, s5, -2
  blt a0, s1, .aux86_17_2

.aux86_17_1:
  slliw a0, s1, 2
  add a0, s3, a0
  lw a0, 0(a0)
  addi a1, s0, -1
  blt a1, a0, .aux86_17_4

.aux86_17_3:
  lw a0, 0(s4)
  beq a0, s1, .aux86_17_5

.aux86_17_6:
  lw a1, 0(s4)
  mv a0, s3
  mv a2, s1
  call swap1l0_0
  sw zero, 0(s2)
  mv a0, zero

.aux86_17_7:
  lw a0, 0(s4)
  addi a0, a0, 1
  sw a0, 0(s4)
  mv a0, zero

.aux86_17_8:
  addi a0, s1, 1
  mv s1, a0
  j .aux86_17_0

.aux86_17_2:
  mv a0, zero

.aux86_17_9:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  addi sp, sp, 64
  ret

.aux86_17_4:
  mv a0, zero
  j .aux86_17_8

.aux86_17_5:
  mv a0, zero
  j .aux86_17_7

  .p2align 2
  .text
  .globl sort233l5_7
  .type sort233l5_7, @function
# leaf false
sort233l5_7:
.sort233l5_7_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a2, a1
  mv a1, zero
  call quick_sort210l4_6
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl sort_3173_22
  .type sort_3173_22, @function
# leaf false
sort_3173_22:
.sort_3173_22_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv a3, s10
  mv s0, a0
  mv s1, a1
  mv s2, a2
  ld s3, 8(a3)
  mv s10, s3
  ld a2, 0(s3)
  mv a0, s0
  mv a1, s1
  jalr a2
  mv s10, s3
  ld a2, 0(s3)
  mv a0, s1
  mv a1, s2
  jalr a2
  mv s10, s3
  ld a2, 0(s3)
  mv a0, s0
  mv a1, s1
  jalr a2
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl input243l7_8
  .type input243l7_8, @function
# leaf false
input243l7_8:
.input243l7_8_4:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s1, a0
  mv s0, a1
  mv s2, a2

.input243l7_8_0:
  addi a0, s2, -1
  blt a0, s1, .input243l7_8_2

.input243l7_8_1:
  call minimbt_read_int
  slliw a1, s1, 2
  add a1, s0, a1
  sw a0, 0(a1)
  addi a0, s1, 1
  mv s1, a0
  j .input243l7_8_0

.input243l7_8_2:
  mv a0, zero

.input243l7_8_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl choose_pivot129l3_5
  .type choose_pivot129l3_5, @function
# leaf false
choose_pivot129l3_5:
.choose_pivot129l3_5_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  mv a3, a1
  mv a1, a2
  addi a2, s11, -4
  andi s1, a2, -8
  mv s11, s1
  sw zero, 0(s1)
  sub a1, a1, a3
  li a2, 4
  div a2, a1, a2
  li a4, 2
  mul a2, a2, a4
  add s0, a3, a2
  li a2, 8
  blt a1, a2, .choose_pivot129l3_5_2

.choose_pivot129l3_5_1:
  li a2, 4
  div a2, a1, a2
  li a4, 1
  mul a2, a2, a4
  add s3, a3, a2
  li a2, 4
  div a2, a1, a2
  li a4, 3
  mul a2, a2, a4
  add s2, a3, a2
  addi a2, s11, -24
  andi a2, a2, -8
  mv s11, a2
  la a3, sort_2157_20
  sd a3, 0(a2)
  sd a0, 8(a2)
  sd s1, 16(a2)
  addi a0, s11, -16
  andi s4, a0, -8
  mv s11, s4
  la a0, sort_3173_22
  sd a0, 0(s4)
  sd a2, 8(s4)
  addi a0, a1, -1
  li a1, 50
  blt a0, a1, .choose_pivot129l3_5_4

.choose_pivot129l3_5_3:
  addi a0, s3, -1
  addi a2, s3, 1
  mv s10, s4
  ld a3, 0(s4)
  mv a1, s3
  jalr a3
  addi a0, s0, -1
  addi a2, s0, 1
  mv s10, s4
  ld a3, 0(s4)
  mv a1, s0
  jalr a3
  addi a0, s2, -1
  addi a2, s2, 1
  mv s10, s4
  ld a3, 0(s4)
  mv a1, s2
  jalr a3

.choose_pivot129l3_5_5:
  mv s10, s4
  ld a3, 0(s4)
  mv a0, s3
  mv a1, s0
  mv a2, s2
  jalr a3

.choose_pivot129l3_5_6:
  lw a0, 0(s1)
  bne a0, zero, .choose_pivot129l3_5_8

.choose_pivot129l3_5_7:
  li a0, 1

.choose_pivot129l3_5_9:
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  sw s0, 0(a1)
  sw a0, 4(a1)
  mv a0, a1
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  addi sp, sp, 48
  ret

.choose_pivot129l3_5_2:
  mv a0, zero
  j .choose_pivot129l3_5_6

.choose_pivot129l3_5_4:
  mv a0, zero
  j .choose_pivot129l3_5_5

.choose_pivot129l3_5_8:
  mv a0, zero
  j .choose_pivot129l3_5_9

  .p2align 2
  .text
  .globl T$start_28
  .type T$start_28, @function
# leaf false
T$start_28:
.T$start_28_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main239l6_9
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl sort_2157_20
  .type sort_2157_20, @function
# leaf false
sort_2157_20:
.sort_2157_20_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a4, s10
  mv a2, a0
  mv a3, a1
  ld a0, 8(a4)
  ld s0, 16(a4)
  slliw a1, a3, 2
  add a1, a0, a1
  lw a1, 0(a1)
  slliw a4, a2, 2
  add a4, a0, a4
  lw a4, 0(a4)
  addi a4, a4, -1
  blt a4, a1, .sort_2157_20_2

.sort_2157_20_1:
  mv a1, a2
  mv a2, a3
  call swap1l0_0
  lw a0, 0(s0)
  addi a0, a0, 1
  sw a0, 0(s0)
  mv a0, zero

.sort_2157_20_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.sort_2157_20_2:
  mv a0, zero
  j .sort_2157_20_3

  .p2align 2
  .text
  .globl quick_sort210l4_6
  .type quick_sort210l4_6, @function
# leaf false
quick_sort210l4_6:
.quick_sort210l4_6_4:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv s2, a0
  mv s0, a1
  mv s1, a2

.quick_sort210l4_6_0:
  sub a0, s1, s0
  li a1, 16
  bge a1, a0, .quick_sort210l4_6_1

.quick_sort210l4_6_2:
  mv a0, s2
  mv a1, s0
  mv a2, s1
  call choose_pivot129l3_5
  lw a1, 0(a0)
  mv a0, s2
  mv a2, s0
  mv a3, s1
  call partition65_4
  lw s3, 0(a0)
  mv a0, s2
  mv a1, s0
  mv a2, s3
  call quick_sort210l4_6
  addi a0, s3, 1
  mv s0, a0
  j .quick_sort210l4_6_0

.quick_sort210l4_6_1:
  mv a0, s2
  mv a1, s0
  mv a2, s1
  call insertion_sort30l2_3

.quick_sort210l4_6_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl swap1l0_0
  .type swap1l0_0, @function
# leaf true
swap1l0_0:
.swap1l0_0_0:
  slliw a3, a1, 2
  add a3, a0, a3
  lw a3, 0(a3)
  slliw a4, a2, 2
  add a4, a0, a4
  lw a4, 0(a4)
  slliw a1, a1, 2
  add a1, a0, a1
  sw a4, 0(a1)
  slliw a1, a2, 2
  add a0, a0, a1
  sw a3, 0(a0)
  mv a0, zero
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_28
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4

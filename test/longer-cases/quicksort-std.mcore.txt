  .p2align 4
  .bss
  .type large_heap, @object
large_heap:
  .zero 1610612736
large_heap_end:

  .p2align 4
  .bss
  .type large_stack, @object
large_stack:
  .zero 268435456
large_stack_end:

__begin_text:
  .p2align 2
  .text
  .globl memseti32
  .type memseti32, @function
memseti32:
  blez a1, .memseti32_b1
  slli a1, a1, 2
  add a1, a1, a0
.memseti32_b0:
  sw a2, 0(a0)
  addi a0, a0, 4
  bne a0, a1, .memseti32_b0
.memseti32_b1:
  ret

  .p2align 2
  .text
  .globl partition65l3_6
  .type partition65l3_6, @function
# leaf false
partition65l3_6:
.partition65l3_6_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  mv s0, a0
  mv s1, a2
  mv s2, a3
  addi a2, s2, -1
  mv a0, s0
  call swap1l0_0
  addi a0, s2, -1
  slliw a0, a0, 2
  add a0, s0, a0
  lw a3, 0(a0)
  addi a0, s11, -4
  andi s3, a0, -8
  mv s11, s3
  sw s1, 0(s3)
  addi a0, s11, -4
  andi s4, a0, -8
  mv s11, s4
  li a0, 1
  sw a0, 0(s4)
  mv a0, s1
  mv a1, s3
  mv a2, s0
  mv a4, s2
  mv a5, s4
  call aux86l4_5
  lw a1, 0(s3)
  addi a2, s2, -1
  mv a0, s0
  call swap1l0_0
  lw a1, 0(s3)
  lw a0, 0(s4)
  li a2, 1
  bne a0, a2, .partition65l3_6_2

.partition65l3_6_1:
  li a0, 1

.partition65l3_6_3:
  addi a2, s11, -8
  andi a2, a2, -8
  mv s11, a2
  sw a1, 0(a2)
  sw a0, 4(a2)
  mv a0, a2
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  addi sp, sp, 48
  ret

.partition65l3_6_2:
  mv a0, zero
  j .partition65l3_6_3

  .p2align 2
  .text
  .globl aux86l4_5
  .type aux86l4_5, @function
# leaf false
aux86l4_5:
.aux86l4_5_10:
  addi sp, sp, -64
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  sd s5, 48(sp)
  mv s3, a0
  mv s5, a1
  mv s1, a2
  mv s0, a3
  mv s4, a4
  mv s2, a5

.aux86l4_5_0:
  addi a0, s4, -2
  blt a0, s3, .aux86l4_5_2

.aux86l4_5_1:
  slliw a0, s3, 2
  add a0, s1, a0
  lw a0, 0(a0)
  addi a1, s0, -1
  blt a1, a0, .aux86l4_5_4

.aux86l4_5_3:
  lw a0, 0(s5)
  beq a0, s3, .aux86l4_5_5

.aux86l4_5_6:
  lw a1, 0(s5)
  mv a0, s1
  mv a2, s3
  call swap1l0_0
  sw zero, 0(s2)
  mv a0, zero

.aux86l4_5_7:
  lw a0, 0(s5)
  addi a0, a0, 1
  sw a0, 0(s5)
  mv a0, zero

.aux86l4_5_8:
  addi a0, s3, 1
  mv s3, a0
  j .aux86l4_5_0

.aux86l4_5_2:
  mv a0, zero

.aux86l4_5_9:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  ld s5, 48(sp)
  addi sp, sp, 64
  ret

.aux86l4_5_4:
  mv a0, zero
  j .aux86l4_5_8

.aux86l4_5_5:
  mv a0, zero
  j .aux86l4_5_7

  .p2align 2
  .text
  .globl sort_3173l6_8
  .type sort_3173l6_8, @function
# leaf false
sort_3173l6_8:
.sort_3173l6_8_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2
  mv s3, a3
  mv s4, a4
  mv a0, s0
  mv a1, s1
  mv a2, s3
  mv a3, s4
  call sort_2157l5_7
  mv a0, s1
  mv a1, s2
  mv a2, s3
  mv a3, s4
  call sort_2157l5_7
  mv a0, s0
  mv a1, s1
  mv a2, s3
  mv a3, s4
  call sort_2157l5_7
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl output14l1_1
  .type output14l1_1, @function
# leaf false
output14l1_1:
.output14l1_1_4:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2

.output14l1_1_0:
  addi a0, s2, -1
  blt a0, s1, .output14l1_1_2

.output14l1_1_1:
  slliw a0, s1, 2
  add a0, s0, a0
  lw a0, 0(a0)
  call minimbt_print_int
  call minimbt_print_endline
  addi a0, s1, 1
  mv s1, a0
  j .output14l1_1_0

.output14l1_1_2:
  mv a0, zero

.output14l1_1_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl g37l3_2
  .type g37l3_2, @function
# leaf false
g37l3_2:
.g37l3_2_7:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s0, a0
  mv s1, a1
  mv s2, a2

.g37l3_2_0:
  addi a0, s2, 1
  blt s0, a0, .g37l3_2_2

.g37l3_2_1:
  slliw a0, s0, 2
  add a0, s1, a0
  lw a0, 0(a0)
  addi a1, s0, -1
  slliw a1, a1, 2
  add a1, s1, a1
  lw a1, 0(a1)
  addi a1, a1, -1
  blt a1, a0, .g37l3_2_4

.g37l3_2_3:
  addi a2, s0, -1
  mv a0, s1
  mv a1, s0
  call swap1l0_0
  addi a0, s0, -1
  mv s0, a0
  j .g37l3_2_0

.g37l3_2_2:
  mv a0, zero

.g37l3_2_6:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

.g37l3_2_4:
  mv a0, zero

.g37l3_2_5:
  j .g37l3_2_6

  .p2align 2
  .text
  .globl quick_sort210l5_10
  .type quick_sort210l5_10, @function
# leaf false
quick_sort210l5_10:
.quick_sort210l5_10_4:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv s0, a0
  mv s2, a1
  mv s1, a2

.quick_sort210l5_10_0:
  sub a0, s1, s2
  li a1, 16
  bge a1, a0, .quick_sort210l5_10_1

.quick_sort210l5_10_2:
  mv a0, s0
  mv a1, s2
  mv a2, s1
  call choose_pivot129l4_9
  lw a1, 0(a0)
  mv a0, s0
  mv a2, s2
  mv a3, s1
  call partition65l3_6
  lw s3, 0(a0)
  mv a0, s0
  mv a1, s2
  mv a2, s3
  call quick_sort210l5_10
  addi a0, s3, 1
  mv s2, a0
  j .quick_sort210l5_10_0

.quick_sort210l5_10_1:
  mv a0, s0
  mv a1, s2
  mv a2, s1
  call insertion_sort30l2_4

.quick_sort210l5_10_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl f54l4_3
  .type f54l4_3, @function
# leaf false
f54l4_3:
.f54l4_3_4:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  mv s2, a0
  mv s0, a1
  mv s1, a2
  mv s3, a3

.f54l4_3_0:
  addi a0, s3, -1
  blt a0, s2, .f54l4_3_2

.f54l4_3_1:
  mv a0, s2
  mv a1, s0
  mv a2, s1
  call g37l3_2
  addi a0, s2, 1
  mv s2, a0
  j .f54l4_3_0

.f54l4_3_2:
  mv a0, zero

.f54l4_3_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  addi sp, sp, 48
  ret

  .p2align 2
  .text
  .globl insertion_sort30l2_4
  .type insertion_sort30l2_4, @function
# leaf false
insertion_sort30l2_4:
.insertion_sort30l2_4_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a3, a0
  mv a4, a1
  mv a5, a2
  addi a0, a4, 1
  mv a1, a3
  mv a2, a4
  mv a3, a5
  call f54l4_3
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl input243l8_12
  .type input243l8_12, @function
# leaf false
input243l8_12:
.input243l8_12_4:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  mv s1, a0
  mv s0, a1
  mv s2, a2

.input243l8_12_0:
  addi a0, s2, -1
  blt a0, s1, .input243l8_12_2

.input243l8_12_1:
  call minimbt_read_int
  slliw a1, s1, 2
  add a1, s0, a1
  sw a0, 0(a1)
  addi a0, s1, 1
  mv s1, a0
  j .input243l8_12_0

.input243l8_12_2:
  mv a0, zero

.input243l8_12_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl sort233l6_11
  .type sort233l6_11, @function
# leaf false
sort233l6_11:
.sort233l6_11_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  mv a2, a1
  mv a1, zero
  call quick_sort210l5_10
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl sort_2157l5_7
  .type sort_2157l5_7, @function
# leaf false
sort_2157l5_7:
.sort_2157l5_7_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  sd s0, 8(sp)
  mv a4, a0
  mv a5, a1
  mv s0, a2
  mv a0, a3
  slliw a1, a5, 2
  add a1, a0, a1
  lw a1, 0(a1)
  slliw a2, a4, 2
  add a2, a0, a2
  lw a2, 0(a2)
  addi a2, a2, -1
  blt a2, a1, .sort_2157l5_7_2

.sort_2157l5_7_1:
  mv a1, a4
  mv a2, a5
  call swap1l0_0
  lw a0, 0(s0)
  addi a0, a0, 1
  sw a0, 0(s0)
  mv a0, zero

.sort_2157l5_7_3:
  ld ra, 0(sp)
  ld s0, 8(sp)
  addi sp, sp, 16
  ret

.sort_2157l5_7_2:
  mv a0, zero
  j .sort_2157l5_7_3

  .p2align 2
  .text
  .globl choose_pivot129l4_9
  .type choose_pivot129l4_9, @function
# leaf false
choose_pivot129l4_9:
.choose_pivot129l4_9_0:
  addi sp, sp, -48
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  sd s2, 24(sp)
  sd s3, 32(sp)
  sd s4, 40(sp)
  mv s4, a0
  mv a0, a1
  mv a1, a2
  addi a2, s11, -4
  andi s1, a2, -8
  mv s11, s1
  sw zero, 0(s1)
  sub a1, a1, a0
  li a2, 4
  div a2, a1, a2
  li a3, 2
  mul a2, a2, a3
  add s0, a0, a2
  li a2, 8
  blt a1, a2, .choose_pivot129l4_9_2

.choose_pivot129l4_9_1:
  li a2, 4
  div a2, a1, a2
  li a3, 1
  mul a2, a2, a3
  add s3, a0, a2
  li a2, 4
  div a2, a1, a2
  li a3, 3
  mul a2, a2, a3
  add s2, a0, a2
  addi a0, a1, -1
  li a1, 50
  blt a0, a1, .choose_pivot129l4_9_4

.choose_pivot129l4_9_3:
  addi a0, s3, -1
  addi a2, s3, 1
  mv a1, s3
  mv a3, s1
  mv a4, s4
  call sort_3173l6_8
  addi a0, s0, -1
  addi a2, s0, 1
  mv a1, s0
  mv a3, s1
  mv a4, s4
  call sort_3173l6_8
  addi a0, s2, -1
  addi a2, s2, 1
  mv a1, s2
  mv a3, s1
  mv a4, s4
  call sort_3173l6_8

.choose_pivot129l4_9_5:
  mv a0, s3
  mv a1, s0
  mv a2, s2
  mv a3, s1
  mv a4, s4
  call sort_3173l6_8

.choose_pivot129l4_9_6:
  lw a0, 0(s1)
  bne a0, zero, .choose_pivot129l4_9_8

.choose_pivot129l4_9_7:
  li a0, 1

.choose_pivot129l4_9_9:
  addi a1, s11, -8
  andi a1, a1, -8
  mv s11, a1
  sw s0, 0(a1)
  sw a0, 4(a1)
  mv a0, a1
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  ld s2, 24(sp)
  ld s3, 32(sp)
  ld s4, 40(sp)
  addi sp, sp, 48
  ret

.choose_pivot129l4_9_2:
  mv a0, zero
  j .choose_pivot129l4_9_6

.choose_pivot129l4_9_4:
  mv a0, zero
  j .choose_pivot129l4_9_5

.choose_pivot129l4_9_8:
  mv a0, zero
  j .choose_pivot129l4_9_9

  .p2align 2
  .text
  .globl T$start_28
  .type T$start_28, @function
# leaf false
T$start_28:
.T$start_28_0:
  addi sp, sp, -16
  sd ra, 0(sp)
  call main239l7_13
  ld ra, 0(sp)
  addi sp, sp, 16
  ret

  .p2align 2
  .text
  .globl main239l7_13
  .type main239l7_13, @function
# leaf false
main239l7_13:
.main239l7_13_0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s1, 16(sp)
  call minimbt_read_int
  mv s0, a0
  slliw a0, s0, 2
  sub a0, s11, a0
  andi s1, a0, -8
  mv s11, s1
  mv a1, s0
  mv a0, s1
  mv a2, zero
  call memseti32
  mv a0, zero
  mv a1, s1
  mv a2, s0
  call input243l8_12
  mv a0, s1
  mv a1, s0
  call sort233l6_11
  mv a0, s1
  mv a1, zero
  mv a2, s0
  call output14l1_1
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s1, 16(sp)
  addi sp, sp, 32
  ret

  .p2align 2
  .text
  .globl swap1l0_0
  .type swap1l0_0, @function
# leaf true
swap1l0_0:
.swap1l0_0_0:
  slliw a3, a1, 2
  add a3, a0, a3
  lw a3, 0(a3)
  slliw a4, a2, 2
  add a4, a0, a4
  lw a4, 0(a4)
  slliw a1, a1, 2
  add a1, a0, a1
  sw a4, 0(a1)
  slliw a1, a2, 2
  add a0, a0, a1
  sw a3, 0(a0)
  mv a0, zero
  ret

  .p2align 2
  .text
  .globl minimbt_main
  .type minimbt_main, @function
# leaf false
minimbt_main:
.minimbt_main_b0:
  addi sp, sp, -32
  sd ra, 0(sp)
  sd s0, 8(sp)
  sd s11, 16(sp)
  la s11, large_heap_end
  mv s0, sp
  la sp, large_stack_end
  call T$start_28
  mv sp, s0
  ld ra, 0(sp)
  ld s0, 8(sp)
  ld s11, 16(sp)
  addi sp, sp, 32
  ret

__end_text:
  .p2align 2
  .bss
  .globl start
  .type start, @object
start:
  .zero 4
